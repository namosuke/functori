{
    "abs": [
        "abs",
        "function.abs.php",
        "絶対値"
    ],
    "acos": [
        "acos",
        "function.acos.php",
        "逆余弦（アークコサイン）"
    ],
    "acosh": [
        "acosh",
        "function.acosh.php",
        "逆双曲線余弦（アークハイパボリックコサイン）"
    ],
    "addcslashes": [
        "addcslashes",
        "function.addcslashes.php",
        "C 言語と同様にスラッシュで文字列をクォートする"
    ],
    "addslashes": [
        "addslashes",
        "function.addslashes.php",
        "文字列をスラッシュでクォートする"
    ],
    "apachechildterminate": [
        "apache_child_terminate",
        "function.apache-child-terminate.php",
        "このリクエストの後にApacheプロセスを終了する"
    ],
    "apachegetenv": [
        "apache_getenv",
        "function.apache-getenv.php",
        "Apache の subprocess_env 変数を取得する"
    ],
    "apachegetmodules": [
        "apache_get_modules",
        "function.apache-get-modules.php",
        "ロードされた Apache モジュールのリストを取得する"
    ],
    "apachegetversion": [
        "apache_get_version",
        "function.apache-get-version.php",
        "Apache のバージョンを取得する"
    ],
    "apachelookupuri": [
        "apache_lookup_uri",
        "function.apache-lookup-uri.php",
        "リクエストの一部を指定したURIに対して行い、全ての情報を返す"
    ],
    "apachenote": [
        "apache_note",
        "function.apache-note.php",
        "Apacheリクエスト記号(note)を取得/設定する"
    ],
    "apacherequestheaders": [
        "apache_request_headers",
        "function.apache-request-headers.php",
        "すべての HTTP リクエストヘッダを取得する"
    ],
    "apacheresettimeout": [
        "apache_reset_timeout",
        "function.apache-reset-timeout.php",
        "Apache の書き込みタイマーをリセットする"
    ],
    "apacheresponseheaders": [
        "apache_response_headers",
        "function.apache-response-headers.php",
        "HTTPレスポンスヘッダを全て取得する"
    ],
    "apachesetenv": [
        "apache_setenv",
        "function.apache-setenv.php",
        "Apacheサブプロセスの環境変数を設定する"
    ],
    "APCUIteratorcurrent": [
        "APCUIterator::current",
        "apcuiterator.current.php",
        "現在の項目を取得する"
    ],
    "APCUIteratorgetTotalCount": [
        "APCUIterator::getTotalCount",
        "apcuiterator.gettotalcount.php",
        "総数を取得する"
    ],
    "APCUIteratorgetTotalHits": [
        "APCUIterator::getTotalHits",
        "apcuiterator.gettotalhits.php",
        "キャッシュヒットの総数を取得する"
    ],
    "APCUIteratorgetTotalSize": [
        "APCUIterator::getTotalSize",
        "apcuiterator.gettotalsize.php",
        "キャッシュのサイズの合計を取得する"
    ],
    "APCUIteratorkey": [
        "APCUIterator::key",
        "apcuiterator.key.php",
        "イテレータのキーを取得する"
    ],
    "APCUIteratornext": [
        "APCUIterator::next",
        "apcuiterator.next.php",
        "ポインタを次の項目に移動させる"
    ],
    "APCUIteratorrewind": [
        "APCUIterator::rewind",
        "apcuiterator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "APCUIteratorvalid": [
        "APCUIterator::valid",
        "apcuiterator.valid.php",
        "現在位置が有効かどうかを調べる"
    ],
    "APCUIteratorconstruct": [
        "APCUIterator::__construct",
        "apcuiterator.construct.php",
        "APCUIterator イテレータオブジェクトを作成する"
    ],
    "apcuadd": [
        "apcu_add",
        "function.apcu-add.php",
        "新規の変数をデータ領域にキャッシュする"
    ],
    "apcucacheinfo": [
        "apcu_cache_info",
        "function.apcu-cache-info.php",
        "APCu のデータから、キャッシュされた情報を取得する"
    ],
    "apcucas": [
        "apcu_cas",
        "function.apcu-cas.php",
        "古い値を新しい値に更新する"
    ],
    "apcuclearcache": [
        "apcu_clear_cache",
        "function.apcu-clear-cache.php",
        "APCu キャッシュをクリアする"
    ],
    "apcudec": [
        "apcu_dec",
        "function.apcu-dec.php",
        "保存した数値を減らす"
    ],
    "apcudelete": [
        "apcu_delete",
        "function.apcu-delete.php",
        "格納されている変数をキャッシュから取り除く"
    ],
    "apcuenabled": [
        "apcu_enabled",
        "function.apcu-enabled.php",
        "現在の環境で apcu が使えるかを確認する"
    ],
    "apcuentry": [
        "apcu_entry",
        "function.apcu-entry.php",
        "アトミックに値を取得するか、キャッシュエントリを生成する"
    ],
    "apcuexists": [
        "apcu_exists",
        "function.apcu-exists.php",
        "エントリが存在するかどうかを調べる"
    ],
    "apcufetch": [
        "apcu_fetch",
        "function.apcu-fetch.php",
        "格納されている変数をキャッシュから取得する"
    ],
    "apcuinc": [
        "apcu_inc",
        "function.apcu-inc.php",
        "保存した数値を増やす"
    ],
    "apcukeyinfo": [
        "apcu_key_info",
        "function.apcu-key-info.php",
        "キャッシュのキーに関する詳細な情報を取得する"
    ],
    "apcusmainfo": [
        "apcu_sma_info",
        "function.apcu-sma-info.php",
        "APCu の共有メモリ割り当てに関する情報を取得する"
    ],
    "apcustore": [
        "apcu_store",
        "function.apcu-store.php",
        "変数をデータ領域にキャッシュする"
    ],
    "AppendIteratorappend": [
        "AppendIterator::append",
        "appenditerator.append.php",
        "イテレータを追加する"
    ],
    "AppendIteratorcurrent": [
        "AppendIterator::current",
        "appenditerator.current.php",
        "現在の値を取得する"
    ],
    "AppendIteratorgetArrayIterator": [
        "AppendIterator::getArrayIterator",
        "appenditerator.getarrayiterator.php",
        "ArrayIterator を取得する"
    ],
    "AppendIteratorgetInnerIterator": [
        "AppendIterator::getInnerIterator",
        "appenditerator.getinneriterator.php",
        "内部イテレータを取得する"
    ],
    "AppendIteratorgetIteratorIndex": [
        "AppendIterator::getIteratorIndex",
        "appenditerator.getiteratorindex.php",
        "イテレータのインデックスを取得する"
    ],
    "AppendIteratorkey": [
        "AppendIterator::key",
        "appenditerator.key.php",
        "現在のキーを取得する"
    ],
    "AppendIteratornext": [
        "AppendIterator::next",
        "appenditerator.next.php",
        "次の要素に移動する"
    ],
    "AppendIteratorrewind": [
        "AppendIterator::rewind",
        "appenditerator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "AppendIteratorvalid": [
        "AppendIterator::valid",
        "appenditerator.valid.php",
        "現在の要素が有効かどうかを調べる"
    ],
    "AppendIteratorconstruct": [
        "AppendIterator::__construct",
        "appenditerator.construct.php",
        "AppendIterator を作成する"
    ],
    "array": [
        "array",
        "function.array.php",
        "配列を生成する"
    ],
    "ArrayAccessoffsetExists": [
        "ArrayAccess::offsetExists",
        "arrayaccess.offsetexists.php",
        "オフセットが存在するかどうか"
    ],
    "ArrayAccessoffsetGet": [
        "ArrayAccess::offsetGet",
        "arrayaccess.offsetget.php",
        "オフセットを取得する"
    ],
    "ArrayAccessoffsetSet": [
        "ArrayAccess::offsetSet",
        "arrayaccess.offsetset.php",
        "指定したオフセットに値を設定する"
    ],
    "ArrayAccessoffsetUnset": [
        "ArrayAccess::offsetUnset",
        "arrayaccess.offsetunset.php",
        "オフセットの設定を解除する"
    ],
    "ArrayIteratorappend": [
        "ArrayIterator::append",
        "arrayiterator.append.php",
        "要素を追加する"
    ],
    "ArrayIteratorasort": [
        "ArrayIterator::asort",
        "arrayiterator.asort.php",
        "値で配列をソートする"
    ],
    "ArrayIteratorcount": [
        "ArrayIterator::count",
        "arrayiterator.count.php",
        "要素を数える"
    ],
    "ArrayIteratorcurrent": [
        "ArrayIterator::current",
        "arrayiterator.current.php",
        "現在の配列エントリを返す"
    ],
    "ArrayIteratorgetArrayCopy": [
        "ArrayIterator::getArrayCopy",
        "arrayiterator.getarraycopy.php",
        "配列のコピーを取得する"
    ],
    "ArrayIteratorgetFlags": [
        "ArrayIterator::getFlags",
        "arrayiterator.getflags.php",
        "振る舞いのフラグを取得する"
    ],
    "ArrayIteratorkey": [
        "ArrayIterator::key",
        "arrayiterator.key.php",
        "現在の配列キーを返す"
    ],
    "ArrayIteratorksort": [
        "ArrayIterator::ksort",
        "arrayiterator.ksort.php",
        "キーで配列をソートする"
    ],
    "ArrayIteratornatcasesort": [
        "ArrayIterator::natcasesort",
        "arrayiterator.natcasesort.php",
        "大文字小文字を区別せずに自然順で配列をソートする"
    ],
    "ArrayIteratornatsort": [
        "ArrayIterator::natsort",
        "arrayiterator.natsort.php",
        "自然順で配列をソートする"
    ],
    "ArrayIteratornext": [
        "ArrayIterator::next",
        "arrayiterator.next.php",
        "次のエントリに移動する"
    ],
    "ArrayIteratoroffsetExists": [
        "ArrayIterator::offsetExists",
        "arrayiterator.offsetexists.php",
        "オフセットが存在するかどうかを調べる"
    ],
    "ArrayIteratoroffsetGet": [
        "ArrayIterator::offsetGet",
        "arrayiterator.offsetget.php",
        "オフセットの値を取得する"
    ],
    "ArrayIteratoroffsetSet": [
        "ArrayIterator::offsetSet",
        "arrayiterator.offsetset.php",
        "オフセットの値を設定する"
    ],
    "ArrayIteratoroffsetUnset": [
        "ArrayIterator::offsetUnset",
        "arrayiterator.offsetunset.php",
        "オフセットの値を削除する"
    ],
    "ArrayIteratorrewind": [
        "ArrayIterator::rewind",
        "arrayiterator.rewind.php",
        "配列を最初に巻き戻す"
    ],
    "ArrayIteratorseek": [
        "ArrayIterator::seek",
        "arrayiterator.seek.php",
        "位置を移動する"
    ],
    "ArrayIteratorserialize": [
        "ArrayIterator::serialize",
        "arrayiterator.serialize.php",
        "シリアライズする"
    ],
    "ArrayIteratorsetFlags": [
        "ArrayIterator::setFlags",
        "arrayiterator.setflags.php",
        "振る舞いのフラグを設定する"
    ],
    "ArrayIteratoruasort": [
        "ArrayIterator::uasort",
        "arrayiterator.uasort.php",
        "ユーザー定義の比較関数を使ってソートを行い、インデックスとの関連を管理する"
    ],
    "ArrayIteratoruksort": [
        "ArrayIterator::uksort",
        "arrayiterator.uksort.php",
        "ユーザー定義の比較関数を使い、キーでソートする"
    ],
    "ArrayIteratorunserialize": [
        "ArrayIterator::unserialize",
        "arrayiterator.unserialize.php",
        "アンシリアライズする"
    ],
    "ArrayIteratorvalid": [
        "ArrayIterator::valid",
        "arrayiterator.valid.php",
        "配列がまだエントリを持っているかどうかチェックする"
    ],
    "ArrayIteratorconstruct": [
        "ArrayIterator::__construct",
        "arrayiterator.construct.php",
        "ArrayIterator を作成する"
    ],
    "ArrayObjectappend": [
        "ArrayObject::append",
        "arrayobject.append.php",
        "値を追加する"
    ],
    "ArrayObjectasort": [
        "ArrayObject::asort",
        "arrayobject.asort.php",
        "値でエントリをソートする"
    ],
    "ArrayObjectcount": [
        "ArrayObject::count",
        "arrayobject.count.php",
        "ArrayObject の public プロパティの数を取得する"
    ],
    "ArrayObjectexchangeArray": [
        "ArrayObject::exchangeArray",
        "arrayobject.exchangearray.php",
        "配列を別の配列と交換する"
    ],
    "ArrayObjectgetArrayCopy": [
        "ArrayObject::getArrayCopy",
        "arrayobject.getarraycopy.php",
        "ArrayObject のコピーを作成する"
    ],
    "ArrayObjectgetFlags": [
        "ArrayObject::getFlags",
        "arrayobject.getflags.php",
        "振る舞いのフラグを取得する"
    ],
    "ArrayObjectgetIterator": [
        "ArrayObject::getIterator",
        "arrayobject.getiterator.php",
        "ArrayObject インスタンスから新規イテレータを生成する"
    ],
    "ArrayObjectgetIteratorClass": [
        "ArrayObject::getIteratorClass",
        "arrayobject.getiteratorclass.php",
        "ArrayObject のイテレータクラス名を取得する"
    ],
    "ArrayObjectksort": [
        "ArrayObject::ksort",
        "arrayobject.ksort.php",
        "キーでエントリをソートする"
    ],
    "ArrayObjectnatcasesort": [
        "ArrayObject::natcasesort",
        "arrayobject.natcasesort.php",
        "大文字小文字を区別しない &quot;自然順&quot; アルゴリズムでエントリをソートする"
    ],
    "ArrayObjectnatsort": [
        "ArrayObject::natsort",
        "arrayobject.natsort.php",
        "&quot;自然順&quot; アルゴリズムでエントリをソートする"
    ],
    "ArrayObjectoffsetExists": [
        "ArrayObject::offsetExists",
        "arrayobject.offsetexists.php",
        "要求されたインデックスが存在するかどうかを返す"
    ],
    "ArrayObjectoffsetGet": [
        "ArrayObject::offsetGet",
        "arrayobject.offsetget.php",
        "指定したインデックスの値を返す"
    ],
    "ArrayObjectoffsetSet": [
        "ArrayObject::offsetSet",
        "arrayobject.offsetset.php",
        "指定したインデックスに新しい値をセットする"
    ],
    "ArrayObjectoffsetUnset": [
        "ArrayObject::offsetUnset",
        "arrayobject.offsetunset.php",
        "指定したインデックスの値を解除する"
    ],
    "ArrayObjectserialize": [
        "ArrayObject::serialize",
        "arrayobject.serialize.php",
        "ArrayObject をシリアライズする"
    ],
    "ArrayObjectsetFlags": [
        "ArrayObject::setFlags",
        "arrayobject.setflags.php",
        "処理フラグを設定する"
    ],
    "ArrayObjectsetIteratorClass": [
        "ArrayObject::setIteratorClass",
        "arrayobject.setiteratorclass.php",
        "ArrayObject のイテレータクラス名を設定する"
    ],
    "ArrayObjectuasort": [
        "ArrayObject::uasort",
        "arrayobject.uasort.php",
        "ユーザー定義の比較関数でエントリをソートし、キーとの対応は保持する"
    ],
    "ArrayObjectuksort": [
        "ArrayObject::uksort",
        "arrayobject.uksort.php",
        "ユーザー定義の比較関数を使って、キーでエントリをソートする"
    ],
    "ArrayObjectunserialize": [
        "ArrayObject::unserialize",
        "arrayobject.unserialize.php",
        "ArrayObject をアンシリアライズする"
    ],
    "ArrayObjectconstruct": [
        "ArrayObject::__construct",
        "arrayobject.construct.php",
        "新規配列オブジェクトを生成する"
    ],
    "arraychangekeycase": [
        "array_change_key_case",
        "function.array-change-key-case.php",
        "配列のすべてのキーの大文字小文字を変更する"
    ],
    "arraychunk": [
        "array_chunk",
        "function.array-chunk.php",
        "配列を分割する"
    ],
    "arraycolumn": [
        "array_column",
        "function.array-column.php",
        "入力配列から単一のカラムの値を返す"
    ],
    "arraycombine": [
        "array_combine",
        "function.array-combine.php",
        "一方の配列をキーとして、もう一方の配列を値として、ひとつの配列を生成する"
    ],
    "arraycountvalues": [
        "array_count_values",
        "function.array-count-values.php",
        "配列の値の数を数える"
    ],
    "arraydiff": [
        "array_diff",
        "function.array-diff.php",
        "配列の差を計算する"
    ],
    "arraydiffassoc": [
        "array_diff_assoc",
        "function.array-diff-assoc.php",
        "追加された添字の確認を含めて配列の差を計算する"
    ],
    "arraydiffkey": [
        "array_diff_key",
        "function.array-diff-key.php",
        "キーを基準にして配列の差を計算する"
    ],
    "arraydiffukey": [
        "array_diff_ukey",
        "function.array-diff-ukey.php",
        "キーを基準にし、コールバック関数を用いて配列の差を計算する"
    ],
    "arrayfill": [
        "array_fill",
        "function.array-fill.php",
        "配列を指定した値で埋める"
    ],
    "arrayfillkeys": [
        "array_fill_keys",
        "function.array-fill-keys.php",
        "キーを指定して、配列を値で埋める"
    ],
    "arrayfilter": [
        "array_filter",
        "function.array-filter.php",
        "コールバック関数を使用して、配列の要素をフィルタリングする"
    ],
    "arrayflip": [
        "array_flip",
        "function.array-flip.php",
        "配列のキーと値を反転する"
    ],
    "arrayintersect": [
        "array_intersect",
        "function.array-intersect.php",
        "配列の共通項を計算する"
    ],
    "arrayintersectassoc": [
        "array_intersect_assoc",
        "function.array-intersect-assoc.php",
        "追加された添字の確認も含めて配列の共通項を確認する"
    ],
    "arrayintersectkey": [
        "array_intersect_key",
        "function.array-intersect-key.php",
        "キーを基準にして配列の共通項を計算する"
    ],
    "arraykeys": [
        "array_keys",
        "function.array-keys.php",
        "配列のキーすべて、あるいはその一部を返す"
    ],
    "arraykeyexists": [
        "array_key_exists",
        "function.array-key-exists.php",
        "指定したキーまたは添字が配列にあるかどうかを調べる"
    ],
    "arraykeyfirst": [
        "array_key_first",
        "function.array-key-first.php",
        "配列の最初のキーを得る"
    ],
    "arraykeylast": [
        "array_key_last",
        "function.array-key-last.php",
        "配列の最後のキーを得る"
    ],
    "arraymap": [
        "array_map",
        "function.array-map.php",
        "指定した配列の要素にコールバック関数を適用する"
    ],
    "arraymerge": [
        "array_merge",
        "function.array-merge.php",
        "ひとつまたは複数の配列をマージする"
    ],
    "arraymergerecursive": [
        "array_merge_recursive",
        "function.array-merge-recursive.php",
        "一つ以上の配列を再帰的にマージする"
    ],
    "arraymultisort": [
        "array_multisort",
        "function.array-multisort.php",
        "複数または多次元の配列をソートする"
    ],
    "arraypad": [
        "array_pad",
        "function.array-pad.php",
        "指定長、指定した値で配列を埋める"
    ],
    "arraypop": [
        "array_pop",
        "function.array-pop.php",
        "配列の末尾から要素を取り除く"
    ],
    "arrayproduct": [
        "array_product",
        "function.array-product.php",
        "配列の値の積を計算する"
    ],
    "arraypush": [
        "array_push",
        "function.array-push.php",
        "一つ以上の要素を配列の最後に追加する"
    ],
    "arrayrand": [
        "array_rand",
        "function.array-rand.php",
        "配列から一つ以上のキーをランダムに取得する"
    ],
    "arrayreduce": [
        "array_reduce",
        "function.array-reduce.php",
        "コールバック関数を用いて配列を普通の値に変更することにより、配列を再帰的に減らす"
    ],
    "arrayreplace": [
        "array_replace",
        "function.array-replace.php",
        "渡された配列の要素を置き換える"
    ],
    "arrayreplacerecursive": [
        "array_replace_recursive",
        "function.array-replace-recursive.php",
        "渡された配列の要素を再帰的に置き換える"
    ],
    "arrayreverse": [
        "array_reverse",
        "function.array-reverse.php",
        "要素を逆順にした配列を返す"
    ],
    "arraysearch": [
        "array_search",
        "function.array-search.php",
        "指定した値を配列で検索し、見つかった場合に対応する最初のキーを返す"
    ],
    "arrayshift": [
        "array_shift",
        "function.array-shift.php",
        "配列の先頭から要素を一つ取り出す"
    ],
    "arrayslice": [
        "array_slice",
        "function.array-slice.php",
        "配列の一部を展開する"
    ],
    "arraysplice": [
        "array_splice",
        "function.array-splice.php",
        "配列の一部を削除し、他の要素で置換する"
    ],
    "arraysum": [
        "array_sum",
        "function.array-sum.php",
        "配列の中の値の合計を計算する"
    ],
    "arrayudiff": [
        "array_udiff",
        "function.array-udiff.php",
        "データの比較にコールバック関数を用い、配列の差を計算する"
    ],
    "arrayuintersect": [
        "array_uintersect",
        "function.array-uintersect.php",
        "データの比較にコールバック関数を用い、配列の共通項を計算する"
    ],
    "arrayunique": [
        "array_unique",
        "function.array-unique.php",
        "配列から重複した値を削除する"
    ],
    "arrayunshift": [
        "array_unshift",
        "function.array-unshift.php",
        "一つ以上の要素を配列の最初に加える"
    ],
    "arrayvalues": [
        "array_values",
        "function.array-values.php",
        "配列の全ての値を返す"
    ],
    "arraywalk": [
        "array_walk",
        "function.array-walk.php",
        "配列の全ての要素にユーザー定義の関数を適用する"
    ],
    "arraywalkrecursive": [
        "array_walk_recursive",
        "function.array-walk-recursive.php",
        "配列の全ての要素に、ユーザー関数を再帰的に適用する"
    ],
    "arsort": [
        "arsort",
        "function.arsort.php",
        "連想キーと要素との関係を維持しつつ配列を逆順にソートする"
    ],
    "asin": [
        "asin",
        "function.asin.php",
        "逆正弦（アークサイン）"
    ],
    "asinh": [
        "asinh",
        "function.asinh.php",
        "逆双曲線正弦（アークハイパボリックサイン）"
    ],
    "asort": [
        "asort",
        "function.asort.php",
        "連想キーと要素との関係を維持しつつ配列をソートする"
    ],
    "assert": [
        "assert",
        "function.assert.php",
        "assertion が FALSE であるかどうかを調べる"
    ],
    "assertoptions": [
        "assert_options",
        "function.assert-options.php",
        "様々な assert フラグを設定/取得する"
    ],
    "atan": [
        "atan",
        "function.atan.php",
        "逆正接（アークタンジェント）"
    ],
    "atan2": [
        "atan2",
        "function.atan2.php",
        "2 変数のアークタンジェント"
    ],
    "atanh": [
        "atanh",
        "function.atanh.php",
        "逆双曲線正接（アークハイパボリックタンジェント）"
    ],
    "base64decode": [
        "base64_decode",
        "function.base64-decode.php",
        "MIME base64 方式によりエンコードされたデータをデコードする"
    ],
    "base64encode": [
        "base64_encode",
        "function.base64-encode.php",
        "MIME base64 方式でデータをエンコードする"
    ],
    "basename": [
        "basename",
        "function.basename.php",
        "パスの最後にある名前の部分を返す"
    ],
    "BaseResultgetWarnings": [
        "BaseResult::getWarnings",
        "mysql-xdevapi-baseresult.getwarnings.php",
        "直近の操作の警告を取得する"
    ],
    "BaseResultgetWarningsCount": [
        "BaseResult::getWarningsCount",
        "mysql-xdevapi-baseresult.getwarningscount.php",
        "直近の操作から発生した警告の数を取得する"
    ],
    "baseconvert": [
        "base_convert",
        "function.base-convert.php",
        "数値の基数を任意に変換する"
    ],
    "bcadd": [
        "bcadd",
        "function.bcadd.php",
        "2つの任意精度の数値を加算する"
    ],
    "bccomp": [
        "bccomp",
        "function.bccomp.php",
        "2 つの任意精度数値を比較する"
    ],
    "bcdiv": [
        "bcdiv",
        "function.bcdiv.php",
        "2つの任意精度数値で除算を行う"
    ],
    "bcmod": [
        "bcmod",
        "function.bcmod.php",
        "2 つの任意精度数値の剰余を取得する"
    ],
    "bcmul": [
        "bcmul",
        "function.bcmul.php",
        "2つの任意精度数値の乗算を行う"
    ],
    "bcpow": [
        "bcpow",
        "function.bcpow.php",
        "任意精度数値をべき乗する"
    ],
    "bcpowmod": [
        "bcpowmod",
        "function.bcpowmod.php",
        "任意精度数値のべき乗の、指定した数値による剰余"
    ],
    "bcscale": [
        "bcscale",
        "function.bcscale.php",
        "すべての BC 演算関数におけるデフォルトのスケールを設定/取得する"
    ],
    "bcsqrt": [
        "bcsqrt",
        "function.bcsqrt.php",
        "任意精度数値の平方根を取得する"
    ],
    "bcsub": [
        "bcsub",
        "function.bcsub.php",
        "任意精度数値の減算を行う"
    ],
    "bin2hex": [
        "bin2hex",
        "function.bin2hex.php",
        "バイナリのデータを16進表現に変換する"
    ],
    "bindec": [
        "bindec",
        "function.bindec.php",
        "2 進数 を 10 進数に変換する"
    ],
    "bindtextdomain": [
        "bindtextdomain",
        "function.bindtextdomain.php",
        "ドメインのパスを設定する"
    ],
    "bindtextdomaincodeset": [
        "bind_textdomain_codeset",
        "function.bind-textdomain-codeset.php",
        "DOMAIN メッセージカタログから返されるメッセージの文字エンコーディングを指定する"
    ],
    "blencencrypt": [
        "blenc_encrypt",
        "function.blenc-encrypt.php",
        "Encrypt a PHP script with BLENC"
    ],
    "boolval": [
        "boolval",
        "function.boolval.php",
        "変数の boolean としての値を取得する"
    ],
    "bsondecode": [
        "bson_decode",
        "function.bson-decode.php",
        "BSON オブジェクトを PHP の配列に復元する"
    ],
    "bsonencode": [
        "bson_encode",
        "function.bson-encode.php",
        "PHP の変数を BSON 文字列に変換する"
    ],
    "bzclose": [
        "bzclose",
        "function.bzclose.php",
        "bzip2 ファイルを閉じる"
    ],
    "bzcompress": [
        "bzcompress",
        "function.bzcompress.php",
        "文字列をbzip2形式のデータに圧縮する"
    ],
    "bzdecompress": [
        "bzdecompress",
        "function.bzdecompress.php",
        "bzip2 形式のデータを解凍する"
    ],
    "bzerrno": [
        "bzerrno",
        "function.bzerrno.php",
        "bzip2 エラー番号を返す"
    ],
    "bzerror": [
        "bzerror",
        "function.bzerror.php",
        "bzip2 エラー番号とエラー文字列を配列で返す"
    ],
    "bzerrstr": [
        "bzerrstr",
        "function.bzerrstr.php",
        "bzip2 エラー文字列を返す"
    ],
    "bzflush": [
        "bzflush",
        "function.bzflush.php",
        "全てのバッファリングされたデータを強制的に書き込む"
    ],
    "bzopen": [
        "bzopen",
        "function.bzopen.php",
        "bzip2 圧縮されたファイルをオープンする"
    ],
    "bzread": [
        "bzread",
        "function.bzread.php",
        "バイナリ対応の bzip2 ファイル読み込み"
    ],
    "bzwrite": [
        "bzwrite",
        "function.bzwrite.php",
        "バイナリ対応の bzip2 ファイルへの書き込み"
    ],
    "CachingIteratorcount": [
        "CachingIterator::count",
        "cachingiterator.count.php",
        "イテレータ内の要素の数"
    ],
    "CachingIteratorcurrent": [
        "CachingIterator::current",
        "cachingiterator.current.php",
        "現在の要素を返す"
    ],
    "CachingIteratorgetCache": [
        "CachingIterator::getCache",
        "cachingiterator.getcache.php",
        "キャッシュの内容を取得する"
    ],
    "CachingIteratorgetFlags": [
        "CachingIterator::getFlags",
        "cachingiterator.getflags.php",
        "使用しているフラグを取得する"
    ],
    "CachingIteratorgetInnerIterator": [
        "CachingIterator::getInnerIterator",
        "cachingiterator.getinneriterator.php",
        "内部イテレータを返す"
    ],
    "CachingIteratorhasNext": [
        "CachingIterator::hasNext",
        "cachingiterator.hasnext.php",
        "内部イテレータが有効な次の要素を持つかどうかをチェックする"
    ],
    "CachingIteratorkey": [
        "CachingIterator::key",
        "cachingiterator.key.php",
        "現在の要素のキーを返す"
    ],
    "CachingIteratornext": [
        "CachingIterator::next",
        "cachingiterator.next.php",
        "イテレータを前方に移動する"
    ],
    "CachingIteratoroffsetExists": [
        "CachingIterator::offsetExists",
        "cachingiterator.offsetexists.php",
        "The offsetExists purpose"
    ],
    "CachingIteratoroffsetGet": [
        "CachingIterator::offsetGet",
        "cachingiterator.offsetget.php",
        "The offsetGet purpose"
    ],
    "CachingIteratoroffsetSet": [
        "CachingIterator::offsetSet",
        "cachingiterator.offsetset.php",
        "The offsetSet purpose"
    ],
    "CachingIteratoroffsetUnset": [
        "CachingIterator::offsetUnset",
        "cachingiterator.offsetunset.php",
        "The offsetUnset purpose"
    ],
    "CachingIteratorrewind": [
        "CachingIterator::rewind",
        "cachingiterator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "CachingIteratorsetFlags": [
        "CachingIterator::setFlags",
        "cachingiterator.setflags.php",
        "The setFlags purpose"
    ],
    "CachingIteratorvalid": [
        "CachingIterator::valid",
        "cachingiterator.valid.php",
        "現在の要素が有効かどうかをチェックする"
    ],
    "CachingIteratorconstruct": [
        "CachingIterator::__construct",
        "cachingiterator.construct.php",
        "新しい CachingIterator オブジェクトを作成する"
    ],
    "CachingIteratortoString": [
        "CachingIterator::__toString",
        "cachingiterator.tostring.php",
        "現在の要素の文字列表現を返す"
    ],
    "CallbackFilterIteratoraccept": [
        "CallbackFilterIterator::accept",
        "callbackfilteriterator.accept.php",
        "現在の値、現在のキー、そして内部イテレータを引数としてでコールバックを呼び出す"
    ],
    "CallbackFilterIteratorconstruct": [
        "CallbackFilterIterator::__construct",
        "callbackfilteriterator.construct.php",
        "フィルタリングしたイテレータを別のイテレータから作成する"
    ],
    "calluserfunc": [
        "call_user_func",
        "function.call-user-func.php",
        "最初の引数で指定したコールバック関数をコールする"
    ],
    "calluserfuncarray": [
        "call_user_func_array",
        "function.call-user-func-array.php",
        "パラメータの配列を指定してコールバック関数をコールする"
    ],
    "caldaysinmonth": [
        "cal_days_in_month",
        "function.cal-days-in-month.php",
        "指定した年とカレンダーについて、月の日数を返す"
    ],
    "calfromjd": [
        "cal_from_jd",
        "function.cal-from-jd.php",
        "ユリウス積算日からサポートされるカレンダーに変換する"
    ],
    "calinfo": [
        "cal_info",
        "function.cal-info.php",
        "特定のカレンダーに関する情報を返す"
    ],
    "caltojd": [
        "cal_to_jd",
        "function.cal-to-jd.php",
        "サポートされるカレンダーからユリウス積算日に変換する"
    ],
    "ceil": [
        "ceil",
        "function.ceil.php",
        "端数の切り上げ"
    ],
    "chdir": [
        "chdir",
        "function.chdir.php",
        "ディレクトリを変更する"
    ],
    "checkdate": [
        "checkdate",
        "function.checkdate.php",
        "グレゴリオ暦の日付/時刻の妥当性を確認します"
    ],
    "checkdnsrr": [
        "checkdnsrr",
        "function.checkdnsrr.php",
        "指定したインターネットホスト名もしくは IP アドレスに対応する DNS レコードを検索する"
    ],
    "chgrp": [
        "chgrp",
        "function.chgrp.php",
        "ファイルのグループを変更する"
    ],
    "chmod": [
        "chmod",
        "function.chmod.php",
        "ファイルのモードを変更する"
    ],
    "chop": [
        "chop",
        "function.chop.php",
        "rtrim のエイリアス"
    ],
    "chown": [
        "chown",
        "function.chown.php",
        "ファイルの所有者を変更する"
    ],
    "chr": [
        "chr",
        "function.chr.php",
        "数値から、1バイトの文字列を生成する"
    ],
    "chroot": [
        "chroot",
        "function.chroot.php",
        "ルートディレクトリを変更する"
    ],
    "chunksplit": [
        "chunk_split",
        "function.chunk-split.php",
        "文字列をより小さな部分に分割する"
    ],
    "classkitimport": [
        "classkit_import",
        "function.classkit-import.php",
        "新しいクラスメソッドの定義をファイルから読み込む"
    ],
    "classkitmethodadd": [
        "classkit_method_add",
        "function.classkit-method-add.php",
        "指定したクラスに、新しいメソッドを動的に追加する"
    ],
    "classkitmethodcopy": [
        "classkit_method_copy",
        "function.classkit-method-copy.php",
        "あるクラスのメソッドを別のクラスにコピーする"
    ],
    "classkitmethodredefine": [
        "classkit_method_redefine",
        "function.classkit-method-redefine.php",
        "指定されたメソッドのコードを動的に変更する"
    ],
    "classkitmethodremove": [
        "classkit_method_remove",
        "function.classkit-method-remove.php",
        "指定したメソッドを動的に削除する"
    ],
    "classkitmethodrename": [
        "classkit_method_rename",
        "function.classkit-method-rename.php",
        "指定したメソッドの名前を動的に変更する"
    ],
    "classalias": [
        "class_alias",
        "function.class-alias.php",
        "クラスのエイリアスを作成する"
    ],
    "classexists": [
        "class_exists",
        "function.class-exists.php",
        "クラスが定義済みかどうかを確認する"
    ],
    "classimplements": [
        "class_implements",
        "function.class-implements.php",
        "与えられたクラスあるいはインターフェイスが実装しているインターフェイスを返す"
    ],
    "classparents": [
        "class_parents",
        "function.class-parents.php",
        "与えられたクラスの親クラスを返す"
    ],
    "classuses": [
        "class_uses",
        "function.class-uses.php",
        "指定したクラスが使っているトレイトを返す"
    ],
    "clearstatcache": [
        "clearstatcache",
        "function.clearstatcache.php",
        "ファイルのステータスのキャッシュをクリアする"
    ],
    "ClientgetClient": [
        "Client::getClient",
        "mysql-xdevapi-client.getsession.php",
        "クライアントのセッションを取得する"
    ],
    "Clientconstruct": [
        "Client::__construct",
        "mysql-xdevapi-client.construct.php",
        "Client のコンストラクタ"
    ],
    "cligetprocesstitle": [
        "cli_get_process_title",
        "function.cli-get-process-title.php",
        "現在のプロセスのタイトルを返す"
    ],
    "clisetprocesstitle": [
        "cli_set_process_title",
        "function.cli-set-process-title.php",
        "プロセスのタイトルを設定する"
    ],
    "closedir": [
        "closedir",
        "function.closedir.php",
        "ディレクトリハンドルをクローズする"
    ],
    "closelog": [
        "closelog",
        "function.closelog.php",
        "システムログへの接続を閉じる"
    ],
    "Closurebind": [
        "Closure::bind",
        "closure.bind.php",
        "バインドされたオブジェクトとクラスのスコープでクロージャを複製する"
    ],
    "ClosurebindTo": [
        "Closure::bindTo",
        "closure.bindto.php",
        "新しくバインドしたオブジェクトとクラスのスコープで、クロージャを複製する"
    ],
    "Closurecall": [
        "Closure::call",
        "closure.call.php",
        "クロージャを束縛して呼び出す"
    ],
    "ClosurefromCallable": [
        "Closure::fromCallable",
        "closure.fromcallable.php",
        "callable をクロージャに変換する"
    ],
    "Closureconstruct": [
        "Closure::__construct",
        "closure.construct.php",
        "インスタンス作成を無効化したコンストラクタ"
    ],
    "Collatorasort": [
        "Collator::asort",
        "collator.asort.php",
        "インデックスの情報を保持しつつ配列を並べ替える"
    ],
    "Collatorcompare": [
        "Collator::compare",
        "collator.compare.php",
        "ふたつの Unicode 文字列を比較する"
    ],
    "Collatorcreate": [
        "Collator::create",
        "collator.create.php",
        "collator を作成する"
    ],
    "CollatorgetAttribute": [
        "Collator::getAttribute",
        "collator.getattribute.php",
        "照合用の属性の値を取得する"
    ],
    "CollatorgetErrorCode": [
        "Collator::getErrorCode",
        "collator.geterrorcode.php",
        "collator の直近のエラーコードを取得する"
    ],
    "CollatorgetErrorMessage": [
        "Collator::getErrorMessage",
        "collator.geterrormessage.php",
        "collator の直近のエラーコードのテキストを取得する"
    ],
    "CollatorgetLocale": [
        "Collator::getLocale",
        "collator.getlocale.php",
        "collator のロケール名を取得する"
    ],
    "CollatorgetSortKey": [
        "Collator::getSortKey",
        "collator.getsortkey.php",
        "文字列のソート用のキーを取得する"
    ],
    "CollatorgetStrength": [
        "Collator::getStrength",
        "collator.getstrength.php",
        "現在の照合強度を取得する"
    ],
    "CollatorsetAttribute": [
        "Collator::setAttribute",
        "collator.setattribute.php",
        "照合用の属性を設定する"
    ],
    "CollatorsetStrength": [
        "Collator::setStrength",
        "collator.setstrength.php",
        "照合強度を設定する"
    ],
    "Collatorsort": [
        "Collator::sort",
        "collator.sort.php",
        "指定した collator で配列を並べ替える"
    ],
    "CollatorsortWithSortKeys": [
        "Collator::sortWithSortKeys",
        "collator.sortwithsortkeys.php",
        "指定した collator とキーで配列を並べ替える"
    ],
    "Collatorconstruct": [
        "Collator::__construct",
        "collator.construct.php",
        "collator を作成する"
    ],
    "CollectableisGarbage": [
        "Collectable::isGarbage",
        "collectable.isgarbage.php",
        "Determine whether an object has been marked as garbage"
    ],
    "CollectablesetGarbage": [
        "Collectable::setGarbage",
        "collectable.setgarbage.php",
        "Mark an object as garbage"
    ],
    "Collectionadd": [
        "Collection::add",
        "mysql-xdevapi-collection.add.php",
        "コレクションにドキュメントを追加する"
    ],
    "CollectionaddOrReplaceOne": [
        "Collection::addOrReplaceOne",
        "mysql-xdevapi-collection.addorreplaceone.php",
        "コレクションのドキュメントを追加または置換する"
    ],
    "Collectioncount": [
        "Collection::count",
        "mysql-xdevapi-collection.count.php",
        "ドキュメントの数を取得する"
    ],
    "CollectioncreateIndex": [
        "Collection::createIndex",
        "mysql-xdevapi-collection.createindex.php",
        "コレクションにインデックスを作成"
    ],
    "CollectiondropIndex": [
        "Collection::dropIndex",
        "mysql-xdevapi-collection.dropindex.php",
        "コレクションのインデックスを削除"
    ],
    "CollectionexistsInDatabase": [
        "Collection::existsInDatabase",
        "mysql-xdevapi-collection.existsindatabase.php",
        "コレクションがデータベースに存在するかをチェックする"
    ],
    "Collectionfind": [
        "Collection::find",
        "mysql-xdevapi-collection.find.php",
        "ドキュメントを検索する"
    ],
    "CollectiongetName": [
        "Collection::getName",
        "mysql-xdevapi-collection.getname.php",
        "コレクションの名前を得る"
    ],
    "CollectiongetOne": [
        "Collection::getOne",
        "mysql-xdevapi-collection.getone.php",
        "ドキュメントをひとつ取得"
    ],
    "CollectiongetSchema": [
        "Collection::getSchema",
        "mysql-xdevapi-collection.getschema.php",
        "スキーマオブジェクトを得る"
    ],
    "CollectiongetSession": [
        "Collection::getSession",
        "mysql-xdevapi-collection.getsession.php",
        "セッションオブジェクトを取得"
    ],
    "Collectionmodify": [
        "Collection::modify",
        "mysql-xdevapi-collection.modify.php",
        "コレクションのドキュメントを変更する"
    ],
    "Collectionremove": [
        "Collection::remove",
        "mysql-xdevapi-collection.remove.php",
        "コレクションを削除する"
    ],
    "CollectionremoveOne": [
        "Collection::removeOne",
        "mysql-xdevapi-collection.removeone.php",
        "コレクションからドキュメントをひとつ削除する"
    ],
    "CollectionreplaceOne": [
        "Collection::replaceOne",
        "mysql-xdevapi-collection.replaceone.php",
        "コレクションのドキュメントをひとつ置き換える"
    ],
    "Collectionconstruct": [
        "Collection::__construct",
        "mysql-xdevapi-collection.construct.php",
        "Collection のコンストラクタ"
    ],
    "CollectionAddexecute": [
        "CollectionAdd::execute",
        "mysql-xdevapi-collectionadd.execute.php",
        "ステートメントを実行する"
    ],
    "CollectionAddconstruct": [
        "CollectionAdd::__construct",
        "mysql-xdevapi-collectionadd.construct.php",
        "CollectionAdd のコンストラクタ"
    ],
    "CollectionFindbind": [
        "CollectionFind::bind",
        "mysql-xdevapi-collectionfind.bind.php",
        "クエリのプレースホルダーに値をバインドする"
    ],
    "CollectionFindexecute": [
        "CollectionFind::execute",
        "mysql-xdevapi-collectionfind.execute.php",
        "ステートメントを実行する"
    ],
    "CollectionFindfields": [
        "CollectionFind::fields",
        "mysql-xdevapi-collectionfind.fields.php",
        "ドキュメントのフィールドのフィルタを設定する"
    ],
    "CollectionFindgroupBy": [
        "CollectionFind::groupBy",
        "mysql-xdevapi-collectionfind.groupby.php",
        "グループ化の条件を設定する"
    ],
    "CollectionFindhaving": [
        "CollectionFind::having",
        "mysql-xdevapi-collectionfind.having.php",
        "集約関数の条件を設定する"
    ],
    "CollectionFindlimit": [
        "CollectionFind::limit",
        "mysql-xdevapi-collectionfind.limit.php",
        "返されるドキュメントの数を限定する"
    ],
    "CollectionFindlockExclusive": [
        "CollectionFind::lockExclusive",
        "mysql-xdevapi-collectionfind.lockexclusive.php",
        "Execute operation with EXCLUSIVE LOCK"
    ],
    "CollectionFindlockShared": [
        "CollectionFind::lockShared",
        "mysql-xdevapi-collectionfind.lockshared.php",
        "SHARED LOCK 付きで操作を実行する"
    ],
    "CollectionFindoffset": [
        "CollectionFind::offset",
        "mysql-xdevapi-collectionfind.offset.php",
        "返される要素の数から、与えられた数をスキップする"
    ],
    "CollectionFindsort": [
        "CollectionFind::sort",
        "mysql-xdevapi-collectionfind.sort.php",
        "ソート条件を設定する"
    ],
    "CollectionFindconstruct": [
        "CollectionFind::__construct",
        "mysql-xdevapi-collectionfind.construct.php",
        "CollectionFind のコンストラクタ"
    ],
    "CollectionModifyarrayAppend": [
        "CollectionModify::arrayAppend",
        "mysql-xdevapi-collectionmodify.arrayappend.php",
        "配列のフィールドに要素を追加する"
    ],
    "CollectionModifyarrayInsert": [
        "CollectionModify::arrayInsert",
        "mysql-xdevapi-collectionmodify.arrayinsert.php",
        "配列のフィールドに要素を挿入する"
    ],
    "CollectionModifybind": [
        "CollectionModify::bind",
        "mysql-xdevapi-collectionmodify.bind.php",
        "クエリのプレースホルダーに値をバインドする"
    ],
    "CollectionModifyexecute": [
        "CollectionModify::execute",
        "mysql-xdevapi-collectionmodify.execute.php",
        "変更の操作を実行する"
    ],
    "CollectionModifylimit": [
        "CollectionModify::limit",
        "mysql-xdevapi-collectionmodify.limit.php",
        "変更されるドキュメントの数を限定する"
    ],
    "CollectionModifypatch": [
        "CollectionModify::patch",
        "mysql-xdevapi-collectionmodify.patch.php",
        "document にパッチを当てる"
    ],
    "CollectionModifyreplace": [
        "CollectionModify::replace",
        "mysql-xdevapi-collectionmodify.replace.php",
        "ドキュメントのフィールドを置き換える"
    ],
    "CollectionModifyset": [
        "CollectionModify::set",
        "mysql-xdevapi-collectionmodify.set.php",
        "ドキュメントの属性を設定する"
    ],
    "CollectionModifyskip": [
        "CollectionModify::skip",
        "mysql-xdevapi-collectionmodify.skip.php",
        "要素をスキップする"
    ],
    "CollectionModifysort": [
        "CollectionModify::sort",
        "mysql-xdevapi-collectionmodify.sort.php",
        "ソート条件を設定する"
    ],
    "CollectionModifyunset": [
        "CollectionModify::unset",
        "mysql-xdevapi-collectionmodify.unset.php",
        "ドキュメントのフィールドの値を削除する"
    ],
    "CollectionModifyconstruct": [
        "CollectionModify::__construct",
        "mysql-xdevapi-collectionmodify.construct.php",
        "CollectionModify のコンストラクタ"
    ],
    "CollectionRemovebind": [
        "CollectionRemove::bind",
        "mysql-xdevapi-collectionremove.bind.php",
        "プレースホルダーに値をバインドする"
    ],
    "CollectionRemoveexecute": [
        "CollectionRemove::execute",
        "mysql-xdevapi-collectionremove.execute.php",
        "削除操作を実行する"
    ],
    "CollectionRemovelimit": [
        "CollectionRemove::limit",
        "mysql-xdevapi-collectionremove.limit.php",
        "削除するドキュメントの数を限定する"
    ],
    "CollectionRemovesort": [
        "CollectionRemove::sort",
        "mysql-xdevapi-collectionremove.sort.php",
        "ソート条件を設定する"
    ],
    "CollectionRemoveconstruct": [
        "CollectionRemove::__construct",
        "mysql-xdevapi-collectionremove.construct.php",
        "CollectionRemove のコンストラクタ"
    ],
    "ColumnResultgetCharacterSetName": [
        "ColumnResult::getCharacterSetName",
        "mysql-xdevapi-columnresult.getcharactersetname.php",
        "キャラクタセットを取得する"
    ],
    "ColumnResultgetCollationName": [
        "ColumnResult::getCollationName",
        "mysql-xdevapi-columnresult.getcollationname.php",
        "照合順序名を取得する"
    ],
    "ColumnResultgetColumnLabel": [
        "ColumnResult::getColumnLabel",
        "mysql-xdevapi-columnresult.getcolumnlabel.php",
        "カラムのラベルを取得する"
    ],
    "ColumnResultgetColumnName": [
        "ColumnResult::getColumnName",
        "mysql-xdevapi-columnresult.getcolumnname.php",
        "カラム名を取得する"
    ],
    "ColumnResultgetFractionalDigits": [
        "ColumnResult::getFractionalDigits",
        "mysql-xdevapi-columnresult.getfractionaldigits.php",
        "カラムの小数の桁数を取得する"
    ],
    "ColumnResultgetLength": [
        "ColumnResult::getLength",
        "mysql-xdevapi-columnresult.getlength.php",
        "カラムのフィールドの長さを取得する"
    ],
    "ColumnResultgetSchemaName": [
        "ColumnResult::getSchemaName",
        "mysql-xdevapi-columnresult.getschemaname.php",
        "スキーマ名を取得する"
    ],
    "ColumnResultgetTableLabel": [
        "ColumnResult::getTableLabel",
        "mysql-xdevapi-columnresult.gettablelabel.php",
        "テーブルラベルを取得する"
    ],
    "ColumnResultgetTableName": [
        "ColumnResult::getTableName",
        "mysql-xdevapi-columnresult.gettablename.php",
        "テーブル名を取得する"
    ],
    "ColumnResultgetType": [
        "ColumnResult::getType",
        "mysql-xdevapi-columnresult.gettype.php",
        "カラムの型を取得する"
    ],
    "ColumnResultisNumberSigned": [
        "ColumnResult::isNumberSigned",
        "mysql-xdevapi-columnresult.isnumbersigned.php",
        "符号付きの型かどうかを調べる"
    ],
    "ColumnResultisPadded": [
        "ColumnResult::isPadded",
        "mysql-xdevapi-columnresult.ispadded.php",
        "パディングされているかを調べる"
    ],
    "ColumnResultconstruct": [
        "ColumnResult::__construct",
        "mysql-xdevapi-columnresult.construct.php",
        "ColumnResult のコンストラクタ"
    ],
    "comconstruct": [
        "com::__construct",
        "com.construct.php",
        "com クラスのコンストラクタ"
    ],
    "CommonMarkCQLconstruct": [
        "CommonMark\\CQL::__construct",
        "commonmark-cql.construct.php",
        "CQL Construction"
    ],
    "CommonMarkCQLinvoke": [
        "CommonMark\\CQL::__invoke",
        "commonmark-cql.invoke.php",
        "CQL Execution"
    ],
    "CommonMarkInterfacesIVisitableaccept": [
        "CommonMark\\Interfaces\\IVisitable::accept",
        "commonmark-interfaces-ivisitable.accept.php",
        "Visitation"
    ],
    "CommonMarkInterfacesIVisitorenter": [
        "CommonMark\\Interfaces\\IVisitor::enter",
        "commonmark-interfaces-ivisitor.enter.php",
        "Visitation"
    ],
    "CommonMarkInterfacesIVisitorleave": [
        "CommonMark\\Interfaces\\IVisitor::leave",
        "commonmark-interfaces-ivisitor.leave.php",
        "Visitation"
    ],
    "CommonMarkNodeaccept": [
        "CommonMark\\Node::accept",
        "commonmark-node.accept.php",
        "Visitation"
    ],
    "CommonMarkNodeappendChild": [
        "CommonMark\\Node::appendChild",
        "commonmark-node.appendchild.php",
        "AST Manipulation"
    ],
    "CommonMarkNodeinsertAfter": [
        "CommonMark\\Node::insertAfter",
        "commonmark-node.insertafter.php",
        "AST Manipulation"
    ],
    "CommonMarkNodeinsertBefore": [
        "CommonMark\\Node::insertBefore",
        "commonmark-node.insertbefore.php",
        "AST Manipulation"
    ],
    "CommonMarkNodeprependChild": [
        "CommonMark\\Node::prependChild",
        "commonmark-node.prependchild.php",
        "AST Manipulation"
    ],
    "CommonMarkNodereplace": [
        "CommonMark\\Node::replace",
        "commonmark-node.replace.php",
        "AST Manipulation"
    ],
    "CommonMarkNodeunlink": [
        "CommonMark\\Node::unlink",
        "commonmark-node.unlink.php",
        "AST Manipulation"
    ],
    "CommonMarkNodeBulletListconstruct": [
        "CommonMark\\Node\\BulletList::__construct",
        "commonmark-node-bulletlist.construct.php",
        "BulletList Construction"
    ],
    "CommonMarkNodeCodeBlockconstruct": [
        "CommonMark\\Node\\CodeBlock::__construct",
        "commonmark-node-codeblock.construct.php",
        "CodeBlock Construction"
    ],
    "CommonMarkNodeHeadingconstruct": [
        "CommonMark\\Node\\Heading::__construct",
        "commonmark-node-heading.construct.php",
        "Heading Construction"
    ],
    "CommonMarkNodeImageconstruct": [
        "CommonMark\\Node\\Image::__construct",
        "commonmark-node-image.construct.php",
        "Image Construction"
    ],
    "CommonMarkNodeLinkconstruct": [
        "CommonMark\\Node\\Link::__construct",
        "commonmark-node-link.construct.php",
        "Link Construction"
    ],
    "CommonMarkNodeOrderedListconstruct": [
        "CommonMark\\Node\\OrderedList::__construct",
        "commonmark-node-orderedlist.construct.php",
        "OrderedList Construction"
    ],
    "CommonMarkNodeTextconstruct": [
        "CommonMark\\Node\\Text::__construct",
        "commonmark-node-text.construct.php",
        "Text Construction"
    ],
    "CommonMarkParse": [
        "CommonMark\\Parse",
        "function.commonmark-parse.php",
        "Parsing"
    ],
    "CommonMarkParserfinish": [
        "CommonMark\\Parser::finish",
        "commonmark-parser.finish.php",
        "Parsing"
    ],
    "CommonMarkParserparse": [
        "CommonMark\\Parser::parse",
        "commonmark-parser.parse.php",
        "Parsing"
    ],
    "CommonMarkParserconstruct": [
        "CommonMark\\Parser::__construct",
        "commonmark-parser.construct.php",
        "Parsing"
    ],
    "CommonMarkRender": [
        "CommonMark\\Render",
        "function.commonmark-render.php",
        "Rendering"
    ],
    "CommonMarkRenderHTML": [
        "CommonMark\\Render\\HTML",
        "function.commonmark-render-html.php",
        "Rendering"
    ],
    "CommonMarkRenderLatex": [
        "CommonMark\\Render\\Latex",
        "function.commonmark-render-latex.php",
        "Rendering"
    ],
    "CommonMarkRenderMan": [
        "CommonMark\\Render\\Man",
        "function.commonmark-render-man.php",
        "Rendering"
    ],
    "CommonMarkRenderXML": [
        "CommonMark\\Render\\XML",
        "function.commonmark-render-xml.php",
        "Rendering"
    ],
    "compact": [
        "compact",
        "function.compact.php",
        "変数名とその値から配列を作成する"
    ],
    "COMPersistHelperGetCurFileName": [
        "COMPersistHelper::GetCurFileName",
        "compersisthelper.getcurfilename.php",
        "現在のファイル名を取得する"
    ],
    "COMPersistHelperGetMaxStreamSize": [
        "COMPersistHelper::GetMaxStreamSize",
        "compersisthelper.getmaxstreamsize.php",
        "ストリームのサイズの最大値を取得する"
    ],
    "COMPersistHelperInitNew": [
        "COMPersistHelper::InitNew",
        "compersisthelper.initnew.php",
        "オブジェクトをデフォルトの状態に初期化する"
    ],
    "COMPersistHelperLoadFromFile": [
        "COMPersistHelper::LoadFromFile",
        "compersisthelper.loadfromfile.php",
        "オブジェクトをファイルから読み込む"
    ],
    "COMPersistHelperLoadFromStream": [
        "COMPersistHelper::LoadFromStream",
        "compersisthelper.loadfromstream.php",
        "ストリームからオブジェクトを読み込む"
    ],
    "COMPersistHelperSaveToFile": [
        "COMPersistHelper::SaveToFile",
        "compersisthelper.savetofile.php",
        "オブジェクトをファイルに保存する"
    ],
    "COMPersistHelperSaveToStream": [
        "COMPersistHelper::SaveToStream",
        "compersisthelper.savetostream.php",
        "オブジェクトをストリームに保存する"
    ],
    "COMPersistHelperconstruct": [
        "COMPersistHelper::__construct",
        "compersisthelper.construct.php",
        "COMPersistHelper オブジェクトを構築する"
    ],
    "ComponereAbstractDefinitionaddInterface": [
        "Componere\\Abstract\\Definition::addInterface",
        "componere-abstract-definition.addinterface.php",
        "Add Interface"
    ],
    "ComponereAbstractDefinitionaddMethod": [
        "Componere\\Abstract\\Definition::addMethod",
        "componere-abstract-definition.addmethod.php",
        "Add Method"
    ],
    "ComponereAbstractDefinitionaddTrait": [
        "Componere\\Abstract\\Definition::addTrait",
        "componere-abstract-definition.addtrait.php",
        "Add Trait"
    ],
    "ComponereAbstractDefinitiongetReflector": [
        "Componere\\Abstract\\Definition::getReflector",
        "componere-abstract-definition.getreflector.php",
        "Reflection"
    ],
    "Componerecast": [
        "Componere\\cast",
        "componere.cast.php",
        "Casting"
    ],
    "Componerecastbyref": [
        "Componere\\cast_by_ref",
        "componere.cast_by_ref.php",
        "Casting"
    ],
    "ComponereDefinitionaddConstant": [
        "Componere\\Definition::addConstant",
        "componere-definition.addconstant.php",
        "Add Constant"
    ],
    "ComponereDefinitionaddProperty": [
        "Componere\\Definition::addProperty",
        "componere-definition.addproperty.php",
        "Add Property"
    ],
    "ComponereDefinitiongetClosure": [
        "Componere\\Definition::getClosure",
        "componere-definition.getclosure.php",
        "Get Closure"
    ],
    "ComponereDefinitiongetClosures": [
        "Componere\\Definition::getClosures",
        "componere-definition.getclosures.php",
        "Get Closures"
    ],
    "ComponereDefinitionisRegistered": [
        "Componere\\Definition::isRegistered",
        "componere-definition.isregistered.php",
        "State Detection"
    ],
    "ComponereDefinitionregister": [
        "Componere\\Definition::register",
        "componere-definition.register.php",
        "Registration"
    ],
    "ComponereDefinitionconstruct": [
        "Componere\\Definition::__construct",
        "componere-definition.construct.php",
        "Definition Construction"
    ],
    "ComponereMethodgetReflector": [
        "Componere\\Method::getReflector",
        "componere-method.getreflector.php",
        "Reflection"
    ],
    "ComponereMethodsetPrivate": [
        "Componere\\Method::setPrivate",
        "componere-method.setprivate.php",
        "Accessibility Modification"
    ],
    "ComponereMethodsetProtected": [
        "Componere\\Method::setProtected",
        "componere-method.setprotected.php",
        "Accessibility Modification"
    ],
    "ComponereMethodsetStatic": [
        "Componere\\Method::setStatic",
        "componere-method.setstatic.php",
        "Accessibility Modification"
    ],
    "ComponereMethodconstruct": [
        "Componere\\Method::__construct",
        "componere-method.construct.php",
        "Method Construction"
    ],
    "ComponerePatchapply": [
        "Componere\\Patch::apply",
        "componere-patch.apply.php",
        "Application"
    ],
    "ComponerePatchderive": [
        "Componere\\Patch::derive",
        "componere-patch.derive.php",
        "Patch Derivation"
    ],
    "ComponerePatchgetClosure": [
        "Componere\\Patch::getClosure",
        "componere-patch.getclosure.php",
        "Get Closure"
    ],
    "ComponerePatchgetClosures": [
        "Componere\\Patch::getClosures",
        "componere-patch.getclosures.php",
        "Get Closures"
    ],
    "ComponerePatchisApplied": [
        "Componere\\Patch::isApplied",
        "componere-patch.isapplied.php",
        "State Detection"
    ],
    "ComponerePatchrevert": [
        "Componere\\Patch::revert",
        "componere-patch.revert.php",
        "Reversal"
    ],
    "ComponerePatchconstruct": [
        "Componere\\Patch::__construct",
        "componere-patch.construct.php",
        "Patch Construction"
    ],
    "ComponereValuehasDefault": [
        "Componere\\Value::hasDefault",
        "componere-value.hasdefault.php",
        "Value Interaction"
    ],
    "ComponereValueisPrivate": [
        "Componere\\Value::isPrivate",
        "componere-value.isprivate.php",
        "Accessibility Detection"
    ],
    "ComponereValueisProtected": [
        "Componere\\Value::isProtected",
        "componere-value.isprotected.php",
        "Accessibility Detection"
    ],
    "ComponereValueisStatic": [
        "Componere\\Value::isStatic",
        "componere-value.isstatic.php",
        "Accessibility Detection"
    ],
    "ComponereValuesetPrivate": [
        "Componere\\Value::setPrivate",
        "componere-value.setprivate.php",
        "Accessibility Modification"
    ],
    "ComponereValuesetProtected": [
        "Componere\\Value::setProtected",
        "componere-value.setprotected.php",
        "Accessibility Modification"
    ],
    "ComponereValuesetStatic": [
        "Componere\\Value::setStatic",
        "componere-value.setstatic.php",
        "Accessibility Modification"
    ],
    "ComponereValueconstruct": [
        "Componere\\Value::__construct",
        "componere-value.construct.php",
        "Value Construction"
    ],
    "comcreateguid": [
        "com_create_guid",
        "function.com-create-guid.php",
        "グローバルユニーク ID (GUID) を生成する"
    ],
    "comeventsink": [
        "com_event_sink",
        "function.com-event-sink.php",
        "COM オブジェクトのイベントを PHP オブジェクトに接続する"
    ],
    "comgetactiveobject": [
        "com_get_active_object",
        "function.com-get-active-object.php",
        "すでに実行中の COM オブジェクトのインスタンスへのハンドルを返す"
    ],
    "comloadtypelib": [
        "com_load_typelib",
        "function.com-load-typelib.php",
        "タイプライブラリを読み込む"
    ],
    "commessagepump": [
        "com_message_pump",
        "function.com-message-pump.php",
        "COM メッセージを処理し、timeoutms ミリ秒の間待つ"
    ],
    "comprinttypeinfo": [
        "com_print_typeinfo",
        "function.com-print-typeinfo.php",
        "ディスパッチインターフェイスのために、PHP のクラス定義を出力する"
    ],
    "Condbroadcast": [
        "Cond::broadcast",
        "cond.broadcast.php",
        "Broadcast a Condition"
    ],
    "Condcreate": [
        "Cond::create",
        "cond.create.php",
        "Create a Condition"
    ],
    "Conddestroy": [
        "Cond::destroy",
        "cond.destroy.php",
        "Destroy a Condition"
    ],
    "Condsignal": [
        "Cond::signal",
        "cond.signal.php",
        "Signal a Condition"
    ],
    "Condwait": [
        "Cond::wait",
        "cond.wait.php",
        "Wait for Condition"
    ],
    "connectionaborted": [
        "connection_aborted",
        "function.connection-aborted.php",
        "クライアントとの接続が切断されているかどうかを調べる"
    ],
    "connectionstatus": [
        "connection_status",
        "function.connection-status.php",
        "接続ステータスのビットフィールドを返す"
    ],
    "constant": [
        "constant",
        "function.constant.php",
        "定数の値を返す"
    ],
    "convertcyrstring": [
        "convert_cyr_string",
        "function.convert-cyr-string.php",
        "キリル文字セットを他のものに変換する"
    ],
    "convertuudecode": [
        "convert_uudecode",
        "function.convert-uudecode.php",
        "uuencode された文字列をデコードする"
    ],
    "convertuuencode": [
        "convert_uuencode",
        "function.convert-uuencode.php",
        "文字列を uuencode する"
    ],
    "copy": [
        "copy",
        "function.copy.php",
        "ファイルをコピーする"
    ],
    "cos": [
        "cos",
        "function.cos.php",
        "余弦（コサイン）"
    ],
    "cosh": [
        "cosh",
        "function.cosh.php",
        "双曲線余弦（ハイパボリックコサイン）"
    ],
    "Countablecount": [
        "Countable::count",
        "countable.count.php",
        "オブジェクトの要素数を数える"
    ],
    "CounterbumpValue": [
        "Counter::bumpValue",
        "internals2.counter.counter-class.bumpvalue.php",
        "カウンタの現在値を変更する"
    ],
    "CountergetMeta": [
        "Counter::getMeta",
        "internals2.counter.counter-class.getmeta.php",
        "カウンタのメタ情報を返す"
    ],
    "CountergetNamed": [
        "Counter::getNamed",
        "internals2.counter.counter-class.getnamed.php",
        "既存のカウンタを取得する"
    ],
    "CountergetValue": [
        "Counter::getValue",
        "internals2.counter.counter-class.getvalue.php",
        "カウンタの現在値を取得する"
    ],
    "CounterresetValue": [
        "Counter::resetValue",
        "internals2.counter.counter-class.resetvalue.php",
        "カウンタの現在値をリセットする"
    ],
    "CountersetCounterClass": [
        "Counter::setCounterClass",
        "internals2.counter.counter-class.setcounterclass.php",
        "Counter::getNamed が返すクラスを設定する"
    ],
    "Counterconstruct": [
        "Counter::__construct",
        "internals2.counter.counter-class.construct.php",
        "単一の数値を保持する Counter のインスタンスを作成する"
    ],
    "counterbump": [
        "counter_bump",
        "internals2.counter.function.counter-bump.php",
        "基本カウンタの現在の値を更新する"
    ],
    "counterbumpvalue": [
        "counter_bump_value",
        "internals2.counter.function.counter-bump-value.php",
        "カウンタリソースの現在の値を変更する"
    ],
    "countercreate": [
        "counter_create",
        "internals2.counter.function.counter-create.php",
        "単一の数値を保持するカウンタを作成する"
    ],
    "counterget": [
        "counter_get",
        "internals2.counter.function.counter-get.php",
        "基本カウンタの現在の値を取得する"
    ],
    "countergetmeta": [
        "counter_get_meta",
        "internals2.counter.function.counter-get-meta.php",
        "カウンタリソースについてのメタ情報を返す"
    ],
    "countergetnamed": [
        "counter_get_named",
        "internals2.counter.function.counter-get-named.php",
        "指定した名前の既存のカウンタを取得する"
    ],
    "countergetvalue": [
        "counter_get_value",
        "internals2.counter.function.counter-get-value.php",
        "カウンタリソースの現在の値を取得する"
    ],
    "counterreset": [
        "counter_reset",
        "internals2.counter.function.counter-reset.php",
        "基本カウンタの現在の値をリセットする"
    ],
    "counterresetvalue": [
        "counter_reset_value",
        "internals2.counter.function.counter-reset-value.php",
        "カウンタリソースの現在の値をリセットする"
    ],
    "countchars": [
        "count_chars",
        "function.count-chars.php",
        "文字列で使用されている文字に関する情報を返す"
    ],
    "crc32": [
        "crc32",
        "function.crc32.php",
        "文字列の crc32 多項式計算を行う"
    ],
    "createfunction": [
        "create_function",
        "function.create-function.php",
        "匿名関数 (ラムダ形式) を作成する"
    ],
    "CrudOperationBindablebind": [
        "CrudOperationBindable::bind",
        "mysql-xdevapi-crudoperationbindable.bind.php",
        "プレースホルダーに値をバインドする"
    ],
    "CrudOperationLimitablelimit": [
        "CrudOperationLimitable::limit",
        "mysql-xdevapi-crudoperationlimitable.limit.php",
        "結果を限定する"
    ],
    "CrudOperationSkippableskip": [
        "CrudOperationSkippable::skip",
        "mysql-xdevapi-crudoperationskippable.skip.php",
        "スキップする操作の数"
    ],
    "CrudOperationSortablesort": [
        "CrudOperationSortable::sort",
        "mysql-xdevapi-crudoperationsortable.sort.php",
        "結果をソートする"
    ],
    "crypt": [
        "crypt",
        "function.crypt.php",
        "文字列の一方向のハッシュ化を行う"
    ],
    "ctypealnum": [
        "ctype_alnum",
        "function.ctype-alnum.php",
        "英数字かどうかを調べる"
    ],
    "ctypealpha": [
        "ctype_alpha",
        "function.ctype-alpha.php",
        "英字かどうかを調べる"
    ],
    "ctypecntrl": [
        "ctype_cntrl",
        "function.ctype-cntrl.php",
        "制御文字かどうかを調べる"
    ],
    "ctypedigit": [
        "ctype_digit",
        "function.ctype-digit.php",
        "数字かどうかを調べる"
    ],
    "ctypegraph": [
        "ctype_graph",
        "function.ctype-graph.php",
        "空白以外の印字可能な文字かどうかを調べる"
    ],
    "ctypelower": [
        "ctype_lower",
        "function.ctype-lower.php",
        "小文字かどうかを調べる"
    ],
    "ctypeprint": [
        "ctype_print",
        "function.ctype-print.php",
        "印字可能な文字かどうかを調べる"
    ],
    "ctypepunct": [
        "ctype_punct",
        "function.ctype-punct.php",
        "空白、英数字以外の出力可能な文字かどうかを調べる"
    ],
    "ctypespace": [
        "ctype_space",
        "function.ctype-space.php",
        "空白文字かどうか調べる"
    ],
    "ctypeupper": [
        "ctype_upper",
        "function.ctype-upper.php",
        "大文字かどうか調べる"
    ],
    "ctypexdigit": [
        "ctype_xdigit",
        "function.ctype-xdigit.php",
        "16 進数を表す文字かどうかを調べる"
    ],
    "cubridaffectedrows": [
        "cubrid_affected_rows",
        "function.cubrid-affected-rows.php",
        "Return the number of rows affected by the last SQL statement"
    ],
    "cubridbind": [
        "cubrid_bind",
        "function.cubrid-bind.php",
        "Bind variables to a prepared statement as parameters"
    ],
    "cubridclientencoding": [
        "cubrid_client_encoding",
        "function.cubrid-client-encoding.php",
        "Return the current CUBRID connection charset"
    ],
    "cubridclose": [
        "cubrid_close",
        "function.cubrid-close.php",
        "Close CUBRID connection"
    ],
    "cubridcloseprepare": [
        "cubrid_close_prepare",
        "function.cubrid-close-prepare.php",
        "Close the request handle"
    ],
    "cubridcloserequest": [
        "cubrid_close_request",
        "function.cubrid-close-request.php",
        "Close the request handle"
    ],
    "cubridcolumnnames": [
        "cubrid_column_names",
        "function.cubrid-column-names.php",
        "Get the column names in result"
    ],
    "cubridcolumntypes": [
        "cubrid_column_types",
        "function.cubrid-column-types.php",
        "Get column types in result"
    ],
    "cubridcolget": [
        "cubrid_col_get",
        "function.cubrid-col-get.php",
        "Get contents of collection type column using OID"
    ],
    "cubridcolsize": [
        "cubrid_col_size",
        "function.cubrid-col-size.php",
        "Get the number of elements in collection type column using OID"
    ],
    "cubridcommit": [
        "cubrid_commit",
        "function.cubrid-commit.php",
        "Commit a transaction"
    ],
    "cubridconnect": [
        "cubrid_connect",
        "function.cubrid-connect.php",
        "Open a connection to a CUBRID Server"
    ],
    "cubridconnectwithurl": [
        "cubrid_connect_with_url",
        "function.cubrid-connect-with-url.php",
        "Establish the environment for connecting to CUBRID server"
    ],
    "cubridcurrentoid": [
        "cubrid_current_oid",
        "function.cubrid-current-oid.php",
        "Get OID of the current cursor location"
    ],
    "cubriddataseek": [
        "cubrid_data_seek",
        "function.cubrid-data-seek.php",
        "Move the internal row pointer of the CUBRID result"
    ],
    "cubriddbname": [
        "cubrid_db_name",
        "function.cubrid-db-name.php",
        "Get db name from results of cubrid_list_dbs"
    ],
    "cubriddisconnect": [
        "cubrid_disconnect",
        "function.cubrid-disconnect.php",
        "Close a database connection"
    ],
    "cubriddrop": [
        "cubrid_drop",
        "function.cubrid-drop.php",
        "Delete an instance using OID"
    ],
    "cubriderrno": [
        "cubrid_errno",
        "function.cubrid-errno.php",
        "Return the numerical value of the error message from previous CUBRID operation"
    ],
    "cubriderror": [
        "cubrid_error",
        "function.cubrid-error.php",
        "Get the error message"
    ],
    "cubriderrorcode": [
        "cubrid_error_code",
        "function.cubrid-error-code.php",
        "Get error code for the most recent function call"
    ],
    "cubriderrorcodefacility": [
        "cubrid_error_code_facility",
        "function.cubrid-error-code-facility.php",
        "Get the facility code of error"
    ],
    "cubriderrormsg": [
        "cubrid_error_msg",
        "function.cubrid-error-msg.php",
        "Get last error message for the most recent function call"
    ],
    "cubridexecute": [
        "cubrid_execute",
        "function.cubrid-execute.php",
        "Execute a prepared SQL statement"
    ],
    "cubridfetch": [
        "cubrid_fetch",
        "function.cubrid-fetch.php",
        "Fetch the next row from a result set"
    ],
    "cubridfetcharray": [
        "cubrid_fetch_array",
        "function.cubrid-fetch-array.php",
        "Fetch a result row as an associative array, a numeric array, or both"
    ],
    "cubridfetchassoc": [
        "cubrid_fetch_assoc",
        "function.cubrid-fetch-assoc.php",
        "Return the associative array that corresponds to the fetched row"
    ],
    "cubridfetchfield": [
        "cubrid_fetch_field",
        "function.cubrid-fetch-field.php",
        "Get column information from a result and return as an object"
    ],
    "cubridfetchlengths": [
        "cubrid_fetch_lengths",
        "function.cubrid-fetch-lengths.php",
        "Return an array with the lengths of the values of each field from the current row"
    ],
    "cubridfetchobject": [
        "cubrid_fetch_object",
        "function.cubrid-fetch-object.php",
        "Fetch the next row and return it as an object"
    ],
    "cubridfetchrow": [
        "cubrid_fetch_row",
        "function.cubrid-fetch-row.php",
        "Return a numerical array with the values of the current row"
    ],
    "cubridfieldflags": [
        "cubrid_field_flags",
        "function.cubrid-field-flags.php",
        "Return a string with the flags of the given field offset"
    ],
    "cubridfieldlen": [
        "cubrid_field_len",
        "function.cubrid-field-len.php",
        "Get the maximum length of the specified field"
    ],
    "cubridfieldname": [
        "cubrid_field_name",
        "function.cubrid-field-name.php",
        "Return the name of the specified field index"
    ],
    "cubridfieldseek": [
        "cubrid_field_seek",
        "function.cubrid-field-seek.php",
        "Move the result set cursor to the specified field offset"
    ],
    "cubridfieldtable": [
        "cubrid_field_table",
        "function.cubrid-field-table.php",
        "Return the name of the table of the specified field"
    ],
    "cubridfieldtype": [
        "cubrid_field_type",
        "function.cubrid-field-type.php",
        "Return the type of the column corresponding to the given field offset"
    ],
    "cubridfreeresult": [
        "cubrid_free_result",
        "function.cubrid-free-result.php",
        "Free the memory occupied by the result data"
    ],
    "cubridget": [
        "cubrid_get",
        "function.cubrid-get.php",
        "Get a column using OID"
    ],
    "cubridgetautocommit": [
        "cubrid_get_autocommit",
        "function.cubrid-get-autocommit.php",
        "Get auto-commit mode of the connection"
    ],
    "cubridgetcharset": [
        "cubrid_get_charset",
        "function.cubrid-get-charset.php",
        "Return the current CUBRID connection charset"
    ],
    "cubridgetclassname": [
        "cubrid_get_class_name",
        "function.cubrid-get-class-name.php",
        "Get the class name using OID"
    ],
    "cubridgetclientinfo": [
        "cubrid_get_client_info",
        "function.cubrid-get-client-info.php",
        "Return the client library version"
    ],
    "cubridgetdbparameter": [
        "cubrid_get_db_parameter",
        "function.cubrid-get-db-parameter.php",
        "Returns the CUBRID database parameters"
    ],
    "cubridgetquerytimeout": [
        "cubrid_get_query_timeout",
        "function.cubrid-get-query-timeout.php",
        "Get the query timeout value of the request"
    ],
    "cubridgetserverinfo": [
        "cubrid_get_server_info",
        "function.cubrid-get-server-info.php",
        "Return the CUBRID server version"
    ],
    "cubridinsertid": [
        "cubrid_insert_id",
        "function.cubrid-insert-id.php",
        "Return the ID generated for the last updated AUTO_INCREMENT column"
    ],
    "cubridisinstance": [
        "cubrid_is_instance",
        "function.cubrid-is-instance.php",
        "Check whether the instance pointed by OID exists"
    ],
    "cubridlistdbs": [
        "cubrid_list_dbs",
        "function.cubrid-list-dbs.php",
        "Return an array with the list of all existing CUBRID databases"
    ],
    "cubridloadfromglo": [
        "cubrid_load_from_glo",
        "function.cubrid-load-from-glo.php",
        "Read data from a GLO instance and save it in a file"
    ],
    "cubridlob2bind": [
        "cubrid_lob2_bind",
        "function.cubrid-lob2-bind.php",
        "Bind a lob object or a string as a lob object to a prepared statement as parameters"
    ],
    "cubridlob2close": [
        "cubrid_lob2_close",
        "function.cubrid-lob2-close.php",
        "Close LOB object"
    ],
    "cubridlob2export": [
        "cubrid_lob2_export",
        "function.cubrid-lob2-export.php",
        "Export the lob object to a file"
    ],
    "cubridlob2import": [
        "cubrid_lob2_import",
        "function.cubrid-lob2-import.php",
        "Import BLOB/CLOB data from a file"
    ],
    "cubridlob2new": [
        "cubrid_lob2_new",
        "function.cubrid-lob2-new.php",
        "Create a lob object"
    ],
    "cubridlob2read": [
        "cubrid_lob2_read",
        "function.cubrid-lob2-read.php",
        "Read from BLOB/CLOB data"
    ],
    "cubridlob2seek": [
        "cubrid_lob2_seek",
        "function.cubrid-lob2-seek.php",
        "Move the cursor of a lob object"
    ],
    "cubridlob2seek64": [
        "cubrid_lob2_seek64",
        "function.cubrid-lob2-seek64.php",
        "Move the cursor of a lob object"
    ],
    "cubridlob2size": [
        "cubrid_lob2_size",
        "function.cubrid-lob2-size.php",
        "Get a lob object's size"
    ],
    "cubridlob2size64": [
        "cubrid_lob2_size64",
        "function.cubrid-lob2-size64.php",
        "Get a lob object's size"
    ],
    "cubridlob2tell": [
        "cubrid_lob2_tell",
        "function.cubrid-lob2-tell.php",
        "Tell the cursor position of the LOB object"
    ],
    "cubridlob2tell64": [
        "cubrid_lob2_tell64",
        "function.cubrid-lob2-tell64.php",
        "Tell the cursor position of the LOB object"
    ],
    "cubridlob2write": [
        "cubrid_lob2_write",
        "function.cubrid-lob2-write.php",
        "Write to a lob object"
    ],
    "cubridlobclose": [
        "cubrid_lob_close",
        "function.cubrid-lob-close.php",
        "Close BLOB/CLOB data"
    ],
    "cubridlobexport": [
        "cubrid_lob_export",
        "function.cubrid-lob-export.php",
        "Export BLOB/CLOB data to file"
    ],
    "cubridlobget": [
        "cubrid_lob_get",
        "function.cubrid-lob-get.php",
        "Get BLOB/CLOB data"
    ],
    "cubridlobsend": [
        "cubrid_lob_send",
        "function.cubrid-lob-send.php",
        "Read BLOB/CLOB data and send straight to browser"
    ],
    "cubridlobsize": [
        "cubrid_lob_size",
        "function.cubrid-lob-size.php",
        "Get BLOB/CLOB data size"
    ],
    "cubridlockread": [
        "cubrid_lock_read",
        "function.cubrid-lock-read.php",
        "Set a read lock on the given OID"
    ],
    "cubridlockwrite": [
        "cubrid_lock_write",
        "function.cubrid-lock-write.php",
        "Set a write lock on the given OID"
    ],
    "cubridmovecursor": [
        "cubrid_move_cursor",
        "function.cubrid-move-cursor.php",
        "Move the cursor in the result"
    ],
    "cubridnewglo": [
        "cubrid_new_glo",
        "function.cubrid-new-glo.php",
        "Create a glo instance"
    ],
    "cubridnextresult": [
        "cubrid_next_result",
        "function.cubrid-next-result.php",
        "Get result of next query when executing multiple SQL statements"
    ],
    "cubridnumcols": [
        "cubrid_num_cols",
        "function.cubrid-num-cols.php",
        "Return the number of columns in the result set"
    ],
    "cubridnumfields": [
        "cubrid_num_fields",
        "function.cubrid-num-fields.php",
        "Return the number of columns in the result set"
    ],
    "cubridnumrows": [
        "cubrid_num_rows",
        "function.cubrid-num-rows.php",
        "Get the number of rows in the result set"
    ],
    "cubridpconnect": [
        "cubrid_pconnect",
        "function.cubrid-pconnect.php",
        "Open a persistent connection to a CUBRID server"
    ],
    "cubridpconnectwithurl": [
        "cubrid_pconnect_with_url",
        "function.cubrid-pconnect-with-url.php",
        "Open a persistent connection to CUBRID server"
    ],
    "cubridping": [
        "cubrid_ping",
        "function.cubrid-ping.php",
        "Ping a server connection or reconnect if there is no connection"
    ],
    "cubridprepare": [
        "cubrid_prepare",
        "function.cubrid-prepare.php",
        "Prepare a SQL statement for execution"
    ],
    "cubridput": [
        "cubrid_put",
        "function.cubrid-put.php",
        "Update a column using OID"
    ],
    "cubridquery": [
        "cubrid_query",
        "function.cubrid-query.php",
        "Send a CUBRID query"
    ],
    "cubridrealescapestring": [
        "cubrid_real_escape_string",
        "function.cubrid-real-escape-string.php",
        "Escape special characters in a string for use in an SQL statement"
    ],
    "cubridresult": [
        "cubrid_result",
        "function.cubrid-result.php",
        "Return the value of a specific field in a specific row"
    ],
    "cubridrollback": [
        "cubrid_rollback",
        "function.cubrid-rollback.php",
        "Roll back a transaction"
    ],
    "cubridsavetoglo": [
        "cubrid_save_to_glo",
        "function.cubrid-save-to-glo.php",
        "Save requested file in a GLO instance"
    ],
    "cubridschema": [
        "cubrid_schema",
        "function.cubrid-schema.php",
        "Get the requested schema information"
    ],
    "cubridsendglo": [
        "cubrid_send_glo",
        "function.cubrid-send-glo.php",
        "Read data from glo and send it to std output"
    ],
    "cubridseqdrop": [
        "cubrid_seq_drop",
        "function.cubrid-seq-drop.php",
        "Delete an element from sequence type column using OID"
    ],
    "cubridseqinsert": [
        "cubrid_seq_insert",
        "function.cubrid-seq-insert.php",
        "Insert an element to a sequence type column using OID"
    ],
    "cubridseqput": [
        "cubrid_seq_put",
        "function.cubrid-seq-put.php",
        "Update the element value of sequence type column using OID"
    ],
    "cubridsetadd": [
        "cubrid_set_add",
        "function.cubrid-set-add.php",
        "Insert a single element to set type column using OID"
    ],
    "cubridsetautocommit": [
        "cubrid_set_autocommit",
        "function.cubrid-set-autocommit.php",
        "Set autocommit mode of the connection"
    ],
    "cubridsetdbparameter": [
        "cubrid_set_db_parameter",
        "function.cubrid-set-db-parameter.php",
        "Sets the CUBRID database parameters"
    ],
    "cubridsetdrop": [
        "cubrid_set_drop",
        "function.cubrid-set-drop.php",
        "Delete an element from set type column using OID"
    ],
    "cubridsetquerytimeout": [
        "cubrid_set_query_timeout",
        "function.cubrid-set-query-timeout.php",
        "Set the timeout time of query execution"
    ],
    "cubridunbufferedquery": [
        "cubrid_unbuffered_query",
        "function.cubrid-unbuffered-query.php",
        "Perform a query without fetching the results into memory"
    ],
    "cubridversion": [
        "cubrid_version",
        "function.cubrid-version.php",
        "Get the CUBRID PHP module's version"
    ],
    "CURLFilegetFilename": [
        "CURLFile::getFilename",
        "curlfile.getfilename.php",
        "ファイル名を取得する"
    ],
    "CURLFilegetMimeType": [
        "CURLFile::getMimeType",
        "curlfile.getmimetype.php",
        "MIME タイプを取得する"
    ],
    "CURLFilegetPostFilename": [
        "CURLFile::getPostFilename",
        "curlfile.getpostfilename.php",
        "POST 用のファイル名を取得する"
    ],
    "CURLFilesetMimeType": [
        "CURLFile::setMimeType",
        "curlfile.setmimetype.php",
        "MIME タイプを設定する"
    ],
    "CURLFilesetPostFilename": [
        "CURLFile::setPostFilename",
        "curlfile.setpostfilename.php",
        "POST 用のファイル名を設定する"
    ],
    "CURLFileconstruct": [
        "CURLFile::__construct",
        "curlfile.construct.php",
        "CURLFile オブジェクトを作る"
    ],
    "curlclose": [
        "curl_close",
        "function.curl-close.php",
        "cURL セッションを閉じる"
    ],
    "curlcopyhandle": [
        "curl_copy_handle",
        "function.curl-copy-handle.php",
        "cURL ハンドルを、その設定も含めてコピーする"
    ],
    "curlerrno": [
        "curl_errno",
        "function.curl-errno.php",
        "直近のエラー番号を返す"
    ],
    "curlerror": [
        "curl_error",
        "function.curl-error.php",
        "現在のセッションに関する直近のエラー文字列を返す"
    ],
    "curlescape": [
        "curl_escape",
        "function.curl-escape.php",
        "指定した文字列を URL エンコードする"
    ],
    "curlexec": [
        "curl_exec",
        "function.curl-exec.php",
        "cURL セッションを実行する"
    ],
    "curlgetinfo": [
        "curl_getinfo",
        "function.curl-getinfo.php",
        "指定した伝送に関する情報を得る"
    ],
    "curlinit": [
        "curl_init",
        "function.curl-init.php",
        "cURL セッションを初期化する"
    ],
    "curlmultiaddhandle": [
        "curl_multi_add_handle",
        "function.curl-multi-add-handle.php",
        "cURL マルチハンドルに、通常の cURL ハンドルを追加する"
    ],
    "curlmulticlose": [
        "curl_multi_close",
        "function.curl-multi-close.php",
        "cURL ハンドルのセットを閉じる"
    ],
    "curlmultierrno": [
        "curl_multi_errno",
        "function.curl-multi-errno.php",
        "直近のマルチハンドルに対するエラー番号を返す"
    ],
    "curlmultiexec": [
        "curl_multi_exec",
        "function.curl-multi-exec.php",
        "現在の cURL ハンドルから、サブ接続を実行する"
    ],
    "curlmultigetcontent": [
        "curl_multi_getcontent",
        "function.curl-multi-getcontent.php",
        "CURLOPT_RETURNTRANSFER が設定されている場合に、cURL ハンドルの内容を返す"
    ],
    "curlmultiinforead": [
        "curl_multi_info_read",
        "function.curl-multi-info-read.php",
        "現在の転送についての情報を表示する"
    ],
    "curlmultiinit": [
        "curl_multi_init",
        "function.curl-multi-init.php",
        "新規 cURL マルチハンドルを返す"
    ],
    "curlmultiremovehandle": [
        "curl_multi_remove_handle",
        "function.curl-multi-remove-handle.php",
        "cURL ハンドルのセットからマルチハンドルを削除する"
    ],
    "curlmultiselect": [
        "curl_multi_select",
        "function.curl-multi-select.php",
        "curl_multi 接続のアクティビティを待つ"
    ],
    "curlmultisetopt": [
        "curl_multi_setopt",
        "function.curl-multi-setopt.php",
        "cURL マルチハンドル用のオプションを設定する"
    ],
    "curlmultistrerror": [
        "curl_multi_strerror",
        "function.curl-multi-strerror.php",
        "エラーの内容を表す文字列を返す"
    ],
    "curlpause": [
        "curl_pause",
        "function.curl-pause.php",
        "接続の中断と再開をする"
    ],
    "curlreset": [
        "curl_reset",
        "function.curl-reset.php",
        "libcurl セッションハンドルのすべてのオプションをリセットする"
    ],
    "curlsetopt": [
        "curl_setopt",
        "function.curl-setopt.php",
        "cURL 転送用オプションを設定する"
    ],
    "curlsetoptarray": [
        "curl_setopt_array",
        "function.curl-setopt-array.php",
        "CURL 転送用の複数のオプションを設定する"
    ],
    "curlshareclose": [
        "curl_share_close",
        "function.curl-share-close.php",
        "cURL 共有ハンドルを閉じる"
    ],
    "curlshareerrno": [
        "curl_share_errno",
        "function.curl-share-errno.php",
        "直近の共有ハンドルに対するエラー番号を返す"
    ],
    "curlshareinit": [
        "curl_share_init",
        "function.curl-share-init.php",
        "curl 共有ハンドルを初期化する"
    ],
    "curlsharesetopt": [
        "curl_share_setopt",
        "function.curl-share-setopt.php",
        "cURL 共有ハンドルのオプションを設定する"
    ],
    "curlsharestrerror": [
        "curl_share_strerror",
        "function.curl-share-strerror.php",
        "与えられたエラーコードを説明する文字列を返す"
    ],
    "curlstrerror": [
        "curl_strerror",
        "function.curl-strerror.php",
        "エラーコードの説明を返す"
    ],
    "curlunescape": [
        "curl_unescape",
        "function.curl-unescape.php",
        "URL エンコードされた文字列をデコードする"
    ],
    "curlversion": [
        "curl_version",
        "function.curl-version.php",
        "cURL のバージョンを返す"
    ],
    "CURL": [
        "CURL コンテキストオプション",
        "context.curl.php",
        "CURL コンテキストオプションの一覧"
    ],
    "current": [
        "current",
        "function.current.php",
        "配列内の現在の要素を返す"
    ],
    "data": [
        "data://",
        "wrappers.data.php",
        "データ (RFC 2397)"
    ],
    "DatabaseObjectexistsInDatabase": [
        "DatabaseObject::existsInDatabase",
        "mysql-xdevapi-databaseobject.existsindatabase.php",
        "オブジェクトがデータベースに存在するかをチェックする"
    ],
    "DatabaseObjectgetName": [
        "DatabaseObject::getName",
        "mysql-xdevapi-databaseobject.getname.php",
        "オブジェクトの名前を取得する"
    ],
    "DatabaseObjectgetSession": [
        "DatabaseObject::getSession",
        "mysql-xdevapi-databaseobject.getsession.php",
        "セッションの名前を取得する"
    ],
    "date": [
        "date",
        "function.date.php",
        "ローカルの日付/時刻を書式化する"
    ],
    "DateIntervalcreateFromDateString": [
        "DateInterval::createFromDateString",
        "dateinterval.createfromdatestring.php",
        "相対指定文字列から DateInterval を作成する"
    ],
    "DateIntervalformat": [
        "DateInterval::format",
        "dateinterval.format.php",
        "間隔をフォーマットする"
    ],
    "DateIntervalconstruct": [
        "DateInterval::__construct",
        "dateinterval.construct.php",
        "新しい DateInterval オブジェクトを作成する"
    ],
    "DatePeriodgetDateInterval": [
        "DatePeriod::getDateInterval",
        "dateperiod.getdateinterval.php",
        "間隔を取得する"
    ],
    "DatePeriodgetEndDate": [
        "DatePeriod::getEndDate",
        "dateperiod.getenddate.php",
        "終了日を取得する"
    ],
    "DatePeriodgetRecurrences": [
        "DatePeriod::getRecurrences",
        "dateperiod.getrecurrences.php",
        "繰り返しの数を取得する"
    ],
    "DatePeriodgetStartDate": [
        "DatePeriod::getStartDate",
        "dateperiod.getstartdate.php",
        "開始日を取得する"
    ],
    "DatePeriodconstruct": [
        "DatePeriod::__construct",
        "dateperiod.construct.php",
        "新しい DatePeriod オブジェクトを作成する"
    ],
    "DateTimeadd": [
        "DateTime::add",
        "datetime.add.php",
        "年月日時分秒の値を DateTime オブジェクトに加える"
    ],
    "DateTimecreateFromFormat": [
        "DateTime::createFromFormat",
        "datetime.createfromformat.php",
        "指定した書式で時刻文字列をパースする"
    ],
    "DateTimecreateFromImmutable": [
        "DateTime::createFromImmutable",
        "datetime.createfromimmutable.php",
        "与えられた DateTimeImmutable オブジェクトをカプセル化した、新しい DateTime オブジェクトを返す"
    ],
    "DateTimediff": [
        "DateTime::diff",
        "datetime.diff.php",
        "ふたつの DateTime オブジェクトの差を返す"
    ],
    "DateTimeformat": [
        "DateTime::format",
        "datetime.format.php",
        "指定した書式でフォーマットした日付を返す"
    ],
    "DateTimegetLastErrors": [
        "DateTime::getLastErrors",
        "datetime.getlasterrors.php",
        "警告およびエラーを返す"
    ],
    "DateTimegetOffset": [
        "DateTime::getOffset",
        "datetime.getoffset.php",
        "タイムゾーンのオフセットを返す"
    ],
    "DateTimegetTimestamp": [
        "DateTime::getTimestamp",
        "datetime.gettimestamp.php",
        "Unix タイムスタンプを取得する"
    ],
    "DateTimegetTimezone": [
        "DateTime::getTimezone",
        "datetime.gettimezone.php",
        "指定した DateTime に関連するタイムゾーンを返す"
    ],
    "DateTimemodify": [
        "DateTime::modify",
        "datetime.modify.php",
        "タイムスタンプを変更する"
    ],
    "DateTimesetDate": [
        "DateTime::setDate",
        "datetime.setdate.php",
        "日付を設定する"
    ],
    "DateTimesetISODate": [
        "DateTime::setISODate",
        "datetime.setisodate.php",
        "ISO 日付を設定する"
    ],
    "DateTimesetTime": [
        "DateTime::setTime",
        "datetime.settime.php",
        "時刻を設定する"
    ],
    "DateTimesetTimestamp": [
        "DateTime::setTimestamp",
        "datetime.settimestamp.php",
        "Unix タイムスタンプを用いて日付と時刻を設定する"
    ],
    "DateTimesetTimezone": [
        "DateTime::setTimezone",
        "datetime.settimezone.php",
        "DateTime オブジェクトのタイムゾーンを設定する"
    ],
    "DateTimesub": [
        "DateTime::sub",
        "datetime.sub.php",
        "年月日時分秒の値を DateTime オブジェクトから引く"
    ],
    "DateTimeconstruct": [
        "DateTime::__construct",
        "datetime.construct.php",
        "新しい DateTime オブジェクトを返す"
    ],
    "DateTimesetstate": [
        "DateTime::__set_state",
        "datetime.set-state.php",
        "__set_state ハンドラ"
    ],
    "DateTimewakeup": [
        "DateTime::__wakeup",
        "datetime.wakeup.php",
        "__wakeup ハンドラ"
    ],
    "DateTimeImmutableadd": [
        "DateTimeImmutable::add",
        "datetimeimmutable.add.php",
        "年月日時分秒の値を加える"
    ],
    "DateTimeImmutablecreateFromFormat": [
        "DateTimeImmutable::createFromFormat",
        "datetimeimmutable.createfromformat.php",
        "時刻の文字列を指定されたフォーマットに従ってパースする"
    ],
    "DateTimeImmutablecreateFromMutable": [
        "DateTimeImmutable::createFromMutable",
        "datetimeimmutable.createfrommutable.php",
        "与えられた DateTime オブジェクトをカプセル化した、新しいDateTimeImmutable オブジェクトを返す"
    ],
    "DateTimeImmutablegetLastErrors": [
        "DateTimeImmutable::getLastErrors",
        "datetimeimmutable.getlasterrors.php",
        "警告およびエラーを返す"
    ],
    "DateTimeImmutablemodify": [
        "DateTimeImmutable::modify",
        "datetimeimmutable.modify.php",
        "タイムスタンプを変更した新しいオブジェクトを作る"
    ],
    "DateTimeImmutablesetDate": [
        "DateTimeImmutable::setDate",
        "datetimeimmutable.setdate.php",
        "日付を設定する"
    ],
    "DateTimeImmutablesetISODate": [
        "DateTimeImmutable::setISODate",
        "datetimeimmutable.setisodate.php",
        "ISO 日付を設定する"
    ],
    "DateTimeImmutablesetTime": [
        "DateTimeImmutable::setTime",
        "datetimeimmutable.settime.php",
        "時刻を設定する"
    ],
    "DateTimeImmutablesetTimestamp": [
        "DateTimeImmutable::setTimestamp",
        "datetimeimmutable.settimestamp.php",
        "Unix タイムスタンプを用いて日付と時刻を設定する"
    ],
    "DateTimeImmutablesetTimezone": [
        "DateTimeImmutable::setTimezone",
        "datetimeimmutable.settimezone.php",
        "タイムゾーンを設定する"
    ],
    "DateTimeImmutablesub": [
        "DateTimeImmutable::sub",
        "datetimeimmutable.sub.php",
        "年月日時分秒の値を引く"
    ],
    "DateTimeImmutableconstruct": [
        "DateTimeImmutable::__construct",
        "datetimeimmutable.construct.php",
        "新しい DateTimeImmutable オブジェクトを返す"
    ],
    "DateTimeImmutablesetstate": [
        "DateTimeImmutable::__set_state",
        "datetimeimmutable.set-state.php",
        "__set_state ハンドラ"
    ],
    "DateTimeZonegetLocation": [
        "DateTimeZone::getLocation",
        "datetimezone.getlocation.php",
        "タイムゾーンの位置情報を返す"
    ],
    "DateTimeZonegetName": [
        "DateTimeZone::getName",
        "datetimezone.getname.php",
        "タイムゾーンの名前を返す"
    ],
    "DateTimeZonegetOffset": [
        "DateTimeZone::getOffset",
        "datetimezone.getoffset.php",
        "GMT からのタイムゾーンのオフセットを返す"
    ],
    "DateTimeZonegetTransitions": [
        "DateTimeZone::getTransitions",
        "datetimezone.gettransitions.php",
        "タイムゾーンの変遷を返す"
    ],
    "DateTimeZonelistAbbreviations": [
        "DateTimeZone::listAbbreviations",
        "datetimezone.listabbreviations.php",
        "夏時間、オフセットおよびタイムゾーン名を含む連想配列を返す"
    ],
    "DateTimeZonelistIdentifiers": [
        "DateTimeZone::listIdentifiers",
        "datetimezone.listidentifiers.php",
        "すべてのタイムゾーン識別子を含む配列を返す"
    ],
    "DateTimeZoneconstruct": [
        "DateTimeZone::__construct",
        "datetimezone.construct.php",
        "新しい DateTimeZone オブジェクトを作成する"
    ],
    "dateadd": [
        "date_add",
        "function.date-add.php",
        "DateTime::add のエイリアス"
    ],
    "datecreate": [
        "date_create",
        "function.date-create.php",
        "DateTime::__construct のエイリアス"
    ],
    "datecreatefromformat": [
        "date_create_from_format",
        "function.date-create-from-format.php",
        "DateTime::createFromFormat のエイリアス"
    ],
    "datecreateimmutable": [
        "date_create_immutable",
        "function.date-create-immutable.php",
        "DateTimeImmutable::__construct のエイリアス"
    ],
    "datecreateimmutablefromformat": [
        "date_create_immutable_from_format",
        "function.date-create-immutable-from-format.php",
        "DateTimeImmutable::createFromFormat のエイリアス"
    ],
    "datedateset": [
        "date_date_set",
        "function.date-date-set.php",
        "DateTime::setDate のエイリアス"
    ],
    "datedefaulttimezoneget": [
        "date_default_timezone_get",
        "function.date-default-timezone-get.php",
        "スクリプト中の日付/時刻関数で使用されるデフォルトタイムゾーンを取得する"
    ],
    "datedefaulttimezoneset": [
        "date_default_timezone_set",
        "function.date-default-timezone-set.php",
        "スクリプト中の日付/時刻関数で使用されるデフォルトタイムゾーンを設定する"
    ],
    "datediff": [
        "date_diff",
        "function.date-diff.php",
        "DateTime::diff のエイリアス"
    ],
    "dateformat": [
        "date_format",
        "function.date-format.php",
        "DateTime::format のエイリアス"
    ],
    "dategetlasterrors": [
        "date_get_last_errors",
        "function.date-get-last-errors.php",
        "DateTime::getLastErrors のエイリアス"
    ],
    "dateintervalcreatefromdatestring": [
        "date_interval_create_from_date_string",
        "function.date-interval-create-from-date-string.php",
        "DateInterval::createFromDateString のエイリアス"
    ],
    "dateintervalformat": [
        "date_interval_format",
        "function.date-interval-format.php",
        "DateInterval::format のエイリアス"
    ],
    "dateisodateset": [
        "date_isodate_set",
        "function.date-isodate-set.php",
        "DateTime::setISODate のエイリアス"
    ],
    "datemodify": [
        "date_modify",
        "function.date-modify.php",
        "DateTime::modify のエイリアス"
    ],
    "dateoffsetget": [
        "date_offset_get",
        "function.date-offset-get.php",
        "DateTime::getOffset のエイリアス"
    ],
    "dateparse": [
        "date_parse",
        "function.date-parse.php",
        "指定した日付/時刻の詳細な情報を連想配列で返す"
    ],
    "dateparsefromformat": [
        "date_parse_from_format",
        "function.date-parse-from-format.php",
        "指定した書式でフォーマットされた日付についての情報を取得する"
    ],
    "datesub": [
        "date_sub",
        "function.date-sub.php",
        "DateTime::sub のエイリアス"
    ],
    "datesunrise": [
        "date_sunrise",
        "function.date-sunrise.php",
        "指定した日付と場所についての日の出時刻を返す"
    ],
    "datesunset": [
        "date_sunset",
        "function.date-sunset.php",
        "指定した日付と場所についての日の入り時刻を返す"
    ],
    "datesuninfo": [
        "date_sun_info",
        "function.date-sun-info.php",
        "日の出/日の入り時刻と薄明かり (twilight) の開始/終了時刻の情報を含む配列を返す"
    ],
    "datetimestampget": [
        "date_timestamp_get",
        "function.date-timestamp-get.php",
        "DateTime::getTimestamp のエイリアス"
    ],
    "datetimestampset": [
        "date_timestamp_set",
        "function.date-timestamp-set.php",
        "DateTime::setTimestamp のエイリアス"
    ],
    "datetimezoneget": [
        "date_timezone_get",
        "function.date-timezone-get.php",
        "DateTime::getTimezone のエイリアス"
    ],
    "datetimezoneset": [
        "date_timezone_set",
        "function.date-timezone-set.php",
        "DateTime::setTimezone のエイリアス"
    ],
    "datetimeset": [
        "date_time_set",
        "function.date-time-set.php",
        "DateTime::setTime のエイリアス"
    ],
    "db2autocommit": [
        "db2_autocommit",
        "function.db2-autocommit.php",
        "データベース接続の AUTOCOMMIT の状態を取得または設定する"
    ],
    "db2bindparam": [
        "db2_bind_param",
        "function.db2-bind-param.php",
        "PHP 変数を SQL 文のパラメータにバインドする"
    ],
    "db2clientinfo": [
        "db2_client_info",
        "function.db2-client-info.php",
        "DB2 データベースクライアントの情報をプロパティに保持するオブジェクトを返す"
    ],
    "db2close": [
        "db2_close",
        "function.db2-close.php",
        "データベース接続を閉じる"
    ],
    "db2columns": [
        "db2_columns",
        "function.db2-columns.php",
        "テーブルのカラムおよび関連するメタデータを含む結果セットを返す"
    ],
    "db2columnprivileges": [
        "db2_column_privileges",
        "function.db2-column-privileges.php",
        "テーブルのカラムおよび関連する権限情報を含む結果セットを返す"
    ],
    "db2commit": [
        "db2_commit",
        "function.db2-commit.php",
        "トランザクションをコミットする"
    ],
    "db2connect": [
        "db2_connect",
        "function.db2-connect.php",
        "データベースへの接続を返す"
    ],
    "db2connerror": [
        "db2_conn_error",
        "function.db2-conn-error.php",
        "直近の接続から返された SQLSTATE を含む文字列を返す"
    ],
    "db2connerrormsg": [
        "db2_conn_errormsg",
        "function.db2-conn-errormsg.php",
        "直近の接続エラーメッセージおよび SQLCODE を返す"
    ],
    "db2cursortype": [
        "db2_cursor_type",
        "function.db2-cursor-type.php",
        "ステートメントリソースが使用しているカーソルの型を返す"
    ],
    "db2escapestring": [
        "db2_escape_string",
        "function.db2-escape-string.php",
        "特定の文字をエスケープする"
    ],
    "db2exec": [
        "db2_exec",
        "function.db2-exec.php",
        "SQL 文を直接実行する"
    ],
    "db2execute": [
        "db2_execute",
        "function.db2-execute.php",
        "プリペアドステートメントを実行する"
    ],
    "db2fetcharray": [
        "db2_fetch_array",
        "function.db2-fetch-array.php",
        "結果セット内の行を表す、カラム位置をインデックスとする配列を返す"
    ],
    "db2fetchassoc": [
        "db2_fetch_assoc",
        "function.db2-fetch-assoc.php",
        "結果セット内の行を表す、カラム名をインデックスとする配列を返す"
    ],
    "db2fetchobject": [
        "db2_fetch_object",
        "function.db2-fetch-object.php",
        "結果セット内の行を表す、カラムをプロパティとするオブジェクトを返す"
    ],
    "db2fetchrow": [
        "db2_fetch_row",
        "function.db2-fetch-row.php",
        "結果セットポインタを次の行あるいは要求された行に設定する"
    ],
    "db2fielddisplaysize": [
        "db2_field_display_size",
        "function.db2-field-display-size.php",
        "カラムを表示するために必要な最大のバイト数を返す"
    ],
    "db2fieldname": [
        "db2_field_name",
        "function.db2-field-name.php",
        "結果セット内のカラムの名前を返す"
    ],
    "db2fieldnum": [
        "db2_field_num",
        "function.db2-field-num.php",
        "結果セット内の指定したカラムの位置を返す"
    ],
    "db2fieldprecision": [
        "db2_field_precision",
        "function.db2-field-precision.php",
        "結果セット内の指定したカラムの精度を返す"
    ],
    "db2fieldscale": [
        "db2_field_scale",
        "function.db2-field-scale.php",
        "結果セット内の指定したカラムの位取りを返す"
    ],
    "db2fieldtype": [
        "db2_field_type",
        "function.db2-field-type.php",
        "結果セット内の指定したカラムのデータ型を返す"
    ],
    "db2fieldwidth": [
        "db2_field_width",
        "function.db2-field-width.php",
        "結果セット内の指定したカラムの現在値の幅を返す"
    ],
    "db2foreignkeys": [
        "db2_foreign_keys",
        "function.db2-foreign-keys.php",
        "テーブルの外部キーを含む結果セットを返す"
    ],
    "db2freeresult": [
        "db2_free_result",
        "function.db2-free-result.php",
        "結果セットに関連付けられたリソースを開放する"
    ],
    "db2freestmt": [
        "db2_free_stmt",
        "function.db2-free-stmt.php",
        "指定されたステートメントリソースに関連付けられたリソースを開放する"
    ],
    "db2getoption": [
        "db2_get_option",
        "function.db2-get-option.php",
        "ステートメントリソースあるいは接続リソースからオプションの値を取得する"
    ],
    "db2lastinsertid": [
        "db2_last_insert_id",
        "function.db2-last-insert-id.php",
        "この接続上で最後に成功した insert クエリが自動生成した ID を返す"
    ],
    "db2lobread": [
        "db2_lob_read",
        "function.db2-lob-read.php",
        "LOB ファイルから、ユーザーが定義したサイズの内容を取得する"
    ],
    "db2nextresult": [
        "db2_next_result",
        "function.db2-next-result.php",
        "ストアドプロシージャから、次の結果セットを要求する"
    ],
    "db2numfields": [
        "db2_num_fields",
        "function.db2-num-fields.php",
        "結果セットに含まれるフィールドの数を返す"
    ],
    "db2numrows": [
        "db2_num_rows",
        "function.db2-num-rows.php",
        "SQL 文によって変更された行の数を返す"
    ],
    "db2pclose": [
        "db2_pclose",
        "function.db2-pclose.php",
        "持続的データベース接続を閉じる"
    ],
    "db2pconnect": [
        "db2_pconnect",
        "function.db2-pconnect.php",
        "データベースへの持続的接続を返す"
    ],
    "db2prepare": [
        "db2_prepare",
        "function.db2-prepare.php",
        "実行する SQL 文を準備する"
    ],
    "db2primarykeys": [
        "db2_primary_keys",
        "function.db2-primary-keys.php",
        "テーブルの主キーを含む結果セットを返す"
    ],
    "db2procedures": [
        "db2_procedures",
        "function.db2-procedures.php",
        "データベース内に登録されているストアドプロシージャの一覧を含む結果セットを返す"
    ],
    "db2procedurecolumns": [
        "db2_procedure_columns",
        "function.db2-procedure-columns.php",
        "ストアドプロシージャのパラメータを含む結果セットを返す"
    ],
    "db2result": [
        "db2_result",
        "function.db2-result.php",
        "結果セットの行からひとつのカラムを返す"
    ],
    "db2rollback": [
        "db2_rollback",
        "function.db2-rollback.php",
        "トランザクションをロールバックする"
    ],
    "db2serverinfo": [
        "db2_server_info",
        "function.db2-server-info.php",
        "DB2 データベースサーバーの情報をプロパティに保持するオブジェクトを返す"
    ],
    "db2setoption": [
        "db2_set_option",
        "function.db2-set-option.php",
        "接続リソースあるいはステートメントリソースのオプションを設定する"
    ],
    "db2specialcolumns": [
        "db2_special_columns",
        "function.db2-special-columns.php",
        "テーブルのユニーク行 ID カラムを含む結果セットを返す"
    ],
    "db2statistics": [
        "db2_statistics",
        "function.db2-statistics.php",
        "インデックスの情報およびテーブルの統計情報を含む結果セットを返す"
    ],
    "db2stmterror": [
        "db2_stmt_error",
        "function.db2-stmt-error.php",
        "SQL 文が返す SQLSTATE を含む文字列を返す"
    ],
    "db2stmterrormsg": [
        "db2_stmt_errormsg",
        "function.db2-stmt-errormsg.php",
        "直近の SQL 文のエラーメッセージを含む文字列を返す"
    ],
    "db2tables": [
        "db2_tables",
        "function.db2-tables.php",
        "データベース内のテーブルおよび関連するメタデータを含む結果セットを返す"
    ],
    "db2tableprivileges": [
        "db2_table_privileges",
        "function.db2-table-privileges.php",
        "データベース内のテーブルおよび関連する権限情報を含む結果セットを返す"
    ],
    "dbaseaddrecord": [
        "dbase_add_record",
        "function.dbase-add-record.php",
        "Adds a record to a database"
    ],
    "dbaseclose": [
        "dbase_close",
        "function.dbase-close.php",
        "Closes a database"
    ],
    "dbasecreate": [
        "dbase_create",
        "function.dbase-create.php",
        "Creates a database"
    ],
    "dbasedeleterecord": [
        "dbase_delete_record",
        "function.dbase-delete-record.php",
        "Deletes a record from a database"
    ],
    "dbasegetheaderinfo": [
        "dbase_get_header_info",
        "function.dbase-get-header-info.php",
        "Gets the header info of a database"
    ],
    "dbasegetrecord": [
        "dbase_get_record",
        "function.dbase-get-record.php",
        "Gets a record from a database as an indexed array"
    ],
    "dbasegetrecordwithnames": [
        "dbase_get_record_with_names",
        "function.dbase-get-record-with-names.php",
        "Gets a record from a database as an associative array"
    ],
    "dbasenumfields": [
        "dbase_numfields",
        "function.dbase-numfields.php",
        "Gets the number of fields of a database"
    ],
    "dbasenumrecords": [
        "dbase_numrecords",
        "function.dbase-numrecords.php",
        "Gets the number of records in a database"
    ],
    "dbaseopen": [
        "dbase_open",
        "function.dbase-open.php",
        "Opens a database"
    ],
    "dbasepack": [
        "dbase_pack",
        "function.dbase-pack.php",
        "Packs a database"
    ],
    "dbasereplacerecord": [
        "dbase_replace_record",
        "function.dbase-replace-record.php",
        "Replaces a record in a database"
    ],
    "dbaclose": [
        "dba_close",
        "function.dba-close.php",
        "DBA データベースを閉じる"
    ],
    "dbadelete": [
        "dba_delete",
        "function.dba-delete.php",
        "キーが指す DBA エントリを削除する"
    ],
    "dbaexists": [
        "dba_exists",
        "function.dba-exists.php",
        "キーが存在するかどうかを確認する"
    ],
    "dbafetch": [
        "dba_fetch",
        "function.dba-fetch.php",
        "キーが指すデータを取得する"
    ],
    "dbafirstkey": [
        "dba_firstkey",
        "function.dba-firstkey.php",
        "最初のキーを取得する"
    ],
    "dbahandlers": [
        "dba_handlers",
        "function.dba-handlers.php",
        "利用可能なハンドラの一覧を得る"
    ],
    "dbainsert": [
        "dba_insert",
        "function.dba-insert.php",
        "エントリを挿入する"
    ],
    "dbakeysplit": [
        "dba_key_split",
        "function.dba-key-split.php",
        "文字列形式のキーを配列形式に分割する"
    ],
    "dbalist": [
        "dba_list",
        "function.dba-list.php",
        "オープンされている全データベースファイルのリストを得る"
    ],
    "dbanextkey": [
        "dba_nextkey",
        "function.dba-nextkey.php",
        "次のキーを取得する"
    ],
    "dbaopen": [
        "dba_open",
        "function.dba-open.php",
        "データベースをオープンする"
    ],
    "dbaoptimize": [
        "dba_optimize",
        "function.dba-optimize.php",
        "データベースを最適化する"
    ],
    "dbapopen": [
        "dba_popen",
        "function.dba-popen.php",
        "データベースを持続的にオープンする"
    ],
    "dbareplace": [
        "dba_replace",
        "function.dba-replace.php",
        "エントリを置換または挿入する"
    ],
    "dbasync": [
        "dba_sync",
        "function.dba-sync.php",
        "データベースを同期する"
    ],
    "dbplusadd": [
        "dbplus_add",
        "function.dbplus-add.php",
        "リレーションにタプルを追加する"
    ],
    "dbplusaql": [
        "dbplus_aql",
        "function.dbplus-aql.php",
        "AQL クエリを実行する"
    ],
    "dbpluschdir": [
        "dbplus_chdir",
        "function.dbplus-chdir.php",
        "データベース仮想カレントディレクトリを設定/取得する"
    ],
    "dbplusclose": [
        "dbplus_close",
        "function.dbplus-close.php",
        "リレーションを閉じる"
    ],
    "dbpluscurr": [
        "dbplus_curr",
        "function.dbplus-curr.php",
        "リレーションからカレントタプルを取得する"
    ],
    "dbpluserrcode": [
        "dbplus_errcode",
        "function.dbplus-errcode.php",
        "指定したエラーコードまたは直近のエラーに関するエラー文字列を取得する"
    ],
    "dbpluserrno": [
        "dbplus_errno",
        "function.dbplus-errno.php",
        "直近の操作に関するエラーコードを取得する"
    ],
    "dbplusfind": [
        "dbplus_find",
        "function.dbplus-find.php",
        "リレーションに拘束を設定する"
    ],
    "dbplusfirst": [
        "dbplus_first",
        "function.dbplus-first.php",
        "リレーションから最初のタプルを取得する"
    ],
    "dbplusflush": [
        "dbplus_flush",
        "function.dbplus-flush.php",
        "リレーションに行った全ての変更をフラッシュする"
    ],
    "dbplusfreealllocks": [
        "dbplus_freealllocks",
        "function.dbplus-freealllocks.php",
        "このクライアントにより保持された全てのロックを解放する"
    ],
    "dbplusfreelock": [
        "dbplus_freelock",
        "function.dbplus-freelock.php",
        "タプルの書き込みロックを解放する"
    ],
    "dbplusfreerlocks": [
        "dbplus_freerlocks",
        "function.dbplus-freerlocks.php",
        "指定したリレーションに関する全てのタプルロックを解放する"
    ],
    "dbplusgetlock": [
        "dbplus_getlock",
        "function.dbplus-getlock.php",
        "タプルの書き込みロックを取得する"
    ],
    "dbplusgetunique": [
        "dbplus_getunique",
        "function.dbplus-getunique.php",
        "あるリレーションのユニークな ID 番号を取得する"
    ],
    "dbplusinfo": [
        "dbplus_info",
        "function.dbplus-info.php",
        "リレーションについての情報を取得する"
    ],
    "dbpluslast": [
        "dbplus_last",
        "function.dbplus-last.php",
        "リレーションから直近のタプルを取得する"
    ],
    "dbpluslockrel": [
        "dbplus_lockrel",
        "function.dbplus-lockrel.php",
        "リレーションに書き込みロックを要求する"
    ],
    "dbplusnext": [
        "dbplus_next",
        "function.dbplus-next.php",
        "リレーションから次のタプルを取得する"
    ],
    "dbplusopen": [
        "dbplus_open",
        "function.dbplus-open.php",
        "リレーションファイルをオープンする"
    ],
    "dbplusprev": [
        "dbplus_prev",
        "function.dbplus-prev.php",
        "リレーションから前のタプルを取得する"
    ],
    "dbplusrchperm": [
        "dbplus_rchperm",
        "function.dbplus-rchperm.php",
        "リレーションの許可属性を変更する"
    ],
    "dbplusrcreate": [
        "dbplus_rcreate",
        "function.dbplus-rcreate.php",
        "新しい DB++ リレーションを作成する"
    ],
    "dbplusrcrtexact": [
        "dbplus_rcrtexact",
        "function.dbplus-rcrtexact.php",
        "インデックスを含む、リレーションの空のコピーを作成する"
    ],
    "dbplusrcrtlike": [
        "dbplus_rcrtlike",
        "function.dbplus-rcrtlike.php",
        "デフォルトのインデックスで、リレーションの空のコピーを作成する"
    ],
    "dbplusresolve": [
        "dbplus_resolve",
        "function.dbplus-resolve.php",
        "リレーションのホスト情報を取得する"
    ],
    "dbplusrestorepos": [
        "dbplus_restorepos",
        "function.dbplus-restorepos.php",
        "位置を復元する"
    ],
    "dbplusrkeys": [
        "dbplus_rkeys",
        "function.dbplus-rkeys.php",
        "リレーションの主キーを新規に指定する"
    ],
    "dbplusropen": [
        "dbplus_ropen",
        "function.dbplus-ropen.php",
        "リレーションファイルをローカルにオープンする"
    ],
    "dbplusrquery": [
        "dbplus_rquery",
        "function.dbplus-rquery.php",
        "ローカル (raw) AQL クエリを実行する"
    ],
    "dbplusrrename": [
        "dbplus_rrename",
        "function.dbplus-rrename.php",
        "リレーションの名前を変更する"
    ],
    "dbplusrsecindex": [
        "dbplus_rsecindex",
        "function.dbplus-rsecindex.php",
        "リレーションに新規セカンダリインデックスを作成する"
    ],
    "dbplusrunlink": [
        "dbplus_runlink",
        "function.dbplus-runlink.php",
        "ファイルシステムからリレーションを削除する"
    ],
    "dbplusrzap": [
        "dbplus_rzap",
        "function.dbplus-rzap.php",
        "リレーションから全てのタプルを削除する"
    ],
    "dbplussavepos": [
        "dbplus_savepos",
        "function.dbplus-savepos.php",
        "位置を保存する"
    ],
    "dbplussetindex": [
        "dbplus_setindex",
        "function.dbplus-setindex.php",
        "インデックスを設定する"
    ],
    "dbplussetindexbynumber": [
        "dbplus_setindexbynumber",
        "function.dbplus-setindexbynumber.php",
        "インデックスを数字で設定する"
    ],
    "dbplussql": [
        "dbplus_sql",
        "function.dbplus-sql.php",
        "SQL クエリを実行する"
    ],
    "dbplustcl": [
        "dbplus_tcl",
        "function.dbplus-tcl.php",
        "サーバー側で TCL コードを実行する"
    ],
    "dbplustremove": [
        "dbplus_tremove",
        "function.dbplus-tremove.php",
        "タプルを削除し、新規カレントタプルを返す"
    ],
    "dbplusundo": [
        "dbplus_undo",
        "function.dbplus-undo.php",
        "元に戻す"
    ],
    "dbplusundoprepare": [
        "dbplus_undoprepare",
        "function.dbplus-undoprepare.php",
        "元に戻す準備をする"
    ],
    "dbplusunlockrel": [
        "dbplus_unlockrel",
        "function.dbplus-unlockrel.php",
        "リレーションの書き込みロックを中断する"
    ],
    "dbplusunselect": [
        "dbplus_unselect",
        "function.dbplus-unselect.php",
        "リレーションから制約を削除する"
    ],
    "dbplusupdate": [
        "dbplus_update",
        "function.dbplus-update.php",
        "リレーション内の指定したタプルを更新する"
    ],
    "dbplusxlockrel": [
        "dbplus_xlockrel",
        "function.dbplus-xlockrel.php",
        "リレーションの排他的ロックを要求する"
    ],
    "dbplusxunlockrel": [
        "dbplus_xunlockrel",
        "function.dbplus-xunlockrel.php",
        "リレーションの排他的ロックを解放する"
    ],
    "dbxclose": [
        "dbx_close",
        "function.dbx-close.php",
        "オープンされた接続/データベースを閉じる"
    ],
    "dbxcompare": [
        "dbx_compare",
        "function.dbx-compare.php",
        "ソートするために二つのレコードを比較する"
    ],
    "dbxconnect": [
        "dbx_connect",
        "function.dbx-connect.php",
        "接続/データベースをオープンする"
    ],
    "dbxerror": [
        "dbx_error",
        "function.dbx-error.php",
        "使用するモジュールの最新の関数コールにおけるエラーメッセージを出力する"
    ],
    "dbxescapestring": [
        "dbx_escape_string",
        "function.dbx-escape-string.php",
        "SQL ステートメントで安全に使用できるように文字列をエスケープする"
    ],
    "dbxquery": [
        "dbx_query",
        "function.dbx-query.php",
        "クエリを送信し、(ある場合には)結果を全て取得する"
    ],
    "dbxsort": [
        "dbx_sort",
        "function.dbx-sort.php",
        "カスタマイズされたソート関数により、dbx_query から結果をソートする"
    ],
    "dcgettext": [
        "dcgettext",
        "function.dcgettext.php",
        "単一の参照に関するドメインを上書きする"
    ],
    "dcngettext": [
        "dcngettext",
        "function.dcngettext.php",
        "dcgettext の複数形版"
    ],
    "debugbacktrace": [
        "debug_backtrace",
        "function.debug-backtrace.php",
        "バックトレースを生成する"
    ],
    "debugprintbacktrace": [
        "debug_print_backtrace",
        "function.debug-print-backtrace.php",
        "バックトレースを表示する"
    ],
    "debugzvaldump": [
        "debug_zval_dump",
        "function.debug-zval-dump.php",
        "内部的な Zend の値を表す文字列をダンプする"
    ],
    "decbin": [
        "decbin",
        "function.decbin.php",
        "10 進数を 2 進数に変換する"
    ],
    "dechex": [
        "dechex",
        "function.dechex.php",
        "10 進数を 16 進数に変換する"
    ],
    "decoct": [
        "decoct",
        "function.decoct.php",
        "10 進数を 8 進数に変換する"
    ],
    "define": [
        "define",
        "function.define.php",
        "名前を指定して定数を定義する"
    ],
    "defined": [
        "defined",
        "function.defined.php",
        "指定した名前の定数が存在するかどうかを調べる"
    ],
    "definesyslogvariables": [
        "define_syslog_variables",
        "function.define-syslog-variables.php",
        "syslog に関係する全ての定数を初期化する"
    ],
    "deflateadd": [
        "deflate_add",
        "function.deflate-add.php",
        "インクリメンタルにデータを圧縮する"
    ],
    "deflateinit": [
        "deflate_init",
        "function.deflate-init.php",
        "インクリメンタルな圧縮コンテキストを初期化する"
    ],
    "deg2rad": [
        "deg2rad",
        "function.deg2rad.php",
        "度単位の数値をラジアン単位に変換する"
    ],
    "delete": [
        "delete",
        "function.delete.php",
        "unlink か unset を参照してください"
    ],
    "dgettext": [
        "dgettext",
        "function.dgettext.php",
        "現在のドメインを上書きする"
    ],
    "die": [
        "die",
        "function.die.php",
        "exit と同等"
    ],
    "dioclose": [
        "dio_close",
        "function.dio-close.php",
        "fd で指定したファイル記述子を閉じる"
    ],
    "diofcntl": [
        "dio_fcntl",
        "function.dio-fcntl.php",
        "fd について C ライブラリの fcntl を実行する"
    ],
    "dioread": [
        "dio_read",
        "function.dio-read.php",
        "ファイル記述子からバイトデータを読み込む"
    ],
    "dioseek": [
        "dio_seek",
        "function.dio-seek.php",
        "fd 上で whence から pos に移動する"
    ],
    "diostat": [
        "dio_stat",
        "function.dio-stat.php",
        "ファイル記述子 fd に関する stat 情報を取得する"
    ],
    "diotcsetattr": [
        "dio_tcsetattr",
        "function.dio-tcsetattr.php",
        "シリアルポートの端末属性とボーレートを設定する"
    ],
    "diotruncate": [
        "dio_truncate",
        "function.dio-truncate.php",
        "ファイル記述子 fd をオフセットバイトへ丸める"
    ],
    "diowrite": [
        "dio_write",
        "function.dio-write.php",
        "オプションで丸め長さを指定してデータを書き込む"
    ],
    "dir": [
        "dir",
        "function.dir.php",
        "ディレクトリクラスのインスタンスを返す"
    ],
    "Directoryclose": [
        "Directory::close",
        "directory.close.php",
        "ディレクトリハンドルをクローズする"
    ],
    "Directoryread": [
        "Directory::read",
        "directory.read.php",
        "ディレクトリハンドルからエントリを読み込む"
    ],
    "Directoryrewind": [
        "Directory::rewind",
        "directory.rewind.php",
        "ディレクトリハンドルを元に戻す"
    ],
    "DirectoryIteratorcurrent": [
        "DirectoryIterator::current",
        "directoryiterator.current.php",
        "現在の DirectoryIterator アイテムを返す"
    ],
    "DirectoryIteratorgetATime": [
        "DirectoryIterator::getATime",
        "directoryiterator.getatime.php",
        "現在の DirectoryIterator アイテムの最終アクセス時刻を取得する"
    ],
    "DirectoryIteratorgetBasename": [
        "DirectoryIterator::getBasename",
        "directoryiterator.getbasename.php",
        "現在の DirectoryIterator のアイテムのベース名を取得する"
    ],
    "DirectoryIteratorgetCTime": [
        "DirectoryIterator::getCTime",
        "directoryiterator.getctime.php",
        "現在の DirectoryIterator アイテムの inode 修正時刻を取得する"
    ],
    "DirectoryIteratorgetExtension": [
        "DirectoryIterator::getExtension",
        "directoryiterator.getextension.php",
        "ファイルの拡張子を取得する"
    ],
    "DirectoryIteratorgetFilename": [
        "DirectoryIterator::getFilename",
        "directoryiterator.getfilename.php",
        "現在の DirectoryIterator アイテムのファイル名を返す"
    ],
    "DirectoryIteratorgetGroup": [
        "DirectoryIterator::getGroup",
        "directoryiterator.getgroup.php",
        "現在の DirectoryIterator アイテムのグループを取得する"
    ],
    "DirectoryIteratorgetInode": [
        "DirectoryIterator::getInode",
        "directoryiterator.getinode.php",
        "現在の DirectoryIterator アイテムの inode を取得する"
    ],
    "DirectoryIteratorgetMTime": [
        "DirectoryIterator::getMTime",
        "directoryiterator.getmtime.php",
        "現在の DirectoryIterator アイテムの最終修正時刻を取得する"
    ],
    "DirectoryIteratorgetOwner": [
        "DirectoryIterator::getOwner",
        "directoryiterator.getowner.php",
        "現在の DirectoryIterator アイテムの所有者を取得する"
    ],
    "DirectoryIteratorgetPath": [
        "DirectoryIterator::getPath",
        "directoryiterator.getpath.php",
        "現在の Iterator アイテムのパスをファイル名抜きで返す"
    ],
    "DirectoryIteratorgetPathname": [
        "DirectoryIterator::getPathname",
        "directoryiterator.getpathname.php",
        "現在の DirectoryIterator アイテムのパスとファイル名を返す"
    ],
    "DirectoryIteratorgetPerms": [
        "DirectoryIterator::getPerms",
        "directoryiterator.getperms.php",
        "現在の DirectoryIterator アイテムのパーミッションを取得する"
    ],
    "DirectoryIteratorgetSize": [
        "DirectoryIterator::getSize",
        "directoryiterator.getsize.php",
        "現在の DirectoryIterator アイテムのサイズを取得する"
    ],
    "DirectoryIteratorgetType": [
        "DirectoryIterator::getType",
        "directoryiterator.gettype.php",
        "現在の DirectoryIterator アイテムのタイプを判定する"
    ],
    "DirectoryIteratorisDir": [
        "DirectoryIterator::isDir",
        "directoryiterator.isdir.php",
        "現在の DirectoryIterator アイテムがディレクトリであるかどうかを調べる"
    ],
    "DirectoryIteratorisDot": [
        "DirectoryIterator::isDot",
        "directoryiterator.isdot.php",
        "現在の DirectoryIterator アイテムが '.' もしくは '..' であるかどうかを調べる"
    ],
    "DirectoryIteratorisExecutable": [
        "DirectoryIterator::isExecutable",
        "directoryiterator.isexecutable.php",
        "現在の DirectoryIterator アイテムが実行可能であるかどうかを調べる"
    ],
    "DirectoryIteratorisFile": [
        "DirectoryIterator::isFile",
        "directoryiterator.isfile.php",
        "現在の DirectoryIterator アイテムが通常のファイルであるかどうかを調べる"
    ],
    "DirectoryIteratorisLink": [
        "DirectoryIterator::isLink",
        "directoryiterator.islink.php",
        "現在の DirectoryIterator アイテムがシンボリックリンクであるかどうかを調べる"
    ],
    "DirectoryIteratorisReadable": [
        "DirectoryIterator::isReadable",
        "directoryiterator.isreadable.php",
        "現在の DirectoryIterator アイテムが読込可能であるかどうかを調べる"
    ],
    "DirectoryIteratorisWritable": [
        "DirectoryIterator::isWritable",
        "directoryiterator.iswritable.php",
        "現在の DirectoryIterator アイテムが書き込み可能であるかどうかを調べる"
    ],
    "DirectoryIteratorkey": [
        "DirectoryIterator::key",
        "directoryiterator.key.php",
        "現在の DirectoryIterator アイテムのキーを返す"
    ],
    "DirectoryIteratornext": [
        "DirectoryIterator::next",
        "directoryiterator.next.php",
        "次の DirectoryIterator アイテムに移動する"
    ],
    "DirectoryIteratorrewind": [
        "DirectoryIterator::rewind",
        "directoryiterator.rewind.php",
        "DirectoryIterator を最初に巻き戻す"
    ],
    "DirectoryIteratorseek": [
        "DirectoryIterator::seek",
        "directoryiterator.seek.php",
        "DirectoryIterator のアイテムを移動する"
    ],
    "DirectoryIteratorvalid": [
        "DirectoryIterator::valid",
        "directoryiterator.valid.php",
        "現在の DirectoryIterator の位置が有効なファイルであるかどうかチェックする"
    ],
    "DirectoryIteratorconstruct": [
        "DirectoryIterator::__construct",
        "directoryiterator.construct.php",
        "パスから新規ディレクトリイテレータを生成する"
    ],
    "DirectoryIteratortoString": [
        "DirectoryIterator::__toString",
        "directoryiterator.tostring.php",
        "ファイル名を文字列として取得する"
    ],
    "dirname": [
        "dirname",
        "function.dirname.php",
        "親ディレクトリのパスを返す"
    ],
    "diskfreespace": [
        "disk_free_space",
        "function.disk-free-space.php",
        "ファイルシステムあるいはディスクパーティション上で利用可能な領域を返す"
    ],
    "disktotalspace": [
        "disk_total_space",
        "function.disk-total-space.php",
        "ファイルシステムあるいはディスクパーティションの全体サイズを返す"
    ],
    "dl": [
        "dl",
        "function.dl.php",
        "実行時に PHP 拡張モジュールをロードする"
    ],
    "dngettext": [
        "dngettext",
        "function.dngettext.php",
        "dgettext の複数形版"
    ],
    "dnscheckrecord": [
        "dns_check_record",
        "function.dns-check-record.php",
        "checkdnsrr のエイリアス"
    ],
    "dnsgetmx": [
        "dns_get_mx",
        "function.dns-get-mx.php",
        "getmxrr のエイリアス"
    ],
    "dnsgetrecord": [
        "dns_get_record",
        "function.dns-get-record.php",
        "ホスト名に関連する DNS リソースレコードを取得する"
    ],
    "DocResultfetchAll": [
        "DocResult::fetchAll",
        "mysql-xdevapi-docresult.fetchall.php",
        "全ての行を取得する"
    ],
    "DocResultfetchOne": [
        "DocResult::fetchOne",
        "mysql-xdevapi-docresult.fetchone.php",
        "一行取得する"
    ],
    "DocResultgetWarnings": [
        "DocResult::getWarnings",
        "mysql-xdevapi-docresult.getwarnings.php",
        "直近の操作から発生した警告を取得する"
    ],
    "DocResultgetWarningsCount": [
        "DocResult::getWarningsCount",
        "mysql-xdevapi-docresult.getwarningscount.php",
        "直近の操作で発生した警告の数を取得する"
    ],
    "DocResultconstruct": [
        "DocResult::__construct",
        "mysql-xdevapi-docresult.construct.php",
        "DocResult のコンストラクタ"
    ],
    "DOMAttrisId": [
        "DOMAttr::isId",
        "domattr.isid.php",
        "属性が定義済みの ID かどうかを調べる"
    ],
    "DOMAttrconstruct": [
        "DOMAttr::__construct",
        "domattr.construct.php",
        "新しい DOMAttr オブジェクトを作成する"
    ],
    "DOMCdataSectionconstruct": [
        "DOMCdataSection::__construct",
        "domcdatasection.construct.php",
        "新しい DOMCdataSection オブジェクトを作成する"
    ],
    "DOMCharacterDataappendData": [
        "DOMCharacterData::appendData",
        "domcharacterdata.appenddata.php",
        "ノードの文字データの最後に文字列を追加する"
    ],
    "DOMCharacterDatadeleteData": [
        "DOMCharacterData::deleteData",
        "domcharacterdata.deletedata.php",
        "指定した範囲の文字列をノードから削除する"
    ],
    "DOMCharacterDatainsertData": [
        "DOMCharacterData::insertData",
        "domcharacterdata.insertdata.php",
        "指定した 16 ビット単位のオフセットに、文字列を挿入する"
    ],
    "DOMCharacterDatareplaceData": [
        "DOMCharacterData::replaceData",
        "domcharacterdata.replacedata.php",
        "DOMCharacterData ノードの文字列の一部を置換する"
    ],
    "DOMCharacterDatasubstringData": [
        "DOMCharacterData::substringData",
        "domcharacterdata.substringdata.php",
        "ノードから指定した範囲のデータを抽出する"
    ],
    "DOMCommentconstruct": [
        "DOMComment::__construct",
        "domcomment.construct.php",
        "新しい DOMComment オブジェクトを作成する"
    ],
    "DOMDocumentcreateAttribute": [
        "DOMDocument::createAttribute",
        "domdocument.createattribute.php",
        "新しい属性を作成する"
    ],
    "DOMDocumentcreateAttributeNS": [
        "DOMDocument::createAttributeNS",
        "domdocument.createattributens.php",
        "関連付けられた名前空間に新しい属性を作成する"
    ],
    "DOMDocumentcreateCDATASection": [
        "DOMDocument::createCDATASection",
        "domdocument.createcdatasection.php",
        "新しい cdata ノードを作成する"
    ],
    "DOMDocumentcreateComment": [
        "DOMDocument::createComment",
        "domdocument.createcomment.php",
        "新しい comment ノードを作成する"
    ],
    "DOMDocumentcreateDocumentFragment": [
        "DOMDocument::createDocumentFragment",
        "domdocument.createdocumentfragment.php",
        "新しい文書片を作成する"
    ],
    "DOMDocumentcreateElement": [
        "DOMDocument::createElement",
        "domdocument.createelement.php",
        "新しい要素ノードを作成する"
    ],
    "DOMDocumentcreateElementNS": [
        "DOMDocument::createElementNS",
        "domdocument.createelementns.php",
        "関連付けられた名前空間に新しい要素を作成する"
    ],
    "DOMDocumentcreateEntityReference": [
        "DOMDocument::createEntityReference",
        "domdocument.createentityreference.php",
        "新しいエンティティ参照ノードを作成する"
    ],
    "DOMDocumentcreateProcessingInstruction": [
        "DOMDocument::createProcessingInstruction",
        "domdocument.createprocessinginstruction.php",
        "新しい PI ノードを作成する"
    ],
    "DOMDocumentcreateTextNode": [
        "DOMDocument::createTextNode",
        "domdocument.createtextnode.php",
        "新しいテキストノードを作成する"
    ],
    "DOMDocumentgetElementById": [
        "DOMDocument::getElementById",
        "domdocument.getelementbyid.php",
        "id に対応する要素を検索する"
    ],
    "DOMDocumentgetElementsByTagName": [
        "DOMDocument::getElementsByTagName",
        "domdocument.getelementsbytagname.php",
        "指定したローカルタグ名に対応するすべての要素を検索する"
    ],
    "DOMDocumentgetElementsByTagNameNS": [
        "DOMDocument::getElementsByTagNameNS",
        "domdocument.getelementsbytagnamens.php",
        "指定した名前空間で、タグ名に対応するすべての要素を検索する"
    ],
    "DOMDocumentimportNode": [
        "DOMDocument::importNode",
        "domdocument.importnode.php",
        "現在のドキュメントにノードをインポートする"
    ],
    "DOMDocumentload": [
        "DOMDocument::load",
        "domdocument.load.php",
        "ファイルから XML を読み込む"
    ],
    "DOMDocumentloadHTML": [
        "DOMDocument::loadHTML",
        "domdocument.loadhtml.php",
        "文字列から HTML を読み込む"
    ],
    "DOMDocumentloadHTMLFile": [
        "DOMDocument::loadHTMLFile",
        "domdocument.loadhtmlfile.php",
        "ファイルから HTML を読み込む"
    ],
    "DOMDocumentloadXML": [
        "DOMDocument::loadXML",
        "domdocument.loadxml.php",
        "文字列から XML を読み込む"
    ],
    "DOMDocumentnormalizeDocument": [
        "DOMDocument::normalizeDocument",
        "domdocument.normalizedocument.php",
        "ドキュメントを正規化する"
    ],
    "DOMDocumentregisterNodeClass": [
        "DOMDocument::registerNodeClass",
        "domdocument.registernodeclass.php",
        "基底ノード型を作成する際に使用する拡張クラスを登録する"
    ],
    "DOMDocumentrelaxNGValidate": [
        "DOMDocument::relaxNGValidate",
        "domdocument.relaxngvalidate.php",
        "ドキュメントを relaxNG で検証する"
    ],
    "DOMDocumentrelaxNGValidateSource": [
        "DOMDocument::relaxNGValidateSource",
        "domdocument.relaxngvalidatesource.php",
        "ドキュメントを relaxNG で検証する"
    ],
    "DOMDocumentsave": [
        "DOMDocument::save",
        "domdocument.save.php",
        "内部の XML ツリーをファイルに出力する"
    ],
    "DOMDocumentsaveHTML": [
        "DOMDocument::saveHTML",
        "domdocument.savehtml.php",
        "内部のドキュメントを HTML 形式の文字列として出力する"
    ],
    "DOMDocumentsaveHTMLFile": [
        "DOMDocument::saveHTMLFile",
        "domdocument.savehtmlfile.php",
        "内部のドキュメントを HTML 形式でファイルに出力する"
    ],
    "DOMDocumentsaveXML": [
        "DOMDocument::saveXML",
        "domdocument.savexml.php",
        "内部の XML ツリーを文字列として出力する"
    ],
    "DOMDocumentschemaValidate": [
        "DOMDocument::schemaValidate",
        "domdocument.schemavalidate.php",
        "スキーマに基づいてドキュメントを検証する。XML Schema 1.0 のみサポート。"
    ],
    "DOMDocumentschemaValidateSource": [
        "DOMDocument::schemaValidateSource",
        "domdocument.schemavalidatesource.php",
        "スキーマに基づいてドキュメントを検証する"
    ],
    "DOMDocumentvalidate": [
        "DOMDocument::validate",
        "domdocument.validate.php",
        "DTD に基づいてドキュメントを検証する"
    ],
    "DOMDocumentxinclude": [
        "DOMDocument::xinclude",
        "domdocument.xinclude.php",
        "DOMDocument オブジェクト内の XIncludes を置換する"
    ],
    "DOMDocumentconstruct": [
        "DOMDocument::__construct",
        "domdocument.construct.php",
        "新しい DOMDocument オブジェクトを作成する"
    ],
    "DOMDocumentFragmentappendXML": [
        "DOMDocumentFragment::appendXML",
        "domdocumentfragment.appendxml.php",
        "生の XML データを追加する"
    ],
    "DOMElementgetAttribute": [
        "DOMElement::getAttribute",
        "domelement.getattribute.php",
        "属性の値を返す"
    ],
    "DOMElementgetAttributeNode": [
        "DOMElement::getAttributeNode",
        "domelement.getattributenode.php",
        "属性ノードを返す"
    ],
    "DOMElementgetAttributeNodeNS": [
        "DOMElement::getAttributeNodeNS",
        "domelement.getattributenodens.php",
        "属性ノードを返す"
    ],
    "DOMElementgetAttributeNS": [
        "DOMElement::getAttributeNS",
        "domelement.getattributens.php",
        "属性の値を返す"
    ],
    "DOMElementgetElementsByTagName": [
        "DOMElement::getElementsByTagName",
        "domelement.getelementsbytagname.php",
        "タグ名から要素を取得する"
    ],
    "DOMElementgetElementsByTagNameNS": [
        "DOMElement::getElementsByTagNameNS",
        "domelement.getelementsbytagnamens.php",
        "名前空間 URI とローカル名から要素を取得する"
    ],
    "DOMElementhasAttribute": [
        "DOMElement::hasAttribute",
        "domelement.hasattribute.php",
        "属性が存在するかどうかを調べる"
    ],
    "DOMElementhasAttributeNS": [
        "DOMElement::hasAttributeNS",
        "domelement.hasattributens.php",
        "属性が存在するかどうかを調べる"
    ],
    "DOMElementremoveAttribute": [
        "DOMElement::removeAttribute",
        "domelement.removeattribute.php",
        "属性を削除する"
    ],
    "DOMElementremoveAttributeNode": [
        "DOMElement::removeAttributeNode",
        "domelement.removeattributenode.php",
        "属性を削除する"
    ],
    "DOMElementremoveAttributeNS": [
        "DOMElement::removeAttributeNS",
        "domelement.removeattributens.php",
        "属性を削除する"
    ],
    "DOMElementsetAttribute": [
        "DOMElement::setAttribute",
        "domelement.setattribute.php",
        "新しい属性を追加する"
    ],
    "DOMElementsetAttributeNode": [
        "DOMElement::setAttributeNode",
        "domelement.setattributenode.php",
        "新しい属性ノードを要素に追加する"
    ],
    "DOMElementsetAttributeNodeNS": [
        "DOMElement::setAttributeNodeNS",
        "domelement.setattributenodens.php",
        "新しい属性ノードを要素に追加する"
    ],
    "DOMElementsetAttributeNS": [
        "DOMElement::setAttributeNS",
        "domelement.setattributens.php",
        "新しい属性を追加する"
    ],
    "DOMElementsetIdAttribute": [
        "DOMElement::setIdAttribute",
        "domelement.setidattribute.php",
        "ID 型の属性を名前で宣言する"
    ],
    "DOMElementsetIdAttributeNode": [
        "DOMElement::setIdAttributeNode",
        "domelement.setidattributenode.php",
        "ID 型の属性をノードで宣言する"
    ],
    "DOMElementsetIdAttributeNS": [
        "DOMElement::setIdAttributeNS",
        "domelement.setidattributens.php",
        "ID 型の属性をローカル名および名前空間 URI で宣言する"
    ],
    "DOMElementconstruct": [
        "DOMElement::__construct",
        "domelement.construct.php",
        "新しい DOMElement オブジェクトを作成する"
    ],
    "DOMEntityReferenceconstruct": [
        "DOMEntityReference::__construct",
        "domentityreference.construct.php",
        "新しい DOMEntityReference オブジェクトを作成する"
    ],
    "DOMImplementationcreateDocument": [
        "DOMImplementation::createDocument",
        "domimplementation.createdocument.php",
        "指定した型とドキュメント要素の DOMDocument オブジェクトを作成する"
    ],
    "DOMImplementationcreateDocumentType": [
        "DOMImplementation::createDocumentType",
        "domimplementation.createdocumenttype.php",
        "空の DOMDocumentType オブジェクトを作成する"
    ],
    "DOMImplementationhasFeature": [
        "DOMImplementation::hasFeature",
        "domimplementation.hasfeature.php",
        "DOM 実装が、指定した機能を実装しているかどうかを調べる"
    ],
    "DOMImplementationconstruct": [
        "DOMImplementation::__construct",
        "domimplementation.construct.php",
        "新しい DOMImplementation オブジェクトを作成する"
    ],
    "DOMNamedNodeMapcount": [
        "DOMNamedNodeMap::count",
        "domnamednodemap.count.php",
        "マップにあるノードの数を取得する"
    ],
    "DOMNamedNodeMapgetNamedItem": [
        "DOMNamedNodeMap::getNamedItem",
        "domnamednodemap.getnameditem.php",
        "名前で指定されたノードを取得する"
    ],
    "DOMNamedNodeMapgetNamedItemNS": [
        "DOMNamedNodeMap::getNamedItemNS",
        "domnamednodemap.getnameditemns.php",
        "ローカル名および名前空間 URI で指定したノードを取得する"
    ],
    "DOMNamedNodeMapitem": [
        "DOMNamedNodeMap::item",
        "domnamednodemap.item.php",
        "インデックスで指定したノードを取得する"
    ],
    "DOMNodeappendChild": [
        "DOMNode::appendChild",
        "domnode.appendchild.php",
        "子要素群の最後に新しい子要素を追加する"
    ],
    "DOMNodeC14N": [
        "DOMNode::C14N",
        "domnode.c14n.php",
        "ノードを文字列に正規化する"
    ],
    "DOMNodeC14NFile": [
        "DOMNode::C14NFile",
        "domnode.c14nfile.php",
        "ノードをファイルに正規化する"
    ],
    "DOMNodecloneNode": [
        "DOMNode::cloneNode",
        "domnode.clonenode.php",
        "ノードを複製する"
    ],
    "DOMNodegetLineNo": [
        "DOMNode::getLineNo",
        "domnode.getlineno.php",
        "ノードが存在する行の番号を取得します。"
    ],
    "DOMNodegetNodePath": [
        "DOMNode::getNodePath",
        "domnode.getnodepath.php",
        "ノードの XPath を取得する"
    ],
    "DOMNodehasAttributes": [
        "DOMNode::hasAttributes",
        "domnode.hasattributes.php",
        "ノードが属性を保持しているかどうかを調べる"
    ],
    "DOMNodehasChildNodes": [
        "DOMNode::hasChildNodes",
        "domnode.haschildnodes.php",
        "ノードが子を保持しているかどうかを調べる"
    ],
    "DOMNodeinsertBefore": [
        "DOMNode::insertBefore",
        "domnode.insertbefore.php",
        "参照しているノードの前に新しい子を追加する"
    ],
    "DOMNodeisDefaultNamespace": [
        "DOMNode::isDefaultNamespace",
        "domnode.isdefaultnamespace.php",
        "指定した namespaceURI がデフォルトの名前空間かどうかを調べる"
    ],
    "DOMNodeisSameNode": [
        "DOMNode::isSameNode",
        "domnode.issamenode.php",
        "2 つのノードが等しいかどうかを調べる"
    ],
    "DOMNodeisSupported": [
        "DOMNode::isSupported",
        "domnode.issupported.php",
        "指定したバージョンで機能がサポートされているかどうかを調べる"
    ],
    "DOMNodelookupNamespaceUri": [
        "DOMNode::lookupNamespaceUri",
        "domnode.lookupnamespaceuri.php",
        "プレフィックスに基づいて、ノードの名前空間 URI を取得する"
    ],
    "DOMNodelookupPrefix": [
        "DOMNode::lookupPrefix",
        "domnode.lookupprefix.php",
        "名前空間 URI に基づいて、ノードの名前空間プレフィックスを取得する"
    ],
    "DOMNodenormalize": [
        "DOMNode::normalize",
        "domnode.normalize.php",
        "ノードを正規化する"
    ],
    "DOMNoderemoveChild": [
        "DOMNode::removeChild",
        "domnode.removechild.php",
        "子要素群から子要素を削除する"
    ],
    "DOMNodereplaceChild": [
        "DOMNode::replaceChild",
        "domnode.replacechild.php",
        "子を置き換える"
    ],
    "DOMNodeListcount": [
        "DOMNodeList::count",
        "domnodelist.count.php",
        "リストにあるノードの数を取得する"
    ],
    "DOMNodelistitem": [
        "DOMNodelist::item",
        "domnodelist.item.php",
        "インデックスで指定したノードを取得する"
    ],
    "DOMProcessingInstructionconstruct": [
        "DOMProcessingInstruction::__construct",
        "domprocessinginstruction.construct.php",
        "新しい DOMProcessingInstruction オブジェクトを作成する"
    ],
    "DOMTextisElementContentWhitespace": [
        "DOMText::isElementContentWhitespace",
        "domtext.iselementcontentwhitespace.php",
        "このテキストノードが、要素の内容にホワイトスペースが含まれているかを返す"
    ],
    "DOMTextisWhitespaceInElementContent": [
        "DOMText::isWhitespaceInElementContent",
        "domtext.iswhitespaceinelementcontent.php",
        "このテキストノードが空白を含むかどうかを示す"
    ],
    "DOMTextsplitText": [
        "DOMText::splitText",
        "domtext.splittext.php",
        "指定したオフセットでノードを 2 つに分割する"
    ],
    "DOMTextconstruct": [
        "DOMText::__construct",
        "domtext.construct.php",
        "新しい DOMText オブジェクトを作成する"
    ],
    "DOMXPathevaluate": [
        "DOMXPath::evaluate",
        "domxpath.evaluate.php",
        "与えられた XPath 式を評価し、可能であれば結果を返す"
    ],
    "DOMXPathquery": [
        "DOMXPath::query",
        "domxpath.query.php",
        "与えられた XPath 式を評価する"
    ],
    "DOMXPathregisterNamespace": [
        "DOMXPath::registerNamespace",
        "domxpath.registernamespace.php",
        "DOMXPath オブジェクトの名前空間を登録する"
    ],
    "DOMXPathregisterPhpFunctions": [
        "DOMXPath::registerPhpFunctions",
        "domxpath.registerphpfunctions.php",
        "PHP の関数を XPath 関数として登録する"
    ],
    "DOMXPathconstruct": [
        "DOMXPath::__construct",
        "domxpath.construct.php",
        "新しい DOMXPath オブジェクトを作成する"
    ],
    "domimportsimplexml": [
        "dom_import_simplexml",
        "function.dom-import-simplexml.php",
        "SimpleXMLElement オブジェクトから DOMElement オブジェクトを取得する"
    ],
    "dotnetconstruct": [
        "dotnet::__construct",
        "dotnet.construct.php",
        "dotnet クラスのコンストラクタ"
    ],
    "doubleval": [
        "doubleval",
        "function.doubleval.php",
        "floatval のエイリアス"
    ],
    "DsCollectionclear": [
        "Ds\\Collection::clear",
        "ds-collection.clear.php",
        "Removes all values"
    ],
    "DsCollectioncopy": [
        "Ds\\Collection::copy",
        "ds-collection.copy.php",
        "Returns a shallow copy of the collection"
    ],
    "DsCollectionisEmpty": [
        "Ds\\Collection::isEmpty",
        "ds-collection.isempty.php",
        "Returns whether the collection is empty"
    ],
    "DsCollectiontoArray": [
        "Ds\\Collection::toArray",
        "ds-collection.toarray.php",
        "Converts the collection to an array"
    ],
    "DsDequeallocate": [
        "Ds\\Deque::allocate",
        "ds-deque.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsDequeapply": [
        "Ds\\Deque::apply",
        "ds-deque.apply.php",
        "Updates all values by applying a callback function to each value"
    ],
    "DsDequecapacity": [
        "Ds\\Deque::capacity",
        "ds-deque.capacity.php",
        "Returns the current capacity"
    ],
    "DsDequeclear": [
        "Ds\\Deque::clear",
        "ds-deque.clear.php",
        "Removes all values from the deque"
    ],
    "DsDequecontains": [
        "Ds\\Deque::contains",
        "ds-deque.contains.php",
        "Determines if the deque contains given values"
    ],
    "DsDequecopy": [
        "Ds\\Deque::copy",
        "ds-deque.copy.php",
        "Returns a shallow copy of the deque"
    ],
    "DsDequecount": [
        "Ds\\Deque::count",
        "ds-deque.count.php",
        "Returns the number of values in the collection"
    ],
    "DsDequefind": [
        "Ds\\Deque::find",
        "ds-deque.find.php",
        "Attempts to find a value's index"
    ],
    "DsDequefirst": [
        "Ds\\Deque::first",
        "ds-deque.first.php",
        "Returns the first value in the deque"
    ],
    "DsDequeget": [
        "Ds\\Deque::get",
        "ds-deque.get.php",
        "Returns the value at a given index"
    ],
    "DsDequeinsert": [
        "Ds\\Deque::insert",
        "ds-deque.insert.php",
        "Inserts values at a given index"
    ],
    "DsDequeisEmpty": [
        "Ds\\Deque::isEmpty",
        "ds-deque.isempty.php",
        "Returns whether the deque is empty"
    ],
    "DsDequejoin": [
        "Ds\\Deque::join",
        "ds-deque.join.php",
        "Joins all values together as a string"
    ],
    "DsDequejsonSerialize": [
        "Ds\\Deque::jsonSerialize",
        "ds-deque.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsDequelast": [
        "Ds\\Deque::last",
        "ds-deque.last.php",
        "Returns the last value"
    ],
    "DsDequemap": [
        "Ds\\Deque::map",
        "ds-deque.map.php",
        "Returns the result of applying a callback to each value"
    ],
    "DsDequemerge": [
        "Ds\\Deque::merge",
        "ds-deque.merge.php",
        "Returns the result of adding all given values to the deque"
    ],
    "DsDequepop": [
        "Ds\\Deque::pop",
        "ds-deque.pop.php",
        "Removes and returns the last value"
    ],
    "DsDequepush": [
        "Ds\\Deque::push",
        "ds-deque.push.php",
        "Adds values to the end of the deque"
    ],
    "DsDequereduce": [
        "Ds\\Deque::reduce",
        "ds-deque.reduce.php",
        "Reduces the deque to a single value using a callback function"
    ],
    "DsDequeremove": [
        "Ds\\Deque::remove",
        "ds-deque.remove.php",
        "Removes and returns a value by index"
    ],
    "DsDequereverse": [
        "Ds\\Deque::reverse",
        "ds-deque.reverse.php",
        "Reverses the deque in-place"
    ],
    "DsDequereversed": [
        "Ds\\Deque::reversed",
        "ds-deque.reversed.php",
        "Returns a reversed copy"
    ],
    "DsDequerotate": [
        "Ds\\Deque::rotate",
        "ds-deque.rotate.php",
        "Rotates the deque by a given number of rotations"
    ],
    "DsDequeset": [
        "Ds\\Deque::set",
        "ds-deque.set.php",
        "Updates a value at a given index"
    ],
    "DsDequeshift": [
        "Ds\\Deque::shift",
        "ds-deque.shift.php",
        "Removes and returns the first value"
    ],
    "DsDequeslice": [
        "Ds\\Deque::slice",
        "ds-deque.slice.php",
        "Returns a sub-deque of a given range"
    ],
    "DsDequesort": [
        "Ds\\Deque::sort",
        "ds-deque.sort.php",
        "Sorts the deque in-place"
    ],
    "DsDequesorted": [
        "Ds\\Deque::sorted",
        "ds-deque.sorted.php",
        "Returns a sorted copy"
    ],
    "DsDequesum": [
        "Ds\\Deque::sum",
        "ds-deque.sum.php",
        "Returns the sum of all values in the deque"
    ],
    "DsDequetoArray": [
        "Ds\\Deque::toArray",
        "ds-deque.toarray.php",
        "Converts the deque to an array"
    ],
    "DsDequeunshift": [
        "Ds\\Deque::unshift",
        "ds-deque.unshift.php",
        "Adds values to the front of the deque"
    ],
    "DsDequeconstruct": [
        "Ds\\Deque::__construct",
        "ds-deque.construct.php",
        "Creates a new instance"
    ],
    "DsHashableequals": [
        "Ds\\Hashable::equals",
        "ds-hashable.equals.php",
        "Determines whether an object is equal to the current instance"
    ],
    "DsHashablehash": [
        "Ds\\Hashable::hash",
        "ds-hashable.hash.php",
        "Returns a scalar value to be used as a hash value"
    ],
    "DsMapallocate": [
        "Ds\\Map::allocate",
        "ds-map.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsMapapply": [
        "Ds\\Map::apply",
        "ds-map.apply.php",
        "Updates all values by applying a callback function to each value"
    ],
    "DsMapcapacity": [
        "Ds\\Map::capacity",
        "ds-map.capacity.php",
        "Returns the current capacity"
    ],
    "DsMapclear": [
        "Ds\\Map::clear",
        "ds-map.clear.php",
        "Removes all values"
    ],
    "DsMapcopy": [
        "Ds\\Map::copy",
        "ds-map.copy.php",
        "Returns a shallow copy of the map"
    ],
    "DsMapcount": [
        "Ds\\Map::count",
        "ds-map.count.php",
        "Returns the number of values in the map"
    ],
    "DsMapdiff": [
        "Ds\\Map::diff",
        "ds-map.diff.php",
        "Creates a new map using keys that aren't in another map"
    ],
    "DsMapfilter": [
        "Ds\\Map::filter",
        "ds-map.filter.php",
        "Creates a new map using a callable to determine which pairs to include"
    ],
    "DsMapfirst": [
        "Ds\\Map::first",
        "ds-map.first.php",
        "Returns the first pair in the map"
    ],
    "DsMapget": [
        "Ds\\Map::get",
        "ds-map.get.php",
        "Returns the value for a given key"
    ],
    "DsMaphasKey": [
        "Ds\\Map::hasKey",
        "ds-map.haskey.php",
        "Determines whether the map contains a given key"
    ],
    "DsMaphasValue": [
        "Ds\\Map::hasValue",
        "ds-map.hasvalue.php",
        "Determines whether the map contains a given value"
    ],
    "DsMapintersect": [
        "Ds\\Map::intersect",
        "ds-map.intersect.php",
        "Creates a new map by intersecting keys with another map"
    ],
    "DsMapisEmpty": [
        "Ds\\Map::isEmpty",
        "ds-map.isempty.php",
        "Returns whether the map is empty"
    ],
    "DsMapjsonSerialize": [
        "Ds\\Map::jsonSerialize",
        "ds-map.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsMapkeys": [
        "Ds\\Map::keys",
        "ds-map.keys.php",
        "Returns a set of the map's keys"
    ],
    "DsMapksort": [
        "Ds\\Map::ksort",
        "ds-map.ksort.php",
        "Sorts the map in-place by key"
    ],
    "DsMapksorted": [
        "Ds\\Map::ksorted",
        "ds-map.ksorted.php",
        "Returns a copy, sorted by key"
    ],
    "DsMaplast": [
        "Ds\\Map::last",
        "ds-map.last.php",
        "Returns the last pair of the map"
    ],
    "DsMapmap": [
        "Ds\\Map::map",
        "ds-map.map.php",
        "Returns the result of applying a callback to each value"
    ],
    "DsMapmerge": [
        "Ds\\Map::merge",
        "ds-map.merge.php",
        "Returns the result of adding all given associations"
    ],
    "DsMappairs": [
        "Ds\\Map::pairs",
        "ds-map.pairs.php",
        "Returns a sequence containing all the pairs of the map"
    ],
    "DsMapput": [
        "Ds\\Map::put",
        "ds-map.put.php",
        "Associates a key with a value"
    ],
    "DsMapputAll": [
        "Ds\\Map::putAll",
        "ds-map.putall.php",
        "Associates all key-value pairs of a traversable object or array"
    ],
    "DsMapreduce": [
        "Ds\\Map::reduce",
        "ds-map.reduce.php",
        "Reduces the map to a single value using a callback function"
    ],
    "DsMapremove": [
        "Ds\\Map::remove",
        "ds-map.remove.php",
        "Removes and returns a value by key"
    ],
    "DsMapreverse": [
        "Ds\\Map::reverse",
        "ds-map.reverse.php",
        "Reverses the map in-place"
    ],
    "DsMapreversed": [
        "Ds\\Map::reversed",
        "ds-map.reversed.php",
        "Returns a reversed copy"
    ],
    "DsMapskip": [
        "Ds\\Map::skip",
        "ds-map.skip.php",
        "Returns the pair at a given positional index"
    ],
    "DsMapslice": [
        "Ds\\Map::slice",
        "ds-map.slice.php",
        "Returns a subset of the map defined by a starting index and length"
    ],
    "DsMapsort": [
        "Ds\\Map::sort",
        "ds-map.sort.php",
        "Sorts the map in-place by value"
    ],
    "DsMapsorted": [
        "Ds\\Map::sorted",
        "ds-map.sorted.php",
        "Returns a copy, sorted by value"
    ],
    "DsMapsum": [
        "Ds\\Map::sum",
        "ds-map.sum.php",
        "Returns the sum of all values in the map"
    ],
    "DsMaptoArray": [
        "Ds\\Map::toArray",
        "ds-map.toarray.php",
        "Converts the map to an array"
    ],
    "DsMapunion": [
        "Ds\\Map::union",
        "ds-map.union.php",
        "Creates a new map using values from the current instance and another map"
    ],
    "DsMapvalues": [
        "Ds\\Map::values",
        "ds-map.values.php",
        "Returns a sequence of the map's values"
    ],
    "DsMapxor": [
        "Ds\\Map::xor",
        "ds-map.xor.php",
        "Creates a new map using keys of either the current instance or of another map, but not of both"
    ],
    "DsMapconstruct": [
        "Ds\\Map::__construct",
        "ds-map.construct.php",
        "Creates a new instance"
    ],
    "DsPairclear": [
        "Ds\\Pair::clear",
        "ds-pair.clear.php",
        "Removes all values"
    ],
    "DsPaircopy": [
        "Ds\\Pair::copy",
        "ds-pair.copy.php",
        "Returns a shallow copy of the pair"
    ],
    "DsPairisEmpty": [
        "Ds\\Pair::isEmpty",
        "ds-pair.isempty.php",
        "Returns whether the pair is empty"
    ],
    "DsPairjsonSerialize": [
        "Ds\\Pair::jsonSerialize",
        "ds-pair.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsPairtoArray": [
        "Ds\\Pair::toArray",
        "ds-pair.toarray.php",
        "Converts the pair to an array"
    ],
    "DsPairconstruct": [
        "Ds\\Pair::__construct",
        "ds-pair.construct.php",
        "Creates a new instance"
    ],
    "DsPriorityQueueallocate": [
        "Ds\\PriorityQueue::allocate",
        "ds-priorityqueue.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsPriorityQueuecapacity": [
        "Ds\\PriorityQueue::capacity",
        "ds-priorityqueue.capacity.php",
        "Returns the current capacity"
    ],
    "DsPriorityQueueclear": [
        "Ds\\PriorityQueue::clear",
        "ds-priorityqueue.clear.php",
        "Removes all values"
    ],
    "DsPriorityQueuecopy": [
        "Ds\\PriorityQueue::copy",
        "ds-priorityqueue.copy.php",
        "Returns a shallow copy of the queue"
    ],
    "DsPriorityQueuecount": [
        "Ds\\PriorityQueue::count",
        "ds-priorityqueue.count.php",
        "Returns the number of values in the queue"
    ],
    "DsPriorityQueueisEmpty": [
        "Ds\\PriorityQueue::isEmpty",
        "ds-priorityqueue.isempty.php",
        "Returns whether the queue is empty"
    ],
    "DsPriorityQueuejsonSerialize": [
        "Ds\\PriorityQueue::jsonSerialize",
        "ds-priorityqueue.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsPriorityQueuepeek": [
        "Ds\\PriorityQueue::peek",
        "ds-priorityqueue.peek.php",
        "Returns the value at the front of the queue"
    ],
    "DsPriorityQueuepop": [
        "Ds\\PriorityQueue::pop",
        "ds-priorityqueue.pop.php",
        "Removes and returns the value with the highest priority"
    ],
    "DsPriorityQueuepush": [
        "Ds\\PriorityQueue::push",
        "ds-priorityqueue.push.php",
        "Pushes values into the queue"
    ],
    "DsPriorityQueuetoArray": [
        "Ds\\PriorityQueue::toArray",
        "ds-priorityqueue.toarray.php",
        "Converts the queue to an array"
    ],
    "DsPriorityQueueconstruct": [
        "Ds\\PriorityQueue::__construct",
        "ds-priorityqueue.construct.php",
        "Creates a new instance"
    ],
    "DsQueueallocate": [
        "Ds\\Queue::allocate",
        "ds-queue.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsQueuecapacity": [
        "Ds\\Queue::capacity",
        "ds-queue.capacity.php",
        "Returns the current capacity"
    ],
    "DsQueueclear": [
        "Ds\\Queue::clear",
        "ds-queue.clear.php",
        "Removes all values"
    ],
    "DsQueuecopy": [
        "Ds\\Queue::copy",
        "ds-queue.copy.php",
        "Returns a shallow copy of the queue"
    ],
    "DsQueuecount": [
        "Ds\\Queue::count",
        "ds-queue.count.php",
        "Returns the number of values in the queue"
    ],
    "DsQueueisEmpty": [
        "Ds\\Queue::isEmpty",
        "ds-queue.isempty.php",
        "Returns whether the queue is empty"
    ],
    "DsQueuejsonSerialize": [
        "Ds\\Queue::jsonSerialize",
        "ds-queue.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsQueuepeek": [
        "Ds\\Queue::peek",
        "ds-queue.peek.php",
        "Returns the value at the front of the queue"
    ],
    "DsQueuepop": [
        "Ds\\Queue::pop",
        "ds-queue.pop.php",
        "Removes and returns the value at the front of the queue"
    ],
    "DsQueuepush": [
        "Ds\\Queue::push",
        "ds-queue.push.php",
        "Pushes values into the queue"
    ],
    "DsQueuetoArray": [
        "Ds\\Queue::toArray",
        "ds-queue.toarray.php",
        "Converts the queue to an array"
    ],
    "DsQueueconstruct": [
        "Ds\\Queue::__construct",
        "ds-queue.construct.php",
        "Creates a new instance"
    ],
    "DsSequenceallocate": [
        "Ds\\Sequence::allocate",
        "ds-sequence.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsSequenceapply": [
        "Ds\\Sequence::apply",
        "ds-sequence.apply.php",
        "Updates all values by applying a callback function to each value"
    ],
    "DsSequencecapacity": [
        "Ds\\Sequence::capacity",
        "ds-sequence.capacity.php",
        "Returns the current capacity"
    ],
    "DsSequencecontains": [
        "Ds\\Sequence::contains",
        "ds-sequence.contains.php",
        "Determines if the sequence contains given values"
    ],
    "DsSequencefind": [
        "Ds\\Sequence::find",
        "ds-sequence.find.php",
        "Attempts to find a value's index"
    ],
    "DsSequencefirst": [
        "Ds\\Sequence::first",
        "ds-sequence.first.php",
        "Returns the first value in the sequence"
    ],
    "DsSequenceget": [
        "Ds\\Sequence::get",
        "ds-sequence.get.php",
        "Returns the value at a given index"
    ],
    "DsSequenceinsert": [
        "Ds\\Sequence::insert",
        "ds-sequence.insert.php",
        "Inserts values at a given index"
    ],
    "DsSequencejoin": [
        "Ds\\Sequence::join",
        "ds-sequence.join.php",
        "Joins all values together as a string"
    ],
    "DsSequencelast": [
        "Ds\\Sequence::last",
        "ds-sequence.last.php",
        "Returns the last value"
    ],
    "DsSequencemap": [
        "Ds\\Sequence::map",
        "ds-sequence.map.php",
        "Returns the result of applying a callback to each value"
    ],
    "DsSequencemerge": [
        "Ds\\Sequence::merge",
        "ds-sequence.merge.php",
        "Returns the result of adding all given values to the sequence"
    ],
    "DsSequencepop": [
        "Ds\\Sequence::pop",
        "ds-sequence.pop.php",
        "Removes and returns the last value"
    ],
    "DsSequencepush": [
        "Ds\\Sequence::push",
        "ds-sequence.push.php",
        "Adds values to the end of the sequence"
    ],
    "DsSequencereduce": [
        "Ds\\Sequence::reduce",
        "ds-sequence.reduce.php",
        "Reduces the sequence to a single value using a callback function"
    ],
    "DsSequenceremove": [
        "Ds\\Sequence::remove",
        "ds-sequence.remove.php",
        "Removes and returns a value by index"
    ],
    "DsSequencereverse": [
        "Ds\\Sequence::reverse",
        "ds-sequence.reverse.php",
        "Reverses the sequence in-place"
    ],
    "DsSequencereversed": [
        "Ds\\Sequence::reversed",
        "ds-sequence.reversed.php",
        "Returns a reversed copy"
    ],
    "DsSequencerotate": [
        "Ds\\Sequence::rotate",
        "ds-sequence.rotate.php",
        "Rotates the sequence by a given number of rotations"
    ],
    "DsSequenceset": [
        "Ds\\Sequence::set",
        "ds-sequence.set.php",
        "Updates a value at a given index"
    ],
    "DsSequenceshift": [
        "Ds\\Sequence::shift",
        "ds-sequence.shift.php",
        "Removes and returns the first value"
    ],
    "DsSequenceslice": [
        "Ds\\Sequence::slice",
        "ds-sequence.slice.php",
        "Returns a sub-sequence of a given range"
    ],
    "DsSequencesort": [
        "Ds\\Sequence::sort",
        "ds-sequence.sort.php",
        "Sorts the sequence in-place"
    ],
    "DsSequencesorted": [
        "Ds\\Sequence::sorted",
        "ds-sequence.sorted.php",
        "Returns a sorted copy"
    ],
    "DsSequencesum": [
        "Ds\\Sequence::sum",
        "ds-sequence.sum.php",
        "Returns the sum of all values in the sequence"
    ],
    "DsSequenceunshift": [
        "Ds\\Sequence::unshift",
        "ds-sequence.unshift.php",
        "Adds values to the front of the sequence"
    ],
    "DsSetadd": [
        "Ds\\Set::add",
        "ds-set.add.php",
        "Adds values to the set"
    ],
    "DsSetallocate": [
        "Ds\\Set::allocate",
        "ds-set.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsSetcapacity": [
        "Ds\\Set::capacity",
        "ds-set.capacity.php",
        "Returns the current capacity"
    ],
    "DsSetclear": [
        "Ds\\Set::clear",
        "ds-set.clear.php",
        "Removes all values"
    ],
    "DsSetcontains": [
        "Ds\\Set::contains",
        "ds-set.contains.php",
        "Determines if the set contains all values"
    ],
    "DsSetcopy": [
        "Ds\\Set::copy",
        "ds-set.copy.php",
        "Returns a shallow copy of the set"
    ],
    "DsSetcount": [
        "Ds\\Set::count",
        "ds-set.count.php",
        "Returns the number of values in the set"
    ],
    "DsSetdiff": [
        "Ds\\Set::diff",
        "ds-set.diff.php",
        "Creates a new set using values that aren't in another set"
    ],
    "DsSetfirst": [
        "Ds\\Set::first",
        "ds-set.first.php",
        "Returns the first value in the set"
    ],
    "DsSetget": [
        "Ds\\Set::get",
        "ds-set.get.php",
        "Returns the value at a given index"
    ],
    "DsSetintersect": [
        "Ds\\Set::intersect",
        "ds-set.intersect.php",
        "Creates a new set by intersecting values with another set"
    ],
    "DsSetisEmpty": [
        "Ds\\Set::isEmpty",
        "ds-set.isempty.php",
        "Returns whether the set is empty"
    ],
    "DsSetjoin": [
        "Ds\\Set::join",
        "ds-set.join.php",
        "Joins all values together as a string"
    ],
    "DsSetjsonSerialize": [
        "Ds\\Set::jsonSerialize",
        "ds-set.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsSetlast": [
        "Ds\\Set::last",
        "ds-set.last.php",
        "Returns the last value in the set"
    ],
    "DsSetmerge": [
        "Ds\\Set::merge",
        "ds-set.merge.php",
        "Returns the result of adding all given values to the set"
    ],
    "DsSetreduce": [
        "Ds\\Set::reduce",
        "ds-set.reduce.php",
        "Reduces the set to a single value using a callback function"
    ],
    "DsSetremove": [
        "Ds\\Set::remove",
        "ds-set.remove.php",
        "Removes all given values from the set"
    ],
    "DsSetreverse": [
        "Ds\\Set::reverse",
        "ds-set.reverse.php",
        "Reverses the set in-place"
    ],
    "DsSetreversed": [
        "Ds\\Set::reversed",
        "ds-set.reversed.php",
        "Returns a reversed copy"
    ],
    "DsSetslice": [
        "Ds\\Set::slice",
        "ds-set.slice.php",
        "Returns a sub-set of a given range"
    ],
    "DsSetsort": [
        "Ds\\Set::sort",
        "ds-set.sort.php",
        "Sorts the set in-place"
    ],
    "DsSetsorted": [
        "Ds\\Set::sorted",
        "ds-set.sorted.php",
        "Returns a sorted copy"
    ],
    "DsSetsum": [
        "Ds\\Set::sum",
        "ds-set.sum.php",
        "Returns the sum of all values in the set"
    ],
    "DsSettoArray": [
        "Ds\\Set::toArray",
        "ds-set.toarray.php",
        "Converts the set to an array"
    ],
    "DsSetunion": [
        "Ds\\Set::union",
        "ds-set.union.php",
        "Creates a new set using values from the current instance and another set"
    ],
    "DsSetxor": [
        "Ds\\Set::xor",
        "ds-set.xor.php",
        "Creates a new set using values in either the current instance or in another set, but not in both"
    ],
    "DsSetconstruct": [
        "Ds\\Set::__construct",
        "ds-set.construct.php",
        "Creates a new instance"
    ],
    "DsStackallocate": [
        "Ds\\Stack::allocate",
        "ds-stack.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsStackcapacity": [
        "Ds\\Stack::capacity",
        "ds-stack.capacity.php",
        "Returns the current capacity"
    ],
    "DsStackclear": [
        "Ds\\Stack::clear",
        "ds-stack.clear.php",
        "Removes all values"
    ],
    "DsStackcopy": [
        "Ds\\Stack::copy",
        "ds-stack.copy.php",
        "Returns a shallow copy of the stack"
    ],
    "DsStackcount": [
        "Ds\\Stack::count",
        "ds-stack.count.php",
        "Returns the number of values in the stack"
    ],
    "DsStackisEmpty": [
        "Ds\\Stack::isEmpty",
        "ds-stack.isempty.php",
        "Returns whether the stack is empty"
    ],
    "DsStackjsonSerialize": [
        "Ds\\Stack::jsonSerialize",
        "ds-stack.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsStackpeek": [
        "Ds\\Stack::peek",
        "ds-stack.peek.php",
        "Returns the value at the top of the stack"
    ],
    "DsStackpop": [
        "Ds\\Stack::pop",
        "ds-stack.pop.php",
        "Removes and returns the value at the top of the stack"
    ],
    "DsStackpush": [
        "Ds\\Stack::push",
        "ds-stack.push.php",
        "Pushes values onto the stack"
    ],
    "DsStacktoArray": [
        "Ds\\Stack::toArray",
        "ds-stack.toarray.php",
        "Converts the stack to an array"
    ],
    "DsStackconstruct": [
        "Ds\\Stack::__construct",
        "ds-stack.construct.php",
        "Creates a new instance"
    ],
    "DsVectorallocate": [
        "Ds\\Vector::allocate",
        "ds-vector.allocate.php",
        "Allocates enough memory for a required capacity"
    ],
    "DsVectorapply": [
        "Ds\\Vector::apply",
        "ds-vector.apply.php",
        "Updates all values by applying a callback function to each value"
    ],
    "DsVectorcapacity": [
        "Ds\\Vector::capacity",
        "ds-vector.capacity.php",
        "Returns the current capacity"
    ],
    "DsVectorclear": [
        "Ds\\Vector::clear",
        "ds-vector.clear.php",
        "Removes all values"
    ],
    "DsVectorcontains": [
        "Ds\\Vector::contains",
        "ds-vector.contains.php",
        "Determines if the vector contains given values"
    ],
    "DsVectorcopy": [
        "Ds\\Vector::copy",
        "ds-vector.copy.php",
        "Returns a shallow copy of the vector"
    ],
    "DsVectorcount": [
        "Ds\\Vector::count",
        "ds-vector.count.php",
        "Returns the number of values in the collection"
    ],
    "DsVectorfind": [
        "Ds\\Vector::find",
        "ds-vector.find.php",
        "Attempts to find a value's index"
    ],
    "DsVectorfirst": [
        "Ds\\Vector::first",
        "ds-vector.first.php",
        "Returns the first value in the vector"
    ],
    "DsVectorget": [
        "Ds\\Vector::get",
        "ds-vector.get.php",
        "Returns the value at a given index"
    ],
    "DsVectorinsert": [
        "Ds\\Vector::insert",
        "ds-vector.insert.php",
        "Inserts values at a given index"
    ],
    "DsVectorisEmpty": [
        "Ds\\Vector::isEmpty",
        "ds-vector.isempty.php",
        "Returns whether the vector is empty"
    ],
    "DsVectorjoin": [
        "Ds\\Vector::join",
        "ds-vector.join.php",
        "Joins all values together as a string"
    ],
    "DsVectorjsonSerialize": [
        "Ds\\Vector::jsonSerialize",
        "ds-vector.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "DsVectorlast": [
        "Ds\\Vector::last",
        "ds-vector.last.php",
        "Returns the last value"
    ],
    "DsVectormap": [
        "Ds\\Vector::map",
        "ds-vector.map.php",
        "Returns the result of applying a callback to each value"
    ],
    "DsVectormerge": [
        "Ds\\Vector::merge",
        "ds-vector.merge.php",
        "Returns the result of adding all given values to the vector"
    ],
    "DsVectorpop": [
        "Ds\\Vector::pop",
        "ds-vector.pop.php",
        "Removes and returns the last value"
    ],
    "DsVectorpush": [
        "Ds\\Vector::push",
        "ds-vector.push.php",
        "Adds values to the end of the vector"
    ],
    "DsVectorreduce": [
        "Ds\\Vector::reduce",
        "ds-vector.reduce.php",
        "Reduces the vector to a single value using a callback function"
    ],
    "DsVectorremove": [
        "Ds\\Vector::remove",
        "ds-vector.remove.php",
        "Removes and returns a value by index"
    ],
    "DsVectorreverse": [
        "Ds\\Vector::reverse",
        "ds-vector.reverse.php",
        "Reverses the vector in-place"
    ],
    "DsVectorreversed": [
        "Ds\\Vector::reversed",
        "ds-vector.reversed.php",
        "Returns a reversed copy"
    ],
    "DsVectorrotate": [
        "Ds\\Vector::rotate",
        "ds-vector.rotate.php",
        "Rotates the vector by a given number of rotations"
    ],
    "DsVectorset": [
        "Ds\\Vector::set",
        "ds-vector.set.php",
        "Updates a value at a given index"
    ],
    "DsVectorshift": [
        "Ds\\Vector::shift",
        "ds-vector.shift.php",
        "Removes and returns the first value"
    ],
    "DsVectorslice": [
        "Ds\\Vector::slice",
        "ds-vector.slice.php",
        "Returns a sub-vector of a given range"
    ],
    "DsVectorsort": [
        "Ds\\Vector::sort",
        "ds-vector.sort.php",
        "Sorts the vector in-place"
    ],
    "DsVectorsorted": [
        "Ds\\Vector::sorted",
        "ds-vector.sorted.php",
        "Returns a sorted copy"
    ],
    "DsVectorsum": [
        "Ds\\Vector::sum",
        "ds-vector.sum.php",
        "Returns the sum of all values in the vector"
    ],
    "DsVectortoArray": [
        "Ds\\Vector::toArray",
        "ds-vector.toarray.php",
        "Converts the vector to an array"
    ],
    "DsVectorunshift": [
        "Ds\\Vector::unshift",
        "ds-vector.unshift.php",
        "Adds values to the front of the vector"
    ],
    "DsVectorconstruct": [
        "Ds\\Vector::__construct",
        "ds-vector.construct.php",
        "Creates a new instance"
    ],
    "each": [
        "each",
        "function.each.php",
        "配列から現在のキーと値のペアを返して、カーソルを進める"
    ],
    "easterdate": [
        "easter_date",
        "function.easter-date.php",
        "指定した年における復活祭の真夜中のUnix時を得る"
    ],
    "easterdays": [
        "easter_days",
        "function.easter-days.php",
        "指定した年において、3 月 21 日から復活祭までの日数を得る"
    ],
    "echo": [
        "echo",
        "function.echo.php",
        "1 つ以上の文字列を出力する"
    ],
    "eiobusy": [
        "eio_busy",
        "function.eio-busy.php",
        "人為的に負荷を高くする。テストやベンチマークなどで有用"
    ],
    "eiocancel": [
        "eio_cancel",
        "function.eio-cancel.php",
        "リクエストを取り消す"
    ],
    "eiochmod": [
        "eio_chmod",
        "function.eio-chmod.php",
        "ファイルやディレクトリのパーミッションを変更する"
    ],
    "eiochown": [
        "eio_chown",
        "function.eio-chown.php",
        "ファイルやディレクトリのオーナーを変更する"
    ],
    "eioclose": [
        "eio_close",
        "function.eio-close.php",
        "ファイルを閉じる"
    ],
    "eiocustom": [
        "eio_custom",
        "function.eio-custom.php",
        "eio_* のようなカスタムリクエストを実行する"
    ],
    "eiodup2": [
        "eio_dup2",
        "function.eio-dup2.php",
        "ファイルディスクリプタを複製する"
    ],
    "eioeventloop": [
        "eio_event_loop",
        "function.eio-event-loop.php",
        "すべてのリクエストを処理し終えるまで libeio をポールする"
    ],
    "eiofallocate": [
        "eio_fallocate",
        "function.eio-fallocate.php",
        "呼び出し元が、ファイルに割り当てられたディスク空間を直接操作できるようにする"
    ],
    "eiofchmod": [
        "eio_fchmod",
        "function.eio-fchmod.php",
        "ファイルのパーミッションを変更する"
    ],
    "eiofchown": [
        "eio_fchown",
        "function.eio-fchown.php",
        "ファイルのオーナーを変更する"
    ],
    "eiofdatasync": [
        "eio_fdatasync",
        "function.eio-fdatasync.php",
        "ファイルのコア内の情報をストレージデバイスに同期させる"
    ],
    "eiofstat": [
        "eio_fstat",
        "function.eio-fstat.php",
        "ファイルの状態を取得する"
    ],
    "eiofstatvfs": [
        "eio_fstatvfs",
        "function.eio-fstatvfs.php",
        "ファイルシステムの状態を取得する"
    ],
    "eiofsync": [
        "eio_fsync",
        "function.eio-fsync.php",
        "メモリ内でのファイルの状態をストレージデバイスに同期させる"
    ],
    "eioftruncate": [
        "eio_ftruncate",
        "function.eio-ftruncate.php",
        "ファイルを切り詰める"
    ],
    "eiofutime": [
        "eio_futime",
        "function.eio-futime.php",
        "ファイルの最終アクセス時刻と変更時刻を変更する"
    ],
    "eiogeteventstream": [
        "eio_get_event_stream",
        "function.eio-get-event-stream.php",
        "内部での libeio との通信に使う変数を表すストリームを取得する"
    ],
    "eiogetlasterror": [
        "eio_get_last_error",
        "function.eio-get-last-error.php",
        "リクエストリソースに関連づけられた直近のエラーの説明を文字列で返す"
    ],
    "eiogrp": [
        "eio_grp",
        "function.eio-grp.php",
        "リクエストグループを作る"
    ],
    "eiogrpadd": [
        "eio_grp_add",
        "function.eio-grp-add.php",
        "リクエストをリクエストグループに追加する"
    ],
    "eiogrpcancel": [
        "eio_grp_cancel",
        "function.eio-grp-cancel.php",
        "リクエストグループをキャンセルする"
    ],
    "eiogrplimit": [
        "eio_grp_limit",
        "function.eio-grp-limit.php",
        "グループリミットを設定する"
    ],
    "eioinit": [
        "eio_init",
        "function.eio-init.php",
        "Eio を初期化する"
    ],
    "eiolink": [
        "eio_link",
        "function.eio-link.php",
        "ファイルのハードリンクを作る"
    ],
    "eiolstat": [
        "eio_lstat",
        "function.eio-lstat.php",
        "ファイルの状態を取得する"
    ],
    "eiomkdir": [
        "eio_mkdir",
        "function.eio-mkdir.php",
        "ディレクトリを作る"
    ],
    "eiomknod": [
        "eio_mknod",
        "function.eio-mknod.php",
        "特殊ファイルあるいは一般ファイルを作る"
    ],
    "eionop": [
        "eio_nop",
        "function.eio-nop.php",
        "何もせず、ただリクエストのサイクルを回す"
    ],
    "eionpending": [
        "eio_npending",
        "function.eio-npending.php",
        "終了したけれども処理されなかったリクエストの数を返す"
    ],
    "eionready": [
        "eio_nready",
        "function.eio-nready.php",
        "未処理のリクエスト数を返す"
    ],
    "eionreqs": [
        "eio_nreqs",
        "function.eio-nreqs.php",
        "処理対象のリクエスト数を返す"
    ],
    "eionthreads": [
        "eio_nthreads",
        "function.eio-nthreads.php",
        "現在利用中のスレッド数を返す"
    ],
    "eioopen": [
        "eio_open",
        "function.eio-open.php",
        "ファイルを開く"
    ],
    "eiopoll": [
        "eio_poll",
        "function.eio-poll.php",
        "未処理のリクエストがあるかどうかを調べる"
    ],
    "eioread": [
        "eio_read",
        "function.eio-read.php",
        "ファイルを、指定したオフセットから読み込む"
    ],
    "eioreadahead": [
        "eio_readahead",
        "function.eio-readahead.php",
        "ファイルを先読みしてページキャッシュに格納する"
    ],
    "eioreaddir": [
        "eio_readdir",
        "function.eio-readdir.php",
        "ディレクトリ全体を読み込む"
    ],
    "eioreadlink": [
        "eio_readlink",
        "function.eio-readlink.php",
        "シンボリックリンクの値を読む"
    ],
    "eiorealpath": [
        "eio_realpath",
        "function.eio-realpath.php",
        "正規化された絶対パスを取得する"
    ],
    "eiorename": [
        "eio_rename",
        "function.eio-rename.php",
        "ファイル名や場所を変更する"
    ],
    "eiormdir": [
        "eio_rmdir",
        "function.eio-rmdir.php",
        "ディレクトリを削除する"
    ],
    "eioseek": [
        "eio_seek",
        "function.eio-seek.php",
        "fd で指定したファイル内でのオフセットを、offset と whence に従って移動する"
    ],
    "eiosendfile": [
        "eio_sendfile",
        "function.eio-sendfile.php",
        "ファイルディスクリプタ間でデータを転送する"
    ],
    "eiosetmaxidle": [
        "eio_set_max_idle",
        "function.eio-set-max-idle.php",
        "アイドルスレッドの最大数を設定する"
    ],
    "eiosetmaxparallel": [
        "eio_set_max_parallel",
        "function.eio-set-max-parallel.php",
        "最大の並列スレッド数を設定する"
    ],
    "eiosetmaxpollreqs": [
        "eio_set_max_poll_reqs",
        "function.eio-set-max-poll-reqs.php",
        "一度のポールで行う最大のリクエスト回数を設定する"
    ],
    "eiosetmaxpolltime": [
        "eio_set_max_poll_time",
        "function.eio-set-max-poll-time.php",
        "最大のポール時間を設定する"
    ],
    "eiosetminparallel": [
        "eio_set_min_parallel",
        "function.eio-set-min-parallel.php",
        "最小の並列スレッド数を設定する"
    ],
    "eiostat": [
        "eio_stat",
        "function.eio-stat.php",
        "ファイルの状態を取得する"
    ],
    "eiostatvfs": [
        "eio_statvfs",
        "function.eio-statvfs.php",
        "ファイルシステムの状態を取得する"
    ],
    "eiosymlink": [
        "eio_symlink",
        "function.eio-symlink.php",
        "シンボリックリンクを作る"
    ],
    "eiosync": [
        "eio_sync",
        "function.eio-sync.php",
        "バッファのキャッシュをディスクに書き込む"
    ],
    "eiosyncfs": [
        "eio_syncfs",
        "function.eio-syncfs.php",
        "Linux の syncfs システムコールが使えれば、それを呼ぶ"
    ],
    "eiosyncfilerange": [
        "eio_sync_file_range",
        "function.eio-sync-file-range.php",
        "ファイルセグメントをディスクに同期する"
    ],
    "eiotruncate": [
        "eio_truncate",
        "function.eio-truncate.php",
        "ファイルを切り詰める"
    ],
    "eiounlink": [
        "eio_unlink",
        "function.eio-unlink.php",
        "名前を削除し、その名前で参照しているファイルも削除する"
    ],
    "eioutime": [
        "eio_utime",
        "function.eio-utime.php",
        "ファイルの最終アクセス時刻と変更時刻を変更する"
    ],
    "eiowrite": [
        "eio_write",
        "function.eio-write.php",
        "ファイルに書き込む"
    ],
    "empty": [
        "empty",
        "function.empty.php",
        "変数が空であるかどうかを検査する"
    ],
    "EmptyIteratorcurrent": [
        "EmptyIterator::current",
        "emptyiterator.current.php",
        "current() メソッド"
    ],
    "EmptyIteratorkey": [
        "EmptyIterator::key",
        "emptyiterator.key.php",
        "key() メソッド"
    ],
    "EmptyIteratornext": [
        "EmptyIterator::next",
        "emptyiterator.next.php",
        "next() メソッド"
    ],
    "EmptyIteratorrewind": [
        "EmptyIterator::rewind",
        "emptyiterator.rewind.php",
        "rewind() メソッド"
    ],
    "EmptyIteratorvalid": [
        "EmptyIterator::valid",
        "emptyiterator.valid.php",
        "valid() メソッド"
    ],
    "enchantbrokerdescribe": [
        "enchant_broker_describe",
        "function.enchant-broker-describe.php",
        "Enchant プロバイダを列挙する"
    ],
    "enchantbrokerdictexists": [
        "enchant_broker_dict_exists",
        "function.enchant-broker-dict-exists.php",
        "辞書が存在するかどうかを調べる。空でないタグを使用する"
    ],
    "enchantbrokerfree": [
        "enchant_broker_free",
        "function.enchant-broker-free.php",
        "ブローカーリソースおよびその辞書を開放する"
    ],
    "enchantbrokerfreedict": [
        "enchant_broker_free_dict",
        "function.enchant-broker-free-dict.php",
        "辞書リソースを開放する"
    ],
    "enchantbrokergetdictpath": [
        "enchant_broker_get_dict_path",
        "function.enchant-broker-get-dict-path.php",
        "Get the directory path for a given backend"
    ],
    "enchantbrokergeterror": [
        "enchant_broker_get_error",
        "function.enchant-broker-get-error.php",
        "ブローカーの直近のエラーを返す"
    ],
    "enchantbrokerinit": [
        "enchant_broker_init",
        "function.enchant-broker-init.php",
        "要求を満たすブローカーオブジェクトを作成する"
    ],
    "enchantbrokerlistdicts": [
        "enchant_broker_list_dicts",
        "function.enchant-broker-list-dicts.php",
        "使用可能な辞書の一覧を返す"
    ],
    "enchantbrokerrequestdict": [
        "enchant_broker_request_dict",
        "function.enchant-broker-request-dict.php",
        "タグを使用して新しい辞書を作成する"
    ],
    "enchantbrokerrequestpwldict": [
        "enchant_broker_request_pwl_dict",
        "function.enchant-broker-request-pwl-dict.php",
        "PWL ファイルを使用して辞書を作成する"
    ],
    "enchantbrokersetdictpath": [
        "enchant_broker_set_dict_path",
        "function.enchant-broker-set-dict-path.php",
        "Set the directory path for a given backend"
    ],
    "enchantbrokersetordering": [
        "enchant_broker_set_ordering",
        "function.enchant-broker-set-ordering.php",
        "その言語で使用する辞書の優先順位を宣言する"
    ],
    "enchantdictaddtopersonal": [
        "enchant_dict_add_to_personal",
        "function.enchant-dict-add-to-personal.php",
        "パーソナル単語リストに単語を追加する"
    ],
    "enchantdictaddtosession": [
        "enchant_dict_add_to_session",
        "function.enchant-dict-add-to-session.php",
        "'単語' を、このスペルチェックセッションに追加する"
    ],
    "enchantdictcheck": [
        "enchant_dict_check",
        "function.enchant-dict-check.php",
        "単語のスペルが正しいかどうかを調べる"
    ],
    "enchantdictdescribe": [
        "enchant_dict_describe",
        "function.enchant-dict-describe.php",
        "個々の辞書について説明する"
    ],
    "enchantdictgeterror": [
        "enchant_dict_get_error",
        "function.enchant-dict-get-error.php",
        "現在のスペリングセッションの直近のエラーを返す"
    ],
    "enchantdictisinsession": [
        "enchant_dict_is_in_session",
        "function.enchant-dict-is-in-session.php",
        "このスペリングセッションに '単語' が存在するかどうかを調べる"
    ],
    "enchantdictquickcheck": [
        "enchant_dict_quick_check",
        "function.enchant-dict-quick-check.php",
        "単語のスペルが正しいかどうかを調べ、修正候補を提供する"
    ],
    "enchantdictstorereplacement": [
        "enchant_dict_store_replacement",
        "function.enchant-dict-store-replacement.php",
        "単語の修正候補を追加する"
    ],
    "enchantdictsuggest": [
        "enchant_dict_suggest",
        "function.enchant-dict-suggest.php",
        "修正候補となる値の一覧を返す"
    ],
    "end": [
        "end",
        "function.end.php",
        "配列の内部ポインタを最終要素にセットする"
    ],
    "ereg": [
        "ereg",
        "function.ereg.php",
        "正規表現によるマッチングを行う"
    ],
    "eregi": [
        "eregi",
        "function.eregi.php",
        "大文字小文字を区別せずに正規表現によるマッチングを行う"
    ],
    "eregireplace": [
        "eregi_replace",
        "function.eregi-replace.php",
        "大文字小文字を区別せずに正規表現による置換を行う"
    ],
    "eregreplace": [
        "ereg_replace",
        "function.ereg-replace.php",
        "正規表現による置換を行う"
    ],
    "ErrorgetCode": [
        "Error::getCode",
        "error.getcode.php",
        "エラーコードを取得する"
    ],
    "ErrorgetFile": [
        "Error::getFile",
        "error.getfile.php",
        "エラーが起きたファイルを取得する"
    ],
    "ErrorgetLine": [
        "Error::getLine",
        "error.getline.php",
        "エラーが起きた行番号を取得する"
    ],
    "ErrorgetMessage": [
        "Error::getMessage",
        "error.getmessage.php",
        "エラーメッセージを取得する"
    ],
    "ErrorgetPrevious": [
        "Error::getPrevious",
        "error.getprevious.php",
        "直前の Throwable を返す"
    ],
    "ErrorgetTrace": [
        "Error::getTrace",
        "error.gettrace.php",
        "スタックトレースを取得する"
    ],
    "ErrorgetTraceAsString": [
        "Error::getTraceAsString",
        "error.gettraceasstring.php",
        "スタックトレースを文字列として取得する"
    ],
    "Errorclone": [
        "Error::__clone",
        "error.clone.php",
        "エラーをクローンする"
    ],
    "Errorconstruct": [
        "Error::__construct",
        "error.construct.php",
        "エラーオブジェクトを生成する"
    ],
    "ErrortoString": [
        "Error::__toString",
        "error.tostring.php",
        "エラーの文字列表現"
    ],
    "ErrorExceptiongetSeverity": [
        "ErrorException::getSeverity",
        "errorexception.getseverity.php",
        "例外の深刻度を取得する"
    ],
    "ErrorExceptionconstruct": [
        "ErrorException::__construct",
        "errorexception.construct.php",
        "例外を作成する"
    ],
    "errorclearlast": [
        "error_clear_last",
        "function.error-clear-last.php",
        "最も最近のエラーをクリア"
    ],
    "errorgetlast": [
        "error_get_last",
        "function.error-get-last.php",
        "最後に発生したエラーを取得する"
    ],
    "errorlog": [
        "error_log",
        "function.error-log.php",
        "定義されたエラー処理ルーチンにエラーメッセージを送信する"
    ],
    "errorreporting": [
        "error_reporting",
        "function.error-reporting.php",
        "出力する PHP エラーの種類を設定する"
    ],
    "escapeshellarg": [
        "escapeshellarg",
        "function.escapeshellarg.php",
        "シェル引数として使用される文字列をエスケープする"
    ],
    "escapeshellcmd": [
        "escapeshellcmd",
        "function.escapeshellcmd.php",
        "シェルのメタ文字をエスケープする"
    ],
    "Evbackend": [
        "Ev::backend",
        "ev.backend.php",
        "libev が使うバックエンドを表す整数値を返す"
    ],
    "Evdepth": [
        "Ev::depth",
        "ev.depth.php",
        "再帰の深さを返す"
    ],
    "EvembeddableBackends": [
        "Ev::embeddableBackends",
        "ev.embeddablebackends.php",
        "他のイベントループに埋め込めるバックエンド群を返す"
    ],
    "EvfeedSignal": [
        "Ev::feedSignal",
        "ev.feedsignal.php",
        "シグナルイベントを Ev に送る"
    ],
    "EvfeedSignalEvent": [
        "Ev::feedSignalEvent",
        "ev.feedsignalevent.php",
        "シグナルイベントの情報をデフォルトループに送る"
    ],
    "Eviteration": [
        "Ev::iteration",
        "ev.iteration.php",
        "デフォルトのイベントループが新しいイベントをポーリングした回数を返す"
    ],
    "Evnow": [
        "Ev::now",
        "ev.now.php",
        "デフォルトのイベントループで直近の処理が始まった時刻を返す"
    ],
    "EvnowUpdate": [
        "Ev::nowUpdate",
        "ev.nowupdate.php",
        "カーネルに問い合わせて現在時刻を確認し、処理中の Ev::now が返す時刻を更新する"
    ],
    "EvrecommendedBackends": [
        "Ev::recommendedBackends",
        "ev.recommendedbackends.php",
        "現在のプラットフォーム上でおすすめのバックエンドのビットマスクを返す"
    ],
    "Evresume": [
        "Ev::resume",
        "ev.resume.php",
        "一時停止していたデフォルトのイベントループを再開させる"
    ],
    "Evrun": [
        "Ev::run",
        "ev.run.php",
        "イベントのチェックとデフォルトループのコールバックの呼び出しを開始する"
    ],
    "Evsleep": [
        "Ev::sleep",
        "ev.sleep.php",
        "指定した秒数だけプロセスをブロックする"
    ],
    "Evstop": [
        "Ev::stop",
        "ev.stop.php",
        "デフォルトのイベントループを止める"
    ],
    "EvsupportedBackends": [
        "Ev::supportedBackends",
        "ev.supportedbackends.php",
        "現在の libev の構成でサポートするバックエンド群を返す"
    ],
    "Evsuspend": [
        "Ev::suspend",
        "ev.suspend.php",
        "デフォルトのイベントループを一時停止する"
    ],
    "Evtime": [
        "Ev::time",
        "ev.time.php",
        "epoch から現在時刻までの秒数を返す"
    ],
    "Evverify": [
        "Ev::verify",
        "ev.verify.php",
        "内部の整合性をチェックする (デバッグ用)"
    ],
    "eval": [
        "eval",
        "function.eval.php",
        "文字列を PHP コードとして評価する"
    ],
    "EvCheckcreateStopped": [
        "EvCheck::createStopped",
        "evcheck.createstopped.php",
        "停止した EvCheck ウォッチャーのインスタンスを作る"
    ],
    "EvCheckconstruct": [
        "EvCheck::__construct",
        "evcheck.construct.php",
        "EvCheck ウォッチャーオブジェクトを作る"
    ],
    "EvChildcreateStopped": [
        "EvChild::createStopped",
        "evchild.createstopped.php",
        "停止した EvChild ウォッチャーのインスタンスを作る"
    ],
    "EvChildset": [
        "EvChild::set",
        "evchild.set.php",
        "ウォッチャーを設定する"
    ],
    "EvChildconstruct": [
        "EvChild::__construct",
        "evchild.construct.php",
        "EvChild ウォッチャーオブジェクトを作る"
    ],
    "EvEmbedcreateStopped": [
        "EvEmbed::createStopped",
        "evembed.createstopped.php",
        "停止した EvEmbed ウォッチャーのインスタンスを作る"
    ],
    "EvEmbedset": [
        "EvEmbed::set",
        "evembed.set.php",
        "ウォッチャーを設定する"
    ],
    "EvEmbedsweep": [
        "EvEmbed::sweep",
        "evembed.sweep.php",
        "埋め込んだループに対して単一の非ブロックスイープを行う"
    ],
    "EvEmbedconstruct": [
        "EvEmbed::__construct",
        "evembed.construct.php",
        "EvEmbed オブジェクトを作る"
    ],
    "Eventadd": [
        "Event::add",
        "event.add.php",
        "Makes event pending"
    ],
    "EventaddSignal": [
        "Event::addSignal",
        "event.addsignal.php",
        "Makes signal event pending"
    ],
    "EventaddTimer": [
        "Event::addTimer",
        "event.addtimer.php",
        "Makes timer event pending"
    ],
    "Eventdel": [
        "Event::del",
        "event.del.php",
        "Makes event non-pending"
    ],
    "EventdelSignal": [
        "Event::delSignal",
        "event.delsignal.php",
        "Makes signal event non-pending"
    ],
    "EventdelTimer": [
        "Event::delTimer",
        "event.deltimer.php",
        "Makes timer event non-pending"
    ],
    "EventgetSupportedMethods": [
        "Event::getSupportedMethods",
        "event.getsupportedmethods.php",
        "Returns array with of the names of the methods supported in this version of Libevent"
    ],
    "Eventpending": [
        "Event::pending",
        "event.pending.php",
        "Detects whether event is pending or scheduled"
    ],
    "Eventset": [
        "Event::set",
        "event.set.php",
        "Re-configures event"
    ],
    "EventsetPriority": [
        "Event::setPriority",
        "event.setpriority.php",
        "Set event priority"
    ],
    "EventsetTimer": [
        "Event::setTimer",
        "event.settimer.php",
        "Re-configures timer event"
    ],
    "Eventsignal": [
        "Event::signal",
        "event.signal.php",
        "Constructs signal event object"
    ],
    "Eventtimer": [
        "Event::timer",
        "event.timer.php",
        "Constructs timer event object"
    ],
    "Eventconstruct": [
        "Event::__construct",
        "event.construct.php",
        "Constructs Event object"
    ],
    "EventBasedispatch": [
        "EventBase::dispatch",
        "eventbase.dispatch.php",
        "Dispatch pending events"
    ],
    "EventBaseexit": [
        "EventBase::exit",
        "eventbase.exit.php",
        "Stop dispatching events"
    ],
    "EventBasefree": [
        "EventBase::free",
        "eventbase.free.php",
        "Free resources allocated for this event base"
    ],
    "EventBasegetFeatures": [
        "EventBase::getFeatures",
        "eventbase.getfeatures.php",
        "Returns bitmask of features supported"
    ],
    "EventBasegetMethod": [
        "EventBase::getMethod",
        "eventbase.getmethod.php",
        "Returns event method in use"
    ],
    "EventBasegetTimeOfDayCached": [
        "EventBase::getTimeOfDayCached",
        "eventbase.gettimeofdaycached.php",
        "Returns the current event base time"
    ],
    "EventBasegotExit": [
        "EventBase::gotExit",
        "eventbase.gotexit.php",
        "Checks if the event loop was told to exit"
    ],
    "EventBasegotStop": [
        "EventBase::gotStop",
        "eventbase.gotstop.php",
        "Checks if the event loop was told to exit"
    ],
    "EventBaseloop": [
        "EventBase::loop",
        "eventbase.loop.php",
        "Dispatch pending events"
    ],
    "EventBasepriorityInit": [
        "EventBase::priorityInit",
        "eventbase.priorityinit.php",
        "Sets number of priorities per event base"
    ],
    "EventBasereInit": [
        "EventBase::reInit",
        "eventbase.reinit.php",
        "Re-initialize event base(after a fork)"
    ],
    "EventBasestop": [
        "EventBase::stop",
        "eventbase.stop.php",
        "Tells event_base to stop dispatching events"
    ],
    "EventBaseconstruct": [
        "EventBase::__construct",
        "eventbase.construct.php",
        "Constructs EventBase object"
    ],
    "EventBufferadd": [
        "EventBuffer::add",
        "eventbuffer.add.php",
        "Append data to the end of an event buffer"
    ],
    "EventBufferaddBuffer": [
        "EventBuffer::addBuffer",
        "eventbuffer.addbuffer.php",
        "Move all data from a buffer provided to the current instance of EventBuffer"
    ],
    "EventBuffercopyout": [
        "EventBuffer::copyout",
        "eventbuffer.copyout.php",
        "Copies out specified number of bytes from the front of the buffer"
    ],
    "EventBufferenableLocking": [
        "EventBuffer::enableLocking",
        "eventbuffer.enablelocking.php",
        "説明"
    ],
    "EventBufferexpand": [
        "EventBuffer::expand",
        "eventbuffer.expand.php",
        "Reserves space in buffer"
    ],
    "EventBufferfreeze": [
        "EventBuffer::freeze",
        "eventbuffer.freeze.php",
        "Prevent calls that modify an event buffer from succeeding"
    ],
    "EventBufferlock": [
        "EventBuffer::lock",
        "eventbuffer.lock.php",
        "Acquires a lock on buffer"
    ],
    "EventBufferprepend": [
        "EventBuffer::prepend",
        "eventbuffer.prepend.php",
        "Prepend data to the front of the buffer"
    ],
    "EventBufferprependBuffer": [
        "EventBuffer::prependBuffer",
        "eventbuffer.prependbuffer.php",
        "Moves all data from source buffer to the front of current buffer"
    ],
    "EventBufferread": [
        "EventBuffer::read",
        "eventbuffer.read.php",
        "Read data from an evbuffer and drain the bytes read"
    ],
    "EventBufferreadFrom": [
        "EventBuffer::readFrom",
        "eventbuffer.readfrom.php",
        "Read data from a file onto the end of the buffer"
    ],
    "EventBufferreadLine": [
        "EventBuffer::readLine",
        "eventbuffer.readline.php",
        "Extracts a line from the front of the buffer"
    ],
    "EventBuffersearch": [
        "EventBuffer::search",
        "eventbuffer.search.php",
        "Scans the buffer for an occurrence of a string"
    ],
    "EventBuffersearchEol": [
        "EventBuffer::searchEol",
        "eventbuffer.searcheol.php",
        "Scans the buffer for an occurrence of an end of line"
    ],
    "EventBuffersubstr": [
        "EventBuffer::substr",
        "eventbuffer.substr.php",
        "Substracts a portion of the buffer data"
    ],
    "EventBufferunfreeze": [
        "EventBuffer::unfreeze",
        "eventbuffer.unfreeze.php",
        "Re-enable calls that modify an event buffer"
    ],
    "EventBufferunlock": [
        "EventBuffer::unlock",
        "eventbuffer.unlock.php",
        "Releases lock acquired by EventBuffer::lock"
    ],
    "EventBufferwrite": [
        "EventBuffer::write",
        "eventbuffer.write.php",
        "Write contents of the buffer to a file or socket"
    ],
    "EventBufferconstruct": [
        "EventBuffer::__construct",
        "eventbuffer.construct.php",
        "Constructs EventBuffer object"
    ],
    "EventBufferEventclose": [
        "EventBufferEvent::close",
        "eventbufferevent.close.php",
        "Closes file descriptor associated with the current buffer event"
    ],
    "EventBufferEventconnectHost": [
        "EventBufferEvent::connectHost",
        "eventbufferevent.connecthost.php",
        "Connects to a hostname with optionally asyncronous DNS resolving"
    ],
    "EventBufferEventcreatePair": [
        "EventBufferEvent::createPair",
        "eventbufferevent.createpair.php",
        "Creates two buffer events connected to each other"
    ],
    "EventBufferEventdisable": [
        "EventBufferEvent::disable",
        "eventbufferevent.disable.php",
        "Disable events read, write, or both on a buffer event"
    ],
    "EventBufferEventenable": [
        "EventBufferEvent::enable",
        "eventbufferevent.enable.php",
        "Enable events read, write, or both on a buffer event"
    ],
    "EventBufferEventfree": [
        "EventBufferEvent::free",
        "eventbufferevent.free.php",
        "Free a buffer event"
    ],
    "EventBufferEventgetDnsErrorString": [
        "EventBufferEvent::getDnsErrorString",
        "eventbufferevent.getdnserrorstring.php",
        "Returns string describing the last failed DNS lookup attempt"
    ],
    "EventBufferEventgetEnabled": [
        "EventBufferEvent::getEnabled",
        "eventbufferevent.getenabled.php",
        "Returns bitmask of events currently enabled on the buffer event"
    ],
    "EventBufferEventread": [
        "EventBufferEvent::read",
        "eventbufferevent.read.php",
        "Read buffer's data"
    ],
    "EventBufferEventreadBuffer": [
        "EventBufferEvent::readBuffer",
        "eventbufferevent.readbuffer.php",
        "Drains the entire contents of the input buffer and places them into buf"
    ],
    "EventBufferEventsetCallbacks": [
        "EventBufferEvent::setCallbacks",
        "eventbufferevent.setcallbacks.php",
        "Assigns read, write and event(status) callbacks"
    ],
    "EventBufferEventsetPriority": [
        "EventBufferEvent::setPriority",
        "eventbufferevent.setpriority.php",
        "Assign a priority to a bufferevent"
    ],
    "EventBufferEventsetTimeouts": [
        "EventBufferEvent::setTimeouts",
        "eventbufferevent.settimeouts.php",
        "Set the read and write timeout for a buffer event"
    ],
    "EventBufferEventsetWatermark": [
        "EventBufferEvent::setWatermark",
        "eventbufferevent.setwatermark.php",
        "Adjusts read and/or write watermarks"
    ],
    "EventBufferEventsslError": [
        "EventBufferEvent::sslError",
        "eventbufferevent.sslerror.php",
        "Returns most recent OpenSSL error reported on the buffer event"
    ],
    "EventBufferEventsslFilter": [
        "EventBufferEvent::sslFilter",
        "eventbufferevent.sslfilter.php",
        "Create a new SSL buffer event to send its data over another buffer event"
    ],
    "EventBufferEventsslGetCipherInfo": [
        "EventBufferEvent::sslGetCipherInfo",
        "eventbufferevent.sslgetcipherinfo.php",
        "Returns a textual description of the cipher"
    ],
    "EventBufferEventsslGetCipherName": [
        "EventBufferEvent::sslGetCipherName",
        "eventbufferevent.sslgetciphername.php",
        "Returns the current cipher name of the SSL connection"
    ],
    "EventBufferEventsslGetCipherVersion": [
        "EventBufferEvent::sslGetCipherVersion",
        "eventbufferevent.sslgetcipherversion.php",
        "Returns version of cipher used by current SSL connection"
    ],
    "EventBufferEventsslGetProtocol": [
        "EventBufferEvent::sslGetProtocol",
        "eventbufferevent.sslgetprotocol.php",
        "Returns the name of the protocol used for current SSL connection"
    ],
    "EventBufferEventsslRenegotiate": [
        "EventBufferEvent::sslRenegotiate",
        "eventbufferevent.sslrenegotiate.php",
        "Tells a bufferevent to begin SSL renegotiation"
    ],
    "EventBufferEventsslSocket": [
        "EventBufferEvent::sslSocket",
        "eventbufferevent.sslsocket.php",
        "Creates a new SSL buffer event to send its data over an SSL on a socket"
    ],
    "EventBufferEventwrite": [
        "EventBufferEvent::write",
        "eventbufferevent.write.php",
        "Adds data to a buffer event's output buffer"
    ],
    "EventBufferEventconstruct": [
        "EventBufferEvent::__construct",
        "eventbufferevent.construct.php",
        "Constructs EventBufferEvent object"
    ],
    "EventConfigavoidMethod": [
        "EventConfig::avoidMethod",
        "eventconfig.avoidmethod.php",
        "Tells libevent to avoid specific event method"
    ],
    "EventConfigrequireFeatures": [
        "EventConfig::requireFeatures",
        "eventconfig.requirefeatures.php",
        "Enters a required event method feature that the application demands"
    ],
    "EventConfigsetMaxDispatchInterval": [
        "EventConfig::setMaxDispatchInterval",
        "eventconfig.setmaxdispatchinterval.php",
        "Prevents priority inversion"
    ],
    "EventConfigconstruct": [
        "EventConfig::__construct",
        "eventconfig.construct.php",
        "Constructs EventConfig object"
    ],
    "EventDnsBaseaddNameserverIp": [
        "EventDnsBase::addNameserverIp",
        "eventdnsbase.addnameserverip.php",
        "Adds a nameserver to the DNS base"
    ],
    "EventDnsBaseaddSearch": [
        "EventDnsBase::addSearch",
        "eventdnsbase.addsearch.php",
        "Adds a domain to the list of search domains"
    ],
    "EventDnsBaseclearSearch": [
        "EventDnsBase::clearSearch",
        "eventdnsbase.clearsearch.php",
        "Removes all current search suffixes"
    ],
    "EventDnsBasecountNameservers": [
        "EventDnsBase::countNameservers",
        "eventdnsbase.countnameservers.php",
        "Gets the number of configured nameservers"
    ],
    "EventDnsBaseloadHosts": [
        "EventDnsBase::loadHosts",
        "eventdnsbase.loadhosts.php",
        "Loads a hosts file (in the same format as /etc/hosts) from hosts file"
    ],
    "EventDnsBaseparseResolvConf": [
        "EventDnsBase::parseResolvConf",
        "eventdnsbase.parseresolvconf.php",
        "Scans the resolv.conf-formatted file"
    ],
    "EventDnsBasesetOption": [
        "EventDnsBase::setOption",
        "eventdnsbase.setoption.php",
        "Set the value of a configuration option"
    ],
    "EventDnsBasesetSearchNdots": [
        "EventDnsBase::setSearchNdots",
        "eventdnsbase.setsearchndots.php",
        "Set the 'ndots' parameter for searches"
    ],
    "EventDnsBaseconstruct": [
        "EventDnsBase::__construct",
        "eventdnsbase.construct.php",
        "Constructs EventDnsBase object"
    ],
    "EventHttpaccept": [
        "EventHttp::accept",
        "eventhttp.accept.php",
        "Makes an HTTP server accept connections on the specified socket stream or resource"
    ],
    "EventHttpaddServerAlias": [
        "EventHttp::addServerAlias",
        "eventhttp.addserveralias.php",
        "Adds a server alias to the HTTP server object"
    ],
    "EventHttpbind": [
        "EventHttp::bind",
        "eventhttp.bind.php",
        "Binds an HTTP server on the specified address and port"
    ],
    "EventHttpremoveServerAlias": [
        "EventHttp::removeServerAlias",
        "eventhttp.removeserveralias.php",
        "Removes server alias"
    ],
    "EventHttpsetAllowedMethods": [
        "EventHttp::setAllowedMethods",
        "eventhttp.setallowedmethods.php",
        "Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks"
    ],
    "EventHttpsetCallback": [
        "EventHttp::setCallback",
        "eventhttp.setcallback.php",
        "Sets a callback for specified URI"
    ],
    "EventHttpsetDefaultCallback": [
        "EventHttp::setDefaultCallback",
        "eventhttp.setdefaultcallback.php",
        "Sets default callback to handle requests that are not caught by specific callbacks"
    ],
    "EventHttpsetMaxBodySize": [
        "EventHttp::setMaxBodySize",
        "eventhttp.setmaxbodysize.php",
        "Sets maximum request body size"
    ],
    "EventHttpsetMaxHeadersSize": [
        "EventHttp::setMaxHeadersSize",
        "eventhttp.setmaxheaderssize.php",
        "Sets maximum HTTP header size"
    ],
    "EventHttpsetTimeout": [
        "EventHttp::setTimeout",
        "eventhttp.settimeout.php",
        "Sets the timeout for an HTTP request"
    ],
    "EventHttpconstruct": [
        "EventHttp::__construct",
        "eventhttp.construct.php",
        "Constructs EventHttp object(the HTTP server)"
    ],
    "EventHttpConnectiongetBase": [
        "EventHttpConnection::getBase",
        "eventhttpconnection.getbase.php",
        "Returns event base associated with the connection"
    ],
    "EventHttpConnectiongetPeer": [
        "EventHttpConnection::getPeer",
        "eventhttpconnection.getpeer.php",
        "Gets the remote address and port associated with the connection"
    ],
    "EventHttpConnectionmakeRequest": [
        "EventHttpConnection::makeRequest",
        "eventhttpconnection.makerequest.php",
        "Makes an HTTP request over the specified connection"
    ],
    "EventHttpConnectionsetCloseCallback": [
        "EventHttpConnection::setCloseCallback",
        "eventhttpconnection.setclosecallback.php",
        "Set callback for connection close"
    ],
    "EventHttpConnectionsetLocalAddress": [
        "EventHttpConnection::setLocalAddress",
        "eventhttpconnection.setlocaladdress.php",
        "Sets the IP address from which HTTP connections are made"
    ],
    "EventHttpConnectionsetLocalPort": [
        "EventHttpConnection::setLocalPort",
        "eventhttpconnection.setlocalport.php",
        "Sets the local port from which connections are made"
    ],
    "EventHttpConnectionsetMaxBodySize": [
        "EventHttpConnection::setMaxBodySize",
        "eventhttpconnection.setmaxbodysize.php",
        "Sets maximum body size for the connection"
    ],
    "EventHttpConnectionsetMaxHeadersSize": [
        "EventHttpConnection::setMaxHeadersSize",
        "eventhttpconnection.setmaxheaderssize.php",
        "Sets maximum header size"
    ],
    "EventHttpConnectionsetRetries": [
        "EventHttpConnection::setRetries",
        "eventhttpconnection.setretries.php",
        "Sets the retry limit for the connection"
    ],
    "EventHttpConnectionsetTimeout": [
        "EventHttpConnection::setTimeout",
        "eventhttpconnection.settimeout.php",
        "Sets the timeout for the connection"
    ],
    "EventHttpConnectionconstruct": [
        "EventHttpConnection::__construct",
        "eventhttpconnection.construct.php",
        "Constructs EventHttpConnection object"
    ],
    "EventHttpRequestaddHeader": [
        "EventHttpRequest::addHeader",
        "eventhttprequest.addheader.php",
        "Adds an HTTP header to the headers of the request"
    ],
    "EventHttpRequestcancel": [
        "EventHttpRequest::cancel",
        "eventhttprequest.cancel.php",
        "Cancels a pending HTTP request"
    ],
    "EventHttpRequestclearHeaders": [
        "EventHttpRequest::clearHeaders",
        "eventhttprequest.clearheaders.php",
        "Removes all output headers from the header list of the request"
    ],
    "EventHttpRequestcloseConnection": [
        "EventHttpRequest::closeConnection",
        "eventhttprequest.closeconnection.php",
        "Closes associated HTTP connection"
    ],
    "EventHttpRequestfindHeader": [
        "EventHttpRequest::findHeader",
        "eventhttprequest.findheader.php",
        "Finds the value belonging a header"
    ],
    "EventHttpRequestfree": [
        "EventHttpRequest::free",
        "eventhttprequest.free.php",
        "Frees the object and removes associated events"
    ],
    "EventHttpRequestgetBufferEvent": [
        "EventHttpRequest::getBufferEvent",
        "eventhttprequest.getbufferevent.php",
        "Returns EventBufferEvent object"
    ],
    "EventHttpRequestgetCommand": [
        "EventHttpRequest::getCommand",
        "eventhttprequest.getcommand.php",
        "Returns the request command(method)"
    ],
    "EventHttpRequestgetConnection": [
        "EventHttpRequest::getConnection",
        "eventhttprequest.getconnection.php",
        "Returns EventHttpConnection object"
    ],
    "EventHttpRequestgetHost": [
        "EventHttpRequest::getHost",
        "eventhttprequest.gethost.php",
        "Returns the request host"
    ],
    "EventHttpRequestgetInputBuffer": [
        "EventHttpRequest::getInputBuffer",
        "eventhttprequest.getinputbuffer.php",
        "Returns the input buffer"
    ],
    "EventHttpRequestgetInputHeaders": [
        "EventHttpRequest::getInputHeaders",
        "eventhttprequest.getinputheaders.php",
        "Returns associative array of the input headers"
    ],
    "EventHttpRequestgetOutputBuffer": [
        "EventHttpRequest::getOutputBuffer",
        "eventhttprequest.getoutputbuffer.php",
        "Returns the output buffer of the request"
    ],
    "EventHttpRequestgetOutputHeaders": [
        "EventHttpRequest::getOutputHeaders",
        "eventhttprequest.getoutputheaders.php",
        "Returns associative array of the output headers"
    ],
    "EventHttpRequestgetResponseCode": [
        "EventHttpRequest::getResponseCode",
        "eventhttprequest.getresponsecode.php",
        "Returns the response code"
    ],
    "EventHttpRequestgetUri": [
        "EventHttpRequest::getUri",
        "eventhttprequest.geturi.php",
        "Returns the request URI"
    ],
    "EventHttpRequestremoveHeader": [
        "EventHttpRequest::removeHeader",
        "eventhttprequest.removeheader.php",
        "Removes an HTTP header from the headers of the request"
    ],
    "EventHttpRequestsendError": [
        "EventHttpRequest::sendError",
        "eventhttprequest.senderror.php",
        "Send an HTML error message to the client"
    ],
    "EventHttpRequestsendReply": [
        "EventHttpRequest::sendReply",
        "eventhttprequest.sendreply.php",
        "Send an HTML reply to the client"
    ],
    "EventHttpRequestsendReplyChunk": [
        "EventHttpRequest::sendReplyChunk",
        "eventhttprequest.sendreplychunk.php",
        "Send another data chunk as part of an ongoing chunked reply"
    ],
    "EventHttpRequestsendReplyEnd": [
        "EventHttpRequest::sendReplyEnd",
        "eventhttprequest.sendreplyend.php",
        "Complete a chunked reply, freeing the request as appropriate"
    ],
    "EventHttpRequestsendReplyStart": [
        "EventHttpRequest::sendReplyStart",
        "eventhttprequest.sendreplystart.php",
        "Initiate a chunked reply"
    ],
    "EventHttpRequestconstruct": [
        "EventHttpRequest::__construct",
        "eventhttprequest.construct.php",
        "Constructs EventHttpRequest object"
    ],
    "EventListenerdisable": [
        "EventListener::disable",
        "eventlistener.disable.php",
        "Disables an event connect listener object"
    ],
    "EventListenerenable": [
        "EventListener::enable",
        "eventlistener.enable.php",
        "Enables an event connect listener object"
    ],
    "EventListenergetBase": [
        "EventListener::getBase",
        "eventlistener.getbase.php",
        "Returns event base associated with the event listener"
    ],
    "EventListenersetCallback": [
        "EventListener::setCallback",
        "eventlistener.setcallback.php",
        "The setCallback purpose"
    ],
    "EventListenersetErrorCallback": [
        "EventListener::setErrorCallback",
        "eventlistener.seterrorcallback.php",
        "Set event listener's error callback"
    ],
    "EventListenerconstruct": [
        "EventListener::__construct",
        "eventlistener.construct.php",
        "Creates new connection listener associated with an event base"
    ],
    "EventSslContextconstruct": [
        "EventSslContext::__construct",
        "eventsslcontext.construct.php",
        "Constructs an OpenSSL context for use with Event classes"
    ],
    "EventUtilgetLastSocketErrno": [
        "EventUtil::getLastSocketErrno",
        "eventutil.getlastsocketerrno.php",
        "Returns the most recent socket error number"
    ],
    "EventUtilgetLastSocketError": [
        "EventUtil::getLastSocketError",
        "eventutil.getlastsocketerror.php",
        "Returns the most recent socket error"
    ],
    "EventUtilgetSocketFd": [
        "EventUtil::getSocketFd",
        "eventutil.getsocketfd.php",
        "Returns numeric file descriptor of a socket, or stream"
    ],
    "EventUtilsetSocketOption": [
        "EventUtil::setSocketOption",
        "eventutil.setsocketoption.php",
        "Sets socket options"
    ],
    "EventUtilsslRandPoll": [
        "EventUtil::sslRandPoll",
        "eventutil.sslrandpoll.php",
        "Generates entropy by means of OpenSSL's RAND_poll()"
    ],
    "EventUtilconstruct": [
        "EventUtil::__construct",
        "eventutil.construct.php",
        "The abstract constructor"
    ],
    "EvForkcreateStopped": [
        "EvFork::createStopped",
        "evfork.createstopped.php",
        "停止した EvFork ウォッチャーのインスタンスを作る"
    ],
    "EvForkconstruct": [
        "EvFork::__construct",
        "evfork.construct.php",
        "EvFork ウォッチャーオブジェクトを作る"
    ],
    "EvIdlecreateStopped": [
        "EvIdle::createStopped",
        "evidle.createstopped.php",
        "Creates instance of a stopped EvIdle watcher object"
    ],
    "EvIdleconstruct": [
        "EvIdle::__construct",
        "evidle.construct.php",
        "Constructs the EvIdle watcher object"
    ],
    "EvIocreateStopped": [
        "EvIo::createStopped",
        "evio.createstopped.php",
        "Create stopped EvIo watcher object"
    ],
    "EvIoset": [
        "EvIo::set",
        "evio.set.php",
        "Configures the watcher"
    ],
    "EvIoconstruct": [
        "EvIo::__construct",
        "evio.construct.php",
        "Constructs EvIo watcher object"
    ],
    "EvLoopbackend": [
        "EvLoop::backend",
        "evloop.backend.php",
        "Returns an integer describing the backend used by libev"
    ],
    "EvLoopchild": [
        "EvLoop::child",
        "evloop.child.php",
        "Creates EvChild object associated with the current event loop"
    ],
    "EvLoopdefaultLoop": [
        "EvLoop::defaultLoop",
        "evloop.defaultloop.php",
        "Returns or creates the default event loop"
    ],
    "EvLoopinvokePending": [
        "EvLoop::invokePending",
        "evloop.invokepending.php",
        "Invoke all pending watchers while resetting their pending state"
    ],
    "EvLooploopFork": [
        "EvLoop::loopFork",
        "evloop.loopfork.php",
        "Must be called after a fork"
    ],
    "EvLoopnow": [
        "EvLoop::now",
        "evloop.now.php",
        "Returns the current &quot;event loop time&quot;"
    ],
    "EvLoopresume": [
        "EvLoop::resume",
        "evloop.resume.php",
        "Resume previously suspended default event loop"
    ],
    "EvLooprun": [
        "EvLoop::run",
        "evloop.run.php",
        "Begin checking for events and calling callbacks for the loop"
    ],
    "EvLoopstop": [
        "EvLoop::stop",
        "evloop.stop.php",
        "Stops the event loop"
    ],
    "EvLoopsuspend": [
        "EvLoop::suspend",
        "evloop.suspend.php",
        "Suspend the loop"
    ],
    "EvLoopverify": [
        "EvLoop::verify",
        "evloop.verify.php",
        "Performs internal consistency checks(for debugging)"
    ],
    "EvLoopconstruct": [
        "EvLoop::__construct",
        "evloop.construct.php",
        "Constructs the event loop object"
    ],
    "EvPeriodicagain": [
        "EvPeriodic::again",
        "evperiodic.again.php",
        "Simply stops and restarts the periodic watcher again"
    ],
    "EvPeriodiccreateStopped": [
        "EvPeriodic::createStopped",
        "evperiodic.createstopped.php",
        "Create a stopped EvPeriodic watcher"
    ],
    "EvPeriodicset": [
        "EvPeriodic::set",
        "evperiodic.set.php",
        "Configures the watcher"
    ],
    "EvPeriodicconstruct": [
        "EvPeriodic::__construct",
        "evperiodic.construct.php",
        "Constructs EvPeriodic watcher object"
    ],
    "EvPreparecreateStopped": [
        "EvPrepare::createStopped",
        "evprepare.createstopped.php",
        "停止した EvPrepare ウォッチャーのインスタンスを作る"
    ],
    "EvPrepareconstruct": [
        "EvPrepare::__construct",
        "evprepare.construct.php",
        "EvPrepare ウォッチャーオブジェクトを作る"
    ],
    "EvSignalcreateStopped": [
        "EvSignal::createStopped",
        "evsignal.createstopped.php",
        "Create stopped EvSignal watcher object"
    ],
    "EvSignalset": [
        "EvSignal::set",
        "evsignal.set.php",
        "Configures the watcher"
    ],
    "EvSignalconstruct": [
        "EvSignal::__construct",
        "evsignal.construct.php",
        "Constructs EvSignal watcher object"
    ],
    "EvStatattr": [
        "EvStat::attr",
        "evstat.attr.php",
        "Returns the values most recently detected by Ev"
    ],
    "EvStatcreateStopped": [
        "EvStat::createStopped",
        "evstat.createstopped.php",
        "Create a stopped EvStat watcher object"
    ],
    "EvStatprev": [
        "EvStat::prev",
        "evstat.prev.php",
        "Returns the previous set of values returned by EvStat::attr"
    ],
    "EvStatset": [
        "EvStat::set",
        "evstat.set.php",
        "Configures the watcher"
    ],
    "EvStatstat": [
        "EvStat::stat",
        "evstat.stat.php",
        "Initiates the stat call"
    ],
    "EvStatconstruct": [
        "EvStat::__construct",
        "evstat.construct.php",
        "Constructs EvStat watcher object"
    ],
    "EvTimeragain": [
        "EvTimer::again",
        "evtimer.again.php",
        "Restarts the timer watcher"
    ],
    "EvTimercreateStopped": [
        "EvTimer::createStopped",
        "evtimer.createstopped.php",
        "Creates EvTimer stopped watcher object"
    ],
    "EvTimerset": [
        "EvTimer::set",
        "evtimer.set.php",
        "Configures the watcher"
    ],
    "EvTimerconstruct": [
        "EvTimer::__construct",
        "evtimer.construct.php",
        "Constructs an EvTimer watcher object"
    ],
    "EvWatcherclear": [
        "EvWatcher::clear",
        "evwatcher.clear.php",
        "Clear watcher pending status"
    ],
    "EvWatcherfeed": [
        "EvWatcher::feed",
        "evwatcher.feed.php",
        "Feeds the given revents set into the event loop"
    ],
    "EvWatchergetLoop": [
        "EvWatcher::getLoop",
        "evwatcher.getloop.php",
        "Returns the loop responsible for the watcher"
    ],
    "EvWatcherkeepalive": [
        "EvWatcher::keepalive",
        "evwatcher.keepalive.php",
        "Configures whether to keep the loop from returning"
    ],
    "EvWatchersetCallback": [
        "EvWatcher::setCallback",
        "evwatcher.setcallback.php",
        "Sets new callback for the watcher"
    ],
    "EvWatcherstart": [
        "EvWatcher::start",
        "evwatcher.start.php",
        "Starts the watcher"
    ],
    "EvWatcherstop": [
        "EvWatcher::stop",
        "evwatcher.stop.php",
        "Stops the watcher"
    ],
    "EvWatcherconstruct": [
        "EvWatcher::__construct",
        "evwatcher.construct.php",
        "Abstract constructor of a watcher object"
    ],
    "ExceptiongetCode": [
        "Exception::getCode",
        "exception.getcode.php",
        "例外コードを取得する"
    ],
    "ExceptiongetFile": [
        "Exception::getFile",
        "exception.getfile.php",
        "例外が作られたファイルを取得する"
    ],
    "ExceptiongetLine": [
        "Exception::getLine",
        "exception.getline.php",
        "例外が作られた行を取得する"
    ],
    "ExceptiongetMessage": [
        "Exception::getMessage",
        "exception.getmessage.php",
        "例外メッセージを取得する"
    ],
    "ExceptiongetPrevious": [
        "Exception::getPrevious",
        "exception.getprevious.php",
        "前の例外を返す"
    ],
    "ExceptiongetTrace": [
        "Exception::getTrace",
        "exception.gettrace.php",
        "スタックトレースを取得する"
    ],
    "ExceptiongetTraceAsString": [
        "Exception::getTraceAsString",
        "exception.gettraceasstring.php",
        "スタックトレースを文字列で取得する"
    ],
    "Exceptionclone": [
        "Exception::__clone",
        "exception.clone.php",
        "例外をコピーする"
    ],
    "Exceptionconstruct": [
        "Exception::__construct",
        "exception.construct.php",
        "例外を作成する"
    ],
    "ExceptiontoString": [
        "Exception::__toString",
        "exception.tostring.php",
        "例外の文字列表現"
    ],
    "exec": [
        "exec",
        "function.exec.php",
        "外部プログラムを実行する"
    ],
    "Executableexecute": [
        "Executable::execute",
        "mysql-xdevapi-executable.execute.php",
        "ステートメントを実行する"
    ],
    "ExecutionStatusconstruct": [
        "ExecutionStatus::__construct",
        "mysql-xdevapi-executionstatus.construct.php",
        "ExecutionStatus のコンストラクタ"
    ],
    "exifimagetype": [
        "exif_imagetype",
        "function.exif-imagetype.php",
        "イメージの型を定義する"
    ],
    "exifreaddata": [
        "exif_read_data",
        "function.exif-read-data.php",
        "画像ファイルから EXIF ヘッダを読み込む"
    ],
    "exiftagname": [
        "exif_tagname",
        "function.exif-tagname.php",
        "インデックスに対応するヘッダ名を取得する"
    ],
    "exifthumbnail": [
        "exif_thumbnail",
        "function.exif-thumbnail.php",
        "画像に埋め込まれたサムネイルを取得する"
    ],
    "exit": [
        "exit",
        "function.exit.php",
        "メッセージを出力し、現在のスクリプトを終了する"
    ],
    "exp": [
        "exp",
        "function.exp.php",
        "e の累乗を計算する"
    ],
    "expect": [
        "expect://",
        "wrappers.expect.php",
        "対話的プロセスストリーム"
    ],
    "explode": [
        "explode",
        "function.explode.php",
        "文字列を文字列により分割する"
    ],
    "expm1": [
        "expm1",
        "function.expm1.php",
        "値がゼロに近い時にでも精度を保つために exp(number) - 1 を返す"
    ],
    "expression": [
        "expression",
        "function.mysql-xdevapi-expression.php",
        "プリペアドステートメントの変数をパラメータとしてバインドする"
    ],
    "Expressionconstruct": [
        "Expression::__construct",
        "mysql-xdevapi-expression.construct.php",
        "Expression のコンストラクタ"
    ],
    "extensionloaded": [
        "extension_loaded",
        "function.extension-loaded.php",
        "ある拡張機能がロードされているかどうかを調べる"
    ],
    "extract": [
        "extract",
        "function.extract.php",
        "配列からシンボルテーブルに変数をインポートする"
    ],
    "ezmlmhash": [
        "ezmlm_hash",
        "function.ezmlm-hash.php",
        "EZMLM で必要なハッシュ値を計算する"
    ],
    "FANNConnectiongetFromNeuron": [
        "FANNConnection::getFromNeuron",
        "fannconnection.getfromneuron.php",
        "Returns the postions of starting neuron"
    ],
    "FANNConnectiongetToNeuron": [
        "FANNConnection::getToNeuron",
        "fannconnection.gettoneuron.php",
        "Returns the postions of terminating neuron"
    ],
    "FANNConnectiongetWeight": [
        "FANNConnection::getWeight",
        "fannconnection.getweight.php",
        "Returns the connection weight"
    ],
    "FANNConnectionsetWeight": [
        "FANNConnection::setWeight",
        "fannconnection.setweight.php",
        "Sets the connections weight"
    ],
    "FANNConnectionconstruct": [
        "FANNConnection::__construct",
        "fannconnection.construct.php",
        "The connection constructor"
    ],
    "fanncascadetrainondata": [
        "fann_cascadetrain_on_data",
        "function.fann-cascadetrain-on-data.php",
        "Trains on an entire dataset, for a period of time using the Cascade2 training algorithm"
    ],
    "fanncascadetrainonfile": [
        "fann_cascadetrain_on_file",
        "function.fann-cascadetrain-on-file.php",
        "Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm"
    ],
    "fannclearscalingparams": [
        "fann_clear_scaling_params",
        "function.fann-clear-scaling-params.php",
        "Clears scaling parameters"
    ],
    "fanncopy": [
        "fann_copy",
        "function.fann-copy.php",
        "Creates a copy of a fann structure"
    ],
    "fanncreatefromfile": [
        "fann_create_from_file",
        "function.fann-create-from-file.php",
        "Constructs a backpropagation neural network from a configuration file"
    ],
    "fanncreateshortcut": [
        "fann_create_shortcut",
        "function.fann-create-shortcut.php",
        "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections"
    ],
    "fanncreateshortcutarray": [
        "fann_create_shortcut_array",
        "function.fann-create-shortcut-array.php",
        "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections"
    ],
    "fanncreatesparse": [
        "fann_create_sparse",
        "function.fann-create-sparse.php",
        "Creates a standard backpropagation neural network, which is not fully connected"
    ],
    "fanncreatesparsearray": [
        "fann_create_sparse_array",
        "function.fann-create-sparse-array.php",
        "Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes"
    ],
    "fanncreatestandard": [
        "fann_create_standard",
        "function.fann-create-standard.php",
        "Creates a standard fully connected backpropagation neural network"
    ],
    "fanncreatestandardarray": [
        "fann_create_standard_array",
        "function.fann-create-standard-array.php",
        "Creates a standard fully connected backpropagation neural network using an array of layer sizes"
    ],
    "fanncreatetrain": [
        "fann_create_train",
        "function.fann-create-train.php",
        "Creates an empty training data struct"
    ],
    "fanncreatetrainfromcallback": [
        "fann_create_train_from_callback",
        "function.fann-create-train-from-callback.php",
        "Creates the training data struct from a user supplied function"
    ],
    "fanndescaleinput": [
        "fann_descale_input",
        "function.fann-descale-input.php",
        "Scale data in input vector after get it from ann based on previously calculated parameters"
    ],
    "fanndescaleoutput": [
        "fann_descale_output",
        "function.fann-descale-output.php",
        "Scale data in output vector after get it from ann based on previously calculated parameters"
    ],
    "fanndescaletrain": [
        "fann_descale_train",
        "function.fann-descale-train.php",
        "Descale input and output data based on previously calculated parameters"
    ],
    "fanndestroy": [
        "fann_destroy",
        "function.fann-destroy.php",
        "Destroys the entire network and properly freeing all the associated memory"
    ],
    "fanndestroytrain": [
        "fann_destroy_train",
        "function.fann-destroy-train.php",
        "Destructs the training data"
    ],
    "fannduplicatetraindata": [
        "fann_duplicate_train_data",
        "function.fann-duplicate-train-data.php",
        "Returns an exact copy of a fann train data"
    ],
    "fanngetactivationfunction": [
        "fann_get_activation_function",
        "function.fann-get-activation-function.php",
        "Returns the activation function"
    ],
    "fanngetactivationsteepness": [
        "fann_get_activation_steepness",
        "function.fann-get-activation-steepness.php",
        "Returns the activation steepness for supplied neuron and layer number"
    ],
    "fanngetbiasarray": [
        "fann_get_bias_array",
        "function.fann-get-bias-array.php",
        "Get the number of bias in each layer in the network"
    ],
    "fanngetbitfail": [
        "fann_get_bit_fail",
        "function.fann-get-bit-fail.php",
        "The number of fail bits"
    ],
    "fanngetbitfaillimit": [
        "fann_get_bit_fail_limit",
        "function.fann-get-bit-fail-limit.php",
        "Returns the bit fail limit used during training"
    ],
    "fanngetcascadeactivationfunctions": [
        "fann_get_cascade_activation_functions",
        "function.fann-get-cascade-activation-functions.php",
        "Returns the cascade activation functions"
    ],
    "fanngetcascadeactivationfunctionscount": [
        "fann_get_cascade_activation_functions_count",
        "function.fann-get-cascade-activation-functions-count.php",
        "Returns the number of cascade activation functions"
    ],
    "fanngetcascadeactivationsteepnesses": [
        "fann_get_cascade_activation_steepnesses",
        "function.fann-get-cascade-activation-steepnesses.php",
        "Returns the cascade activation steepnesses"
    ],
    "fanngetcascadeactivationsteepnessescount": [
        "fann_get_cascade_activation_steepnesses_count",
        "function.fann-get-cascade-activation-steepnesses-count.php",
        "The number of activation steepnesses"
    ],
    "fanngetcascadecandidatechangefraction": [
        "fann_get_cascade_candidate_change_fraction",
        "function.fann-get-cascade-candidate-change-fraction.php",
        "Returns the cascade candidate change fraction"
    ],
    "fanngetcascadecandidatelimit": [
        "fann_get_cascade_candidate_limit",
        "function.fann-get-cascade-candidate-limit.php",
        "Return the candidate limit"
    ],
    "fanngetcascadecandidatestagnationepochs": [
        "fann_get_cascade_candidate_stagnation_epochs",
        "function.fann-get-cascade-candidate-stagnation-epochs.php",
        "Returns the number of cascade candidate stagnation epochs"
    ],
    "fanngetcascademaxcandepochs": [
        "fann_get_cascade_max_cand_epochs",
        "function.fann-get-cascade-max-cand-epochs.php",
        "Returns the maximum candidate epochs"
    ],
    "fanngetcascademaxoutepochs": [
        "fann_get_cascade_max_out_epochs",
        "function.fann-get-cascade-max-out-epochs.php",
        "Returns the maximum out epochs"
    ],
    "fanngetcascademincandepochs": [
        "fann_get_cascade_min_cand_epochs",
        "function.fann-get-cascade-min-cand-epochs.php",
        "Returns the minimum candidate epochs"
    ],
    "fanngetcascademinoutepochs": [
        "fann_get_cascade_min_out_epochs",
        "function.fann-get-cascade-min-out-epochs.php",
        "Returns the minimum out epochs"
    ],
    "fanngetcascadenumcandidates": [
        "fann_get_cascade_num_candidates",
        "function.fann-get-cascade-num-candidates.php",
        "Returns the number of candidates used during training"
    ],
    "fanngetcascadenumcandidategroups": [
        "fann_get_cascade_num_candidate_groups",
        "function.fann-get-cascade-num-candidate-groups.php",
        "Returns the number of candidate groups"
    ],
    "fanngetcascadeoutputchangefraction": [
        "fann_get_cascade_output_change_fraction",
        "function.fann-get-cascade-output-change-fraction.php",
        "Returns the cascade output change fraction"
    ],
    "fanngetcascadeoutputstagnationepochs": [
        "fann_get_cascade_output_stagnation_epochs",
        "function.fann-get-cascade-output-stagnation-epochs.php",
        "Returns the number of cascade output stagnation epochs"
    ],
    "fanngetcascadeweightmultiplier": [
        "fann_get_cascade_weight_multiplier",
        "function.fann-get-cascade-weight-multiplier.php",
        "Returns the weight multiplier"
    ],
    "fanngetconnectionarray": [
        "fann_get_connection_array",
        "function.fann-get-connection-array.php",
        "Get connections in the network"
    ],
    "fanngetconnectionrate": [
        "fann_get_connection_rate",
        "function.fann-get-connection-rate.php",
        "Get the connection rate used when the network was created"
    ],
    "fanngeterrno": [
        "fann_get_errno",
        "function.fann-get-errno.php",
        "Returns the last error number"
    ],
    "fanngeterrstr": [
        "fann_get_errstr",
        "function.fann-get-errstr.php",
        "Returns the last errstr"
    ],
    "fanngetlayerarray": [
        "fann_get_layer_array",
        "function.fann-get-layer-array.php",
        "Get the number of neurons in each layer in the network"
    ],
    "fanngetlearningmomentum": [
        "fann_get_learning_momentum",
        "function.fann-get-learning-momentum.php",
        "Returns the learning momentum"
    ],
    "fanngetlearningrate": [
        "fann_get_learning_rate",
        "function.fann-get-learning-rate.php",
        "Returns the learning rate"
    ],
    "fanngetMSE": [
        "fann_get_MSE",
        "function.fann-get-mse.php",
        "Reads the mean square error from the network"
    ],
    "fanngetnetworktype": [
        "fann_get_network_type",
        "function.fann-get-network-type.php",
        "Get the type of neural network it was created as"
    ],
    "fanngetnuminput": [
        "fann_get_num_input",
        "function.fann-get-num-input.php",
        "Get the number of input neurons"
    ],
    "fanngetnumlayers": [
        "fann_get_num_layers",
        "function.fann-get-num-layers.php",
        "Get the number of layers in the neural network"
    ],
    "fanngetnumoutput": [
        "fann_get_num_output",
        "function.fann-get-num-output.php",
        "Get the number of output neurons"
    ],
    "fanngetquickpropdecay": [
        "fann_get_quickprop_decay",
        "function.fann-get-quickprop-decay.php",
        "Returns the decay which is a factor that weights should decrease in each iteration during quickprop training"
    ],
    "fanngetquickpropmu": [
        "fann_get_quickprop_mu",
        "function.fann-get-quickprop-mu.php",
        "Returns the mu factor"
    ],
    "fanngetrpropdecreasefactor": [
        "fann_get_rprop_decrease_factor",
        "function.fann-get-rprop-decrease-factor.php",
        "Returns the increase factor used during RPROP training"
    ],
    "fanngetrpropdeltamax": [
        "fann_get_rprop_delta_max",
        "function.fann-get-rprop-delta-max.php",
        "Returns the maximum step-size"
    ],
    "fanngetrpropdeltamin": [
        "fann_get_rprop_delta_min",
        "function.fann-get-rprop-delta-min.php",
        "Returns the minimum step-size"
    ],
    "fanngetrpropdeltazero": [
        "fann_get_rprop_delta_zero",
        "function.fann-get-rprop-delta-zero.php",
        "Returns the initial step-size"
    ],
    "fanngetrpropincreasefactor": [
        "fann_get_rprop_increase_factor",
        "function.fann-get-rprop-increase-factor.php",
        "Returns the increase factor used during RPROP training"
    ],
    "fanngetsarpropsteperrorshift": [
        "fann_get_sarprop_step_error_shift",
        "function.fann-get-sarprop-step-error-shift.php",
        "Returns the sarprop step error shift"
    ],
    "fanngetsarpropsteperrorthresholdfactor": [
        "fann_get_sarprop_step_error_threshold_factor",
        "function.fann-get-sarprop-step-error-threshold-factor.php",
        "Returns the sarprop step error threshold factor"
    ],
    "fanngetsarproptemperature": [
        "fann_get_sarprop_temperature",
        "function.fann-get-sarprop-temperature.php",
        "Returns the sarprop temperature"
    ],
    "fanngetsarpropweightdecayshift": [
        "fann_get_sarprop_weight_decay_shift",
        "function.fann-get-sarprop-weight-decay-shift.php",
        "Returns the sarprop weight decay shift"
    ],
    "fanngettotalconnections": [
        "fann_get_total_connections",
        "function.fann-get-total-connections.php",
        "Get the total number of connections in the entire network"
    ],
    "fanngettotalneurons": [
        "fann_get_total_neurons",
        "function.fann-get-total-neurons.php",
        "Get the total number of neurons in the entire network"
    ],
    "fanngettrainingalgorithm": [
        "fann_get_training_algorithm",
        "function.fann-get-training-algorithm.php",
        "Returns the training algorithm"
    ],
    "fanngettrainerrorfunction": [
        "fann_get_train_error_function",
        "function.fann-get-train-error-function.php",
        "Returns the error function used during training"
    ],
    "fanngettrainstopfunction": [
        "fann_get_train_stop_function",
        "function.fann-get-train-stop-function.php",
        "Returns the stop function used during training"
    ],
    "fanninitweights": [
        "fann_init_weights",
        "function.fann-init-weights.php",
        "Initialize the weights using Widrow + Nguyen&rsquo;s algorithm"
    ],
    "fannlengthtraindata": [
        "fann_length_train_data",
        "function.fann-length-train-data.php",
        "Returns the number of training patterns in the train data"
    ],
    "fannmergetraindata": [
        "fann_merge_train_data",
        "function.fann-merge-train-data.php",
        "Merges the train data"
    ],
    "fannnuminputtraindata": [
        "fann_num_input_train_data",
        "function.fann-num-input-train-data.php",
        "Returns the number of inputs in each of the training patterns in the train data"
    ],
    "fannnumoutputtraindata": [
        "fann_num_output_train_data",
        "function.fann-num-output-train-data.php",
        "Returns the number of outputs in each of the training patterns in the train data"
    ],
    "fannprinterror": [
        "fann_print_error",
        "function.fann-print-error.php",
        "Prints the error string"
    ],
    "fannrandomizeweights": [
        "fann_randomize_weights",
        "function.fann-randomize-weights.php",
        "Give each connection a random weight between min_weight and max_weight"
    ],
    "fannreadtrainfromfile": [
        "fann_read_train_from_file",
        "function.fann-read-train-from-file.php",
        "Reads a file that stores training data"
    ],
    "fannreseterrno": [
        "fann_reset_errno",
        "function.fann-reset-errno.php",
        "Resets the last error number"
    ],
    "fannreseterrstr": [
        "fann_reset_errstr",
        "function.fann-reset-errstr.php",
        "Resets the last error string"
    ],
    "fannresetMSE": [
        "fann_reset_MSE",
        "function.fann-reset-mse.php",
        "Resets the mean square error from the network"
    ],
    "fannrun": [
        "fann_run",
        "function.fann-run.php",
        "Will run input through the neural network"
    ],
    "fannsave": [
        "fann_save",
        "function.fann-save.php",
        "Saves the entire network to a configuration file"
    ],
    "fannsavetrain": [
        "fann_save_train",
        "function.fann-save-train.php",
        "Save the training structure to a file"
    ],
    "fannscaleinput": [
        "fann_scale_input",
        "function.fann-scale-input.php",
        "Scale data in input vector before feed it to ann based on previously calculated parameters"
    ],
    "fannscaleinputtraindata": [
        "fann_scale_input_train_data",
        "function.fann-scale-input-train-data.php",
        "Scales the inputs in the training data to the specified range"
    ],
    "fannscaleoutput": [
        "fann_scale_output",
        "function.fann-scale-output.php",
        "Scale data in output vector before feed it to ann based on previously calculated parameters"
    ],
    "fannscaleoutputtraindata": [
        "fann_scale_output_train_data",
        "function.fann-scale-output-train-data.php",
        "Scales the outputs in the training data to the specified range"
    ],
    "fannscaletrain": [
        "fann_scale_train",
        "function.fann-scale-train.php",
        "Scale input and output data based on previously calculated parameters"
    ],
    "fannscaletraindata": [
        "fann_scale_train_data",
        "function.fann-scale-train-data.php",
        "Scales the inputs and outputs in the training data to the specified range"
    ],
    "fannsetactivationfunction": [
        "fann_set_activation_function",
        "function.fann-set-activation-function.php",
        "Sets the activation function for supplied neuron and layer"
    ],
    "fannsetactivationfunctionhidden": [
        "fann_set_activation_function_hidden",
        "function.fann-set-activation-function-hidden.php",
        "Sets the activation function for all of the hidden layers"
    ],
    "fannsetactivationfunctionlayer": [
        "fann_set_activation_function_layer",
        "function.fann-set-activation-function-layer.php",
        "Sets the activation function for all the neurons in the supplied layer"
    ],
    "fannsetactivationfunctionoutput": [
        "fann_set_activation_function_output",
        "function.fann-set-activation-function-output.php",
        "Sets the activation function for the output layer"
    ],
    "fannsetactivationsteepness": [
        "fann_set_activation_steepness",
        "function.fann-set-activation-steepness.php",
        "Sets the activation steepness for supplied neuron and layer number"
    ],
    "fannsetactivationsteepnesshidden": [
        "fann_set_activation_steepness_hidden",
        "function.fann-set-activation-steepness-hidden.php",
        "Sets the steepness of the activation steepness for all neurons in the all hidden layers"
    ],
    "fannsetactivationsteepnesslayer": [
        "fann_set_activation_steepness_layer",
        "function.fann-set-activation-steepness-layer.php",
        "Sets the activation steepness for all of the neurons in the supplied layer number"
    ],
    "fannsetactivationsteepnessoutput": [
        "fann_set_activation_steepness_output",
        "function.fann-set-activation-steepness-output.php",
        "Sets the steepness of the activation steepness in the output layer"
    ],
    "fannsetbitfaillimit": [
        "fann_set_bit_fail_limit",
        "function.fann-set-bit-fail-limit.php",
        "Set the bit fail limit used during training"
    ],
    "fannsetcallback": [
        "fann_set_callback",
        "function.fann-set-callback.php",
        "Sets the callback function for use during training"
    ],
    "fannsetcascadeactivationfunctions": [
        "fann_set_cascade_activation_functions",
        "function.fann-set-cascade-activation-functions.php",
        "Sets the array of cascade candidate activation functions"
    ],
    "fannsetcascadeactivationsteepnesses": [
        "fann_set_cascade_activation_steepnesses",
        "function.fann-set-cascade-activation-steepnesses.php",
        "Sets the array of cascade candidate activation steepnesses"
    ],
    "fannsetcascadecandidatechangefraction": [
        "fann_set_cascade_candidate_change_fraction",
        "function.fann-set-cascade-candidate-change-fraction.php",
        "Sets the cascade candidate change fraction"
    ],
    "fannsetcascadecandidatelimit": [
        "fann_set_cascade_candidate_limit",
        "function.fann-set-cascade-candidate-limit.php",
        "Sets the candidate limit"
    ],
    "fannsetcascadecandidatestagnationepochs": [
        "fann_set_cascade_candidate_stagnation_epochs",
        "function.fann-set-cascade-candidate-stagnation-epochs.php",
        "Sets the number of cascade candidate stagnation epochs"
    ],
    "fannsetcascademaxcandepochs": [
        "fann_set_cascade_max_cand_epochs",
        "function.fann-set-cascade-max-cand-epochs.php",
        "Sets the max candidate epochs"
    ],
    "fannsetcascademaxoutepochs": [
        "fann_set_cascade_max_out_epochs",
        "function.fann-set-cascade-max-out-epochs.php",
        "Sets the maximum out epochs"
    ],
    "fannsetcascademincandepochs": [
        "fann_set_cascade_min_cand_epochs",
        "function.fann-set-cascade-min-cand-epochs.php",
        "Sets the min candidate epochs"
    ],
    "fannsetcascademinoutepochs": [
        "fann_set_cascade_min_out_epochs",
        "function.fann-set-cascade-min-out-epochs.php",
        "Sets the minimum out epochs"
    ],
    "fannsetcascadenumcandidategroups": [
        "fann_set_cascade_num_candidate_groups",
        "function.fann-set-cascade-num-candidate-groups.php",
        "Sets the number of candidate groups"
    ],
    "fannsetcascadeoutputchangefraction": [
        "fann_set_cascade_output_change_fraction",
        "function.fann-set-cascade-output-change-fraction.php",
        "Sets the cascade output change fraction"
    ],
    "fannsetcascadeoutputstagnationepochs": [
        "fann_set_cascade_output_stagnation_epochs",
        "function.fann-set-cascade-output-stagnation-epochs.php",
        "Sets the number of cascade output stagnation epochs"
    ],
    "fannsetcascadeweightmultiplier": [
        "fann_set_cascade_weight_multiplier",
        "function.fann-set-cascade-weight-multiplier.php",
        "Sets the weight multiplier"
    ],
    "fannseterrorlog": [
        "fann_set_error_log",
        "function.fann-set-error-log.php",
        "Sets where the errors are logged to"
    ],
    "fannsetinputscalingparams": [
        "fann_set_input_scaling_params",
        "function.fann-set-input-scaling-params.php",
        "Calculate input scaling parameters for future use based on training data"
    ],
    "fannsetlearningmomentum": [
        "fann_set_learning_momentum",
        "function.fann-set-learning-momentum.php",
        "Sets the learning momentum"
    ],
    "fannsetlearningrate": [
        "fann_set_learning_rate",
        "function.fann-set-learning-rate.php",
        "Sets the learning rate"
    ],
    "fannsetoutputscalingparams": [
        "fann_set_output_scaling_params",
        "function.fann-set-output-scaling-params.php",
        "Calculate output scaling parameters for future use based on training data"
    ],
    "fannsetquickpropdecay": [
        "fann_set_quickprop_decay",
        "function.fann-set-quickprop-decay.php",
        "Sets the quickprop decay factor"
    ],
    "fannsetquickpropmu": [
        "fann_set_quickprop_mu",
        "function.fann-set-quickprop-mu.php",
        "Sets the quickprop mu factor"
    ],
    "fannsetrpropdecreasefactor": [
        "fann_set_rprop_decrease_factor",
        "function.fann-set-rprop-decrease-factor.php",
        "Sets the decrease factor used during RPROP training"
    ],
    "fannsetrpropdeltamax": [
        "fann_set_rprop_delta_max",
        "function.fann-set-rprop-delta-max.php",
        "Sets the maximum step-size"
    ],
    "fannsetrpropdeltamin": [
        "fann_set_rprop_delta_min",
        "function.fann-set-rprop-delta-min.php",
        "Sets the minimum step-size"
    ],
    "fannsetrpropdeltazero": [
        "fann_set_rprop_delta_zero",
        "function.fann-set-rprop-delta-zero.php",
        "Sets the initial step-size"
    ],
    "fannsetrpropincreasefactor": [
        "fann_set_rprop_increase_factor",
        "function.fann-set-rprop-increase-factor.php",
        "Sets the increase factor used during RPROP training"
    ],
    "fannsetsarpropsteperrorshift": [
        "fann_set_sarprop_step_error_shift",
        "function.fann-set-sarprop-step-error-shift.php",
        "Sets the sarprop step error shift"
    ],
    "fannsetsarpropsteperrorthresholdfactor": [
        "fann_set_sarprop_step_error_threshold_factor",
        "function.fann-set-sarprop-step-error-threshold-factor.php",
        "Sets the sarprop step error threshold factor"
    ],
    "fannsetsarproptemperature": [
        "fann_set_sarprop_temperature",
        "function.fann-set-sarprop-temperature.php",
        "Sets the sarprop temperature"
    ],
    "fannsetsarpropweightdecayshift": [
        "fann_set_sarprop_weight_decay_shift",
        "function.fann-set-sarprop-weight-decay-shift.php",
        "Sets the sarprop weight decay shift"
    ],
    "fannsetscalingparams": [
        "fann_set_scaling_params",
        "function.fann-set-scaling-params.php",
        "Calculate input and output scaling parameters for future use based on training data"
    ],
    "fannsettrainingalgorithm": [
        "fann_set_training_algorithm",
        "function.fann-set-training-algorithm.php",
        "Sets the training algorithm"
    ],
    "fannsettrainerrorfunction": [
        "fann_set_train_error_function",
        "function.fann-set-train-error-function.php",
        "Sets the error function used during training"
    ],
    "fannsettrainstopfunction": [
        "fann_set_train_stop_function",
        "function.fann-set-train-stop-function.php",
        "Sets the stop function used during training"
    ],
    "fannsetweight": [
        "fann_set_weight",
        "function.fann-set-weight.php",
        "Set a connection in the network"
    ],
    "fannsetweightarray": [
        "fann_set_weight_array",
        "function.fann-set-weight-array.php",
        "Set connections in the network"
    ],
    "fannshuffletraindata": [
        "fann_shuffle_train_data",
        "function.fann-shuffle-train-data.php",
        "Shuffles training data, randomizing the order"
    ],
    "fannsubsettraindata": [
        "fann_subset_train_data",
        "function.fann-subset-train-data.php",
        "Returns an copy of a subset of the train data"
    ],
    "fanntest": [
        "fann_test",
        "function.fann-test.php",
        "Test with a set of inputs, and a set of desired outputs"
    ],
    "fanntestdata": [
        "fann_test_data",
        "function.fann-test-data.php",
        "Test a set of training data and calculates the MSE for the training data"
    ],
    "fanntrain": [
        "fann_train",
        "function.fann-train.php",
        "Train one iteration with a set of inputs, and a set of desired outputs"
    ],
    "fanntrainepoch": [
        "fann_train_epoch",
        "function.fann-train-epoch.php",
        "Train one epoch with a set of training data"
    ],
    "fanntrainondata": [
        "fann_train_on_data",
        "function.fann-train-on-data.php",
        "Trains on an entire dataset for a period of time"
    ],
    "fanntrainonfile": [
        "fann_train_on_file",
        "function.fann-train-on-file.php",
        "Trains on an entire dataset, which is read from file, for a period of time"
    ],
    "fastcgifinishrequest": [
        "fastcgi_finish_request",
        "function.fastcgi-finish-request.php",
        "すべてのレスポンスデータをクライアントにフラッシュする"
    ],
    "fbirdadduser": [
        "fbird_add_user",
        "function.fbird-add-user.php",
        "のエイリアス ibase_add_user"
    ],
    "fbirdaffectedrows": [
        "fbird_affected_rows",
        "function.fbird-affected-rows.php",
        "のエイリアス ibase_affected_rows"
    ],
    "fbirdbackup": [
        "fbird_backup",
        "function.fbird-backup.php",
        "のエイリアス ibase_backup"
    ],
    "fbirdblobadd": [
        "fbird_blob_add",
        "function.fbird-blob-add.php",
        "のエイリアス ibase_blob_add"
    ],
    "fbirdblobcancel": [
        "fbird_blob_cancel",
        "function.fbird-blob-cancel.php",
        "Cancel creating blob"
    ],
    "fbirdblobclose": [
        "fbird_blob_close",
        "function.fbird-blob-close.php",
        "のエイリアス ibase_blob_close"
    ],
    "fbirdblobcreate": [
        "fbird_blob_create",
        "function.fbird-blob-create.php",
        "のエイリアス ibase_blob_create"
    ],
    "fbirdblobecho": [
        "fbird_blob_echo",
        "function.fbird-blob-echo.php",
        "のエイリアス ibase_blob_echo"
    ],
    "fbirdblobget": [
        "fbird_blob_get",
        "function.fbird-blob-get.php",
        "のエイリアス ibase_blob_get"
    ],
    "fbirdblobimport": [
        "fbird_blob_import",
        "function.fbird-blob-import.php",
        "のエイリアス ibase_blob_import"
    ],
    "fbirdblobinfo": [
        "fbird_blob_info",
        "function.fbird-blob-info.php",
        "のエイリアス ibase_blob_info"
    ],
    "fbirdblobopen": [
        "fbird_blob_open",
        "function.fbird-blob-open.php",
        "のエイリアス ibase_blob_open"
    ],
    "fbirdclose": [
        "fbird_close",
        "function.fbird-close.php",
        "のエイリアス ibase_close"
    ],
    "fbirdcommit": [
        "fbird_commit",
        "function.fbird-commit.php",
        "のエイリアス ibase_commit"
    ],
    "fbirdcommitret": [
        "fbird_commit_ret",
        "function.fbird-commit-ret.php",
        "のエイリアス ibase_commit_ret"
    ],
    "fbirdconnect": [
        "fbird_connect",
        "function.fbird-connect.php",
        "のエイリアス ibase_connect"
    ],
    "fbirddbinfo": [
        "fbird_db_info",
        "function.fbird-db-info.php",
        "のエイリアス ibase_db_info"
    ],
    "fbirddeleteuser": [
        "fbird_delete_user",
        "function.fbird-delete-user.php",
        "のエイリアス ibase_delete_user"
    ],
    "fbirddropdb": [
        "fbird_drop_db",
        "function.fbird-drop-db.php",
        "のエイリアス ibase_drop_db"
    ],
    "fbirderrcode": [
        "fbird_errcode",
        "function.fbird-errcode.php",
        "のエイリアス ibase_errcode"
    ],
    "fbirderrmsg": [
        "fbird_errmsg",
        "function.fbird-errmsg.php",
        "のエイリアス ibase_errmsg"
    ],
    "fbirdexecute": [
        "fbird_execute",
        "function.fbird-execute.php",
        "のエイリアス ibase_execute"
    ],
    "fbirdfetchassoc": [
        "fbird_fetch_assoc",
        "function.fbird-fetch-assoc.php",
        "のエイリアス ibase_fetch_assoc"
    ],
    "fbirdfetchobject": [
        "fbird_fetch_object",
        "function.fbird-fetch-object.php",
        "のエイリアス ibase_fetch_object"
    ],
    "fbirdfetchrow": [
        "fbird_fetch_row",
        "function.fbird-fetch-row.php",
        "のエイリアス ibase_fetch_row"
    ],
    "fbirdfieldinfo": [
        "fbird_field_info",
        "function.fbird-field-info.php",
        "のエイリアス ibase_field_info"
    ],
    "fbirdfreeeventhandler": [
        "fbird_free_event_handler",
        "function.fbird-free-event-handler.php",
        "のエイリアス ibase_free_event_handler"
    ],
    "fbirdfreequery": [
        "fbird_free_query",
        "function.fbird-free-query.php",
        "のエイリアス ibase_free_query"
    ],
    "fbirdfreeresult": [
        "fbird_free_result",
        "function.fbird-free-result.php",
        "のエイリアス ibase_free_result"
    ],
    "fbirdgenid": [
        "fbird_gen_id",
        "function.fbird-gen-id.php",
        "のエイリアス ibase_gen_id"
    ],
    "fbirdmaintaindb": [
        "fbird_maintain_db",
        "function.fbird-maintain-db.php",
        "のエイリアス ibase_maintain_db"
    ],
    "fbirdmodifyuser": [
        "fbird_modify_user",
        "function.fbird-modify-user.php",
        "のエイリアス ibase_modify_user"
    ],
    "fbirdnameresult": [
        "fbird_name_result",
        "function.fbird-name-result.php",
        "のエイリアス ibase_name_result"
    ],
    "fbirdnumfields": [
        "fbird_num_fields",
        "function.fbird-num-fields.php",
        "のエイリアス ibase_num_fields"
    ],
    "fbirdnumparams": [
        "fbird_num_params",
        "function.fbird-num-params.php",
        "のエイリアス ibase_num_params"
    ],
    "fbirdparaminfo": [
        "fbird_param_info",
        "function.fbird-param-info.php",
        "のエイリアス ibase_param_info"
    ],
    "fbirdpconnect": [
        "fbird_pconnect",
        "function.fbird-pconnect.php",
        "のエイリアス ibase_pconnect"
    ],
    "fbirdprepare": [
        "fbird_prepare",
        "function.fbird-prepare.php",
        "のエイリアス ibase_prepare"
    ],
    "fbirdquery": [
        "fbird_query",
        "function.fbird-query.php",
        "のエイリアス ibase_query"
    ],
    "fbirdrestore": [
        "fbird_restore",
        "function.fbird-restore.php",
        "のエイリアス ibase_restore"
    ],
    "fbirdrollback": [
        "fbird_rollback",
        "function.fbird-rollback.php",
        "のエイリアス ibase_rollback"
    ],
    "fbirdrollbackret": [
        "fbird_rollback_ret",
        "function.fbird-rollback-ret.php",
        "のエイリアス ibase_rollback_ret"
    ],
    "fbirdserverinfo": [
        "fbird_server_info",
        "function.fbird-server-info.php",
        "のエイリアス ibase_server_info"
    ],
    "fbirdserviceattach": [
        "fbird_service_attach",
        "function.fbird-service-attach.php",
        "のエイリアス ibase_service_attach"
    ],
    "fbirdservicedetach": [
        "fbird_service_detach",
        "function.fbird-service-detach.php",
        "のエイリアス ibase_service_detach"
    ],
    "fbirdseteventhandler": [
        "fbird_set_event_handler",
        "function.fbird-set-event-handler.php",
        "のエイリアス ibase_set_event_handler"
    ],
    "fbirdtrans": [
        "fbird_trans",
        "function.fbird-trans.php",
        "のエイリアス ibase_trans"
    ],
    "fbirdwaitevent": [
        "fbird_wait_event",
        "function.fbird-wait-event.php",
        "のエイリアス ibase_wait_event"
    ],
    "fbsqlaffectedrows": [
        "fbsql_affected_rows",
        "function.fbsql-affected-rows.php",
        "直近の FrontBase 操作により変更されたレコードの数を得る"
    ],
    "fbsqlautocommit": [
        "fbsql_autocommit",
        "function.fbsql-autocommit.php",
        "autocommit を有効または無効にする"
    ],
    "fbsqlblobsize": [
        "fbsql_blob_size",
        "function.fbsql-blob-size.php",
        "BLOB の大きさを取得する"
    ],
    "fbsqlchangeuser": [
        "fbsql_change_user",
        "function.fbsql-change-user.php",
        "アクティブな接続にログインしているユーザーを変更する"
    ],
    "fbsqlclobsize": [
        "fbsql_clob_size",
        "function.fbsql-clob-size.php",
        "CLOB の大きさを取得する"
    ],
    "fbsqlclose": [
        "fbsql_close",
        "function.fbsql-close.php",
        "FrontBase 接続を閉じる"
    ],
    "fbsqlcommit": [
        "fbsql_commit",
        "function.fbsql-commit.php",
        "データベースへのトランザクションをコミットする"
    ],
    "fbsqlconnect": [
        "fbsql_connect",
        "function.fbsql-connect.php",
        "FrontBase サーバーへの接続をオープンする"
    ],
    "fbsqlcreateblob": [
        "fbsql_create_blob",
        "function.fbsql-create-blob.php",
        "BLOB を作成する"
    ],
    "fbsqlcreateclob": [
        "fbsql_create_clob",
        "function.fbsql-create-clob.php",
        "CLOB を作成する"
    ],
    "fbsqlcreatedb": [
        "fbsql_create_db",
        "function.fbsql-create-db.php",
        "FrontBase データベースを作成する"
    ],
    "fbsqldatabase": [
        "fbsql_database",
        "function.fbsql-database.php",
        "接続で使用するデータベース名を取得あるいは設定する"
    ],
    "fbsqldatabasepassword": [
        "fbsql_database_password",
        "function.fbsql-database-password.php",
        "FrontBase データベースのパスワードを設定または取得する"
    ],
    "fbsqldataseek": [
        "fbsql_data_seek",
        "function.fbsql-data-seek.php",
        "内部結果ポインタを移動する"
    ],
    "fbsqldbquery": [
        "fbsql_db_query",
        "function.fbsql-db-query.php",
        "FrontBase クエリを送信する"
    ],
    "fbsqldbstatus": [
        "fbsql_db_status",
        "function.fbsql-db-status.php",
        "指定したデータベースの状態を取得する"
    ],
    "fbsqldropdb": [
        "fbsql_drop_db",
        "function.fbsql-drop-db.php",
        "FrontBase データベースを破棄(削除)する"
    ],
    "fbsqlerrno": [
        "fbsql_errno",
        "function.fbsql-errno.php",
        "前の FrontBase 操作によるエラーメッセージの数値を返す"
    ],
    "fbsqlerror": [
        "fbsql_error",
        "function.fbsql-error.php",
        "前の FrontBase 操作によるエラーメッセージの文字列を返す"
    ],
    "fbsqlfetcharray": [
        "fbsql_fetch_array",
        "function.fbsql-fetch-array.php",
        "連想配列、数値配列、またはその両方として結果レコードを取得する"
    ],
    "fbsqlfetchassoc": [
        "fbsql_fetch_assoc",
        "function.fbsql-fetch-assoc.php",
        "連想配列として結果レコードを取得する"
    ],
    "fbsqlfetchfield": [
        "fbsql_fetch_field",
        "function.fbsql-fetch-field.php",
        "結果からカラム情報を得て、オブジェクトとして返す"
    ],
    "fbsqlfetchlengths": [
        "fbsql_fetch_lengths",
        "function.fbsql-fetch-lengths.php",
        "結果の各出力の長さを得る"
    ],
    "fbsqlfetchobject": [
        "fbsql_fetch_object",
        "function.fbsql-fetch-object.php",
        "オブジェクトとして結果レコードを取得する"
    ],
    "fbsqlfetchrow": [
        "fbsql_fetch_row",
        "function.fbsql-fetch-row.php",
        "数値配列として結果レコードを得る"
    ],
    "fbsqlfieldflags": [
        "fbsql_field_flags",
        "function.fbsql-field-flags.php",
        "クエリ結果において指定したフィールドに関するフラグを得る"
    ],
    "fbsqlfieldlen": [
        "fbsql_field_len",
        "function.fbsql-field-len.php",
        "指定したフィールドの長さを返す"
    ],
    "fbsqlfieldname": [
        "fbsql_field_name",
        "function.fbsql-field-name.php",
        "結果の指定したフィールドの名前を得る"
    ],
    "fbsqlfieldseek": [
        "fbsql_field_seek",
        "function.fbsql-field-seek.php",
        "指定したフィールドオフセットに結果ポインタを設定する"
    ],
    "fbsqlfieldtable": [
        "fbsql_field_table",
        "function.fbsql-field-table.php",
        "指定したフィールドがあるテーブルの名前を得る"
    ],
    "fbsqlfieldtype": [
        "fbsql_field_type",
        "function.fbsql-field-type.php",
        "結果の中で指定したフィールドの型を得る"
    ],
    "fbsqlfreeresult": [
        "fbsql_free_result",
        "function.fbsql-free-result.php",
        "結果メモリを開放する"
    ],
    "fbsqlgetautostartinfo": [
        "fbsql_get_autostart_info",
        "function.fbsql-get-autostart-info.php",
        "説明"
    ],
    "fbsqlhostname": [
        "fbsql_hostname",
        "function.fbsql-hostname.php",
        "接続で使用されているホスト名を取得あるいは設定する"
    ],
    "fbsqlinsertid": [
        "fbsql_insert_id",
        "function.fbsql-insert-id.php",
        "直近の INSERT 処理により生成された ID を得る"
    ],
    "fbsqllistdbs": [
        "fbsql_list_dbs",
        "function.fbsql-list-dbs.php",
        "FrontBase サーバーで利用可能なデータベースの一覧を得る"
    ],
    "fbsqllistfields": [
        "fbsql_list_fields",
        "function.fbsql-list-fields.php",
        "FrontBase 結果フィールドの一覧を得る"
    ],
    "fbsqllisttables": [
        "fbsql_list_tables",
        "function.fbsql-list-tables.php",
        "FrontBase データベースのテーブル一覧を得る"
    ],
    "fbsqlnextresult": [
        "fbsql_next_result",
        "function.fbsql-next-result.php",
        "内部結果ポインタを次の結果に移動する"
    ],
    "fbsqlnumfields": [
        "fbsql_num_fields",
        "function.fbsql-num-fields.php",
        "結果のフィールド数を得る"
    ],
    "fbsqlnumrows": [
        "fbsql_num_rows",
        "function.fbsql-num-rows.php",
        "結果のレコード数を得る"
    ],
    "fbsqlpassword": [
        "fbsql_password",
        "function.fbsql-password.php",
        "接続に対して使用するユーザーパスワードを取得あるいは設定する"
    ],
    "fbsqlpconnect": [
        "fbsql_pconnect",
        "function.fbsql-pconnect.php",
        "FrontBase サーバーへの持続的接続をオープンする"
    ],
    "fbsqlquery": [
        "fbsql_query",
        "function.fbsql-query.php",
        "FrontBase クエリを送信する"
    ],
    "fbsqlreadblob": [
        "fbsql_read_blob",
        "function.fbsql-read-blob.php",
        "データベースから BLOB を読み込む"
    ],
    "fbsqlreadclob": [
        "fbsql_read_clob",
        "function.fbsql-read-clob.php",
        "データベースから CLOB を読み込む"
    ],
    "fbsqlresult": [
        "fbsql_result",
        "function.fbsql-result.php",
        "結果データを得る"
    ],
    "fbsqlrollback": [
        "fbsql_rollback",
        "function.fbsql-rollback.php",
        "データベースへのトランザクションをロールバックする"
    ],
    "fbsqlrowsfetched": [
        "fbsql_rows_fetched",
        "function.fbsql-rows-fetched.php",
        "直近の文で影響をうけた行の数を取得する"
    ],
    "fbsqlselectdb": [
        "fbsql_select_db",
        "function.fbsql-select-db.php",
        "FrontBase データベースを選択する"
    ],
    "fbsqlsetcharacterset": [
        "fbsql_set_characterset",
        "function.fbsql-set-characterset.php",
        "入出力文字セットを変更する"
    ],
    "fbsqlsetlobmode": [
        "fbsql_set_lob_mode",
        "function.fbsql-set-lob-mode.php",
        "FrontBase 結果セットの LOB 取得モードを設定する"
    ],
    "fbsqlsetpassword": [
        "fbsql_set_password",
        "function.fbsql-set-password.php",
        "指定したユーザーのパスワードを変更する"
    ],
    "fbsqlsettransaction": [
        "fbsql_set_transaction",
        "function.fbsql-set-transaction.php",
        "トランザクションのロックと分離レベルを設定する"
    ],
    "fbsqlstartdb": [
        "fbsql_start_db",
        "function.fbsql-start-db.php",
        "ローカルまたはリモートサーバーのデータベースを開始する"
    ],
    "fbsqlstopdb": [
        "fbsql_stop_db",
        "function.fbsql-stop-db.php",
        "ローカルまたはリモートサーバーのデータベースを停止する"
    ],
    "fbsqltablename": [
        "fbsql_table_name",
        "function.fbsql-table-name.php",
        "フィールドのテーブル名を得る"
    ],
    "fbsqlusername": [
        "fbsql_username",
        "function.fbsql-username.php",
        "接続に使用するホストユーザーを取得あるいは設定する"
    ],
    "fbsqlwarnings": [
        "fbsql_warnings",
        "function.fbsql-warnings.php",
        "FrontBase 警告を有効または無効にする"
    ],
    "fclose": [
        "fclose",
        "function.fclose.php",
        "オープンされたファイルポインタをクローズする"
    ],
    "fdfadddocjavascript": [
        "fdf_add_doc_javascript",
        "function.fdf-add-doc-javascript.php",
        "FDF ドキュメントに javascript コードを追加する"
    ],
    "fdfaddtemplate": [
        "fdf_add_template",
        "function.fdf-add-template.php",
        "テンプレートを FDF ドキュメントに追加する"
    ],
    "fdfclose": [
        "fdf_close",
        "function.fdf-close.php",
        "FDF ドキュメントを閉じる"
    ],
    "fdfcreate": [
        "fdf_create",
        "function.fdf-create.php",
        "新規 FDF ドキュメントを作成する"
    ],
    "fdfenumvalues": [
        "fdf_enum_values",
        "function.fdf-enum-values.php",
        "各ドキュメントの値に対してユーザー定義関数をコールする"
    ],
    "fdferrno": [
        "fdf_errno",
        "function.fdf-errno.php",
        "直近の fdf 操作に関するエラーコードを返す"
    ],
    "fdferror": [
        "fdf_error",
        "function.fdf-error.php",
        "直近の fdf エラーコードについての説明を返す"
    ],
    "fdfgetap": [
        "fdf_get_ap",
        "function.fdf-get-ap.php",
        "フィールドの外観を取得する"
    ],
    "fdfgetattachment": [
        "fdf_get_attachment",
        "function.fdf-get-attachment.php",
        "FDF に埋め込まれている、アップロードされたファイルを展開する"
    ],
    "fdfgetencoding": [
        "fdf_get_encoding",
        "function.fdf-get-encoding.php",
        "/Encoding キーの値を取得する"
    ],
    "fdfgetfile": [
        "fdf_get_file",
        "function.fdf-get-file.php",
        "/F キーの値を得る"
    ],
    "fdfgetflags": [
        "fdf_get_flags",
        "function.fdf-get-flags.php",
        "フィールドのフラグを取得する"
    ],
    "fdfgetopt": [
        "fdf_get_opt",
        "function.fdf-get-opt.php",
        "フィールドのオプション配列から値を取得する"
    ],
    "fdfgetstatus": [
        "fdf_get_status",
        "function.fdf-get-status.php",
        "/STATUS キーの値を得る"
    ],
    "fdfgetvalue": [
        "fdf_get_value",
        "function.fdf-get-value.php",
        "フィールドの値を得る"
    ],
    "fdfgetversion": [
        "fdf_get_version",
        "function.fdf-get-version.php",
        "FDF API あるいはファイルのバージョンを取得する"
    ],
    "fdfheader": [
        "fdf_header",
        "function.fdf-header.php",
        "FDF 固有の出力ヘッダをセットする"
    ],
    "fdfnextfieldname": [
        "fdf_next_field_name",
        "function.fdf-next-field-name.php",
        "次のフィールド名を得る"
    ],
    "fdfopen": [
        "fdf_open",
        "function.fdf-open.php",
        "FDF ドキュメントをオープンする"
    ],
    "fdfopenstring": [
        "fdf_open_string",
        "function.fdf-open-string.php",
        "文字列から FDF ドキュメントを読み込む"
    ],
    "fdfremoveitem": [
        "fdf_remove_item",
        "function.fdf-remove-item.php",
        "フォームのターゲットフレームを設定する"
    ],
    "fdfsave": [
        "fdf_save",
        "function.fdf-save.php",
        "FDF ドキュメントを保存する"
    ],
    "fdfsavestring": [
        "fdf_save_string",
        "function.fdf-save-string.php",
        "FDF ドキュメントを文字列として返す"
    ],
    "fdfsetap": [
        "fdf_set_ap",
        "function.fdf-set-ap.php",
        "フィールドの外観を設定する"
    ],
    "fdfsetencoding": [
        "fdf_set_encoding",
        "function.fdf-set-encoding.php",
        "FDF 文字エンコーディングを設定する"
    ],
    "fdfsetfile": [
        "fdf_set_file",
        "function.fdf-set-file.php",
        "FDF データを表示する PDF ドキュメントを設定する"
    ],
    "fdfsetflags": [
        "fdf_set_flags",
        "function.fdf-set-flags.php",
        "フィールドのフラグを設定する"
    ],
    "fdfsetjavascriptaction": [
        "fdf_set_javascript_action",
        "function.fdf-set-javascript-action.php",
        "フィールドの javascript アクションを設定する"
    ],
    "fdfsetonimportjavascript": [
        "fdf_set_on_import_javascript",
        "function.fdf-set-on-import-javascript.php",
        "Acrobat が FDF をオープンした際に実行される javascript のコードを追加する"
    ],
    "fdfsetopt": [
        "fdf_set_opt",
        "function.fdf-set-opt.php",
        "フィールドのオプションを設定する"
    ],
    "fdfsetstatus": [
        "fdf_set_status",
        "function.fdf-set-status.php",
        "/STATUS キーの値を設定する"
    ],
    "fdfsetsubmitformaction": [
        "fdf_set_submit_form_action",
        "function.fdf-set-submit-form-action.php",
        "フィールドの投稿フォームアクションを設定する"
    ],
    "fdfsettargetframe": [
        "fdf_set_target_frame",
        "function.fdf-set-target-frame.php",
        "フォームの表示対象となるフレームを設定する"
    ],
    "fdfsetvalue": [
        "fdf_set_value",
        "function.fdf-set-value.php",
        "フィールドの値を設定する"
    ],
    "fdfsetversion": [
        "fdf_set_version",
        "function.fdf-set-version.php",
        "FDF ファイルのバージョン番号を設定する"
    ],
    "feof": [
        "feof",
        "function.feof.php",
        "ファイルポインタがファイル終端に達しているかどうか調べる"
    ],
    "FFIaddr": [
        "FFI::addr",
        "ffi.addr.php",
        "Creates an unmanaged pointer to C data"
    ],
    "FFIalignof": [
        "FFI::alignof",
        "ffi.alignof.php",
        "Gets the alignment"
    ],
    "FFIarrayType": [
        "FFI::arrayType",
        "ffi.arraytype.php",
        "Dynamically constructs a new C array type"
    ],
    "FFIcast": [
        "FFI::cast",
        "ffi.cast.php",
        "Performs a C type cast"
    ],
    "FFIcdef": [
        "FFI::cdef",
        "ffi.cdef.php",
        "Creates a new FFI object"
    ],
    "FFIfree": [
        "FFI::free",
        "ffi.free.php",
        "Releases an unmanaged data structure"
    ],
    "FFIisNull": [
        "FFI::isNull",
        "ffi.isnull.php",
        "Checks whether a FFI\\CData is a null pointer"
    ],
    "FFIload": [
        "FFI::load",
        "ffi.load.php",
        "Loads C declarations from a C header file"
    ],
    "FFImemcmp": [
        "FFI::memcmp",
        "ffi.memcmp.php",
        "Compares memory areas"
    ],
    "FFImemcpy": [
        "FFI::memcpy",
        "ffi.memcpy.php",
        "Copies one memory area to another"
    ],
    "FFImemset": [
        "FFI::memset",
        "ffi.memset.php",
        "Fills a memory area"
    ],
    "FFInew": [
        "FFI::new",
        "ffi.new.php",
        "Creates a C data structure"
    ],
    "FFIscope": [
        "FFI::scope",
        "ffi.scope.php",
        "Instantiates an FFI object with C declarations parsed during preloading"
    ],
    "FFIsizeof": [
        "FFI::sizeof",
        "ffi.sizeof.php",
        "Gets the size of C data or types"
    ],
    "FFIstring": [
        "FFI::string",
        "ffi.string.php",
        "Creates a PHP string from a memory area"
    ],
    "FFItype": [
        "FFI::type",
        "ffi.type.php",
        "Creates an FFI\\CType object from a C declaration"
    ],
    "FFItypeof": [
        "FFI::typeof",
        "ffi.typeof.php",
        "Gets the FFI\\CType of FFI\\CData"
    ],
    "fflush": [
        "fflush",
        "function.fflush.php",
        "出力をファイルにフラッシュする"
    ],
    "fgetc": [
        "fgetc",
        "function.fgetc.php",
        "ファイルポインタから1文字取り出す"
    ],
    "fgetcsv": [
        "fgetcsv",
        "function.fgetcsv.php",
        "ファイルポインタから行を取得し、CSVフィールドを処理する"
    ],
    "fgets": [
        "fgets",
        "function.fgets.php",
        "ファイルポインタから 1 行取得する"
    ],
    "fgetss": [
        "fgetss",
        "function.fgetss.php",
        "ファイルポインタから 1 行取り出し、HTML タグを取り除く"
    ],
    "file": [
        "file://",
        "wrappers.file.php",
        "ローカルファイルシステムへのアクセス"
    ],
    "fileatime": [
        "fileatime",
        "function.fileatime.php",
        "ファイルの最終アクセス時刻を取得する"
    ],
    "filectime": [
        "filectime",
        "function.filectime.php",
        "ファイルの inode 変更時刻を取得する"
    ],
    "filegroup": [
        "filegroup",
        "function.filegroup.php",
        "ファイルのグループを取得する"
    ],
    "fileinode": [
        "fileinode",
        "function.fileinode.php",
        "ファイルの inode を取得する"
    ],
    "filemtime": [
        "filemtime",
        "function.filemtime.php",
        "ファイルの更新時刻を取得する"
    ],
    "fileowner": [
        "fileowner",
        "function.fileowner.php",
        "ファイルの所有者を取得する"
    ],
    "fileperms": [
        "fileperms",
        "function.fileperms.php",
        "ファイルのパーミッションを取得する"
    ],
    "filepro": [
        "filepro",
        "function.filepro.php",
        "map ファイルの読み込みと照合を行う"
    ],
    "fileprofieldcount": [
        "filepro_fieldcount",
        "function.filepro-fieldcount.php",
        "filePro データベース中のフィールド数を返す"
    ],
    "fileprofieldname": [
        "filepro_fieldname",
        "function.filepro-fieldname.php",
        "フィールド名を取得する"
    ],
    "fileprofieldtype": [
        "filepro_fieldtype",
        "function.filepro-fieldtype.php",
        "フィールド型を取得する"
    ],
    "fileprofieldwidth": [
        "filepro_fieldwidth",
        "function.filepro-fieldwidth.php",
        "フィールド幅を取得する"
    ],
    "fileproretrieve": [
        "filepro_retrieve",
        "function.filepro-retrieve.php",
        "filePro データベースからデータを取得する"
    ],
    "fileprorowcount": [
        "filepro_rowcount",
        "function.filepro-rowcount.php",
        "filePro データベースの行の数を返します"
    ],
    "filesize": [
        "filesize",
        "function.filesize.php",
        "ファイルのサイズを取得する"
    ],
    "FilesystemIteratorcurrent": [
        "FilesystemIterator::current",
        "filesystemiterator.current.php",
        "現在のファイル"
    ],
    "FilesystemIteratorgetFlags": [
        "FilesystemIterator::getFlags",
        "filesystemiterator.getflags.php",
        "処理フラグを取得する"
    ],
    "FilesystemIteratorkey": [
        "FilesystemIterator::key",
        "filesystemiterator.key.php",
        "現在のファイルのキーを取得する"
    ],
    "FilesystemIteratornext": [
        "FilesystemIterator::next",
        "filesystemiterator.next.php",
        "次のファイルに移動する"
    ],
    "FilesystemIteratorrewind": [
        "FilesystemIterator::rewind",
        "filesystemiterator.rewind.php",
        "先頭に巻き戻す"
    ],
    "FilesystemIteratorsetFlags": [
        "FilesystemIterator::setFlags",
        "filesystemiterator.setflags.php",
        "処理フラグを設定する"
    ],
    "FilesystemIteratorconstruct": [
        "FilesystemIterator::__construct",
        "filesystemiterator.construct.php",
        "新しい filesystem イテレータを作成する"
    ],
    "filetype": [
        "filetype",
        "function.filetype.php",
        "ファイルタイプを取得する"
    ],
    "fileexists": [
        "file_exists",
        "function.file-exists.php",
        "ファイルまたはディレクトリが存在するかどうか調べる"
    ],
    "filegetcontents": [
        "file_get_contents",
        "function.file-get-contents.php",
        "ファイルの内容を全て文字列に読み込む"
    ],
    "fileputcontents": [
        "file_put_contents",
        "function.file-put-contents.php",
        "データをファイルに書き込む"
    ],
    "FilterIteratoraccept": [
        "FilterIterator::accept",
        "filteriterator.accept.php",
        "イテレータの現在の要素がフィルタを満たすかどうかを調べる"
    ],
    "FilterIteratorcurrent": [
        "FilterIterator::current",
        "filteriterator.current.php",
        "現在の要素の値を取得する"
    ],
    "FilterIteratorgetInnerIterator": [
        "FilterIterator::getInnerIterator",
        "filteriterator.getinneriterator.php",
        "内部イテレータを取得する"
    ],
    "FilterIteratorkey": [
        "FilterIterator::key",
        "filteriterator.key.php",
        "現在のキーを取得する"
    ],
    "FilterIteratornext": [
        "FilterIterator::next",
        "filteriterator.next.php",
        "イテレータを前に移動する"
    ],
    "FilterIteratorrewind": [
        "FilterIterator::rewind",
        "filteriterator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "FilterIteratorvalid": [
        "FilterIterator::valid",
        "filteriterator.valid.php",
        "現在の要素が有効かどうかをチェックする"
    ],
    "FilterIteratorconstruct": [
        "FilterIterator::__construct",
        "filteriterator.construct.php",
        "filterIterator を作成する"
    ],
    "filterhasvar": [
        "filter_has_var",
        "function.filter-has-var.php",
        "指定した型の変数が存在するかどうかを調べる"
    ],
    "filterid": [
        "filter_id",
        "function.filter-id.php",
        "フィルタの名前からフィルタ ID を返す"
    ],
    "filterinput": [
        "filter_input",
        "function.filter-input.php",
        "指定した名前の変数を外部から受け取り、オプションでそれをフィルタリングする"
    ],
    "filterinputarray": [
        "filter_input_array",
        "function.filter-input-array.php",
        "外部から変数を受け取り、オプションでそれらをフィルタリングする"
    ],
    "filterlist": [
        "filter_list",
        "function.filter-list.php",
        "サポートされるフィルタの一覧を返す"
    ],
    "filtervar": [
        "filter_var",
        "function.filter-var.php",
        "指定したフィルタでデータをフィルタリングする"
    ],
    "filtervararray": [
        "filter_var_array",
        "function.filter-var-array.php",
        "複数の変数を受け取り、オプションでそれらをフィルタリングする"
    ],
    "finfobuffer": [
        "finfo::buffer",
        "finfo.buffer.php",
        "finfo_buffer() のエイリアス"
    ],
    "finfofile": [
        "finfo::file",
        "finfo.file.php",
        "finfo_file() のエイリアス"
    ],
    "finfosetflags": [
        "finfo::set_flags",
        "finfo.set-flags.php",
        "finfo_set_flags() のエイリアス"
    ],
    "finfoconstruct": [
        "finfo::__construct",
        "finfo.construct.php",
        "finfo_open のエイリアス"
    ],
    "finfoclose": [
        "finfo_close",
        "function.finfo-close.php",
        "fileinfo リソースを閉じる"
    ],
    "finfoopen": [
        "finfo_open",
        "function.finfo-open.php",
        "新しい fileinfo リソースを作成する"
    ],
    "floatval": [
        "floatval",
        "function.floatval.php",
        "変数の float 値を取得する"
    ],
    "flock": [
        "flock",
        "function.flock.php",
        "汎用のファイルロックを行う"
    ],
    "floor": [
        "floor",
        "function.floor.php",
        "端数の切り捨て"
    ],
    "flush": [
        "flush",
        "function.flush.php",
        "システム出力バッファをフラッシュする"
    ],
    "fmod": [
        "fmod",
        "function.fmod.php",
        "引数で除算をした際の剰余を返す"
    ],
    "fnmatch": [
        "fnmatch",
        "function.fnmatch.php",
        "ファイル名がパターンにマッチするか調べる"
    ],
    "fopen": [
        "fopen",
        "function.fopen.php",
        "ファイルまたは URL をオープンする"
    ],
    "forwardstaticcall": [
        "forward_static_call",
        "function.forward-static-call.php",
        "静的メソッドをコールする"
    ],
    "forwardstaticcallarray": [
        "forward_static_call_array",
        "function.forward-static-call-array.php",
        "静的メソッドをコールし、引数を配列で渡す"
    ],
    "fpassthru": [
        "fpassthru",
        "function.fpassthru.php",
        "ファイルポインタ上に残っているすべてのデータを出力する"
    ],
    "fprintf": [
        "fprintf",
        "function.fprintf.php",
        "フォーマットされた文字列をストリームに書き込む"
    ],
    "fputcsv": [
        "fputcsv",
        "function.fputcsv.php",
        "行を CSV 形式にフォーマットし、ファイルポインタに書き込む"
    ],
    "fputs": [
        "fputs",
        "function.fputs.php",
        "fwrite のエイリアス"
    ],
    "fread": [
        "fread",
        "function.fread.php",
        "バイナリセーフなファイルの読み込み"
    ],
    "frenchtojd": [
        "frenchtojd",
        "function.frenchtojd.php",
        "フランス革命暦をユリウス積算日に変換する"
    ],
    "fscanf": [
        "fscanf",
        "function.fscanf.php",
        "フォーマットに基づきファイルからの入力を処理する"
    ],
    "fseek": [
        "fseek",
        "function.fseek.php",
        "ファイルポインタを移動する"
    ],
    "fsockopen": [
        "fsockopen",
        "function.fsockopen.php",
        "インターネット接続もしくは Unix ドメインソケット接続をオープンする"
    ],
    "fstat": [
        "fstat",
        "function.fstat.php",
        "オープンしたファイルポインタからファイルに関する情報を取得する"
    ],
    "ftell": [
        "ftell",
        "function.ftell.php",
        "ファイルの読み書き用ポインタの現在位置を返す"
    ],
    "ftok": [
        "ftok",
        "function.ftok.php",
        "パス名とプロジェクト ID を、System V IPC キーに変換する"
    ],
    "ftp": [
        "ftp://",
        "wrappers.ftp.php",
        "FTP(s) URL へのアクセス"
    ],
    "ftpalloc": [
        "ftp_alloc",
        "function.ftp-alloc.php",
        "アップロードされるファイルのためのスペースを確保する"
    ],
    "ftpappend": [
        "ftp_append",
        "function.ftp-append.php",
        "ファイルの内容をFTPサーバ上の別のファイルに追加する"
    ],
    "ftpcdup": [
        "ftp_cdup",
        "function.ftp-cdup.php",
        "親ディレクトリに移動する"
    ],
    "ftpchdir": [
        "ftp_chdir",
        "function.ftp-chdir.php",
        "FTP サーバー上でディレクトリを移動する"
    ],
    "ftpchmod": [
        "ftp_chmod",
        "function.ftp-chmod.php",
        "FTP 経由でファイルのパーミッションを設定する"
    ],
    "ftpclose": [
        "ftp_close",
        "function.ftp-close.php",
        "FTP 接続を閉じる"
    ],
    "ftpconnect": [
        "ftp_connect",
        "function.ftp-connect.php",
        "FTP 接続をオープンする"
    ],
    "ftpdelete": [
        "ftp_delete",
        "function.ftp-delete.php",
        "FTP サーバー上のファイルを削除する"
    ],
    "ftpexec": [
        "ftp_exec",
        "function.ftp-exec.php",
        "FTP サーバー上でのコマンドの実行をリクエストする"
    ],
    "ftpfget": [
        "ftp_fget",
        "function.ftp-fget.php",
        "FTP サーバーからファイルをダウンロードし、オープン中のファイルに保存する"
    ],
    "ftpfput": [
        "ftp_fput",
        "function.ftp-fput.php",
        "オープン中のファイルを FTP サーバーにアップロードする"
    ],
    "ftpget": [
        "ftp_get",
        "function.ftp-get.php",
        "FTP サーバーからファイルをダウンロードする"
    ],
    "ftpgetoption": [
        "ftp_get_option",
        "function.ftp-get-option.php",
        "カレント FTP ストリームでの種々の実行時動作を取得する"
    ],
    "ftplogin": [
        "ftp_login",
        "function.ftp-login.php",
        "FTP 接続にログインする"
    ],
    "ftpmdtm": [
        "ftp_mdtm",
        "function.ftp-mdtm.php",
        "指定したファイルが最後に更新された時刻を返す"
    ],
    "ftpmkdir": [
        "ftp_mkdir",
        "function.ftp-mkdir.php",
        "ディレクトリを作成する"
    ],
    "ftpmlsd": [
        "ftp_mlsd",
        "function.ftp-mlsd.php",
        "ディレクトリに存在するファイルの一覧を返す"
    ],
    "ftpnbcontinue": [
        "ftp_nb_continue",
        "function.ftp-nb-continue.php",
        "ファイルの取得/送信を継続する（非ブロッキング）"
    ],
    "ftpnbfget": [
        "ftp_nb_fget",
        "function.ftp-nb-fget.php",
        "FTP サーバーからファイルをダウンロードし、オープン中のファイルに保存する（非ブロッキング）"
    ],
    "ftpnbfput": [
        "ftp_nb_fput",
        "function.ftp-nb-fput.php",
        "オープン中のファイルを FTP サーバーに保存する（非ブロッキング）"
    ],
    "ftpnbget": [
        "ftp_nb_get",
        "function.ftp-nb-get.php",
        "FTP サーバーからファイルを取得し、ローカルファイルに書き込む（非ブロッキング）"
    ],
    "ftpnbput": [
        "ftp_nb_put",
        "function.ftp-nb-put.php",
        "FTP サーバーにファイルを保存する（非ブロッキング）"
    ],
    "ftpnlist": [
        "ftp_nlist",
        "function.ftp-nlist.php",
        "指定したディレクトリのファイルの一覧を返す"
    ],
    "ftppasv": [
        "ftp_pasv",
        "function.ftp-pasv.php",
        "パッシブモードをオンまたはオフにする"
    ],
    "ftpput": [
        "ftp_put",
        "function.ftp-put.php",
        "FTP サーバーにファイルをアップロードする"
    ],
    "ftppwd": [
        "ftp_pwd",
        "function.ftp-pwd.php",
        "カレントのディレクトリ名を返す"
    ],
    "ftpquit": [
        "ftp_quit",
        "function.ftp-quit.php",
        "ftp_close のエイリアス"
    ],
    "ftpraw": [
        "ftp_raw",
        "function.ftp-raw.php",
        "FTP サーバーに任意のコマンドを送信する"
    ],
    "ftprawlist": [
        "ftp_rawlist",
        "function.ftp-rawlist.php",
        "指定したディレクトリの詳細なファイル一覧を返す"
    ],
    "ftprename": [
        "ftp_rename",
        "function.ftp-rename.php",
        "FTP サーバー上のファイルまたはディレクトリの名前を変更する"
    ],
    "ftprmdir": [
        "ftp_rmdir",
        "function.ftp-rmdir.php",
        "ディレクトリを削除する"
    ],
    "ftpsetoption": [
        "ftp_set_option",
        "function.ftp-set-option.php",
        "さまざまな FTP 実行時オプションを設定する"
    ],
    "ftpsite": [
        "ftp_site",
        "function.ftp-site.php",
        "SITEコマンドをサーバーに送信する"
    ],
    "ftpsize": [
        "ftp_size",
        "function.ftp-size.php",
        "指定したファイルのサイズを返す"
    ],
    "ftpsslconnect": [
        "ftp_ssl_connect",
        "function.ftp-ssl-connect.php",
        "セキュアな SSL-FTP 接続をオープンする"
    ],
    "ftpsystype": [
        "ftp_systype",
        "function.ftp-systype.php",
        "リモート FTP サーバーのシステム型 ID を返す"
    ],
    "FTP": [
        "FTP コンテキストオプション",
        "context.ftp.php",
        "FTP コンテキストオプションの一覧"
    ],
    "ftruncate": [
        "ftruncate",
        "function.ftruncate.php",
        "ファイルを指定した長さに丸める"
    ],
    "functionexists": [
        "function_exists",
        "function.function-exists.php",
        "指定した関数が定義されている場合に TRUE を返す"
    ],
    "funcgetarg": [
        "func_get_arg",
        "function.func-get-arg.php",
        "引数のリストから要素をひとつ返す"
    ],
    "funcgetargs": [
        "func_get_args",
        "function.func-get-args.php",
        "関数の引数リストを配列として返す"
    ],
    "funcnumargs": [
        "func_num_args",
        "function.func-num-args.php",
        "関数に渡された引数の数を返す"
    ],
    "fwrite": [
        "fwrite",
        "function.fwrite.php",
        "バイナリセーフなファイル書き込み処理"
    ],
    "gccollectcycles": [
        "gc_collect_cycles",
        "function.gc-collect-cycles.php",
        "すべての既存ガベージサイクルを強制的に収集する"
    ],
    "gcdisable": [
        "gc_disable",
        "function.gc-disable.php",
        "循環参照コレクタを無効にする"
    ],
    "gcenable": [
        "gc_enable",
        "function.gc-enable.php",
        "循環参照コレクタを有効にする"
    ],
    "gcenabled": [
        "gc_enabled",
        "function.gc-enabled.php",
        "循環参照コレクタの状態を返す"
    ],
    "gcmemcaches": [
        "gc_mem_caches",
        "function.gc-mem-caches.php",
        "Zend Engine のメモリーマネージャによって使用されたメモリーを再利用する"
    ],
    "gcstatus": [
        "gc_status",
        "function.gc-status.php",
        "ガベージコレクタに関する情報を取得する"
    ],
    "gdinfo": [
        "gd_info",
        "function.gd-info.php",
        "現在インストールされているGDライブラリに関する情報を取得する"
    ],
    "GearmanClientaddOptions": [
        "GearmanClient::addOptions",
        "gearmanclient.addoptions.php",
        "Add client options"
    ],
    "GearmanClientaddServer": [
        "GearmanClient::addServer",
        "gearmanclient.addserver.php",
        "Add a job server to the client"
    ],
    "GearmanClientaddServers": [
        "GearmanClient::addServers",
        "gearmanclient.addservers.php",
        "Add a list of job servers to the client"
    ],
    "GearmanClientaddTask": [
        "GearmanClient::addTask",
        "gearmanclient.addtask.php",
        "Add a task to be run in parallel"
    ],
    "GearmanClientaddTaskBackground": [
        "GearmanClient::addTaskBackground",
        "gearmanclient.addtaskbackground.php",
        "Add a background task to be run in parallel"
    ],
    "GearmanClientaddTaskHigh": [
        "GearmanClient::addTaskHigh",
        "gearmanclient.addtaskhigh.php",
        "Add a high priority task to run in parallel"
    ],
    "GearmanClientaddTaskHighBackground": [
        "GearmanClient::addTaskHighBackground",
        "gearmanclient.addtaskhighbackground.php",
        "Add a high priority background task to be run in parallel"
    ],
    "GearmanClientaddTaskLow": [
        "GearmanClient::addTaskLow",
        "gearmanclient.addtasklow.php",
        "Add a low priority task to run in parallel"
    ],
    "GearmanClientaddTaskLowBackground": [
        "GearmanClient::addTaskLowBackground",
        "gearmanclient.addtasklowbackground.php",
        "Add a low priority background task to be run in parallel"
    ],
    "GearmanClientaddTaskStatus": [
        "GearmanClient::addTaskStatus",
        "gearmanclient.addtaskstatus.php",
        "Add a task to get status"
    ],
    "GearmanClientclearCallbacks": [
        "GearmanClient::clearCallbacks",
        "gearmanclient.clearcallbacks.php",
        "Clear all task callback functions"
    ],
    "GearmanClientclone": [
        "GearmanClient::clone",
        "gearmanclient.clone.php",
        "Create a copy of a GearmanClient object"
    ],
    "GearmanClientcontext": [
        "GearmanClient::context",
        "gearmanclient.context.php",
        "Get the application context"
    ],
    "GearmanClientdata": [
        "GearmanClient::data",
        "gearmanclient.data.php",
        "Get the application data (deprecated)"
    ],
    "GearmanClientdo": [
        "GearmanClient::do",
        "gearmanclient.do.php",
        "Run a single task and return a result [deprecated]"
    ],
    "GearmanClientdoBackground": [
        "GearmanClient::doBackground",
        "gearmanclient.dobackground.php",
        "Run a task in the background"
    ],
    "GearmanClientdoHigh": [
        "GearmanClient::doHigh",
        "gearmanclient.dohigh.php",
        "Run a single high priority task"
    ],
    "GearmanClientdoHighBackground": [
        "GearmanClient::doHighBackground",
        "gearmanclient.dohighbackground.php",
        "Run a high priority task in the background"
    ],
    "GearmanClientdoJobHandle": [
        "GearmanClient::doJobHandle",
        "gearmanclient.dojobhandle.php",
        "Get the job handle for the running task"
    ],
    "GearmanClientdoLow": [
        "GearmanClient::doLow",
        "gearmanclient.dolow.php",
        "Run a single low priority task"
    ],
    "GearmanClientdoLowBackground": [
        "GearmanClient::doLowBackground",
        "gearmanclient.dolowbackground.php",
        "Run a low priority task in the background"
    ],
    "GearmanClientdoNormal": [
        "GearmanClient::doNormal",
        "gearmanclient.donormal.php",
        "Run a single task and return a result"
    ],
    "GearmanClientdoStatus": [
        "GearmanClient::doStatus",
        "gearmanclient.dostatus.php",
        "Get the status for the running task"
    ],
    "GearmanClientecho": [
        "GearmanClient::echo",
        "gearmanclient.echo.php",
        "Send data to all job servers to see if they echo it back [deprecated]"
    ],
    "GearmanClienterror": [
        "GearmanClient::error",
        "gearmanclient.error.php",
        "Returns an error string for the last error encountered"
    ],
    "GearmanClientgetErrno": [
        "GearmanClient::getErrno",
        "gearmanclient.geterrno.php",
        "Get an errno value"
    ],
    "GearmanClientjobStatus": [
        "GearmanClient::jobStatus",
        "gearmanclient.jobstatus.php",
        "Get the status of a background job"
    ],
    "GearmanClientping": [
        "GearmanClient::ping",
        "gearmanclient.ping.php",
        "Send data to all job servers to see if they echo it back"
    ],
    "GearmanClientremoveOptions": [
        "GearmanClient::removeOptions",
        "gearmanclient.removeoptions.php",
        "Remove client options"
    ],
    "GearmanClientreturnCode": [
        "GearmanClient::returnCode",
        "gearmanclient.returncode.php",
        "Get the last Gearman return code"
    ],
    "GearmanClientrunTasks": [
        "GearmanClient::runTasks",
        "gearmanclient.runtasks.php",
        "Run a list of tasks in parallel"
    ],
    "GearmanClientsetClientCallback": [
        "GearmanClient::setClientCallback",
        "gearmanclient.setclientcallback.php",
        "Callback function when there is a data packet for a task (deprecated)"
    ],
    "GearmanClientsetCompleteCallback": [
        "GearmanClient::setCompleteCallback",
        "gearmanclient.setcompletecallback.php",
        "Set a function to be called on task completion"
    ],
    "GearmanClientsetContext": [
        "GearmanClient::setContext",
        "gearmanclient.setcontext.php",
        "Set application context"
    ],
    "GearmanClientsetCreatedCallback": [
        "GearmanClient::setCreatedCallback",
        "gearmanclient.setcreatedcallback.php",
        "Set a callback for when a task is queued"
    ],
    "GearmanClientsetData": [
        "GearmanClient::setData",
        "gearmanclient.setdata.php",
        "Set application data (deprecated)"
    ],
    "GearmanClientsetDataCallback": [
        "GearmanClient::setDataCallback",
        "gearmanclient.setdatacallback.php",
        "Callback function when there is a data packet for a task"
    ],
    "GearmanClientsetExceptionCallback": [
        "GearmanClient::setExceptionCallback",
        "gearmanclient.setexceptioncallback.php",
        "Set a callback for worker exceptions"
    ],
    "GearmanClientsetFailCallback": [
        "GearmanClient::setFailCallback",
        "gearmanclient.setfailcallback.php",
        "Set callback for job failure"
    ],
    "GearmanClientsetOptions": [
        "GearmanClient::setOptions",
        "gearmanclient.setoptions.php",
        "Set client options"
    ],
    "GearmanClientsetStatusCallback": [
        "GearmanClient::setStatusCallback",
        "gearmanclient.setstatuscallback.php",
        "Set a callback for collecting task status"
    ],
    "GearmanClientsetTimeout": [
        "GearmanClient::setTimeout",
        "gearmanclient.settimeout.php",
        "Set socket I/O activity timeout"
    ],
    "GearmanClientsetWarningCallback": [
        "GearmanClient::setWarningCallback",
        "gearmanclient.setwarningcallback.php",
        "Set a callback for worker warnings"
    ],
    "GearmanClientsetWorkloadCallback": [
        "GearmanClient::setWorkloadCallback",
        "gearmanclient.setworkloadcallback.php",
        "Set a callback for accepting incremental data updates"
    ],
    "GearmanClienttimeout": [
        "GearmanClient::timeout",
        "gearmanclient.timeout.php",
        "Get current socket I/O activity timeout value"
    ],
    "GearmanClientconstruct": [
        "GearmanClient::__construct",
        "gearmanclient.construct.php",
        "Create a GearmanClient instance"
    ],
    "GearmanJobcomplete": [
        "GearmanJob::complete",
        "gearmanjob.complete.php",
        "Send the result and complete status (deprecated)"
    ],
    "GearmanJobdata": [
        "GearmanJob::data",
        "gearmanjob.data.php",
        "Send data for a running job (deprecated)"
    ],
    "GearmanJobexception": [
        "GearmanJob::exception",
        "gearmanjob.exception.php",
        "Send exception for running job (deprecated)"
    ],
    "GearmanJobfail": [
        "GearmanJob::fail",
        "gearmanjob.fail.php",
        "Send fail status (deprecated)"
    ],
    "GearmanJobfunctionName": [
        "GearmanJob::functionName",
        "gearmanjob.functionname.php",
        "Get function name"
    ],
    "GearmanJobhandle": [
        "GearmanJob::handle",
        "gearmanjob.handle.php",
        "Get the job handle"
    ],
    "GearmanJobreturnCode": [
        "GearmanJob::returnCode",
        "gearmanjob.returncode.php",
        "Get last return code"
    ],
    "GearmanJobsendComplete": [
        "GearmanJob::sendComplete",
        "gearmanjob.sendcomplete.php",
        "Send the result and complete status"
    ],
    "GearmanJobsendData": [
        "GearmanJob::sendData",
        "gearmanjob.senddata.php",
        "Send data for a running job"
    ],
    "GearmanJobsendException": [
        "GearmanJob::sendException",
        "gearmanjob.sendexception.php",
        "Send exception for running job (exception)"
    ],
    "GearmanJobsendFail": [
        "GearmanJob::sendFail",
        "gearmanjob.sendfail.php",
        "Send fail status"
    ],
    "GearmanJobsendStatus": [
        "GearmanJob::sendStatus",
        "gearmanjob.sendstatus.php",
        "Send status"
    ],
    "GearmanJobsendWarning": [
        "GearmanJob::sendWarning",
        "gearmanjob.sendwarning.php",
        "Send a warning"
    ],
    "GearmanJobsetReturn": [
        "GearmanJob::setReturn",
        "gearmanjob.setreturn.php",
        "Set a return value"
    ],
    "GearmanJobstatus": [
        "GearmanJob::status",
        "gearmanjob.status.php",
        "Send status (deprecated)"
    ],
    "GearmanJobunique": [
        "GearmanJob::unique",
        "gearmanjob.unique.php",
        "Get the unique identifier"
    ],
    "GearmanJobwarning": [
        "GearmanJob::warning",
        "gearmanjob.warning.php",
        "Send a warning (deprecated)"
    ],
    "GearmanJobworkload": [
        "GearmanJob::workload",
        "gearmanjob.workload.php",
        "Get workload"
    ],
    "GearmanJobworkloadSize": [
        "GearmanJob::workloadSize",
        "gearmanjob.workloadsize.php",
        "Get size of work load"
    ],
    "GearmanJobconstruct": [
        "GearmanJob::__construct",
        "gearmanjob.construct.php",
        "Create a GearmanJob instance"
    ],
    "GearmanTaskcreate": [
        "GearmanTask::create",
        "gearmantask.create.php",
        "Create a task (deprecated)"
    ],
    "GearmanTaskdata": [
        "GearmanTask::data",
        "gearmantask.data.php",
        "Get data returned for a task"
    ],
    "GearmanTaskdataSize": [
        "GearmanTask::dataSize",
        "gearmantask.datasize.php",
        "Get the size of returned data"
    ],
    "GearmanTaskfunction": [
        "GearmanTask::function",
        "gearmantask.function.php",
        "Get associated function name (deprecated)"
    ],
    "GearmanTaskfunctionName": [
        "GearmanTask::functionName",
        "gearmantask.functionname.php",
        "Get associated function name"
    ],
    "GearmanTaskisKnown": [
        "GearmanTask::isKnown",
        "gearmantask.isknown.php",
        "Determine if task is known"
    ],
    "GearmanTaskisRunning": [
        "GearmanTask::isRunning",
        "gearmantask.isrunning.php",
        "Test whether the task is currently running"
    ],
    "GearmanTaskjobHandle": [
        "GearmanTask::jobHandle",
        "gearmantask.jobhandle.php",
        "Get the job handle"
    ],
    "GearmanTaskrecvData": [
        "GearmanTask::recvData",
        "gearmantask.recvdata.php",
        "Read work or result data into a buffer for a task"
    ],
    "GearmanTaskreturnCode": [
        "GearmanTask::returnCode",
        "gearmantask.returncode.php",
        "Get the last return code"
    ],
    "GearmanTasksendData": [
        "GearmanTask::sendData",
        "gearmantask.senddata.php",
        "Send data for a task (deprecated)"
    ],
    "GearmanTasksendWorkload": [
        "GearmanTask::sendWorkload",
        "gearmantask.sendworkload.php",
        "Send data for a task"
    ],
    "GearmanTasktaskDenominator": [
        "GearmanTask::taskDenominator",
        "gearmantask.taskdenominator.php",
        "Get completion percentage denominator"
    ],
    "GearmanTasktaskNumerator": [
        "GearmanTask::taskNumerator",
        "gearmantask.tasknumerator.php",
        "Get completion percentage numerator"
    ],
    "GearmanTaskunique": [
        "GearmanTask::unique",
        "gearmantask.unique.php",
        "Get the unique identifier for a task"
    ],
    "GearmanTaskuuid": [
        "GearmanTask::uuid",
        "gearmantask.uuid.php",
        "Get the unique identifier for a task (deprecated)"
    ],
    "GearmanTaskconstruct": [
        "GearmanTask::__construct",
        "gearmantask.construct.php",
        "Create a GearmanTask instance"
    ],
    "GearmanWorkeraddFunction": [
        "GearmanWorker::addFunction",
        "gearmanworker.addfunction.php",
        "Register and add callback function"
    ],
    "GearmanWorkeraddOptions": [
        "GearmanWorker::addOptions",
        "gearmanworker.addoptions.php",
        "Add worker options"
    ],
    "GearmanWorkeraddServer": [
        "GearmanWorker::addServer",
        "gearmanworker.addserver.php",
        "Add a job server"
    ],
    "GearmanWorkeraddServers": [
        "GearmanWorker::addServers",
        "gearmanworker.addservers.php",
        "Add job servers"
    ],
    "GearmanWorkerclone": [
        "GearmanWorker::clone",
        "gearmanworker.clone.php",
        "Create a copy of the worker"
    ],
    "GearmanWorkerecho": [
        "GearmanWorker::echo",
        "gearmanworker.echo.php",
        "Test job server response"
    ],
    "GearmanWorkererror": [
        "GearmanWorker::error",
        "gearmanworker.error.php",
        "Get the last error encountered"
    ],
    "GearmanWorkergetErrno": [
        "GearmanWorker::getErrno",
        "gearmanworker.geterrno.php",
        "Get errno"
    ],
    "GearmanWorkeroptions": [
        "GearmanWorker::options",
        "gearmanworker.options.php",
        "Get worker options"
    ],
    "GearmanWorkerregister": [
        "GearmanWorker::register",
        "gearmanworker.register.php",
        "Register a function with the job server"
    ],
    "GearmanWorkerremoveOptions": [
        "GearmanWorker::removeOptions",
        "gearmanworker.removeoptions.php",
        "Remove worker options"
    ],
    "GearmanWorkerreturnCode": [
        "GearmanWorker::returnCode",
        "gearmanworker.returncode.php",
        "Get last Gearman return code"
    ],
    "GearmanWorkersetId": [
        "GearmanWorker::setId",
        "gearmanworker.setid.php",
        "Give the worker an identifier so it can be tracked when asking gearmand for the list of available workers"
    ],
    "GearmanWorkersetOptions": [
        "GearmanWorker::setOptions",
        "gearmanworker.setoptions.php",
        "Set worker options"
    ],
    "GearmanWorkersetTimeout": [
        "GearmanWorker::setTimeout",
        "gearmanworker.settimeout.php",
        "Set socket I/O activity timeout"
    ],
    "GearmanWorkertimeout": [
        "GearmanWorker::timeout",
        "gearmanworker.timeout.php",
        "Get socket I/O activity timeout"
    ],
    "GearmanWorkerunregister": [
        "GearmanWorker::unregister",
        "gearmanworker.unregister.php",
        "Unregister a function name with the job servers"
    ],
    "GearmanWorkerunregisterAll": [
        "GearmanWorker::unregisterAll",
        "gearmanworker.unregisterall.php",
        "Unregister all function names with the job servers"
    ],
    "GearmanWorkerwait": [
        "GearmanWorker::wait",
        "gearmanworker.wait.php",
        "Wait for activity from one of the job servers"
    ],
    "GearmanWorkerwork": [
        "GearmanWorker::work",
        "gearmanworker.work.php",
        "Wait for and perform jobs"
    ],
    "GearmanWorkerconstruct": [
        "GearmanWorker::__construct",
        "gearmanworker.construct.php",
        "Create a GearmanWorker instance"
    ],
    "GenderGenderconnect": [
        "Gender\\Gender::connect",
        "gender-gender.connect.php",
        "外部の名前ディレクトリに接続する"
    ],
    "GenderGendercountry": [
        "Gender\\Gender::country",
        "gender-gender.country.php",
        "国を表すテキストを取得する"
    ],
    "GenderGenderget": [
        "Gender\\Gender::get",
        "gender-gender.get.php",
        "性別を取得する"
    ],
    "GenderGenderisNick": [
        "Gender\\Gender::isNick",
        "gender-gender.isnick.php",
        "name0 が name1 のエイリアスかどうかを調べる"
    ],
    "GenderGendersimilarNames": [
        "Gender\\Gender::similarNames",
        "gender-gender.similarnames.php",
        "似た名前を取得する"
    ],
    "GenderGenderconstruct": [
        "Gender\\Gender::__construct",
        "gender-gender.construct.php",
        "Gender オブジェクトを作る"
    ],
    "Generatorcurrent": [
        "Generator::current",
        "generator.current.php",
        "yield した値を取得する"
    ],
    "GeneratorgetReturn": [
        "Generator::getReturn",
        "generator.getreturn.php",
        "ジェネレータの戻り値を取得する"
    ],
    "Generatorkey": [
        "Generator::key",
        "generator.key.php",
        "yield したキーを取得する"
    ],
    "Generatornext": [
        "Generator::next",
        "generator.next.php",
        "ジェネレータを続行する"
    ],
    "Generatorrewind": [
        "Generator::rewind",
        "generator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "Generatorsend": [
        "Generator::send",
        "generator.send.php",
        "値をジェネレータに送る"
    ],
    "Generatorthrow": [
        "Generator::throw",
        "generator.throw.php",
        "例外をジェネレータにスローする"
    ],
    "Generatorvalid": [
        "Generator::valid",
        "generator.valid.php",
        "イテレータが終了したかどうかを調べる"
    ],
    "Generatorwakeup": [
        "Generator::__wakeup",
        "generator.wakeup.php",
        "シリアライズのコールバック"
    ],
    "geoipasnumbyname": [
        "geoip_asnum_by_name",
        "function.geoip-asnum-by-name.php",
        "AS番号(ASN) を取得する"
    ],
    "geoipcontinentcodebyname": [
        "geoip_continent_code_by_name",
        "function.geoip-continent-code-by-name.php",
        "二文字の大陸コードを取得する"
    ],
    "geoipcountrycode3byname": [
        "geoip_country_code3_by_name",
        "function.geoip-country-code3-by-name.php",
        "三文字の国コードを取得する"
    ],
    "geoipcountrycodebyname": [
        "geoip_country_code_by_name",
        "function.geoip-country-code-by-name.php",
        "二文字の国コードを取得する"
    ],
    "geoipcountrynamebyname": [
        "geoip_country_name_by_name",
        "function.geoip-country-name-by-name.php",
        "完全な国名を取得する"
    ],
    "geoipdatabaseinfo": [
        "geoip_database_info",
        "function.geoip-database-info.php",
        "GeoIP データベースの情報を取得する"
    ],
    "geoipdbavail": [
        "geoip_db_avail",
        "function.geoip-db-avail.php",
        "GeoIP データベースが使用可能かどうかを調べる"
    ],
    "geoipdbfilename": [
        "geoip_db_filename",
        "function.geoip-db-filename.php",
        "対応する GeoIP データベースのファイル名を返す"
    ],
    "geoipdbgetallinfo": [
        "geoip_db_get_all_info",
        "function.geoip-db-get-all-info.php",
        "すべての GeoIP データベース形式についての詳細情報を返す"
    ],
    "geoipdomainbyname": [
        "geoip_domain_by_name",
        "function.geoip-domain-by-name.php",
        "セカンドレベルドメインの名前を取得する"
    ],
    "geoipidbyname": [
        "geoip_id_by_name",
        "function.geoip-id-by-name.php",
        "インターネット接続方式を取得する"
    ],
    "geoipispbyname": [
        "geoip_isp_by_name",
        "function.geoip-isp-by-name.php",
        "インターネットサービスプロバイダ (ISP) 名を取得する"
    ],
    "geoipnetspeedcellbyname": [
        "geoip_netspeedcell_by_name",
        "function.geoip-netspeedcell-by-name.php",
        "インターネットへの接続速度を取得する"
    ],
    "geoiporgbyname": [
        "geoip_org_by_name",
        "function.geoip-org-by-name.php",
        "組織名を取得する"
    ],
    "geoiprecordbyname": [
        "geoip_record_by_name",
        "function.geoip-record-by-name.php",
        "GeoIP データベースで見つかった詳細な都市情報を返す"
    ],
    "geoipregionbyname": [
        "geoip_region_by_name",
        "function.geoip-region-by-name.php",
        "国コードおよび地域を取得する"
    ],
    "geoipregionnamebycode": [
        "geoip_region_name_by_code",
        "function.geoip-region-name-by-code.php",
        "国コードと地域コードから地域名を返す"
    ],
    "geoipsetupcustomdirectory": [
        "geoip_setup_custom_directory",
        "function.geoip-setup-custom-directory.php",
        "GeoIP データベースのカスタムディレクトリを設定する"
    ],
    "geoiptimezonebycountryandregion": [
        "geoip_time_zone_by_country_and_region",
        "function.geoip-time-zone-by-country-and-region.php",
        "国コードと地域コードからタイムゾーンを返す"
    ],
    "getallheaders": [
        "getallheaders",
        "function.getallheaders.php",
        "全てのHTTPリクエストヘッダを取得する"
    ],
    "getcwd": [
        "getcwd",
        "function.getcwd.php",
        "カレントのワーキングディレクトリを取得する"
    ],
    "getdate": [
        "getdate",
        "function.getdate.php",
        "日付/時刻情報を取得する"
    ],
    "getenv": [
        "getenv",
        "function.getenv.php",
        "環境変数の値を取得する"
    ],
    "gethostbyaddr": [
        "gethostbyaddr",
        "function.gethostbyaddr.php",
        "指定した IP アドレスに対応するインターネットホスト名を取得する"
    ],
    "gethostbyname": [
        "gethostbyname",
        "function.gethostbyname.php",
        "インターネットホスト名に対応するIPv4アドレスを取得する"
    ],
    "gethostbynamel": [
        "gethostbynamel",
        "function.gethostbynamel.php",
        "指定したインターネットホスト名に対応するIPv4アドレスのリストを取得する"
    ],
    "gethostname": [
        "gethostname",
        "function.gethostname.php",
        "ホスト名を取得する"
    ],
    "getimagesize": [
        "getimagesize",
        "function.getimagesize.php",
        "画像の大きさを取得する"
    ],
    "getimagesizefromstring": [
        "getimagesizefromstring",
        "function.getimagesizefromstring.php",
        "画像の大きさを文字列から取得する"
    ],
    "getlastmod": [
        "getlastmod",
        "function.getlastmod.php",
        "最終更新時刻を取得する"
    ],
    "getmxrr": [
        "getmxrr",
        "function.getmxrr.php",
        "指定したインターネットホスト名に対応する MX レコードを取得する"
    ],
    "getmygid": [
        "getmygid",
        "function.getmygid.php",
        "PHP スクリプトの所有者の GID を得る"
    ],
    "getmyinode": [
        "getmyinode",
        "function.getmyinode.php",
        "現在のスクリプトの inode を取得する"
    ],
    "getmypid": [
        "getmypid",
        "function.getmypid.php",
        "PHP のプロセス ID を取得する"
    ],
    "getmyuid": [
        "getmyuid",
        "function.getmyuid.php",
        "PHP スクリプト所有者のユーザー ID を取得する"
    ],
    "getopt": [
        "getopt",
        "function.getopt.php",
        "コマンドライン引数のリストからオプションを取得する"
    ],
    "getprotobyname": [
        "getprotobyname",
        "function.getprotobyname.php",
        "プロトコル名のプロトコル番号を得る"
    ],
    "getprotobynumber": [
        "getprotobynumber",
        "function.getprotobynumber.php",
        "プロトコル番号が指すプロトコル名を取得する"
    ],
    "getrandmax": [
        "getrandmax",
        "function.getrandmax.php",
        "乱数の最大値を取得する"
    ],
    "getrusage": [
        "getrusage",
        "function.getrusage.php",
        "現在のリソース使用状況を取得する"
    ],
    "getservbyname": [
        "getservbyname",
        "function.getservbyname.php",
        "インターネットサービスおよびプロトコルが関連するポート番号を取得する"
    ],
    "getservbyport": [
        "getservbyport",
        "function.getservbyport.php",
        "ポートおよびプロトコルに対応するインターネットサービスを得る"
    ],
    "getSession": [
        "getSession",
        "function.mysql-xdevapi-getsession.php",
        "MySQL サーバに接続する"
    ],
    "gettext": [
        "gettext",
        "function.gettext.php",
        "現在のドメインのメッセージを参照する"
    ],
    "gettimeofday": [
        "gettimeofday",
        "function.gettimeofday.php",
        "現在の時間を得る"
    ],
    "gettype": [
        "gettype",
        "function.gettype.php",
        "変数の型を取得する"
    ],
    "getbrowser": [
        "get_browser",
        "function.get-browser.php",
        "ユーザーのブラウザの機能を取得する"
    ],
    "getcalledclass": [
        "get_called_class",
        "function.get-called-class.php",
        "&quot;静的遅延束縛&quot; のクラス名"
    ],
    "getcfgvar": [
        "get_cfg_var",
        "function.get-cfg-var.php",
        "PHP 設定オプションの値を取得する"
    ],
    "getclass": [
        "get_class",
        "function.get-class.php",
        "オブジェクトのクラス名を返す"
    ],
    "getclassmethods": [
        "get_class_methods",
        "function.get-class-methods.php",
        "クラスメソッドの名前を取得する"
    ],
    "getclassvars": [
        "get_class_vars",
        "function.get-class-vars.php",
        "クラスのデフォルトプロパティを取得する"
    ],
    "getcurrentuser": [
        "get_current_user",
        "function.get-current-user.php",
        "現在の PHP スクリプトの所有者の名前を取得する"
    ],
    "getdeclaredclasses": [
        "get_declared_classes",
        "function.get-declared-classes.php",
        "定義済のクラスの名前を配列として返す"
    ],
    "getdeclaredinterfaces": [
        "get_declared_interfaces",
        "function.get-declared-interfaces.php",
        "宣言されている全てのインターフェイスの配列を返す"
    ],
    "getdeclaredtraits": [
        "get_declared_traits",
        "function.get-declared-traits.php",
        "宣言されているすべてのトレイトの配列を返す"
    ],
    "getdefinedconstants": [
        "get_defined_constants",
        "function.get-defined-constants.php",
        "すべての定数の名前とその値を連想配列として返す"
    ],
    "getdefinedfunctions": [
        "get_defined_functions",
        "function.get-defined-functions.php",
        "定義済みの全ての関数を配列で返す"
    ],
    "getdefinedvars": [
        "get_defined_vars",
        "function.get-defined-vars.php",
        "全ての定義済の変数を配列で返す"
    ],
    "getextensionfuncs": [
        "get_extension_funcs",
        "function.get-extension-funcs.php",
        "あるモジュールの関数名を配列として返す"
    ],
    "gethtmltranslationtable": [
        "get_html_translation_table",
        "function.get-html-translation-table.php",
        "htmlspecialchars および htmlentities で使用される変換テーブルを返す"
    ],
    "getincludedfiles": [
        "get_included_files",
        "function.get-included-files.php",
        "include または require で読み込まれたファイルの名前を配列として返す"
    ],
    "getincludepath": [
        "get_include_path",
        "function.get-include-path.php",
        "現在の include_path 設定オプションを取得する"
    ],
    "getloadedextensions": [
        "get_loaded_extensions",
        "function.get-loaded-extensions.php",
        "コンパイル/ロードされている全てのモジュールの名前を配列として返す"
    ],
    "getmagicquotesgpc": [
        "get_magic_quotes_gpc",
        "function.get-magic-quotes-gpc.php",
        "magic_quotes_gpc の現在の設定を得る"
    ],
    "getmagicquotesruntime": [
        "get_magic_quotes_runtime",
        "function.get-magic-quotes-runtime.php",
        "magic_quotes_runtime の現在アクティブな設定値を取得する"
    ],
    "getmetatags": [
        "get_meta_tags",
        "function.get-meta-tags.php",
        "ファイル上のすべてのメタタグ情報を配列に展開する"
    ],
    "getobjectvars": [
        "get_object_vars",
        "function.get-object-vars.php",
        "指定したオブジェクトのプロパティを取得する"
    ],
    "getparentclass": [
        "get_parent_class",
        "function.get-parent-class.php",
        "オブジェクトの親クラスの名前を取得する"
    ],
    "getrequiredfiles": [
        "get_required_files",
        "function.get-required-files.php",
        "get_included_files のエイリアス"
    ],
    "getresources": [
        "get_resources",
        "function.get-resources.php",
        "アクティブなリソースを返す"
    ],
    "getresourceid": [
        "get_resource_id",
        "function.get-resource-id.php",
        "指定されたリソースの、数値の識別子を返す"
    ],
    "getresourcetype": [
        "get_resource_type",
        "function.get-resource-type.php",
        "リソース型を返す"
    ],
    "glob": [
        "glob://",
        "wrappers.glob.php",
        "パターンにマッチするパス名の検索"
    ],
    "GlobIteratorcount": [
        "GlobIterator::count",
        "globiterator.count.php",
        "ディレクトリやファイルの数を取得する"
    ],
    "GlobIteratorconstruct": [
        "GlobIterator::__construct",
        "globiterator.construct.php",
        "glob を使うディレクトリを作成する"
    ],
    "Gmagickaddimage": [
        "Gmagick::addimage",
        "gmagick.addimage.php",
        "新しい画像を Gmagick オブジェクトの画像リストに追加する"
    ],
    "Gmagickaddnoiseimage": [
        "Gmagick::addnoiseimage",
        "gmagick.addnoiseimage.php",
        "ランダムなノイズを画像に追加する"
    ],
    "Gmagickannotateimage": [
        "Gmagick::annotateimage",
        "gmagick.annotateimage.php",
        "画像にテキストによる注記を加える"
    ],
    "Gmagickblurimage": [
        "Gmagick::blurimage",
        "gmagick.blurimage.php",
        "blur (にじみ) フィルタを画像に追加する"
    ],
    "Gmagickborderimage": [
        "Gmagick::borderimage",
        "gmagick.borderimage.php",
        "画像の周りを枠線で囲む"
    ],
    "Gmagickcharcoalimage": [
        "Gmagick::charcoalimage",
        "gmagick.charcoalimage.php",
        "木炭画をシミュレートする"
    ],
    "Gmagickchopimage": [
        "Gmagick::chopimage",
        "gmagick.chopimage.php",
        "画像の一部を取り除き、切り詰める"
    ],
    "Gmagickclear": [
        "Gmagick::clear",
        "gmagick.clear.php",
        "Gmagick オブジェクトに関連付けられたすべてのリソースをクリアする"
    ],
    "Gmagickcommentimage": [
        "Gmagick::commentimage",
        "gmagick.commentimage.php",
        "コメントを画像に追加する"
    ],
    "Gmagickcompositeimage": [
        "Gmagick::compositeimage",
        "gmagick.compositeimage.php",
        "ある画像を別の画像に合成する"
    ],
    "Gmagickcropimage": [
        "Gmagick::cropimage",
        "gmagick.cropimage.php",
        "画像の一部を抽出する"
    ],
    "Gmagickcropthumbnailimage": [
        "Gmagick::cropthumbnailimage",
        "gmagick.cropthumbnailimage.php",
        "切り取ってサムネイルを作成する"
    ],
    "Gmagickcurrent": [
        "Gmagick::current",
        "gmagick.current.php",
        "現在の Gmagick オブジェクトへの参照を返す"
    ],
    "Gmagickcyclecolormapimage": [
        "Gmagick::cyclecolormapimage",
        "gmagick.cyclecolormapimage.php",
        "画像のカラーマップを移動する"
    ],
    "Gmagickdeconstructimages": [
        "Gmagick::deconstructimages",
        "gmagick.deconstructimages.php",
        "画像間の特定のピクセルの差を返す"
    ],
    "Gmagickdespeckleimage": [
        "Gmagick::despeckleimage",
        "gmagick.despeckleimage.php",
        "画像内のスペックルノイズを軽減する"
    ],
    "Gmagickdestroy": [
        "Gmagick::destroy",
        "gmagick.destroy.php",
        "Gmagick オブジェクトを破棄する"
    ],
    "Gmagickdrawimage": [
        "Gmagick::drawimage",
        "gmagick.drawimage.php",
        "現在の画像上の GmagickDraw オブジェクトをレンダリングする"
    ],
    "Gmagickedgeimage": [
        "Gmagick::edgeimage",
        "gmagick.edgeimage.php",
        "画像の輪郭を強調する"
    ],
    "Gmagickembossimage": [
        "Gmagick::embossimage",
        "gmagick.embossimage.php",
        "グレースケール画像に三次元効果を施して返す"
    ],
    "Gmagickenhanceimage": [
        "Gmagick::enhanceimage",
        "gmagick.enhanceimage.php",
        "ノイジーな画像の品質を向上させる"
    ],
    "Gmagickequalizeimage": [
        "Gmagick::equalizeimage",
        "gmagick.equalizeimage.php",
        "画像ヒストグラムを均等化する"
    ],
    "Gmagickflipimage": [
        "Gmagick::flipimage",
        "gmagick.flipimage.php",
        "垂直方向に反転した画像を作成する"
    ],
    "Gmagickflopimage": [
        "Gmagick::flopimage",
        "gmagick.flopimage.php",
        "垂直方向に反転した画像を作成する"
    ],
    "Gmagickframeimage": [
        "Gmagick::frameimage",
        "gmagick.frameimage.php",
        "三次元の枠線をシミュレートする"
    ],
    "Gmagickgammaimage": [
        "Gmagick::gammaimage",
        "gmagick.gammaimage.php",
        "画像をガンマ補正する"
    ],
    "Gmagickgetcopyright": [
        "Gmagick::getcopyright",
        "gmagick.getcopyright.php",
        "GraphicsMagick API の著作権情報を文字列で返す"
    ],
    "Gmagickgetfilename": [
        "Gmagick::getfilename",
        "gmagick.getfilename.php",
        "画像シーケンスに関連付けられたファイル名を取得する"
    ],
    "Gmagickgetimagebackgroundcolor": [
        "Gmagick::getimagebackgroundcolor",
        "gmagick.getimagebackgroundcolor.php",
        "画像の背景色を返す"
    ],
    "Gmagickgetimageblueprimary": [
        "Gmagick::getimageblueprimary",
        "gmagick.getimageblueprimary.php",
        "青が一番強い点を返す"
    ],
    "Gmagickgetimagebordercolor": [
        "Gmagick::getimagebordercolor",
        "gmagick.getimagebordercolor.php",
        "画像の前景色を返す"
    ],
    "Gmagickgetimagechanneldepth": [
        "Gmagick::getimagechanneldepth",
        "gmagick.getimagechanneldepth.php",
        "特定の画像チャネルの深度を返す"
    ],
    "Gmagickgetimagecolors": [
        "Gmagick::getimagecolors",
        "gmagick.getimagecolors.php",
        "指定した色マップインデックスの色を返す"
    ],
    "Gmagickgetimagecolorspace": [
        "Gmagick::getimagecolorspace",
        "gmagick.getimagecolorspace.php",
        "画像の色空間を取得する"
    ],
    "Gmagickgetimagecompose": [
        "Gmagick::getimagecompose",
        "gmagick.getimagecompose.php",
        "画像の合成演算子を返す"
    ],
    "Gmagickgetimagedelay": [
        "Gmagick::getimagedelay",
        "gmagick.getimagedelay.php",
        "画像の遅延を取得する"
    ],
    "Gmagickgetimagedepth": [
        "Gmagick::getimagedepth",
        "gmagick.getimagedepth.php",
        "画像の深度を取得する"
    ],
    "Gmagickgetimagedispose": [
        "Gmagick::getimagedispose",
        "gmagick.getimagedispose.php",
        "画像の配置方法を取得する"
    ],
    "Gmagickgetimageextrema": [
        "Gmagick::getimageextrema",
        "gmagick.getimageextrema.php",
        "画像の極値を取得する"
    ],
    "Gmagickgetimagefilename": [
        "Gmagick::getimagefilename",
        "gmagick.getimagefilename.php",
        "シーケンス内の特定の画像のファイル名を返す"
    ],
    "Gmagickgetimageformat": [
        "Gmagick::getimageformat",
        "gmagick.getimageformat.php",
        "シーケンス内の特定の画像のフォーマットを返す"
    ],
    "Gmagickgetimagegamma": [
        "Gmagick::getimagegamma",
        "gmagick.getimagegamma.php",
        "画像のガンマを取得する"
    ],
    "Gmagickgetimagegreenprimary": [
        "Gmagick::getimagegreenprimary",
        "gmagick.getimagegreenprimary.php",
        "緑が一番強い点を返す"
    ],
    "Gmagickgetimageheight": [
        "Gmagick::getimageheight",
        "gmagick.getimageheight.php",
        "画像の高さを返す"
    ],
    "Gmagickgetimagehistogram": [
        "Gmagick::getimagehistogram",
        "gmagick.getimagehistogram.php",
        "画像のヒストグラムを取得する"
    ],
    "Gmagickgetimageindex": [
        "Gmagick::getimageindex",
        "gmagick.getimageindex.php",
        "現在アクティブな画像のインデックスを取得する"
    ],
    "Gmagickgetimageinterlacescheme": [
        "Gmagick::getimageinterlacescheme",
        "gmagick.getimageinterlacescheme.php",
        "画像のインターレース手法を取得する"
    ],
    "Gmagickgetimageiterations": [
        "Gmagick::getimageiterations",
        "gmagick.getimageiterations.php",
        "画像の反復を取得する"
    ],
    "Gmagickgetimagematte": [
        "Gmagick::getimagematte",
        "gmagick.getimagematte.php",
        "画像がマットチャネルを持っているかどうかを調べる"
    ],
    "Gmagickgetimagemattecolor": [
        "Gmagick::getimagemattecolor",
        "gmagick.getimagemattecolor.php",
        "画像のマット色を返す"
    ],
    "Gmagickgetimageprofile": [
        "Gmagick::getimageprofile",
        "gmagick.getimageprofile.php",
        "指定した名前の画像プロファイルを返す"
    ],
    "Gmagickgetimageredprimary": [
        "Gmagick::getimageredprimary",
        "gmagick.getimageredprimary.php",
        "赤が一番強い点を返す"
    ],
    "Gmagickgetimagerenderingintent": [
        "Gmagick::getimagerenderingintent",
        "gmagick.getimagerenderingintent.php",
        "画像のレンダリング方向を取得する"
    ],
    "Gmagickgetimageresolution": [
        "Gmagick::getimageresolution",
        "gmagick.getimageresolution.php",
        "画像の X 方向と Y 方向の解像度を取得する"
    ],
    "Gmagickgetimagescene": [
        "Gmagick::getimagescene",
        "gmagick.getimagescene.php",
        "画像のシーンを取得する"
    ],
    "Gmagickgetimagesignature": [
        "Gmagick::getimagesignature",
        "gmagick.getimagesignature.php",
        "SHA-256 メッセージダイジェストを生成する"
    ],
    "Gmagickgetimagetype": [
        "Gmagick::getimagetype",
        "gmagick.getimagetype.php",
        "画像の型を取得する"
    ],
    "Gmagickgetimageunits": [
        "Gmagick::getimageunits",
        "gmagick.getimageunits.php",
        "画像の解像度の単位を取得する"
    ],
    "Gmagickgetimagewhitepoint": [
        "Gmagick::getimagewhitepoint",
        "gmagick.getimagewhitepoint.php",
        "色度が白い点を返す"
    ],
    "Gmagickgetimagewidth": [
        "Gmagick::getimagewidth",
        "gmagick.getimagewidth.php",
        "画像の幅を返す"
    ],
    "Gmagickgetpackagename": [
        "Gmagick::getpackagename",
        "gmagick.getpackagename.php",
        "GraphicsMagick パッケージ名を返す"
    ],
    "Gmagickgetquantumdepth": [
        "Gmagick::getquantumdepth",
        "gmagick.getquantumdepth.php",
        "Gmagick quantum depth を返す"
    ],
    "Gmagickgetreleasedate": [
        "Gmagick::getreleasedate",
        "gmagick.getreleasedate.php",
        "GraphicsMagick のリリース日を返す"
    ],
    "Gmagickgetsamplingfactors": [
        "Gmagick::getsamplingfactors",
        "gmagick.getsamplingfactors.php",
        "水平方向および垂直方向のサンプリング係数を取得する"
    ],
    "Gmagickgetsize": [
        "Gmagick::getsize",
        "gmagick.getsize.php",
        "Gmagick オブジェクトのサイズを取得する"
    ],
    "Gmagickgetversion": [
        "Gmagick::getversion",
        "gmagick.getversion.php",
        "GraphicsMagick API のバージョンを返す"
    ],
    "Gmagickhasnextimage": [
        "Gmagick::hasnextimage",
        "gmagick.hasnextimage.php",
        "オブジェクトが次の画像を保持しているかどうかを調べる"
    ],
    "Gmagickhaspreviousimage": [
        "Gmagick::haspreviousimage",
        "gmagick.haspreviousimage.php",
        "オブジェクトが前の画像を保持しているかどうかを調べる"
    ],
    "Gmagickimplodeimage": [
        "Gmagick::implodeimage",
        "gmagick.implodeimage.php",
        "新しい画像をコピーとして作成する"
    ],
    "Gmagicklabelimage": [
        "Gmagick::labelimage",
        "gmagick.labelimage.php",
        "ラベルを画像に追加する"
    ],
    "Gmagicklevelimage": [
        "Gmagick::levelimage",
        "gmagick.levelimage.php",
        "画像のレベルを調節する"
    ],
    "Gmagickmagnifyimage": [
        "Gmagick::magnifyimage",
        "gmagick.magnifyimage.php",
        "画像を二倍に比例拡大する"
    ],
    "Gmagickmapimage": [
        "Gmagick::mapimage",
        "gmagick.mapimage.php",
        "画像の色を、参照画像の中の最も近い色に置き換える"
    ],
    "Gmagickmedianfilterimage": [
        "Gmagick::medianfilterimage",
        "gmagick.medianfilterimage.php",
        "デジタルフィルタを適用する"
    ],
    "Gmagickminifyimage": [
        "Gmagick::minifyimage",
        "gmagick.minifyimage.php",
        "画像をその半分のサイズに比例縮小する"
    ],
    "Gmagickmodulateimage": [
        "Gmagick::modulateimage",
        "gmagick.modulateimage.php",
        "明度、彩度、色相を制御する"
    ],
    "Gmagickmotionblurimage": [
        "Gmagick::motionblurimage",
        "gmagick.motionblurimage.php",
        "モーションブラーをシミュレートする"
    ],
    "Gmagicknewimage": [
        "Gmagick::newimage",
        "gmagick.newimage.php",
        "新しい画像を作成する"
    ],
    "Gmagicknextimage": [
        "Gmagick::nextimage",
        "gmagick.nextimage.php",
        "次の画像に移動する"
    ],
    "Gmagicknormalizeimage": [
        "Gmagick::normalizeimage",
        "gmagick.normalizeimage.php",
        "カラー画像のコントラストを強調する"
    ],
    "Gmagickoilpaintimage": [
        "Gmagick::oilpaintimage",
        "gmagick.oilpaintimage.php",
        "油絵をシミュレートする"
    ],
    "Gmagickpreviousimage": [
        "Gmagick::previousimage",
        "gmagick.previousimage.php",
        "オブジェクト内の前の画像に移動する"
    ],
    "Gmagickprofileimage": [
        "Gmagick::profileimage",
        "gmagick.profileimage.php",
        "画像のプロファイルを追加あるいは削除する"
    ],
    "Gmagickquantizeimage": [
        "Gmagick::quantizeimage",
        "gmagick.quantizeimage.php",
        "参照画像内の色を解析する"
    ],
    "Gmagickquantizeimages": [
        "Gmagick::quantizeimages",
        "gmagick.quantizeimages.php",
        "画像シーケンス内の色を解析する"
    ],
    "Gmagickqueryfontmetrics": [
        "Gmagick::queryfontmetrics",
        "gmagick.queryfontmetrics.php",
        "フォントメトリクスを表す配列を返す"
    ],
    "Gmagickqueryfonts": [
        "Gmagick::queryfonts",
        "gmagick.queryfonts.php",
        "設定したフォントを返す"
    ],
    "Gmagickqueryformats": [
        "Gmagick::queryformats",
        "gmagick.queryformats.php",
        "Gmagick がサポートするフォーマットを返す"
    ],
    "Gmagickradialblurimage": [
        "Gmagick::radialblurimage",
        "gmagick.radialblurimage.php",
        "画像にラジアルブラーを施す"
    ],
    "Gmagickraiseimage": [
        "Gmagick::raiseimage",
        "gmagick.raiseimage.php",
        "三次元のボタン風の効果をシミュレートする"
    ],
    "Gmagickread": [
        "Gmagick::read",
        "gmagick.read.php",
        "ファイルから画像を読み込む"
    ],
    "Gmagickreadimage": [
        "Gmagick::readimage",
        "gmagick.readimage.php",
        "ファイルから画像を読み込む"
    ],
    "Gmagickreadimageblob": [
        "Gmagick::readimageblob",
        "gmagick.readimageblob.php",
        "バイナリ文字列から画像を読み込む"
    ],
    "Gmagickreadimagefile": [
        "Gmagick::readimagefile",
        "gmagick.readimagefile.php",
        "オープンしているファイルハンドルから画像を読み込む"
    ],
    "Gmagickreducenoiseimage": [
        "Gmagick::reducenoiseimage",
        "gmagick.reducenoiseimage.php",
        "画像の輪郭をなめらかにする"
    ],
    "Gmagickremoveimage": [
        "Gmagick::removeimage",
        "gmagick.removeimage.php",
        "画像リストから画像を削除する"
    ],
    "Gmagickremoveimageprofile": [
        "Gmagick::removeimageprofile",
        "gmagick.removeimageprofile.php",
        "指定した名前の画像プロファイルを削除して返す"
    ],
    "Gmagickresampleimage": [
        "Gmagick::resampleimage",
        "gmagick.resampleimage.php",
        "画像を指定した解像度にリサンプリングする"
    ],
    "Gmagickresizeimage": [
        "Gmagick::resizeimage",
        "gmagick.resizeimage.php",
        "画像のサイズを変更する"
    ],
    "Gmagickrollimage": [
        "Gmagick::rollimage",
        "gmagick.rollimage.php",
        "画像を補正する"
    ],
    "Gmagickrotateimage": [
        "Gmagick::rotateimage",
        "gmagick.rotateimage.php",
        "画像を回転する"
    ],
    "Gmagickscaleimage": [
        "Gmagick::scaleimage",
        "gmagick.scaleimage.php",
        "画像のサイズを変更する"
    ],
    "Gmagickseparateimagechannel": [
        "Gmagick::separateimagechannel",
        "gmagick.separateimagechannel.php",
        "画像からチャネルを分離する"
    ],
    "GmagicksetCompressionQuality": [
        "Gmagick::setCompressionQuality",
        "gmagick.setcompressionquality.php",
        "オブジェクトのデフォルトの圧縮クオリティを設定する"
    ],
    "Gmagicksetfilename": [
        "Gmagick::setfilename",
        "gmagick.setfilename.php",
        "画像を読み書きする前にファイル名を設定する"
    ],
    "Gmagicksetimagebackgroundcolor": [
        "Gmagick::setimagebackgroundcolor",
        "gmagick.setimagebackgroundcolor.php",
        "画像の背景色を設定する"
    ],
    "Gmagicksetimageblueprimary": [
        "Gmagick::setimageblueprimary",
        "gmagick.setimageblueprimary.php",
        "青が一番強い点を設定する"
    ],
    "Gmagicksetimagebordercolor": [
        "Gmagick::setimagebordercolor",
        "gmagick.setimagebordercolor.php",
        "画像の枠線の色を設定する"
    ],
    "Gmagicksetimagechanneldepth": [
        "Gmagick::setimagechanneldepth",
        "gmagick.setimagechanneldepth.php",
        "特定の画像チャネルの深度を設定する"
    ],
    "Gmagicksetimagecolorspace": [
        "Gmagick::setimagecolorspace",
        "gmagick.setimagecolorspace.php",
        "画像の色空間を設定する"
    ],
    "Gmagicksetimagecompose": [
        "Gmagick::setimagecompose",
        "gmagick.setimagecompose.php",
        "画像の合成演算子を設定する"
    ],
    "Gmagicksetimagedelay": [
        "Gmagick::setimagedelay",
        "gmagick.setimagedelay.php",
        "画像の遅延を設定する"
    ],
    "Gmagicksetimagedepth": [
        "Gmagick::setimagedepth",
        "gmagick.setimagedepth.php",
        "画像の深度を設定する"
    ],
    "Gmagicksetimagedispose": [
        "Gmagick::setimagedispose",
        "gmagick.setimagedispose.php",
        "画像の配置方法を設定する"
    ],
    "Gmagicksetimagefilename": [
        "Gmagick::setimagefilename",
        "gmagick.setimagefilename.php",
        "シーケンス内の特定の画像のファイル名を設定する"
    ],
    "Gmagicksetimageformat": [
        "Gmagick::setimageformat",
        "gmagick.setimageformat.php",
        "特定の画像のフォーマットを設定する"
    ],
    "Gmagicksetimagegamma": [
        "Gmagick::setimagegamma",
        "gmagick.setimagegamma.php",
        "画像のガンマを設定する"
    ],
    "Gmagicksetimagegreenprimary": [
        "Gmagick::setimagegreenprimary",
        "gmagick.setimagegreenprimary.php",
        "緑が一番強い点を設定する"
    ],
    "Gmagicksetimageindex": [
        "Gmagick::setimageindex",
        "gmagick.setimageindex.php",
        "画像リスト内でのイテレータの位置を、index パラメータで指定した場所に設定する"
    ],
    "Gmagicksetimageinterlacescheme": [
        "Gmagick::setimageinterlacescheme",
        "gmagick.setimageinterlacescheme.php",
        "画像のインターレース手法を設定する"
    ],
    "Gmagicksetimageiterations": [
        "Gmagick::setimageiterations",
        "gmagick.setimageiterations.php",
        "画像の反復を設定する"
    ],
    "Gmagicksetimageprofile": [
        "Gmagick::setimageprofile",
        "gmagick.setimageprofile.php",
        "指定した名前の画像プロファイルを Gmagick オブジェクトに追加する"
    ],
    "Gmagicksetimageredprimary": [
        "Gmagick::setimageredprimary",
        "gmagick.setimageredprimary.php",
        "赤が一番強い点を設定する"
    ],
    "Gmagicksetimagerenderingintent": [
        "Gmagick::setimagerenderingintent",
        "gmagick.setimagerenderingintent.php",
        "画像のレンダリング方向を設定する"
    ],
    "Gmagicksetimageresolution": [
        "Gmagick::setimageresolution",
        "gmagick.setimageresolution.php",
        "画像の解像度を設定する"
    ],
    "Gmagicksetimagescene": [
        "Gmagick::setimagescene",
        "gmagick.setimagescene.php",
        "画像のシーンを設定する"
    ],
    "Gmagicksetimagetype": [
        "Gmagick::setimagetype",
        "gmagick.setimagetype.php",
        "画像の型を設定する"
    ],
    "Gmagicksetimageunits": [
        "Gmagick::setimageunits",
        "gmagick.setimageunits.php",
        "画像の解像度の単位を設定する"
    ],
    "Gmagicksetimagewhitepoint": [
        "Gmagick::setimagewhitepoint",
        "gmagick.setimagewhitepoint.php",
        "画像の色度が白い点を設定する"
    ],
    "Gmagicksetsamplingfactors": [
        "Gmagick::setsamplingfactors",
        "gmagick.setsamplingfactors.php",
        "画像のサンプリング係数を設定する"
    ],
    "Gmagicksetsize": [
        "Gmagick::setsize",
        "gmagick.setsize.php",
        "Gmagick オブジェクトのサイズを設定する"
    ],
    "Gmagickshearimage": [
        "Gmagick::shearimage",
        "gmagick.shearimage.php",
        "平行四辺形を作成する"
    ],
    "Gmagicksolarizeimage": [
        "Gmagick::solarizeimage",
        "gmagick.solarizeimage.php",
        "画像にソラリゼーション効果を適用する"
    ],
    "Gmagickspreadimage": [
        "Gmagick::spreadimage",
        "gmagick.spreadimage.php",
        "ブロック内の各ピクセルをランダムに移動する"
    ],
    "Gmagickstripimage": [
        "Gmagick::stripimage",
        "gmagick.stripimage.php",
        "画像からすべてのプロパティやコメントを除去する"
    ],
    "Gmagickswirlimage": [
        "Gmagick::swirlimage",
        "gmagick.swirlimage.php",
        "画像の中心から、ピクセルを渦巻状にする"
    ],
    "Gmagickthumbnailimage": [
        "Gmagick::thumbnailimage",
        "gmagick.thumbnailimage.php",
        "画像のサイズを変更する"
    ],
    "Gmagicktrimimage": [
        "Gmagick::trimimage",
        "gmagick.trimimage.php",
        "画像の輪郭を削除する"
    ],
    "Gmagickwrite": [
        "Gmagick::write",
        "gmagick.write.php",
        "Gmagick::writeimage のエイリアス"
    ],
    "Gmagickwriteimage": [
        "Gmagick::writeimage",
        "gmagick.writeimage.php",
        "画像を指定したファイル名で書き出す"
    ],
    "Gmagickconstruct": [
        "Gmagick::__construct",
        "gmagick.construct.php",
        "Gmagick のコンストラクタ"
    ],
    "GmagickDrawannotate": [
        "GmagickDraw::annotate",
        "gmagickdraw.annotate.php",
        "画像の上にテキストを描画する"
    ],
    "GmagickDrawarc": [
        "GmagickDraw::arc",
        "gmagickdraw.arc.php",
        "弧を描く"
    ],
    "GmagickDrawbezier": [
        "GmagickDraw::bezier",
        "gmagickdraw.bezier.php",
        "ベジエ曲線を描く"
    ],
    "GmagickDrawellipse": [
        "GmagickDraw::ellipse",
        "gmagickdraw.ellipse.php",
        "楕円を画像上に描く"
    ],
    "GmagickDrawgetfillcolor": [
        "GmagickDraw::getfillcolor",
        "gmagickdraw.getfillcolor.php",
        "塗りつぶし色を返す"
    ],
    "GmagickDrawgetfillopacity": [
        "GmagickDraw::getfillopacity",
        "gmagickdraw.getfillopacity.php",
        "描画に使う不透明度を返す"
    ],
    "GmagickDrawgetfont": [
        "GmagickDraw::getfont",
        "gmagickdraw.getfont.php",
        "フォントを返す"
    ],
    "GmagickDrawgetfontsize": [
        "GmagickDraw::getfontsize",
        "gmagickdraw.getfontsize.php",
        "フォントのポイント数を返す"
    ],
    "GmagickDrawgetfontstyle": [
        "GmagickDraw::getfontstyle",
        "gmagickdraw.getfontstyle.php",
        "フォントスタイルを返す"
    ],
    "GmagickDrawgetfontweight": [
        "GmagickDraw::getfontweight",
        "gmagickdraw.getfontweight.php",
        "フォントのウェイトを返す"
    ],
    "GmagickDrawgetstrokecolor": [
        "GmagickDraw::getstrokecolor",
        "gmagickdraw.getstrokecolor.php",
        "オブジェクトの輪郭の描画に使う色を返す"
    ],
    "GmagickDrawgetstrokeopacity": [
        "GmagickDraw::getstrokeopacity",
        "gmagickdraw.getstrokeopacity.php",
        "オブジェクトの輪郭の不透明度を返す"
    ],
    "GmagickDrawgetstrokewidth": [
        "GmagickDraw::getstrokewidth",
        "gmagickdraw.getstrokewidth.php",
        "オブジェクトの輪郭の描画に使う線の幅を返す"
    ],
    "GmagickDrawgettextdecoration": [
        "GmagickDraw::gettextdecoration",
        "gmagickdraw.gettextdecoration.php",
        "テキストのデコレーションを返す"
    ],
    "GmagickDrawgettextencoding": [
        "GmagickDraw::gettextencoding",
        "gmagickdraw.gettextencoding.php",
        "テキストのアノテーションで使うコードセットを返す"
    ],
    "GmagickDrawline": [
        "GmagickDraw::line",
        "gmagickdraw.line.php",
        "直線を描く"
    ],
    "GmagickDrawpoint": [
        "GmagickDraw::point",
        "gmagickdraw.point.php",
        "点を描く"
    ],
    "GmagickDrawpolygon": [
        "GmagickDraw::polygon",
        "gmagickdraw.polygon.php",
        "多角形を描く"
    ],
    "GmagickDrawpolyline": [
        "GmagickDraw::polyline",
        "gmagickdraw.polyline.php",
        "ポリラインを描く"
    ],
    "GmagickDrawrectangle": [
        "GmagickDraw::rectangle",
        "gmagickdraw.rectangle.php",
        "矩形を描く"
    ],
    "GmagickDrawrotate": [
        "GmagickDraw::rotate",
        "gmagickdraw.rotate.php",
        "指定した回転角を現在の座標空間に適用する"
    ],
    "GmagickDrawroundrectangle": [
        "GmagickDraw::roundrectangle",
        "gmagickdraw.roundrectangle.php",
        "角が丸い矩形を描く"
    ],
    "GmagickDrawscale": [
        "GmagickDraw::scale",
        "gmagickdraw.scale.php",
        "倍率を調整する"
    ],
    "GmagickDrawsetfillcolor": [
        "GmagickDraw::setfillcolor",
        "gmagickdraw.setfillcolor.php",
        "オブジェクトの塗りつぶしに使う色を設定する"
    ],
    "GmagickDrawsetfillopacity": [
        "GmagickDraw::setfillopacity",
        "gmagickdraw.setfillopacity.php",
        "不透明度を設定する"
    ],
    "GmagickDrawsetfont": [
        "GmagickDraw::setfont",
        "gmagickdraw.setfont.php",
        "テキストのアノテーションで使うフォントの完全な名前を設定する"
    ],
    "GmagickDrawsetfontsize": [
        "GmagickDraw::setfontsize",
        "gmagickdraw.setfontsize.php",
        "テキストのアノテーションで使うフォントのポイント数を設定する"
    ],
    "GmagickDrawsetfontstyle": [
        "GmagickDraw::setfontstyle",
        "gmagickdraw.setfontstyle.php",
        "テキストのアノテーションで使うフォントのスタイルを設定する"
    ],
    "GmagickDrawsetfontweight": [
        "GmagickDraw::setfontweight",
        "gmagickdraw.setfontweight.php",
        "フォントのウェイトを設定する"
    ],
    "GmagickDrawsetstrokecolor": [
        "GmagickDraw::setstrokecolor",
        "gmagickdraw.setstrokecolor.php",
        "オブジェクトの輪郭の描画に使う色を設定する"
    ],
    "GmagickDrawsetstrokeopacity": [
        "GmagickDraw::setstrokeopacity",
        "gmagickdraw.setstrokeopacity.php",
        "オブジェクトの輪郭の不透明度を設定する"
    ],
    "GmagickDrawsetstrokewidth": [
        "GmagickDraw::setstrokewidth",
        "gmagickdraw.setstrokewidth.php",
        "オブジェクトの輪郭の描画に使う線の幅を設定する"
    ],
    "GmagickDrawsettextdecoration": [
        "GmagickDraw::settextdecoration",
        "gmagickdraw.settextdecoration.php",
        "デコレーションを設定する"
    ],
    "GmagickDrawsettextencoding": [
        "GmagickDraw::settextencoding",
        "gmagickdraw.settextencoding.php",
        "テキストのコードセットを設定する"
    ],
    "GmagickPixelgetcolor": [
        "GmagickPixel::getcolor",
        "gmagickpixel.getcolor.php",
        "色を返す"
    ],
    "GmagickPixelgetcolorcount": [
        "GmagickPixel::getcolorcount",
        "gmagickpixel.getcolorcount.php",
        "この色の色カウントを返す"
    ],
    "GmagickPixelgetcolorvalue": [
        "GmagickPixel::getcolorvalue",
        "gmagickpixel.getcolorvalue.php",
        "指定した色チャネルの正規化した値を取得する"
    ],
    "GmagickPixelsetcolor": [
        "GmagickPixel::setcolor",
        "gmagickpixel.setcolor.php",
        "色を設定する"
    ],
    "GmagickPixelsetcolorvalue": [
        "GmagickPixel::setcolorvalue",
        "gmagickpixel.setcolorvalue.php",
        "色チャネルの正規化した値を設定する"
    ],
    "GmagickPixelconstruct": [
        "GmagickPixel::__construct",
        "gmagickpixel.construct.php",
        "GmagickPixel のコンストラクタ"
    ],
    "gmdate": [
        "gmdate",
        "function.gmdate.php",
        "GMT/UTC の日付/時刻を書式化する"
    ],
    "gmmktime": [
        "gmmktime",
        "function.gmmktime.php",
        "GMT 日付から Unix タイムスタンプを取得する"
    ],
    "gmpabs": [
        "gmp_abs",
        "function.gmp-abs.php",
        "絶対値"
    ],
    "gmpadd": [
        "gmp_add",
        "function.gmp-add.php",
        "数値を加算する"
    ],
    "gmpand": [
        "gmp_and",
        "function.gmp-and.php",
        "ビット AND を計算する"
    ],
    "gmpbinomial": [
        "gmp_binomial",
        "function.gmp-binomial.php",
        "二項係数を計算する"
    ],
    "gmpclrbit": [
        "gmp_clrbit",
        "function.gmp-clrbit.php",
        "ビットをクリアする"
    ],
    "gmpcmp": [
        "gmp_cmp",
        "function.gmp-cmp.php",
        "数を比較する"
    ],
    "gmpcom": [
        "gmp_com",
        "function.gmp-com.php",
        "1 の補数を計算する"
    ],
    "gmpdiv": [
        "gmp_div",
        "function.gmp-div.php",
        "gmp_div_q のエイリアス"
    ],
    "gmpdivexact": [
        "gmp_divexact",
        "function.gmp-divexact.php",
        "正確な除算"
    ],
    "gmpdivq": [
        "gmp_div_q",
        "function.gmp-div-q.php",
        "数値を除算する"
    ],
    "gmpdivqr": [
        "gmp_div_qr",
        "function.gmp-div-qr.php",
        "除算を行い、商と余りを得る"
    ],
    "gmpdivr": [
        "gmp_div_r",
        "function.gmp-div-r.php",
        "除算の余りを計算する"
    ],
    "gmpexport": [
        "gmp_export",
        "function.gmp-export.php",
        "バイナリ文字列にエクスポートする"
    ],
    "gmpfact": [
        "gmp_fact",
        "function.gmp-fact.php",
        "階乗"
    ],
    "gmpgcd": [
        "gmp_gcd",
        "function.gmp-gcd.php",
        "最大公約数を計算する"
    ],
    "gmpgcdext": [
        "gmp_gcdext",
        "function.gmp-gcdext.php",
        "最大公約数と乗数を計算する"
    ],
    "gmphamdist": [
        "gmp_hamdist",
        "function.gmp-hamdist.php",
        "ハミング距離"
    ],
    "gmpimport": [
        "gmp_import",
        "function.gmp-import.php",
        "バイナリ文字列からインポートする"
    ],
    "gmpinit": [
        "gmp_init",
        "function.gmp-init.php",
        "GMP 数を作成する"
    ],
    "gmpintval": [
        "gmp_intval",
        "function.gmp-intval.php",
        "GMP 数を整数に変換する"
    ],
    "gmpinvert": [
        "gmp_invert",
        "function.gmp-invert.php",
        "法による逆"
    ],
    "gmpjacobi": [
        "gmp_jacobi",
        "function.gmp-jacobi.php",
        "ヤコビ記号"
    ],
    "gmpkronecker": [
        "gmp_kronecker",
        "function.gmp-kronecker.php",
        "クロネッカーの記号を計算する"
    ],
    "gmplcm": [
        "gmp_lcm",
        "function.gmp-lcm.php",
        "最小公倍数を計算する"
    ],
    "gmplegendre": [
        "gmp_legendre",
        "function.gmp-legendre.php",
        "ルジェンドル記号"
    ],
    "gmpmod": [
        "gmp_mod",
        "function.gmp-mod.php",
        "モジュロ演算"
    ],
    "gmpmul": [
        "gmp_mul",
        "function.gmp-mul.php",
        "数値を乗算する"
    ],
    "gmpneg": [
        "gmp_neg",
        "function.gmp-neg.php",
        "符号を反転する"
    ],
    "gmpnextprime": [
        "gmp_nextprime",
        "function.gmp-nextprime.php",
        "次の素数を見つける"
    ],
    "gmpor": [
        "gmp_or",
        "function.gmp-or.php",
        "ビット OR を計算する"
    ],
    "gmpperfectpower": [
        "gmp_perfect_power",
        "function.gmp-perfect-power.php",
        "累乗数かどうかを調べる"
    ],
    "gmpperfectsquare": [
        "gmp_perfect_square",
        "function.gmp-perfect-square.php",
        "平方数かどうかを調べる"
    ],
    "gmppopcount": [
        "gmp_popcount",
        "function.gmp-popcount.php",
        "セットされているビットの数"
    ],
    "gmppow": [
        "gmp_pow",
        "function.gmp-pow.php",
        "べき乗を計算する"
    ],
    "gmppowm": [
        "gmp_powm",
        "function.gmp-powm.php",
        "べき乗とモジュロを計算する"
    ],
    "gmpprobprime": [
        "gmp_prob_prime",
        "function.gmp-prob-prime.php",
        "数が&quot;おそらく素数&quot;であるかどうかを調べる"
    ],
    "gmprandom": [
        "gmp_random",
        "function.gmp-random.php",
        "乱数を生成する"
    ],
    "gmprandombits": [
        "gmp_random_bits",
        "function.gmp-random-bits.php",
        "乱数を生成する"
    ],
    "gmprandomrange": [
        "gmp_random_range",
        "function.gmp-random-range.php",
        "乱数を生成する"
    ],
    "gmprandomseed": [
        "gmp_random_seed",
        "function.gmp-random-seed.php",
        "乱数シードを設定する"
    ],
    "gmproot": [
        "gmp_root",
        "function.gmp-root.php",
        "n乗根の整数部を返す"
    ],
    "gmprootrem": [
        "gmp_rootrem",
        "function.gmp-rootrem.php",
        "n乗根の整数部分と小数部分を返す"
    ],
    "gmpscan0": [
        "gmp_scan0",
        "function.gmp-scan0.php",
        "0 を探す"
    ],
    "gmpscan1": [
        "gmp_scan1",
        "function.gmp-scan1.php",
        "1 を探す"
    ],
    "gmpsetbit": [
        "gmp_setbit",
        "function.gmp-setbit.php",
        "ビットを設定する"
    ],
    "gmpsign": [
        "gmp_sign",
        "function.gmp-sign.php",
        "数の符号"
    ],
    "gmpsqrt": [
        "gmp_sqrt",
        "function.gmp-sqrt.php",
        "平方根を計算する"
    ],
    "gmpsqrtrem": [
        "gmp_sqrtrem",
        "function.gmp-sqrtrem.php",
        "余りつきの平方根"
    ],
    "gmpstrval": [
        "gmp_strval",
        "function.gmp-strval.php",
        "GMP 数を文字列に変換する"
    ],
    "gmpsub": [
        "gmp_sub",
        "function.gmp-sub.php",
        "数値の減算"
    ],
    "gmptestbit": [
        "gmp_testbit",
        "function.gmp-testbit.php",
        "ビットが設定されているかどうかを調べる"
    ],
    "gmpxor": [
        "gmp_xor",
        "function.gmp-xor.php",
        "ビット XOR を計算する"
    ],
    "gmstrftime": [
        "gmstrftime",
        "function.gmstrftime.php",
        "ロケールの設定に基づいて GMT/UTC 時刻/日付をフォーマットする"
    ],
    "gnupgadddecryptkey": [
        "gnupg_adddecryptkey",
        "function.gnupg-adddecryptkey.php",
        "復号のためのキーを追加する"
    ],
    "gnupgaddencryptkey": [
        "gnupg_addencryptkey",
        "function.gnupg-addencryptkey.php",
        "暗号化のためのキーを追加する"
    ],
    "gnupgaddsignkey": [
        "gnupg_addsignkey",
        "function.gnupg-addsignkey.php",
        "署名のためのキーを追加する"
    ],
    "gnupgcleardecryptkeys": [
        "gnupg_cleardecryptkeys",
        "function.gnupg-cleardecryptkeys.php",
        "事前に復号のために設定されたすべてのキーを削除する"
    ],
    "gnupgclearencryptkeys": [
        "gnupg_clearencryptkeys",
        "function.gnupg-clearencryptkeys.php",
        "事前に暗号化のために設定されたすべてのキーを削除する"
    ],
    "gnupgclearsignkeys": [
        "gnupg_clearsignkeys",
        "function.gnupg-clearsignkeys.php",
        "事前に署名のために設定されたすべてのキーを削除する"
    ],
    "gnupgdecrypt": [
        "gnupg_decrypt",
        "function.gnupg-decrypt.php",
        "指定されたテキストを復号する"
    ],
    "gnupgdecryptverify": [
        "gnupg_decryptverify",
        "function.gnupg-decryptverify.php",
        "指定されたテキストを復号し、検証する"
    ],
    "gnupgencrypt": [
        "gnupg_encrypt",
        "function.gnupg-encrypt.php",
        "指定したテキストを暗号化する"
    ],
    "gnupgencryptsign": [
        "gnupg_encryptsign",
        "function.gnupg-encryptsign.php",
        "指定したテキストを暗号化し、署名する"
    ],
    "gnupgexport": [
        "gnupg_export",
        "function.gnupg-export.php",
        "キーをエクスポートする"
    ],
    "gnupggeterror": [
        "gnupg_geterror",
        "function.gnupg-geterror.php",
        "関数が失敗した場合にエラー文字列を返す"
    ],
    "gnupggetprotocol": [
        "gnupg_getprotocol",
        "function.gnupg-getprotocol.php",
        "すべての操作で現在アクティブなプロトコルを返す"
    ],
    "gnupgimport": [
        "gnupg_import",
        "function.gnupg-import.php",
        "キーをインポートする"
    ],
    "gnupginit": [
        "gnupg_init",
        "function.gnupg-init.php",
        "接続を初期化する"
    ],
    "gnupgkeyinfo": [
        "gnupg_keyinfo",
        "function.gnupg-keyinfo.php",
        "指定したパターンに一致するすべてのキーについての情報を配列で返す"
    ],
    "gnupgsetarmor": [
        "gnupg_setarmor",
        "function.gnupg-setarmor.php",
        "armor 形式を切り替える"
    ],
    "gnupgseterrormode": [
        "gnupg_seterrormode",
        "function.gnupg-seterrormode.php",
        "エラー報告モードを設定する"
    ],
    "gnupgsetsignmode": [
        "gnupg_setsignmode",
        "function.gnupg-setsignmode.php",
        "署名方式を設定する"
    ],
    "gnupgsign": [
        "gnupg_sign",
        "function.gnupg-sign.php",
        "指定したテキストに署名する"
    ],
    "gnupgverify": [
        "gnupg_verify",
        "function.gnupg-verify.php",
        "署名済みテキストを検証する"
    ],
    "graphemestripos": [
        "grapheme_stripos",
        "function.grapheme-stripos.php",
        "大文字小文字を区別せず、文字列内で最初にあらわれる場所の (書記素単位の) 位置を見つける"
    ],
    "graphemestristr": [
        "grapheme_stristr",
        "function.grapheme-stristr.php",
        "大文字小文字を区別せず、haystack 文字列の中で needle が最初に登場した場所以降の部分文字列を返す"
    ],
    "graphemestrlen": [
        "grapheme_strlen",
        "function.grapheme-strlen.php",
        "書記素単位で文字列の長さを取得する"
    ],
    "graphemestrpos": [
        "grapheme_strpos",
        "function.grapheme-strpos.php",
        "文字列内で最初にあらわれる場所の (書記素単位の) 位置を見つける"
    ],
    "graphemestrripos": [
        "grapheme_strripos",
        "function.grapheme-strripos.php",
        "大文字小文字を区別せず、文字列内で最後にあらわれる場所の (書記素単位の) 位置を見つける"
    ],
    "graphemestrrpos": [
        "grapheme_strrpos",
        "function.grapheme-strrpos.php",
        "文字列内で最後にあらわれる場所の (書記素単位の) 位置を見つける"
    ],
    "graphemestrstr": [
        "grapheme_strstr",
        "function.grapheme-strstr.php",
        "haystack 文字列の中で、needle が最初に登場した場所以降の部分文字列を返す"
    ],
    "graphemesubstr": [
        "grapheme_substr",
        "function.grapheme-substr.php",
        "部分文字列を返す"
    ],
    "gregoriantojd": [
        "gregoriantojd",
        "function.gregoriantojd.php",
        "グレゴリウス日をユリウス積算日に変換する"
    ],
    "gzclose": [
        "gzclose",
        "function.gzclose.php",
        "開かれたgzファイルへのポインタを閉じる"
    ],
    "gzcompress": [
        "gzcompress",
        "function.gzcompress.php",
        "文字列を圧縮する"
    ],
    "gzdecode": [
        "gzdecode",
        "function.gzdecode.php",
        "gzip 圧縮された文字列をデコードする"
    ],
    "gzdeflate": [
        "gzdeflate",
        "function.gzdeflate.php",
        "文字列を deflate 圧縮する"
    ],
    "gzencode": [
        "gzencode",
        "function.gzencode.php",
        "gzip 圧縮された文字列を作成する"
    ],
    "gzeof": [
        "gzeof",
        "function.gzeof.php",
        "gz ファイルポインタが EOF かどうか調べる"
    ],
    "gzfile": [
        "gzfile",
        "function.gzfile.php",
        "gzファイル全体を配列に読み込む"
    ],
    "gzgetc": [
        "gzgetc",
        "function.gzgetc.php",
        "gz ファイルへのポインタから文字を得る"
    ],
    "gzgets": [
        "gzgets",
        "function.gzgets.php",
        "ファイルポインタから 1 行を得る"
    ],
    "gzgetss": [
        "gzgetss",
        "function.gzgetss.php",
        "gzファイルへのポインタから1行を得て、HTMLタグを取り除く"
    ],
    "gzinflate": [
        "gzinflate",
        "function.gzinflate.php",
        "deflate圧縮された文字列を解凍する"
    ],
    "gzopen": [
        "gzopen",
        "function.gzopen.php",
        "gz ファイルを開く"
    ],
    "gzpassthru": [
        "gzpassthru",
        "function.gzpassthru.php",
        "gzファイルへのポインタから残りのデータ全部を出力する"
    ],
    "gzputs": [
        "gzputs",
        "function.gzputs.php",
        "gzwrite のエイリアス"
    ],
    "gzread": [
        "gzread",
        "function.gzread.php",
        "バイナリ対応のgzファイル読み込み"
    ],
    "gzrewind": [
        "gzrewind",
        "function.gzrewind.php",
        "gz ファイルポインタの示す位置を元に戻す"
    ],
    "gzseek": [
        "gzseek",
        "function.gzseek.php",
        "gz ファイルポインタの位置を移動する"
    ],
    "gztell": [
        "gztell",
        "function.gztell.php",
        "gz ファイルポインタの読み込み/書き込み位置を返します"
    ],
    "gzuncompress": [
        "gzuncompress",
        "function.gzuncompress.php",
        "圧縮された文字列を解凍する"
    ],
    "gzwrite": [
        "gzwrite",
        "function.gzwrite.php",
        "バイナリセーフな gz ファイル書き込み"
    ],
    "hash": [
        "hash",
        "function.hash.php",
        "ハッシュ値 (メッセージダイジェスト) を生成する"
    ],
    "HashContextconstruct": [
        "HashContext::__construct",
        "hashcontext.construct.php",
        "private なコンストラクタのため、直接インスタンス化できません"
    ],
    "hashalgos": [
        "hash_algos",
        "function.hash-algos.php",
        "登録されているハッシュアルゴリズムの一覧を返す"
    ],
    "hashcopy": [
        "hash_copy",
        "function.hash-copy.php",
        "ハッシュコンテキストをコピーする"
    ],
    "hashequals": [
        "hash_equals",
        "function.hash-equals.php",
        "タイミング攻撃に対して安全な文字列比較"
    ],
    "hashfile": [
        "hash_file",
        "function.hash-file.php",
        "ファイルの内容から、ハッシュ値を生成する"
    ],
    "hashfinal": [
        "hash_final",
        "function.hash-final.php",
        "段階的なハッシュ処理を終了し、出来上がったダイジェストを返す"
    ],
    "hashhkdf": [
        "hash_hkdf",
        "function.hash-hkdf.php",
        "与えられたキーから導出されるHKDFキーを生成する"
    ],
    "hashhmac": [
        "hash_hmac",
        "function.hash-hmac.php",
        "HMAC 方式を使用してハッシュ値を生成する"
    ],
    "hashhmacalgos": [
        "hash_hmac_algos",
        "function.hash-hmac-algos.php",
        "hash_hmac に合うハッシュアルゴリズムの一覧を返す"
    ],
    "hashhmacfile": [
        "hash_hmac_file",
        "function.hash-hmac-file.php",
        "HMAC 方式を使用して、指定されたファイルの内容からハッシュ値を生成する"
    ],
    "hashinit": [
        "hash_init",
        "function.hash-init.php",
        "段階的なハッシュコンテキストを初期化する"
    ],
    "hashpbkdf2": [
        "hash_pbkdf2",
        "function.hash-pbkdf2.php",
        "PBKDF2 を使ってパスワードからキーを生成する"
    ],
    "hashupdate": [
        "hash_update",
        "function.hash-update.php",
        "アクティブなハッシュコンテキストにデータを投入する"
    ],
    "hashupdatefile": [
        "hash_update_file",
        "function.hash-update-file.php",
        "アクティブなハッシュコンテキストに、ファイルからデータを投入する"
    ],
    "header": [
        "header",
        "function.header.php",
        "生の HTTP ヘッダを送信する"
    ],
    "headerslist": [
        "headers_list",
        "function.headers-list.php",
        "送信した (もしくは送信される予定の) レスポンスヘッダの一覧を返す"
    ],
    "headerssent": [
        "headers_sent",
        "function.headers-sent.php",
        "ヘッダが既に送信されているかどうかを調べる"
    ],
    "headerregistercallback": [
        "header_register_callback",
        "function.header-register-callback.php",
        "ヘッダ用の関数を登録する"
    ],
    "headerremove": [
        "header_remove",
        "function.header-remove.php",
        "以前に設定したHTTPヘッダを削除する"
    ],
    "hebrev": [
        "hebrev",
        "function.hebrev.php",
        "論理表記のヘブライ語を物理表記に変換する"
    ],
    "hebrevc": [
        "hebrevc",
        "function.hebrevc.php",
        "論理表記のヘブライ語を、改行の変換も含めて物理表記に変換する"
    ],
    "hex2bin": [
        "hex2bin",
        "function.hex2bin.php",
        "16進エンコードされたバイナリ文字列をデコードする"
    ],
    "hexdec": [
        "hexdec",
        "function.hexdec.php",
        "16 進数を 10 進数に変換する"
    ],
    "highlightfile": [
        "highlight_file",
        "function.highlight-file.php",
        "ファイルの構文ハイライト表示"
    ],
    "highlightstring": [
        "highlight_string",
        "function.highlight-string.php",
        "文字列の構文ハイライト表示"
    ],
    "hrtime": [
        "hrtime",
        "function.hrtime.php",
        "システムの高精度な時刻を取得する"
    ],
    "HRTimePerformanceCountergetFrequency": [
        "HRTime\\PerformanceCounter::getFrequency",
        "hrtime-performancecounter.getfrequency.php",
        "Timer frequency in ticks per second"
    ],
    "HRTimePerformanceCountergetTicks": [
        "HRTime\\PerformanceCounter::getTicks",
        "hrtime-performancecounter.getticks.php",
        "Current ticks from the system"
    ],
    "HRTimePerformanceCountergetTicksSince": [
        "HRTime\\PerformanceCounter::getTicksSince",
        "hrtime-performancecounter.gettickssince.php",
        "Ticks elapsed since the given value"
    ],
    "HRTimeStopWatchgetElapsedTicks": [
        "HRTime\\StopWatch::getElapsedTicks",
        "hrtime-stopwatch.getelapsedticks.php",
        "Get elapsed ticks for all intervals"
    ],
    "HRTimeStopWatchgetElapsedTime": [
        "HRTime\\StopWatch::getElapsedTime",
        "hrtime-stopwatch.getelapsedtime.php",
        "Get elapsed time for all intervals"
    ],
    "HRTimeStopWatchgetLastElapsedTicks": [
        "HRTime\\StopWatch::getLastElapsedTicks",
        "hrtime-stopwatch.getlastelapsedticks.php",
        "Get elapsed ticks for the last interval"
    ],
    "HRTimeStopWatchgetLastElapsedTime": [
        "HRTime\\StopWatch::getLastElapsedTime",
        "hrtime-stopwatch.getlastelapsedtime.php",
        "Get elapsed time for the last interval"
    ],
    "HRTimeStopWatchisRunning": [
        "HRTime\\StopWatch::isRunning",
        "hrtime-stopwatch.isrunning.php",
        "Whether the measurement is running"
    ],
    "HRTimeStopWatchstart": [
        "HRTime\\StopWatch::start",
        "hrtime-stopwatch.start.php",
        "Start time measurement"
    ],
    "HRTimeStopWatchstop": [
        "HRTime\\StopWatch::stop",
        "hrtime-stopwatch.stop.php",
        "Stop time measurement"
    ],
    "htmlentities": [
        "htmlentities",
        "function.htmlentities.php",
        "適用可能な文字を全て HTML エンティティに変換する"
    ],
    "htmlspecialchars": [
        "htmlspecialchars",
        "function.htmlspecialchars.php",
        "特殊文字を HTML エンティティに変換する"
    ],
    "htmlspecialcharsdecode": [
        "htmlspecialchars_decode",
        "function.htmlspecialchars-decode.php",
        "特殊な HTML エンティティを文字に戻す"
    ],
    "htmlentitydecode": [
        "html_entity_decode",
        "function.html-entity-decode.php",
        "HTML エンティティを対応する文字に変換する"
    ],
    "http": [
        "http://",
        "wrappers.http.php",
        "HTTP(s) URL へのアクセス"
    ],
    "httpbuildquery": [
        "http_build_query",
        "function.http-build-query.php",
        "URL エンコードされたクエリ文字列を生成する"
    ],
    "httpresponsecode": [
        "http_response_code",
        "function.http-response-code.php",
        "HTTP レスポンスコードを取得または設定"
    ],
    "HTTP": [
        "HTTP コンテキストオプション",
        "context.http.php",
        "HTTP コンテキストオプションの一覧"
    ],
    "hypot": [
        "hypot",
        "function.hypot.php",
        "直角三角形の斜辺の長さを計算する"
    ],
    "ibaseadduser": [
        "ibase_add_user",
        "function.ibase-add-user.php",
        "Add a user to a security database"
    ],
    "ibaseaffectedrows": [
        "ibase_affected_rows",
        "function.ibase-affected-rows.php",
        "直近のクエリで変更された行の数を返す"
    ],
    "ibasebackup": [
        "ibase_backup",
        "function.ibase-backup.php",
        "Initiates a backup task in the service manager and returns immediately"
    ],
    "ibaseblobadd": [
        "ibase_blob_add",
        "function.ibase-blob-add.php",
        "生成された blob にデータを追加する"
    ],
    "ibaseblobcancel": [
        "ibase_blob_cancel",
        "function.ibase-blob-cancel.php",
        "blob の生成を取り消す"
    ],
    "ibaseblobclose": [
        "ibase_blob_close",
        "function.ibase-blob-close.php",
        "blob を閉じる"
    ],
    "ibaseblobcreate": [
        "ibase_blob_create",
        "function.ibase-blob-create.php",
        "データを追加するために blob を生成する"
    ],
    "ibaseblobecho": [
        "ibase_blob_echo",
        "function.ibase-blob-echo.php",
        "ブラウザに blob の内容を出力する"
    ],
    "ibaseblobget": [
        "ibase_blob_get",
        "function.ibase-blob-get.php",
        "オープンした blob から len バイト分のデータを取得する"
    ],
    "ibaseblobimport": [
        "ibase_blob_import",
        "function.ibase-blob-import.php",
        "blob を生成し、ファイルをコピーし、閉じる"
    ],
    "ibaseblobinfo": [
        "ibase_blob_info",
        "function.ibase-blob-info.php",
        "blob の長さと他の便利な情報を返す"
    ],
    "ibaseblobopen": [
        "ibase_blob_open",
        "function.ibase-blob-open.php",
        "データの一部を取得するために blob をオープンする"
    ],
    "ibaseclose": [
        "ibase_close",
        "function.ibase-close.php",
        "InterBase データベースへの接続を閉じる"
    ],
    "ibasecommit": [
        "ibase_commit",
        "function.ibase-commit.php",
        "トランザクションをコミットする"
    ],
    "ibasecommitret": [
        "ibase_commit_ret",
        "function.ibase-commit-ret.php",
        "トランザクションを閉じずにコミットする"
    ],
    "ibaseconnect": [
        "ibase_connect",
        "function.ibase-connect.php",
        "データベースへの接続をオープンする"
    ],
    "ibasedbinfo": [
        "ibase_db_info",
        "function.ibase-db-info.php",
        "データベースについての統計情報を要求する"
    ],
    "ibasedeleteuser": [
        "ibase_delete_user",
        "function.ibase-delete-user.php",
        "Delete a user from a security database"
    ],
    "ibasedropdb": [
        "ibase_drop_db",
        "function.ibase-drop-db.php",
        "データベースを削除する"
    ],
    "ibaseerrcode": [
        "ibase_errcode",
        "function.ibase-errcode.php",
        "エラーコードを返す"
    ],
    "ibaseerrmsg": [
        "ibase_errmsg",
        "function.ibase-errmsg.php",
        "エラーメッセージを返す"
    ],
    "ibaseexecute": [
        "ibase_execute",
        "function.ibase-execute.php",
        "準備されたクエリを実行する"
    ],
    "ibasefetchassoc": [
        "ibase_fetch_assoc",
        "function.ibase-fetch-assoc.php",
        "クエリの結果から、行を連想配列として取得する"
    ],
    "ibasefetchobject": [
        "ibase_fetch_object",
        "function.ibase-fetch-object.php",
        "InterBase データベースからオブジェクトを得る"
    ],
    "ibasefetchrow": [
        "ibase_fetch_row",
        "function.ibase-fetch-row.php",
        "InterBase データベースから 1 行分の結果を取得する"
    ],
    "ibasefieldinfo": [
        "ibase_field_info",
        "function.ibase-field-info.php",
        "フィールドに関する情報を得る"
    ],
    "ibasefreeeventhandler": [
        "ibase_free_event_handler",
        "function.ibase-free-event-handler.php",
        "登録済みのイベントハンドラをキャンセルする"
    ],
    "ibasefreequery": [
        "ibase_free_query",
        "function.ibase-free-query.php",
        "プリペアドクエリにより確保されたメモリを解放する"
    ],
    "ibasefreeresult": [
        "ibase_free_result",
        "function.ibase-free-result.php",
        "結果セットを解放する"
    ],
    "ibasegenid": [
        "ibase_gen_id",
        "function.ibase-gen-id.php",
        "指定した名前のジェネレータをひとつ加算し、その新しい値を返す"
    ],
    "ibasemaintaindb": [
        "ibase_maintain_db",
        "function.ibase-maintain-db.php",
        "データベースサーバーでメンテナンスコマンドを実行する"
    ],
    "ibasemodifyuser": [
        "ibase_modify_user",
        "function.ibase-modify-user.php",
        "Modify a user to a security database"
    ],
    "ibasenameresult": [
        "ibase_name_result",
        "function.ibase-name-result.php",
        "結果セットに名前を割り当てる"
    ],
    "ibasenumfields": [
        "ibase_num_fields",
        "function.ibase-num-fields.php",
        "結果セットにおけるフィールド数を得る"
    ],
    "ibasenumparams": [
        "ibase_num_params",
        "function.ibase-num-params.php",
        "プリペアドクエリのパラメータ数を返す"
    ],
    "ibaseparaminfo": [
        "ibase_param_info",
        "function.ibase-param-info.php",
        "プリペアドクエリのパラメータに関する情報を返す"
    ],
    "ibasepconnect": [
        "ibase_pconnect",
        "function.ibase-pconnect.php",
        "InterBase データベースへの持続的接続をオープンする"
    ],
    "ibaseprepare": [
        "ibase_prepare",
        "function.ibase-prepare.php",
        "Prepare a query for later binding of parameter placeholders and execution"
    ],
    "ibasequery": [
        "ibase_query",
        "function.ibase-query.php",
        "InterBase データベースでクエリを実行する"
    ],
    "ibaserestore": [
        "ibase_restore",
        "function.ibase-restore.php",
        "Initiates a restore task in the service manager and returns immediately"
    ],
    "ibaserollback": [
        "ibase_rollback",
        "function.ibase-rollback.php",
        "トランザクションをロールバックする"
    ],
    "ibaserollbackret": [
        "ibase_rollback_ret",
        "function.ibase-rollback-ret.php",
        "トランザクションを閉じずにロールバックする"
    ],
    "ibaseserverinfo": [
        "ibase_server_info",
        "function.ibase-server-info.php",
        "データベースサーバーについての情報を要求する"
    ],
    "ibaseserviceattach": [
        "ibase_service_attach",
        "function.ibase-service-attach.php",
        "サービスマネージャに接続する"
    ],
    "ibaseservicedetach": [
        "ibase_service_detach",
        "function.ibase-service-detach.php",
        "サービスマネージャとの接続を切断する"
    ],
    "ibaseseteventhandler": [
        "ibase_set_event_handler",
        "function.ibase-set-event-handler.php",
        "イベントが発生した際にコールされるコールバック関数を登録する"
    ],
    "ibasetrans": [
        "ibase_trans",
        "function.ibase-trans.php",
        "トランザクションを開始する"
    ],
    "ibasewaitevent": [
        "ibase_wait_event",
        "function.ibase-wait-event.php",
        "データベースでイベントが発生するのを待つ"
    ],
    "iconv": [
        "iconv",
        "function.iconv.php",
        "文字列を指定した文字エンコーディングに変換する"
    ],
    "iconvgetencoding": [
        "iconv_get_encoding",
        "function.iconv-get-encoding.php",
        "iconv 拡張モジュールの内部設定変数を取得する"
    ],
    "iconvmimedecode": [
        "iconv_mime_decode",
        "function.iconv-mime-decode.php",
        "MIME ヘッダフィールドをデコードする"
    ],
    "iconvmimedecodeheaders": [
        "iconv_mime_decode_headers",
        "function.iconv-mime-decode-headers.php",
        "複数の MIME ヘッダフィールドを一度にデコードする"
    ],
    "iconvmimeencode": [
        "iconv_mime_encode",
        "function.iconv-mime-encode.php",
        "MIME ヘッダフィールドを作成する"
    ],
    "iconvsetencoding": [
        "iconv_set_encoding",
        "function.iconv-set-encoding.php",
        "文字エンコーディング変換用の設定を行なう"
    ],
    "iconvstrlen": [
        "iconv_strlen",
        "function.iconv-strlen.php",
        "文字列の文字数を返す"
    ],
    "iconvstrpos": [
        "iconv_strpos",
        "function.iconv-strpos.php",
        "文字列が最初に現れる場所を見つける"
    ],
    "iconvstrrpos": [
        "iconv_strrpos",
        "function.iconv-strrpos.php",
        "文字列が最後に現れる場所を見つける"
    ],
    "iconvsubstr": [
        "iconv_substr",
        "function.iconv-substr.php",
        "文字列の一部を切り出す"
    ],
    "idate": [
        "idate",
        "function.idate.php",
        "ローカルな時刻/日付を整数として整形する"
    ],
    "idntoascii": [
        "idn_to_ascii",
        "function.idn-to-ascii.php",
        "ドメイン名をIDNAのASCII形式に変換する"
    ],
    "idntoutf8": [
        "idn_to_utf8",
        "function.idn-to-utf8.php",
        "IDNAのASCII方式でエンコードされたドメイン名をUnicodeに変換する"
    ],
    "ignoreuserabort": [
        "ignore_user_abort",
        "function.ignore-user-abort.php",
        "クライアントの接続が切断された際にスクリプトの実行を終了するかどうかを設定する"
    ],
    "iisaddserver": [
        "iis_add_server",
        "function.iis-add-server.php",
        "新規に仮想 Web サーバーを作成する"
    ],
    "iisgetdirsecurity": [
        "iis_get_dir_security",
        "function.iis-get-dir-security.php",
        "ディレクトリのセキュリティを取得する"
    ],
    "iisgetscriptmap": [
        "iis_get_script_map",
        "function.iis-get-script-map.php",
        "指定した拡張子に関して仮想ディレクトリにおけるスクリプトマッピングを取得する"
    ],
    "iisgetserverbycomment": [
        "iis_get_server_by_comment",
        "function.iis-get-server-by-comment.php",
        "指定したコメントのインスタンス番号を返す"
    ],
    "iisgetserverbypath": [
        "iis_get_server_by_path",
        "function.iis-get-server-by-path.php",
        "指定したパスのインスタンス番号を返す"
    ],
    "iisgetserverrights": [
        "iis_get_server_rights",
        "function.iis-get-server-rights.php",
        "サーバーの権限を取得する"
    ],
    "iisgetservicestate": [
        "iis_get_service_state",
        "function.iis-get-service-state.php",
        "サービス ID で指定したサービスの状態を取得する"
    ],
    "iisremoveserver": [
        "iis_remove_server",
        "function.iis-remove-server.php",
        "サーバーインスタンスで指定した仮想 Web サーバーを削除する"
    ],
    "iissetappsettings": [
        "iis_set_app_settings",
        "function.iis-set-app-settings.php",
        "仮想ディレクトリでのアプリケーションスコープを作成する"
    ],
    "iissetdirsecurity": [
        "iis_set_dir_security",
        "function.iis-set-dir-security.php",
        "ディレクトリのセキュリティを設定する"
    ],
    "iissetscriptmap": [
        "iis_set_script_map",
        "function.iis-set-script-map.php",
        "仮想ディレクトリにスクリプトマッピングを設定する"
    ],
    "iissetserverrights": [
        "iis_set_server_rights",
        "function.iis-set-server-rights.php",
        "サーバーの権限を設定する"
    ],
    "iisstartserver": [
        "iis_start_server",
        "function.iis-start-server.php",
        "仮想 Web サーバーを起動する"
    ],
    "iisstartservice": [
        "iis_start_service",
        "function.iis-start-service.php",
        "サービス ID で指定したサービスを起動する"
    ],
    "iisstopserver": [
        "iis_stop_server",
        "function.iis-stop-server.php",
        "仮想 Web サーバーを停止する"
    ],
    "iisstopservice": [
        "iis_stop_service",
        "function.iis-stop-service.php",
        "サービス ID で指定したサービスを停止する"
    ],
    "image2wbmp": [
        "image2wbmp",
        "function.image2wbmp.php",
        "画像をブラウザあるいはファイルに出力する"
    ],
    "imageaffine": [
        "imageaffine",
        "function.imageaffine.php",
        "元の画像を、オプションのクリッピング領域を使ってアフィン変換した画像を返す"
    ],
    "imageaffinematrixconcat": [
        "imageaffinematrixconcat",
        "function.imageaffinematrixconcat.php",
        "二つのアフィン変換行列を連結する"
    ],
    "imageaffinematrixget": [
        "imageaffinematrixget",
        "function.imageaffinematrixget.php",
        "アフィン変換行列を取得する"
    ],
    "imagealphablending": [
        "imagealphablending",
        "function.imagealphablending.php",
        "イメージのブレンドモードを設定する"
    ],
    "imageantialias": [
        "imageantialias",
        "function.imageantialias.php",
        "アンチエイリアス機能を使用すべきかどうかを判断する"
    ],
    "imagearc": [
        "imagearc",
        "function.imagearc.php",
        "部分楕円を描画する"
    ],
    "imagebmp": [
        "imagebmp",
        "function.imagebmp.php",
        "ビットマップ画像をブラウザかファイルに出力する"
    ],
    "imagechar": [
        "imagechar",
        "function.imagechar.php",
        "水平に文字を描画する"
    ],
    "imagecharup": [
        "imagecharup",
        "function.imagecharup.php",
        "垂直に文字を描画する"
    ],
    "imagecolorallocate": [
        "imagecolorallocate",
        "function.imagecolorallocate.php",
        "画像で使用する色を作成する"
    ],
    "imagecolorallocatealpha": [
        "imagecolorallocatealpha",
        "function.imagecolorallocatealpha.php",
        "画像で使用する色を透過度を指定して作成する"
    ],
    "imagecolorat": [
        "imagecolorat",
        "function.imagecolorat.php",
        "ピクセルの色のインデックスを取得する"
    ],
    "imagecolorclosest": [
        "imagecolorclosest",
        "function.imagecolorclosest.php",
        "指定した色に最も近い色のインデックスを取得する"
    ],
    "imagecolorclosestalpha": [
        "imagecolorclosestalpha",
        "function.imagecolorclosestalpha.php",
        "指定した色+アルファ値に最も近い色のインデックスを取得する"
    ],
    "imagecolorclosesthwb": [
        "imagecolorclosesthwb",
        "function.imagecolorclosesthwb.php",
        "色合い、白、黒を有する色のインデックスを得る"
    ],
    "imagecolordeallocate": [
        "imagecolordeallocate",
        "function.imagecolordeallocate.php",
        "イメージの色リソースを開放する"
    ],
    "imagecolorexact": [
        "imagecolorexact",
        "function.imagecolorexact.php",
        "指定した色のインデックスを取得する"
    ],
    "imagecolorexactalpha": [
        "imagecolorexactalpha",
        "function.imagecolorexactalpha.php",
        "指定した色+アルファ値のインデックスを取得する"
    ],
    "imagecolormatch": [
        "imagecolormatch",
        "function.imagecolormatch.php",
        "パレットイメージの色を True カラーイメージに近づける"
    ],
    "imagecolorresolve": [
        "imagecolorresolve",
        "function.imagecolorresolve.php",
        "指定した色または出来るだけ近い色のインデックスを得る"
    ],
    "imagecolorresolvealpha": [
        "imagecolorresolvealpha",
        "function.imagecolorresolvealpha.php",
        "指定した色+アルファ値または最も近い色のインデックスを取得する"
    ],
    "imagecolorset": [
        "imagecolorset",
        "function.imagecolorset.php",
        "指定したパレットインデックスの色を設定する"
    ],
    "imagecolorsforindex": [
        "imagecolorsforindex",
        "function.imagecolorsforindex.php",
        "カラーインデックスからカラーを取得する"
    ],
    "imagecolorstotal": [
        "imagecolorstotal",
        "function.imagecolorstotal.php",
        "画像パレットの色数を検出する"
    ],
    "imagecolortransparent": [
        "imagecolortransparent",
        "function.imagecolortransparent.php",
        "透明色を定義する"
    ],
    "imageconvolution": [
        "imageconvolution",
        "function.imageconvolution.php",
        "div および offset の係数を使用し、3x3 の畳み込み配列を適用する"
    ],
    "imagecopy": [
        "imagecopy",
        "function.imagecopy.php",
        "画像の一部をコピーする"
    ],
    "imagecopymerge": [
        "imagecopymerge",
        "function.imagecopymerge.php",
        "イメージの一部をコピー、マージする"
    ],
    "imagecopymergegray": [
        "imagecopymergegray",
        "function.imagecopymergegray.php",
        "グレースケールでイメージの一部をコピー、マージする"
    ],
    "imagecopyresampled": [
        "imagecopyresampled",
        "function.imagecopyresampled.php",
        "再サンプリングを行いイメージの一部をコピー、伸縮する"
    ],
    "imagecopyresized": [
        "imagecopyresized",
        "function.imagecopyresized.php",
        "画像の一部をコピーしサイズを変更する"
    ],
    "imagecreate": [
        "imagecreate",
        "function.imagecreate.php",
        "パレットを使用する新規画像を作成する"
    ],
    "imagecreatefrombmp": [
        "imagecreatefrombmp",
        "function.imagecreatefrombmp.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefromgd": [
        "imagecreatefromgd",
        "function.imagecreatefromgd.php",
        "GD ファイルまたは URL から新規イメージを生成する"
    ],
    "imagecreatefromgd2": [
        "imagecreatefromgd2",
        "function.imagecreatefromgd2.php",
        "GD2 ファイルまたは URL から新規イメージを生成する"
    ],
    "imagecreatefromgd2part": [
        "imagecreatefromgd2part",
        "function.imagecreatefromgd2part.php",
        "GD2 ファイルまたは URL の指定した部分から新規イメージを生成する"
    ],
    "imagecreatefromgif": [
        "imagecreatefromgif",
        "function.imagecreatefromgif.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefromjpeg": [
        "imagecreatefromjpeg",
        "function.imagecreatefromjpeg.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefrompng": [
        "imagecreatefrompng",
        "function.imagecreatefrompng.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefromstring": [
        "imagecreatefromstring",
        "function.imagecreatefromstring.php",
        "文字列の中のイメージストリームから新規イメージを作成する"
    ],
    "imagecreatefromwbmp": [
        "imagecreatefromwbmp",
        "function.imagecreatefromwbmp.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefromwebp": [
        "imagecreatefromwebp",
        "function.imagecreatefromwebp.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefromxbm": [
        "imagecreatefromxbm",
        "function.imagecreatefromxbm.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatefromxpm": [
        "imagecreatefromxpm",
        "function.imagecreatefromxpm.php",
        "新しい画像をファイルあるいは URL から作成する"
    ],
    "imagecreatetruecolor": [
        "imagecreatetruecolor",
        "function.imagecreatetruecolor.php",
        "TrueColor イメージを新規に作成する"
    ],
    "imagecrop": [
        "imagecrop",
        "function.imagecrop.php",
        "指定した矩形に画像をクロップする"
    ],
    "imagecropauto": [
        "imagecropauto",
        "function.imagecropauto.php",
        "利用可能なモードを指定して、画像を自動的にクロップする"
    ],
    "imagedashedline": [
        "imagedashedline",
        "function.imagedashedline.php",
        "破線を描画する"
    ],
    "imagedestroy": [
        "imagedestroy",
        "function.imagedestroy.php",
        "画像を破棄する"
    ],
    "imageellipse": [
        "imageellipse",
        "function.imageellipse.php",
        "楕円を描画する"
    ],
    "imagefill": [
        "imagefill",
        "function.imagefill.php",
        "塗り潰す"
    ],
    "imagefilledarc": [
        "imagefilledarc",
        "function.imagefilledarc.php",
        "楕円弧を描画し、塗りつぶす"
    ],
    "imagefilledellipse": [
        "imagefilledellipse",
        "function.imagefilledellipse.php",
        "塗りつぶされた楕円を描画する"
    ],
    "imagefilledpolygon": [
        "imagefilledpolygon",
        "function.imagefilledpolygon.php",
        "塗りつぶした多角形を描画する"
    ],
    "imagefilledrectangle": [
        "imagefilledrectangle",
        "function.imagefilledrectangle.php",
        "塗りつぶした矩形を描画する"
    ],
    "imagefilltoborder": [
        "imagefilltoborder",
        "function.imagefilltoborder.php",
        "特定色で塗りつぶす"
    ],
    "imagefilter": [
        "imagefilter",
        "function.imagefilter.php",
        "画像にフィルタを適用する"
    ],
    "imageflip": [
        "imageflip",
        "function.imageflip.php",
        "指定したモードで画像を反転させる"
    ],
    "imagefontheight": [
        "imagefontheight",
        "function.imagefontheight.php",
        "フォントの高さを取得する"
    ],
    "imagefontwidth": [
        "imagefontwidth",
        "function.imagefontwidth.php",
        "フォントの幅を取得する"
    ],
    "imageftbbox": [
        "imageftbbox",
        "function.imageftbbox.php",
        "freetype2 によるフォントを用いたテキストを囲む箱を取得する"
    ],
    "imagefttext": [
        "imagefttext",
        "function.imagefttext.php",
        "FreeType 2 によるフォントを用いてイメージにテキストを描画する"
    ],
    "imagegammacorrect": [
        "imagegammacorrect",
        "function.imagegammacorrect.php",
        "GD イメージにガンマ補正を適用する"
    ],
    "imagegd": [
        "imagegd",
        "function.imagegd.php",
        "GD イメージをブラウザまたはファイルに出力する"
    ],
    "imagegd2": [
        "imagegd2",
        "function.imagegd2.php",
        "GD2 イメージをブラウザまたはファイルに出力する"
    ],
    "imagegetclip": [
        "imagegetclip",
        "function.imagegetclip.php",
        "長方形を切り取り、画像として取得する"
    ],
    "imagegetinterpolation": [
        "imagegetinterpolation",
        "function.imagegetinterpolation.php",
        "補間方法を取得する"
    ],
    "imagegif": [
        "imagegif",
        "function.imagegif.php",
        "画像をブラウザあるいはファイルに出力する"
    ],
    "imagegrabscreen": [
        "imagegrabscreen",
        "function.imagegrabscreen.php",
        "画面全体をキャプチャする"
    ],
    "imagegrabwindow": [
        "imagegrabwindow",
        "function.imagegrabwindow.php",
        "ウィンドウをキャプチャする"
    ],
    "imageinterlace": [
        "imageinterlace",
        "function.imageinterlace.php",
        "インターレースを有効もしくは無効にする"
    ],
    "imageistruecolor": [
        "imageistruecolor",
        "function.imageistruecolor.php",
        "画像が truecolor かどうか調べる"
    ],
    "imagejpeg": [
        "imagejpeg",
        "function.imagejpeg.php",
        "画像をブラウザあるいはファイルに出力する"
    ],
    "imagelayereffect": [
        "imagelayereffect",
        "function.imagelayereffect.php",
        "アルファブレンディングフラグを設定し、レイヤ効果を使用する"
    ],
    "imageline": [
        "imageline",
        "function.imageline.php",
        "直線を描画する"
    ],
    "imageloadfont": [
        "imageloadfont",
        "function.imageloadfont.php",
        "新しいフォントを読み込む"
    ],
    "imageopenpolygon": [
        "imageopenpolygon",
        "function.imageopenpolygon.php",
        "オープンポリゴンを描画する"
    ],
    "imagepalettecopy": [
        "imagepalettecopy",
        "function.imagepalettecopy.php",
        "あるイメージから他のイメージにパレットをコピーする"
    ],
    "imagepalettetotruecolor": [
        "imagepalettetotruecolor",
        "function.imagepalettetotruecolor.php",
        "パレット形式の画像を true color に変換する"
    ],
    "imagepng": [
        "imagepng",
        "function.imagepng.php",
        "PNG イメージをブラウザまたはファイルに出力する"
    ],
    "imagepolygon": [
        "imagepolygon",
        "function.imagepolygon.php",
        "多角形を描画する"
    ],
    "imagerectangle": [
        "imagerectangle",
        "function.imagerectangle.php",
        "矩形を描画する"
    ],
    "imageresolution": [
        "imageresolution",
        "function.imageresolution.php",
        "画像の解像度を取得/設定する"
    ],
    "imagerotate": [
        "imagerotate",
        "function.imagerotate.php",
        "指定された角度で画像を回転する"
    ],
    "imagesavealpha": [
        "imagesavealpha",
        "function.imagesavealpha.php",
        "PNG 画像を保存する際に、完全なアルファチャネル情報を保存するかどうかを指定する"
    ],
    "imagescale": [
        "imagescale",
        "function.imagescale.php",
        "幅と高さを指定して、画像の縮尺を変更する"
    ],
    "imagesetbrush": [
        "imagesetbrush",
        "function.imagesetbrush.php",
        "線の描画用にブラシイメージを設定する"
    ],
    "imagesetclip": [
        "imagesetclip",
        "function.imagesetclip.php",
        "切り取る長方形を設定する"
    ],
    "imagesetinterpolation": [
        "imagesetinterpolation",
        "function.imagesetinterpolation.php",
        "補間方法を設定する"
    ],
    "imagesetpixel": [
        "imagesetpixel",
        "function.imagesetpixel.php",
        "点を生成する"
    ],
    "imagesetstyle": [
        "imagesetstyle",
        "function.imagesetstyle.php",
        "線描画用のスタイルを設定する"
    ],
    "imagesetthickness": [
        "imagesetthickness",
        "function.imagesetthickness.php",
        "線描画用の線幅を設定する"
    ],
    "imagesettile": [
        "imagesettile",
        "function.imagesettile.php",
        "塗りつぶし用のイメージを設定する"
    ],
    "imagestring": [
        "imagestring",
        "function.imagestring.php",
        "文字列を水平に描画する"
    ],
    "imagestringup": [
        "imagestringup",
        "function.imagestringup.php",
        "文字列を垂直に描画する"
    ],
    "imagesx": [
        "imagesx",
        "function.imagesx.php",
        "画像の幅を取得する"
    ],
    "imagesy": [
        "imagesy",
        "function.imagesy.php",
        "画像の高さを取得する"
    ],
    "imagetruecolortopalette": [
        "imagetruecolortopalette",
        "function.imagetruecolortopalette.php",
        "TrueColor イメージをパレットイメージに変換する"
    ],
    "imagettfbbox": [
        "imagettfbbox",
        "function.imagettfbbox.php",
        "TypeType フォントを使用したテキストの bounding box を生成する"
    ],
    "imagettftext": [
        "imagettftext",
        "function.imagettftext.php",
        "TrueType フォントを使用してテキストを画像に書き込む"
    ],
    "imagetypes": [
        "imagetypes",
        "function.imagetypes.php",
        "この PHP がサポートしている画像形式を返す"
    ],
    "imagewbmp": [
        "imagewbmp",
        "function.imagewbmp.php",
        "画像をブラウザあるいはファイルに出力する"
    ],
    "imagewebp": [
        "imagewebp",
        "function.imagewebp.php",
        "WebP 画像をブラウザあるいはファイルに出力する"
    ],
    "imagexbm": [
        "imagexbm",
        "function.imagexbm.php",
        "XBM 画像をブラウザあるいはファイルに出力する"
    ],
    "imagetypetoextension": [
        "image_type_to_extension",
        "function.image-type-to-extension.php",
        "画像形式からファイルの拡張子を取得する"
    ],
    "ImagickadaptiveBlurImage": [
        "Imagick::adaptiveBlurImage",
        "imagick.adaptiveblurimage.php",
        "adaptive blur (順応性にじみ) フィルタを画像に追加する"
    ],
    "ImagickadaptiveResizeImage": [
        "Imagick::adaptiveResizeImage",
        "imagick.adaptiveresizeimage.php",
        "データに依存する三角測量にもとづいて画像のサイズを変更する"
    ],
    "ImagickadaptiveSharpenImage": [
        "Imagick::adaptiveSharpenImage",
        "imagick.adaptivesharpenimage.php",
        "順応して画像をシャープにする"
    ],
    "ImagickadaptiveThresholdImage": [
        "Imagick::adaptiveThresholdImage",
        "imagick.adaptivethresholdimage.php",
        "輝度の範囲にもとづいて各ピクセルの閾値を選択する"
    ],
    "ImagickaddImage": [
        "Imagick::addImage",
        "imagick.addimage.php",
        "新しい画像を Imagick オブジェクトの画像リストに追加する"
    ],
    "ImagickaddNoiseImage": [
        "Imagick::addNoiseImage",
        "imagick.addnoiseimage.php",
        "ランダムなノイズを画像に追加する"
    ],
    "ImagickaffineTransformImage": [
        "Imagick::affineTransformImage",
        "imagick.affinetransformimage.php",
        "画像を変換する"
    ],
    "ImagickanimateImages": [
        "Imagick::animateImages",
        "imagick.animateimages.php",
        "画像を動かす"
    ],
    "ImagickannotateImage": [
        "Imagick::annotateImage",
        "imagick.annotateimage.php",
        "画像にテキストによる注記を加える"
    ],
    "ImagickappendImages": [
        "Imagick::appendImages",
        "imagick.appendimages.php",
        "画像群を追加する"
    ],
    "ImagickautoLevelImage": [
        "Imagick::autoLevelImage",
        "imagick.autolevelimage.php",
        "Description"
    ],
    "ImagickaverageImages": [
        "Imagick::averageImages",
        "imagick.averageimages.php",
        "画像群を平均化する"
    ],
    "ImagickblackThresholdImage": [
        "Imagick::blackThresholdImage",
        "imagick.blackthresholdimage.php",
        "閾値に満たないすべてのピクセルを黒にする"
    ],
    "ImagickblueShiftImage": [
        "Imagick::blueShiftImage",
        "imagick.blueshiftimage.php",
        "Description"
    ],
    "ImagickblurImage": [
        "Imagick::blurImage",
        "imagick.blurimage.php",
        "blur (にじみ) フィルタを画像に追加する"
    ],
    "ImagickborderImage": [
        "Imagick::borderImage",
        "imagick.borderimage.php",
        "画像の周りを枠線で囲む"
    ],
    "ImagickbrightnessContrastImage": [
        "Imagick::brightnessContrastImage",
        "imagick.brightnesscontrastimage.php",
        "Description"
    ],
    "ImagickcharcoalImage": [
        "Imagick::charcoalImage",
        "imagick.charcoalimage.php",
        "木炭画をシミュレートする"
    ],
    "ImagickchopImage": [
        "Imagick::chopImage",
        "imagick.chopimage.php",
        "画像の一部を取り除き、切り詰める"
    ],
    "ImagickclampImage": [
        "Imagick::clampImage",
        "imagick.clampimage.php",
        "Description"
    ],
    "Imagickclear": [
        "Imagick::clear",
        "imagick.clear.php",
        "Imagick オブジェクトに関連付けられたすべてのリソースをクリアする"
    ],
    "ImagickclipImage": [
        "Imagick::clipImage",
        "imagick.clipimage.php",
        "8BIM プロファイルの最初のパスにそって切り取る"
    ],
    "ImagickclipImagePath": [
        "Imagick::clipImagePath",
        "imagick.clipimagepath.php",
        "Description"
    ],
    "ImagickclipPathImage": [
        "Imagick::clipPathImage",
        "imagick.clippathimage.php",
        "8BIM プロファイルの指定した名前のパスにそって切り取る"
    ],
    "Imagickclone": [
        "Imagick::clone",
        "imagick.clone.php",
        "Imagick オブジェクトの完全なコピーを作成する"
    ],
    "ImagickclutImage": [
        "Imagick::clutImage",
        "imagick.clutimage.php",
        "画像の色を置き換える"
    ],
    "ImagickcoalesceImages": [
        "Imagick::coalesceImages",
        "imagick.coalesceimages.php",
        "複数の画像を合成する"
    ],
    "ImagickcolorFloodfillImage": [
        "Imagick::colorFloodfillImage",
        "imagick.colorfloodfillimage.php",
        "対象にマッチする任意の点の色の値を変更する"
    ],
    "ImagickcolorizeImage": [
        "Imagick::colorizeImage",
        "imagick.colorizeimage.php",
        "塗りつぶし色と画像を混合する"
    ],
    "ImagickcolorMatrixImage": [
        "Imagick::colorMatrixImage",
        "imagick.colormatriximage.php",
        "Description"
    ],
    "ImagickcombineImages": [
        "Imagick::combineImages",
        "imagick.combineimages.php",
        "ひとつあるいは複数の画像をひとつにまとめる"
    ],
    "ImagickcommentImage": [
        "Imagick::commentImage",
        "imagick.commentimage.php",
        "コメントを画像に追加する"
    ],
    "ImagickcompareImageChannels": [
        "Imagick::compareImageChannels",
        "imagick.compareimagechannels.php",
        "ひとつあるいは複数の画像の差を返す"
    ],
    "ImagickcompareImageLayers": [
        "Imagick::compareImageLayers",
        "imagick.compareimagelayers.php",
        "複数の画像の中で最大の境界範囲を返す"
    ],
    "ImagickcompareImages": [
        "Imagick::compareImages",
        "imagick.compareimages.php",
        "ある画像を再構築された画像と比較する"
    ],
    "ImagickcompositeImage": [
        "Imagick::compositeImage",
        "imagick.compositeimage.php",
        "ある画像を別の画像に合成する"
    ],
    "ImagickcontrastImage": [
        "Imagick::contrastImage",
        "imagick.contrastimage.php",
        "画像のコントラストを変更する"
    ],
    "ImagickcontrastStretchImage": [
        "Imagick::contrastStretchImage",
        "imagick.contraststretchimage.php",
        "カラー画像のコントラストを強調する"
    ],
    "ImagickconvolveImage": [
        "Imagick::convolveImage",
        "imagick.convolveimage.php",
        "独自の畳み込み関数を画像に適用する"
    ],
    "Imagickcount": [
        "Imagick::count",
        "imagick.count.php",
        "Get the number of images"
    ],
    "ImagickcropImage": [
        "Imagick::cropImage",
        "imagick.cropimage.php",
        "画像の一部を抽出する"
    ],
    "ImagickcropThumbnailImage": [
        "Imagick::cropThumbnailImage",
        "imagick.cropthumbnailimage.php",
        "切り取ってサムネイルを作成する"
    ],
    "Imagickcurrent": [
        "Imagick::current",
        "imagick.current.php",
        "現在の Imagick オブジェクトへの参照を返す"
    ],
    "ImagickcycleColormapImage": [
        "Imagick::cycleColormapImage",
        "imagick.cyclecolormapimage.php",
        "画像のカラーマップを移動する"
    ],
    "ImagickdecipherImage": [
        "Imagick::decipherImage",
        "imagick.decipherimage.php",
        "画像を復号する"
    ],
    "ImagickdeconstructImages": [
        "Imagick::deconstructImages",
        "imagick.deconstructimages.php",
        "画像間の特定のピクセルの差を返す"
    ],
    "ImagickdeleteImageArtifact": [
        "Imagick::deleteImageArtifact",
        "imagick.deleteimageartifact.php",
        "画像のアーチファクトを削除する"
    ],
    "ImagickdeleteImageProperty": [
        "Imagick::deleteImageProperty",
        "imagick.deleteimageproperty.php",
        "Description"
    ],
    "ImagickdeskewImage": [
        "Imagick::deskewImage",
        "imagick.deskewimage.php",
        "傾きを除去する"
    ],
    "ImagickdespeckleImage": [
        "Imagick::despeckleImage",
        "imagick.despeckleimage.php",
        "画像内のスペックルノイズを軽減する"
    ],
    "Imagickdestroy": [
        "Imagick::destroy",
        "imagick.destroy.php",
        "Imagick オブジェクトを破棄する"
    ],
    "ImagickdisplayImage": [
        "Imagick::displayImage",
        "imagick.displayimage.php",
        "画像を表示する"
    ],
    "ImagickdisplayImages": [
        "Imagick::displayImages",
        "imagick.displayimages.php",
        "画像あるいは画像シーケンスを表示する"
    ],
    "ImagickdistortImage": [
        "Imagick::distortImage",
        "imagick.distortimage.php",
        "さまざまな方式で画像を歪める"
    ],
    "ImagickdrawImage": [
        "Imagick::drawImage",
        "imagick.drawimage.php",
        "現在の画像上の ImagickDraw オブジェクトをレンダリングする"
    ],
    "ImagickedgeImage": [
        "Imagick::edgeImage",
        "imagick.edgeimage.php",
        "画像の輪郭を強調する"
    ],
    "ImagickembossImage": [
        "Imagick::embossImage",
        "imagick.embossimage.php",
        "グレースケール画像に三次元効果を施して返す"
    ],
    "ImagickencipherImage": [
        "Imagick::encipherImage",
        "imagick.encipherimage.php",
        "画像を暗号化する"
    ],
    "ImagickenhanceImage": [
        "Imagick::enhanceImage",
        "imagick.enhanceimage.php",
        "ノイジーな画像の品質を向上させる"
    ],
    "ImagickequalizeImage": [
        "Imagick::equalizeImage",
        "imagick.equalizeimage.php",
        "画像ヒストグラムを均等化する"
    ],
    "ImagickevaluateImage": [
        "Imagick::evaluateImage",
        "imagick.evaluateimage.php",
        "式を画像に適用する"
    ],
    "ImagickexportImagePixels": [
        "Imagick::exportImagePixels",
        "imagick.exportimagepixels.php",
        "画像の生のピクセルをエクスポートする"
    ],
    "ImagickextentImage": [
        "Imagick::extentImage",
        "imagick.extentimage.php",
        "画像のサイズを設定する"
    ],
    "Imagickfilter": [
        "Imagick::filter",
        "imagick.filter.php",
        "Description"
    ],
    "ImagickflattenImages": [
        "Imagick::flattenImages",
        "imagick.flattenimages.php",
        "画像シーケンスをマージする"
    ],
    "ImagickflipImage": [
        "Imagick::flipImage",
        "imagick.flipimage.php",
        "垂直方向に反転した画像を作成する"
    ],
    "ImagickfloodFillPaintImage": [
        "Imagick::floodFillPaintImage",
        "imagick.floodfillpaintimage.php",
        "対象にマッチする任意のピクセルの値を変更する"
    ],
    "ImagickflopImage": [
        "Imagick::flopImage",
        "imagick.flopimage.php",
        "垂直方向に反転した画像を作成する"
    ],
    "ImagickforwardFourierTransformImage": [
        "Imagick::forwardFourierTransformImage",
        "imagick.forwardfouriertransformimage.php",
        "Description"
    ],
    "ImagickframeImage": [
        "Imagick::frameImage",
        "imagick.frameimage.php",
        "三次元の枠線をシミュレートする"
    ],
    "ImagickfunctionImage": [
        "Imagick::functionImage",
        "imagick.functionimage.php",
        "画像に関数を適用する"
    ],
    "ImagickfxImage": [
        "Imagick::fxImage",
        "imagick.fximage.php",
        "式を画像の各ピクセルに適用する"
    ],
    "ImagickgammaImage": [
        "Imagick::gammaImage",
        "imagick.gammaimage.php",
        "画像をガンマ補正する"
    ],
    "ImagickgaussianBlurImage": [
        "Imagick::gaussianBlurImage",
        "imagick.gaussianblurimage.php",
        "画像をぼかす"
    ],
    "ImagickgetColorspace": [
        "Imagick::getColorspace",
        "imagick.getcolorspace.php",
        "色空間を取得する"
    ],
    "ImagickgetCompression": [
        "Imagick::getCompression",
        "imagick.getcompression.php",
        "オブジェクトの圧縮形式を取得する"
    ],
    "ImagickgetCompressionQuality": [
        "Imagick::getCompressionQuality",
        "imagick.getcompressionquality.php",
        "オブジェクトの圧縮品質を取得する"
    ],
    "ImagickgetCopyright": [
        "Imagick::getCopyright",
        "imagick.getcopyright.php",
        "ImageMagick API の著作権情報を文字列で返す"
    ],
    "ImagickgetFilename": [
        "Imagick::getFilename",
        "imagick.getfilename.php",
        "画像シーケンスに関連付けられたファイル名を取得する"
    ],
    "ImagickgetFont": [
        "Imagick::getFont",
        "imagick.getfont.php",
        "フォントを取得する"
    ],
    "ImagickgetFormat": [
        "Imagick::getFormat",
        "imagick.getformat.php",
        "Imagick オブジェクトのフォーマットを取得する"
    ],
    "ImagickgetGravity": [
        "Imagick::getGravity",
        "imagick.getgravity.php",
        "gravity を取得する"
    ],
    "ImagickgetHomeURL": [
        "Imagick::getHomeURL",
        "imagick.gethomeurl.php",
        "ImageMagick のホーム URL を返す"
    ],
    "ImagickgetImage": [
        "Imagick::getImage",
        "imagick.getimage.php",
        "新しい Imagick オブジェクトを返す"
    ],
    "ImagickgetImageAlphaChannel": [
        "Imagick::getImageAlphaChannel",
        "imagick.getimagealphachannel.php",
        "画像のアルファチャネルを取得する"
    ],
    "ImagickgetImageArtifact": [
        "Imagick::getImageArtifact",
        "imagick.getimageartifact.php",
        "画像のアーチファクトを取得する"
    ],
    "ImagickgetImageAttribute": [
        "Imagick::getImageAttribute",
        "imagick.getimageattribute.php",
        "Description"
    ],
    "ImagickgetImageBackgroundColor": [
        "Imagick::getImageBackgroundColor",
        "imagick.getimagebackgroundcolor.php",
        "画像の背景色を返す"
    ],
    "ImagickgetImageBlob": [
        "Imagick::getImageBlob",
        "imagick.getimageblob.php",
        "画像シーケンスを blob で返す"
    ],
    "ImagickgetImageBluePrimary": [
        "Imagick::getImageBluePrimary",
        "imagick.getimageblueprimary.php",
        "青が一番強い点を返す"
    ],
    "ImagickgetImageBorderColor": [
        "Imagick::getImageBorderColor",
        "imagick.getimagebordercolor.php",
        "画像の前景色を返す"
    ],
    "ImagickgetImageChannelDepth": [
        "Imagick::getImageChannelDepth",
        "imagick.getimagechanneldepth.php",
        "特定の画像チャネルの深度を返す"
    ],
    "ImagickgetImageChannelDistortion": [
        "Imagick::getImageChannelDistortion",
        "imagick.getimagechanneldistortion.php",
        "画像のチャネルを再構築した画像と比較する"
    ],
    "ImagickgetImageChannelDistortions": [
        "Imagick::getImageChannelDistortions",
        "imagick.getimagechanneldistortions.php",
        "チャネルの歪みを取得する"
    ],
    "ImagickgetImageChannelExtrema": [
        "Imagick::getImageChannelExtrema",
        "imagick.getimagechannelextrema.php",
        "ひとつあるいは複数の画像チャネルの極値を取得する"
    ],
    "ImagickgetImageChannelKurtosis": [
        "Imagick::getImageChannelKurtosis",
        "imagick.getimagechannelkurtosis.php",
        "getImageChannelKurtosis"
    ],
    "ImagickgetImageChannelMean": [
        "Imagick::getImageChannelMean",
        "imagick.getimagechannelmean.php",
        "平均値と標準偏差を取得する"
    ],
    "ImagickgetImageChannelRange": [
        "Imagick::getImageChannelRange",
        "imagick.getimagechannelrange.php",
        "チャネルの範囲を取得する"
    ],
    "ImagickgetImageChannelStatistics": [
        "Imagick::getImageChannelStatistics",
        "imagick.getimagechannelstatistics.php",
        "画像の各チャネルの統計情報を返す"
    ],
    "ImagickgetImageClipMask": [
        "Imagick::getImageClipMask",
        "imagick.getimageclipmask.php",
        "画像のクリップマスクを取得する"
    ],
    "ImagickgetImageColormapColor": [
        "Imagick::getImageColormapColor",
        "imagick.getimagecolormapcolor.php",
        "指定したインデックスに対応する色マップ上の色を返す"
    ],
    "ImagickgetImageColors": [
        "Imagick::getImageColors",
        "imagick.getimagecolors.php",
        "画像で使われている色の数を取得する"
    ],
    "ImagickgetImageColorspace": [
        "Imagick::getImageColorspace",
        "imagick.getimagecolorspace.php",
        "画像の色空間を取得する"
    ],
    "ImagickgetImageCompose": [
        "Imagick::getImageCompose",
        "imagick.getimagecompose.php",
        "画像の合成演算子を返す"
    ],
    "ImagickgetImageCompression": [
        "Imagick::getImageCompression",
        "imagick.getimagecompression.php",
        "現在の画像の圧縮形式を取得する"
    ],
    "ImagickgetImageCompressionQuality": [
        "Imagick::getImageCompressionQuality",
        "imagick.getimagecompressionquality.php",
        "現在の画像の圧縮品質を取得する"
    ],
    "ImagickgetImageDelay": [
        "Imagick::getImageDelay",
        "imagick.getimagedelay.php",
        "画像の遅延を取得する"
    ],
    "ImagickgetImageDepth": [
        "Imagick::getImageDepth",
        "imagick.getimagedepth.php",
        "画像の深度を取得する"
    ],
    "ImagickgetImageDispose": [
        "Imagick::getImageDispose",
        "imagick.getimagedispose.php",
        "画像の配置方法を取得する"
    ],
    "ImagickgetImageDistortion": [
        "Imagick::getImageDistortion",
        "imagick.getimagedistortion.php",
        "ある画像と再構築した画像を比較する"
    ],
    "ImagickgetImageExtrema": [
        "Imagick::getImageExtrema",
        "imagick.getimageextrema.php",
        "画像の極値を取得する"
    ],
    "ImagickgetImageFilename": [
        "Imagick::getImageFilename",
        "imagick.getimagefilename.php",
        "シーケンス内の特定の画像のファイル名を返す"
    ],
    "ImagickgetImageFormat": [
        "Imagick::getImageFormat",
        "imagick.getimageformat.php",
        "シーケンス内の特定の画像のフォーマットを返す"
    ],
    "ImagickgetImageGamma": [
        "Imagick::getImageGamma",
        "imagick.getimagegamma.php",
        "画像のガンマを取得する"
    ],
    "ImagickgetImageGeometry": [
        "Imagick::getImageGeometry",
        "imagick.getimagegeometry.php",
        "幅と高さを連想配列で取得する"
    ],
    "ImagickgetImageGravity": [
        "Imagick::getImageGravity",
        "imagick.getimagegravity.php",
        "画像の gravity を取得する"
    ],
    "ImagickgetImageGreenPrimary": [
        "Imagick::getImageGreenPrimary",
        "imagick.getimagegreenprimary.php",
        "緑が一番強い点を返す"
    ],
    "ImagickgetImageHeight": [
        "Imagick::getImageHeight",
        "imagick.getimageheight.php",
        "画像の高さを返す"
    ],
    "ImagickgetImageHistogram": [
        "Imagick::getImageHistogram",
        "imagick.getimagehistogram.php",
        "画像のヒストグラムを取得する"
    ],
    "ImagickgetImageIndex": [
        "Imagick::getImageIndex",
        "imagick.getimageindex.php",
        "現在アクティブな画像のインデックスを取得する"
    ],
    "ImagickgetImageInterlaceScheme": [
        "Imagick::getImageInterlaceScheme",
        "imagick.getimageinterlacescheme.php",
        "画像のインターレース手法を取得する"
    ],
    "ImagickgetImageInterpolateMethod": [
        "Imagick::getImageInterpolateMethod",
        "imagick.getimageinterpolatemethod.php",
        "画像の補間方式を返す"
    ],
    "ImagickgetImageIterations": [
        "Imagick::getImageIterations",
        "imagick.getimageiterations.php",
        "画像の反復を取得する"
    ],
    "ImagickgetImageLength": [
        "Imagick::getImageLength",
        "imagick.getimagelength.php",
        "画像の長さをバイト数で取得する"
    ],
    "ImagickgetImageMatte": [
        "Imagick::getImageMatte",
        "imagick.getimagematte.php",
        "画像がマットチャネルを持っているかどうかを返す"
    ],
    "ImagickgetImageMatteColor": [
        "Imagick::getImageMatteColor",
        "imagick.getimagemattecolor.php",
        "画像のマット色を返す"
    ],
    "ImagickgetImageMimeType": [
        "Imagick::getImageMimeType",
        "imagick.getimagemimetype.php",
        "Description"
    ],
    "ImagickgetImageOrientation": [
        "Imagick::getImageOrientation",
        "imagick.getimageorientation.php",
        "画像の方向を取得する"
    ],
    "ImagickgetImagePage": [
        "Imagick::getImagePage",
        "imagick.getimagepage.php",
        "ページのジオメトリを返す"
    ],
    "ImagickgetImagePixelColor": [
        "Imagick::getImagePixelColor",
        "imagick.getimagepixelcolor.php",
        "指定したピクセルの色を返す"
    ],
    "ImagickgetImageProfile": [
        "Imagick::getImageProfile",
        "imagick.getimageprofile.php",
        "指定した名前の画像プロファイルを返す"
    ],
    "ImagickgetImageProfiles": [
        "Imagick::getImageProfiles",
        "imagick.getimageprofiles.php",
        "画像プロファイルを返す"
    ],
    "ImagickgetImageProperties": [
        "Imagick::getImageProperties",
        "imagick.getimageproperties.php",
        "画像のプロパティを返す"
    ],
    "ImagickgetImageProperty": [
        "Imagick::getImageProperty",
        "imagick.getimageproperty.php",
        "指定した名前の画像のプロパティを返す"
    ],
    "ImagickgetImageRedPrimary": [
        "Imagick::getImageRedPrimary",
        "imagick.getimageredprimary.php",
        "赤が一番強い点を返す"
    ],
    "ImagickgetImageRegion": [
        "Imagick::getImageRegion",
        "imagick.getimageregion.php",
        "画像の一部を抽出する"
    ],
    "ImagickgetImageRenderingIntent": [
        "Imagick::getImageRenderingIntent",
        "imagick.getimagerenderingintent.php",
        "画像のレンダリング方向を取得する"
    ],
    "ImagickgetImageResolution": [
        "Imagick::getImageResolution",
        "imagick.getimageresolution.php",
        "画像の X 方向と Y 方向の解像度を取得する"
    ],
    "ImagickgetImagesBlob": [
        "Imagick::getImagesBlob",
        "imagick.getimagesblob.php",
        "すべての画像シーケンスを blob で返す"
    ],
    "ImagickgetImageScene": [
        "Imagick::getImageScene",
        "imagick.getimagescene.php",
        "画像のシーンを取得する"
    ],
    "ImagickgetImageSignature": [
        "Imagick::getImageSignature",
        "imagick.getimagesignature.php",
        "SHA-256 メッセージダイジェストを生成する"
    ],
    "ImagickgetImageSize": [
        "Imagick::getImageSize",
        "imagick.getimagesize.php",
        "画像の長さをバイト数で返す"
    ],
    "ImagickgetImageTicksPerSecond": [
        "Imagick::getImageTicksPerSecond",
        "imagick.getimagetickspersecond.php",
        "画像の ticks-per-second を取得する"
    ],
    "ImagickgetImageTotalInkDensity": [
        "Imagick::getImageTotalInkDensity",
        "imagick.getimagetotalinkdensity.php",
        "画像の総インク密度を取得する"
    ],
    "ImagickgetImageType": [
        "Imagick::getImageType",
        "imagick.getimagetype.php",
        "画像の型を取得する"
    ],
    "ImagickgetImageUnits": [
        "Imagick::getImageUnits",
        "imagick.getimageunits.php",
        "画像の解像度の単位を取得する"
    ],
    "ImagickgetImageVirtualPixelMethod": [
        "Imagick::getImageVirtualPixelMethod",
        "imagick.getimagevirtualpixelmethod.php",
        "仮想ピクセルメソッドを取得する"
    ],
    "ImagickgetImageWhitePoint": [
        "Imagick::getImageWhitePoint",
        "imagick.getimagewhitepoint.php",
        "色度が白い点を返す"
    ],
    "ImagickgetImageWidth": [
        "Imagick::getImageWidth",
        "imagick.getimagewidth.php",
        "画像の幅を返す"
    ],
    "ImagickgetInterlaceScheme": [
        "Imagick::getInterlaceScheme",
        "imagick.getinterlacescheme.php",
        "オブジェクトのインターレース方式を取得する"
    ],
    "ImagickgetIteratorIndex": [
        "Imagick::getIteratorIndex",
        "imagick.getiteratorindex.php",
        "現在アクティブな画像のインデックスを取得する"
    ],
    "ImagickgetNumberImages": [
        "Imagick::getNumberImages",
        "imagick.getnumberimages.php",
        "オブジェクト内の画像の数を返す"
    ],
    "ImagickgetOption": [
        "Imagick::getOption",
        "imagick.getoption.php",
        "指定したキーに対応する値を返す"
    ],
    "ImagickgetPackageName": [
        "Imagick::getPackageName",
        "imagick.getpackagename.php",
        "ImageMagick パッケージ名を返す"
    ],
    "ImagickgetPage": [
        "Imagick::getPage",
        "imagick.getpage.php",
        "ページのジオメトリを返す"
    ],
    "ImagickgetPixelIterator": [
        "Imagick::getPixelIterator",
        "imagick.getpixeliterator.php",
        "MagickPixelIterator を返す"
    ],
    "ImagickgetPixelRegionIterator": [
        "Imagick::getPixelRegionIterator",
        "imagick.getpixelregioniterator.php",
        "画像セクションの ImagickPixelIterator を取得する"
    ],
    "ImagickgetPointSize": [
        "Imagick::getPointSize",
        "imagick.getpointsize.php",
        "ポイントサイズを取得する"
    ],
    "ImagickgetQuantum": [
        "Imagick::getQuantum",
        "imagick.getquantum.php",
        "Description"
    ],
    "ImagickgetQuantumDepth": [
        "Imagick::getQuantumDepth",
        "imagick.getquantumdepth.php",
        "quantum depth を取得する"
    ],
    "ImagickgetQuantumRange": [
        "Imagick::getQuantumRange",
        "imagick.getquantumrange.php",
        "Imagick quantum range を返す"
    ],
    "ImagickgetRegistry": [
        "Imagick::getRegistry",
        "imagick.getregistry.php",
        "Description"
    ],
    "ImagickgetReleaseDate": [
        "Imagick::getReleaseDate",
        "imagick.getreleasedate.php",
        "ImageMagick のリリース日を返す"
    ],
    "ImagickgetResource": [
        "Imagick::getResource",
        "imagick.getresource.php",
        "指定したリソースのメモリ使用状況を返す"
    ],
    "ImagickgetResourceLimit": [
        "Imagick::getResourceLimit",
        "imagick.getresourcelimit.php",
        "指定したリソースの制限を返す"
    ],
    "ImagickgetSamplingFactors": [
        "Imagick::getSamplingFactors",
        "imagick.getsamplingfactors.php",
        "水平方向および垂直方向のサンプリング係数を取得する"
    ],
    "ImagickgetSize": [
        "Imagick::getSize",
        "imagick.getsize.php",
        "Returns the size associated with the Imagick object"
    ],
    "ImagickgetSizeOffset": [
        "Imagick::getSizeOffset",
        "imagick.getsizeoffset.php",
        "サイズのオフセットを返す"
    ],
    "ImagickgetVersion": [
        "Imagick::getVersion",
        "imagick.getversion.php",
        "ImageMagick API のバージョンを返す"
    ],
    "ImagickhaldClutImage": [
        "Imagick::haldClutImage",
        "imagick.haldclutimage.php",
        "画像内の色を置換する"
    ],
    "ImagickhasNextImage": [
        "Imagick::hasNextImage",
        "imagick.hasnextimage.php",
        "オブジェクトが次の画像を保持しているかどうかを調べる"
    ],
    "ImagickhasPreviousImage": [
        "Imagick::hasPreviousImage",
        "imagick.haspreviousimage.php",
        "オブジェクトが前の画像を保持しているかどうかを調べる"
    ],
    "ImagickidentifyFormat": [
        "Imagick::identifyFormat",
        "imagick.identifyformat.php",
        "Description"
    ],
    "ImagickidentifyImage": [
        "Imagick::identifyImage",
        "imagick.identifyimage.php",
        "画像を識別し、属性を取得する"
    ],
    "ImagickimplodeImage": [
        "Imagick::implodeImage",
        "imagick.implodeimage.php",
        "新しい画像をコピーとして作成する"
    ],
    "ImagickimportImagePixels": [
        "Imagick::importImagePixels",
        "imagick.importimagepixels.php",
        "画像のピクセルをインポートする"
    ],
    "ImagickinverseFourierTransformImage": [
        "Imagick::inverseFourierTransformImage",
        "imagick.inversefouriertransformimage.php",
        "Description"
    ],
    "ImagicklabelImage": [
        "Imagick::labelImage",
        "imagick.labelimage.php",
        "ラベルを画像に追加する"
    ],
    "ImagicklevelImage": [
        "Imagick::levelImage",
        "imagick.levelimage.php",
        "画像のレベルを調節する"
    ],
    "ImagicklinearStretchImage": [
        "Imagick::linearStretchImage",
        "imagick.linearstretchimage.php",
        "画像の輝度を引き伸ばして飽和させる"
    ],
    "ImagickliquidRescaleImage": [
        "Imagick::liquidRescaleImage",
        "imagick.liquidrescaleimage.php",
        "画像を動かす"
    ],
    "ImagicklistRegistry": [
        "Imagick::listRegistry",
        "imagick.listregistry.php",
        "Description"
    ],
    "ImagickmagnifyImage": [
        "Imagick::magnifyImage",
        "imagick.magnifyimage.php",
        "画像を 2 倍に比例拡大する"
    ],
    "ImagickmapImage": [
        "Imagick::mapImage",
        "imagick.mapimage.php",
        "画像の色を、参照画像の中の最も近い色に置き換える"
    ],
    "ImagickmatteFloodfillImage": [
        "Imagick::matteFloodfillImage",
        "imagick.mattefloodfillimage.php",
        "色の透明度を変更する"
    ],
    "ImagickmedianFilterImage": [
        "Imagick::medianFilterImage",
        "imagick.medianfilterimage.php",
        "デジタルフィルタを適用する"
    ],
    "ImagickmergeImageLayers": [
        "Imagick::mergeImageLayers",
        "imagick.mergeimagelayers.php",
        "画像のレイヤーをマージする"
    ],
    "ImagickminifyImage": [
        "Imagick::minifyImage",
        "imagick.minifyimage.php",
        "画像をその半分のサイズに比例縮小する"
    ],
    "ImagickmodulateImage": [
        "Imagick::modulateImage",
        "imagick.modulateimage.php",
        "明度、飽和度、色相を制御する"
    ],
    "ImagickmontageImage": [
        "Imagick::montageImage",
        "imagick.montageimage.php",
        "合成画像を作成する"
    ],
    "ImagickmorphImages": [
        "Imagick::morphImages",
        "imagick.morphimages.php",
        "複数の画像をモーフィングする"
    ],
    "Imagickmorphology": [
        "Imagick::morphology",
        "imagick.morphology.php",
        "Description"
    ],
    "ImagickmosaicImages": [
        "Imagick::mosaicImages",
        "imagick.mosaicimages.php",
        "画像からモザイクを作成する"
    ],
    "ImagickmotionBlurImage": [
        "Imagick::motionBlurImage",
        "imagick.motionblurimage.php",
        "モーションブラーをシミュレートする"
    ],
    "ImagicknegateImage": [
        "Imagick::negateImage",
        "imagick.negateimage.php",
        "画像の色を打ち消す"
    ],
    "ImagicknewImage": [
        "Imagick::newImage",
        "imagick.newimage.php",
        "新しい画像を作成する"
    ],
    "ImagicknewPseudoImage": [
        "Imagick::newPseudoImage",
        "imagick.newpseudoimage.php",
        "新しい画像を作成する"
    ],
    "ImagicknextImage": [
        "Imagick::nextImage",
        "imagick.nextimage.php",
        "次の画像に移動する"
    ],
    "ImagicknormalizeImage": [
        "Imagick::normalizeImage",
        "imagick.normalizeimage.php",
        "カラー画像のコントラストを強調する"
    ],
    "ImagickoilPaintImage": [
        "Imagick::oilPaintImage",
        "imagick.oilpaintimage.php",
        "油絵をシミュレートする"
    ],
    "ImagickopaquePaintImage": [
        "Imagick::opaquePaintImage",
        "imagick.opaquepaintimage.php",
        "対象にマッチする任意のピクセルの色を変更する"
    ],
    "ImagickoptimizeImageLayers": [
        "Imagick::optimizeImageLayers",
        "imagick.optimizeimagelayers.php",
        "画像の繰り返し部分を削除して最適化する"
    ],
    "ImagickorderedPosterizeImage": [
        "Imagick::orderedPosterizeImage",
        "imagick.orderedposterizeimage.php",
        "配列ディザリングを行う"
    ],
    "ImagickpaintFloodfillImage": [
        "Imagick::paintFloodfillImage",
        "imagick.paintfloodfillimage.php",
        "色にマッチするピクセルを変更する"
    ],
    "ImagickpaintOpaqueImage": [
        "Imagick::paintOpaqueImage",
        "imagick.paintopaqueimage.php",
        "色にマッチするピクセルを変更する"
    ],
    "ImagickpaintTransparentImage": [
        "Imagick::paintTransparentImage",
        "imagick.painttransparentimage.php",
        "色にマッチするピクセルを塗りつぶし色に変更する"
    ],
    "ImagickpingImage": [
        "Imagick::pingImage",
        "imagick.pingimage.php",
        "画像の基本属性を取得する"
    ],
    "ImagickpingImageBlob": [
        "Imagick::pingImageBlob",
        "imagick.pingimageblob.php",
        "手早く属性を取得する"
    ],
    "ImagickpingImageFile": [
        "Imagick::pingImageFile",
        "imagick.pingimagefile.php",
        "画像の基本属性を手軽に取得する"
    ],
    "ImagickpolaroidImage": [
        "Imagick::polaroidImage",
        "imagick.polaroidimage.php",
        "ポラロイド写真をシミュレートする"
    ],
    "ImagickposterizeImage": [
        "Imagick::posterizeImage",
        "imagick.posterizeimage.php",
        "指定した色数まで画像を減色する"
    ],
    "ImagickpreviewImages": [
        "Imagick::previewImages",
        "imagick.previewimages.php",
        "画像処理用の適切なパラメータを手早く取得する"
    ],
    "ImagickpreviousImage": [
        "Imagick::previousImage",
        "imagick.previousimage.php",
        "オブジェクト内の前の画像に移動する"
    ],
    "ImagickprofileImage": [
        "Imagick::profileImage",
        "imagick.profileimage.php",
        "画像のプロファイルを追加あるいは削除する"
    ],
    "ImagickquantizeImage": [
        "Imagick::quantizeImage",
        "imagick.quantizeimage.php",
        "参照画像内の色を解析する"
    ],
    "ImagickquantizeImages": [
        "Imagick::quantizeImages",
        "imagick.quantizeimages.php",
        "画像シーケンス内の色を解析する"
    ],
    "ImagickqueryFontMetrics": [
        "Imagick::queryFontMetrics",
        "imagick.queryfontmetrics.php",
        "フォントメトリクスを表す配列を返す"
    ],
    "ImagickqueryFonts": [
        "Imagick::queryFonts",
        "imagick.queryfonts.php",
        "設定したフォントを返す"
    ],
    "ImagickqueryFormats": [
        "Imagick::queryFormats",
        "imagick.queryformats.php",
        "Imagick がサポートするフォーマットを返す"
    ],
    "ImagickradialBlurImage": [
        "Imagick::radialBlurImage",
        "imagick.radialblurimage.php",
        "画像にラジアルブラーを施す"
    ],
    "ImagickraiseImage": [
        "Imagick::raiseImage",
        "imagick.raiseimage.php",
        "三次元のボタン風の効果をシミュレートする"
    ],
    "ImagickrandomThresholdImage": [
        "Imagick::randomThresholdImage",
        "imagick.randomthresholdimage.php",
        "コントラストの高い 2 色の画像を作成する"
    ],
    "ImagickreadImage": [
        "Imagick::readImage",
        "imagick.readimage.php",
        "ファイルから画像を読み込む"
    ],
    "ImagickreadImageBlob": [
        "Imagick::readImageBlob",
        "imagick.readimageblob.php",
        "バイナリ文字列から画像を読み込む"
    ],
    "ImagickreadImageFile": [
        "Imagick::readImageFile",
        "imagick.readimagefile.php",
        "オープンしているファイルハンドルから画像を読み込む"
    ],
    "Imagickreadimages": [
        "Imagick::readimages",
        "imagick.readimages.php",
        "Description"
    ],
    "ImagickrecolorImage": [
        "Imagick::recolorImage",
        "imagick.recolorimage.php",
        "画像の色を変更する"
    ],
    "ImagickreduceNoiseImage": [
        "Imagick::reduceNoiseImage",
        "imagick.reducenoiseimage.php",
        "画像の輪郭をなめらかにする"
    ],
    "ImagickremapImage": [
        "Imagick::remapImage",
        "imagick.remapimage.php",
        "画像の色を再配置する"
    ],
    "ImagickremoveImage": [
        "Imagick::removeImage",
        "imagick.removeimage.php",
        "画像リストから画像を削除する"
    ],
    "ImagickremoveImageProfile": [
        "Imagick::removeImageProfile",
        "imagick.removeimageprofile.php",
        "指定した名前の画像プロファイルを削除してそれを返す"
    ],
    "Imagickrender": [
        "Imagick::render",
        "imagick.render.php",
        "それまでのすべての描画コマンドをレンダリングする"
    ],
    "ImagickresampleImage": [
        "Imagick::resampleImage",
        "imagick.resampleimage.php",
        "画像を指定した解像度にリサンプリングする"
    ],
    "ImagickresetImagePage": [
        "Imagick::resetImagePage",
        "imagick.resetimagepage.php",
        "画像のページをリセットする"
    ],
    "ImagickresizeImage": [
        "Imagick::resizeImage",
        "imagick.resizeimage.php",
        "画像のサイズを変更する"
    ],
    "ImagickrollImage": [
        "Imagick::rollImage",
        "imagick.rollimage.php",
        "画像を補正する"
    ],
    "ImagickrotateImage": [
        "Imagick::rotateImage",
        "imagick.rotateimage.php",
        "画像を回転する"
    ],
    "ImagickrotationalBlurImage": [
        "Imagick::rotationalBlurImage",
        "imagick.rotationalblurimage.php",
        "Description"
    ],
    "ImagickroundCorners": [
        "Imagick::roundCorners",
        "imagick.roundcorners.php",
        "画像の角を丸める"
    ],
    "ImagicksampleImage": [
        "Imagick::sampleImage",
        "imagick.sampleimage.php",
        "ピクセルのサンプリングによって画像の倍率を変更する"
    ],
    "ImagickscaleImage": [
        "Imagick::scaleImage",
        "imagick.scaleimage.php",
        "画像のサイズを変更する"
    ],
    "ImagicksegmentImage": [
        "Imagick::segmentImage",
        "imagick.segmentimage.php",
        "画像を分割する"
    ],
    "ImagickselectiveBlurImage": [
        "Imagick::selectiveBlurImage",
        "imagick.selectiveblurimage.php",
        "Description"
    ],
    "ImagickseparateImageChannel": [
        "Imagick::separateImageChannel",
        "imagick.separateimagechannel.php",
        "画像からチャネルを分離する"
    ],
    "ImagicksepiaToneImage": [
        "Imagick::sepiaToneImage",
        "imagick.sepiatoneimage.php",
        "画像をセピア調にする"
    ],
    "ImagicksetBackgroundColor": [
        "Imagick::setBackgroundColor",
        "imagick.setbackgroundcolor.php",
        "オブジェクトのデフォルト背景色を設定する"
    ],
    "ImagicksetColorspace": [
        "Imagick::setColorspace",
        "imagick.setcolorspace.php",
        "色空間を設定する"
    ],
    "ImagicksetCompression": [
        "Imagick::setCompression",
        "imagick.setcompression.php",
        "オブジェクトのデフォルトの圧縮方式を設定する"
    ],
    "ImagicksetCompressionQuality": [
        "Imagick::setCompressionQuality",
        "imagick.setcompressionquality.php",
        "オブジェクトのデフォルトの圧縮品質を設定する"
    ],
    "ImagicksetFilename": [
        "Imagick::setFilename",
        "imagick.setfilename.php",
        "画像を読み書きする前にファイル名を設定する"
    ],
    "ImagicksetFirstIterator": [
        "Imagick::setFirstIterator",
        "imagick.setfirstiterator.php",
        "Imagick イテレータを最初の画像に設定する"
    ],
    "ImagicksetFont": [
        "Imagick::setFont",
        "imagick.setfont.php",
        "フォントを設定する"
    ],
    "ImagicksetFormat": [
        "Imagick::setFormat",
        "imagick.setformat.php",
        "Imagick オブジェクトのフォーマットを設定する"
    ],
    "ImagicksetGravity": [
        "Imagick::setGravity",
        "imagick.setgravity.php",
        "gravity を設定する"
    ],
    "ImagicksetImage": [
        "Imagick::setImage",
        "imagick.setimage.php",
        "オブジェクト内の画像を置き換える"
    ],
    "ImagicksetImageAlphaChannel": [
        "Imagick::setImageAlphaChannel",
        "imagick.setimagealphachannel.php",
        "画像のアルファチャネルを設定する"
    ],
    "ImagicksetImageArtifact": [
        "Imagick::setImageArtifact",
        "imagick.setimageartifact.php",
        "画像のアーチファクトを設定する"
    ],
    "ImagicksetImageAttribute": [
        "Imagick::setImageAttribute",
        "imagick.setimageattribute.php",
        "Description"
    ],
    "ImagicksetImageBackgroundColor": [
        "Imagick::setImageBackgroundColor",
        "imagick.setimagebackgroundcolor.php",
        "画像の背景色を設定する"
    ],
    "ImagicksetImageBias": [
        "Imagick::setImageBias",
        "imagick.setimagebias.php",
        "画像を折りたたむ任意のメソッドについて画像のバイアスを設定する"
    ],
    "ImagicksetImageBiasQuantum": [
        "Imagick::setImageBiasQuantum",
        "imagick.setimagebiasquantum.php",
        "Description"
    ],
    "ImagicksetImageBluePrimary": [
        "Imagick::setImageBluePrimary",
        "imagick.setimageblueprimary.php",
        "青が一番強い点を設定する"
    ],
    "ImagicksetImageBorderColor": [
        "Imagick::setImageBorderColor",
        "imagick.setimagebordercolor.php",
        "画像の前景色を設定する"
    ],
    "ImagicksetImageChannelDepth": [
        "Imagick::setImageChannelDepth",
        "imagick.setimagechanneldepth.php",
        "特定の画像チャネルの深度を設定する"
    ],
    "ImagicksetImageClipMask": [
        "Imagick::setImageClipMask",
        "imagick.setimageclipmask.php",
        "画像のクリップマスクを設定する"
    ],
    "ImagicksetImageColormapColor": [
        "Imagick::setImageColormapColor",
        "imagick.setimagecolormapcolor.php",
        "指定した色マップインデックスの色を設定する"
    ],
    "ImagicksetImageColorspace": [
        "Imagick::setImageColorspace",
        "imagick.setimagecolorspace.php",
        "画像の色空間を設定する"
    ],
    "ImagicksetImageCompose": [
        "Imagick::setImageCompose",
        "imagick.setimagecompose.php",
        "画像の合成演算子を設定する"
    ],
    "ImagicksetImageCompression": [
        "Imagick::setImageCompression",
        "imagick.setimagecompression.php",
        "画像の圧縮を設定する"
    ],
    "ImagicksetImageCompressionQuality": [
        "Imagick::setImageCompressionQuality",
        "imagick.setimagecompressionquality.php",
        "画像の圧縮品質を設定する"
    ],
    "ImagicksetImageDelay": [
        "Imagick::setImageDelay",
        "imagick.setimagedelay.php",
        "画像の遅延を設定する"
    ],
    "ImagicksetImageDepth": [
        "Imagick::setImageDepth",
        "imagick.setimagedepth.php",
        "画像の深度を設定する"
    ],
    "ImagicksetImageDispose": [
        "Imagick::setImageDispose",
        "imagick.setimagedispose.php",
        "画像の配置方法を設定する"
    ],
    "ImagicksetImageExtent": [
        "Imagick::setImageExtent",
        "imagick.setimageextent.php",
        "画像のサイズを設定する"
    ],
    "ImagicksetImageFilename": [
        "Imagick::setImageFilename",
        "imagick.setimagefilename.php",
        "特定の画像のファイル名を設定する"
    ],
    "ImagicksetImageFormat": [
        "Imagick::setImageFormat",
        "imagick.setimageformat.php",
        "特定の画像のフォーマットを設定する"
    ],
    "ImagicksetImageGamma": [
        "Imagick::setImageGamma",
        "imagick.setimagegamma.php",
        "画像のガンマを設定する"
    ],
    "ImagicksetImageGravity": [
        "Imagick::setImageGravity",
        "imagick.setimagegravity.php",
        "画像の gravity を設定する"
    ],
    "ImagicksetImageGreenPrimary": [
        "Imagick::setImageGreenPrimary",
        "imagick.setimagegreenprimary.php",
        "緑が一番強い点を設定する"
    ],
    "ImagicksetImageIndex": [
        "Imagick::setImageIndex",
        "imagick.setimageindex.php",
        "イテレータの位置を設定する"
    ],
    "ImagicksetImageInterlaceScheme": [
        "Imagick::setImageInterlaceScheme",
        "imagick.setimageinterlacescheme.php",
        "画像のインターレース手法を設定する"
    ],
    "ImagicksetImageInterpolateMethod": [
        "Imagick::setImageInterpolateMethod",
        "imagick.setimageinterpolatemethod.php",
        "画像のピクセル補間方式を設定する"
    ],
    "ImagicksetImageIterations": [
        "Imagick::setImageIterations",
        "imagick.setimageiterations.php",
        "画像の反復を設定する"
    ],
    "ImagicksetImageMatte": [
        "Imagick::setImageMatte",
        "imagick.setimagematte.php",
        "画像のマットチャネルを設定する"
    ],
    "ImagicksetImageMatteColor": [
        "Imagick::setImageMatteColor",
        "imagick.setimagemattecolor.php",
        "画像のマット色を設定する"
    ],
    "ImagicksetImageOpacity": [
        "Imagick::setImageOpacity",
        "imagick.setimageopacity.php",
        "画像の不透明度を設定する"
    ],
    "ImagicksetImageOrientation": [
        "Imagick::setImageOrientation",
        "imagick.setimageorientation.php",
        "画像の方向を設定する"
    ],
    "ImagicksetImagePage": [
        "Imagick::setImagePage",
        "imagick.setimagepage.php",
        "画像のページのジオメトリを設定する"
    ],
    "ImagicksetImageProfile": [
        "Imagick::setImageProfile",
        "imagick.setimageprofile.php",
        "指定した名前の画像プロファイルを Imagick オブジェクトに追加する"
    ],
    "ImagicksetImageProperty": [
        "Imagick::setImageProperty",
        "imagick.setimageproperty.php",
        "画像のプロパティを設定する"
    ],
    "ImagicksetImageRedPrimary": [
        "Imagick::setImageRedPrimary",
        "imagick.setimageredprimary.php",
        "赤が一番強い点を設定する"
    ],
    "ImagicksetImageRenderingIntent": [
        "Imagick::setImageRenderingIntent",
        "imagick.setimagerenderingintent.php",
        "画像のレンダリング方向を設定する"
    ],
    "ImagicksetImageResolution": [
        "Imagick::setImageResolution",
        "imagick.setimageresolution.php",
        "画像の解像度を設定する"
    ],
    "ImagicksetImageScene": [
        "Imagick::setImageScene",
        "imagick.setimagescene.php",
        "画像のシーンを設定する"
    ],
    "ImagicksetImageTicksPerSecond": [
        "Imagick::setImageTicksPerSecond",
        "imagick.setimagetickspersecond.php",
        "画像の ticks-per-second を設定する"
    ],
    "ImagicksetImageType": [
        "Imagick::setImageType",
        "imagick.setimagetype.php",
        "画像の型を設定する"
    ],
    "ImagicksetImageUnits": [
        "Imagick::setImageUnits",
        "imagick.setimageunits.php",
        "画像の解像度の単位を設定する"
    ],
    "ImagicksetImageVirtualPixelMethod": [
        "Imagick::setImageVirtualPixelMethod",
        "imagick.setimagevirtualpixelmethod.php",
        "画像の仮想ピクセルメソッドを設定する"
    ],
    "ImagicksetImageWhitePoint": [
        "Imagick::setImageWhitePoint",
        "imagick.setimagewhitepoint.php",
        "画像の色度が白い点を設定する"
    ],
    "ImagicksetInterlaceScheme": [
        "Imagick::setInterlaceScheme",
        "imagick.setinterlacescheme.php",
        "画像の圧縮を設定する"
    ],
    "ImagicksetIteratorIndex": [
        "Imagick::setIteratorIndex",
        "imagick.setiteratorindex.php",
        "イテレータの位置を設定する"
    ],
    "ImagicksetLastIterator": [
        "Imagick::setLastIterator",
        "imagick.setlastiterator.php",
        "Imagick イテレータを最後の画像に設定する"
    ],
    "ImagicksetOption": [
        "Imagick::setOption",
        "imagick.setoption.php",
        "オプションを設定する"
    ],
    "ImagicksetPage": [
        "Imagick::setPage",
        "imagick.setpage.php",
        "Imagick オブジェクトのページジオメトリを設定する"
    ],
    "ImagicksetPointSize": [
        "Imagick::setPointSize",
        "imagick.setpointsize.php",
        "ポイントサイズを設定する"
    ],
    "ImagicksetProgressMonitor": [
        "Imagick::setProgressMonitor",
        "imagick.setprogressmonitor.php",
        "Description"
    ],
    "ImagicksetRegistry": [
        "Imagick::setRegistry",
        "imagick.setregistry.php",
        "Description"
    ],
    "ImagicksetResolution": [
        "Imagick::setResolution",
        "imagick.setresolution.php",
        "画像の解像度を設定する"
    ],
    "ImagicksetResourceLimit": [
        "Imagick::setResourceLimit",
        "imagick.setresourcelimit.php",
        "特定のリソースの制限を設定する"
    ],
    "ImagicksetSamplingFactors": [
        "Imagick::setSamplingFactors",
        "imagick.setsamplingfactors.php",
        "画像のサンプリング係数を設定する"
    ],
    "ImagicksetSize": [
        "Imagick::setSize",
        "imagick.setsize.php",
        "Imagick オブジェクトのサイズを設定する"
    ],
    "ImagicksetSizeOffset": [
        "Imagick::setSizeOffset",
        "imagick.setsizeoffset.php",
        "Imagick オブジェクトのサイズのオフセットを設定する"
    ],
    "ImagicksetType": [
        "Imagick::setType",
        "imagick.settype.php",
        "画像タイプ属性を設定する"
    ],
    "ImagickshadeImage": [
        "Imagick::shadeImage",
        "imagick.shadeimage.php",
        "3D 効果を作成する"
    ],
    "ImagickshadowImage": [
        "Imagick::shadowImage",
        "imagick.shadowimage.php",
        "画像の影をシミュレートする"
    ],
    "ImagicksharpenImage": [
        "Imagick::sharpenImage",
        "imagick.sharpenimage.php",
        "画像をシャープにする"
    ],
    "ImagickshaveImage": [
        "Imagick::shaveImage",
        "imagick.shaveimage.php",
        "画像の輪郭からピクセルを刈り取る"
    ],
    "ImagickshearImage": [
        "Imagick::shearImage",
        "imagick.shearimage.php",
        "平行四辺形を作成する"
    ],
    "ImagicksigmoidalContrastImage": [
        "Imagick::sigmoidalContrastImage",
        "imagick.sigmoidalcontrastimage.php",
        "画像のコントラストを調整する"
    ],
    "ImagicksketchImage": [
        "Imagick::sketchImage",
        "imagick.sketchimage.php",
        "鉛筆画をシミュレートする"
    ],
    "ImagicksmushImages": [
        "Imagick::smushImages",
        "imagick.smushimages.php",
        "Description"
    ],
    "ImagicksolarizeImage": [
        "Imagick::solarizeImage",
        "imagick.solarizeimage.php",
        "画像にソラリゼーション効果を適用する"
    ],
    "ImagicksparseColorImage": [
        "Imagick::sparseColorImage",
        "imagick.sparsecolorimage.php",
        "色を補間する"
    ],
    "ImagickspliceImage": [
        "Imagick::spliceImage",
        "imagick.spliceimage.php",
        "無地の画像を作成する"
    ],
    "ImagickspreadImage": [
        "Imagick::spreadImage",
        "imagick.spreadimage.php",
        "ブロック内の各ピクセルをランダムに移動する"
    ],
    "ImagickstatisticImage": [
        "Imagick::statisticImage",
        "imagick.statisticimage.php",
        "Description"
    ],
    "ImagicksteganoImage": [
        "Imagick::steganoImage",
        "imagick.steganoimage.php",
        "デジタル透かしを画像に埋め込む"
    ],
    "ImagickstereoImage": [
        "Imagick::stereoImage",
        "imagick.stereoimage.php",
        "ふたつの画像を合成する"
    ],
    "ImagickstripImage": [
        "Imagick::stripImage",
        "imagick.stripimage.php",
        "画像からすべてのプロパティやコメントを除去する"
    ],
    "ImagicksubImageMatch": [
        "Imagick::subImageMatch",
        "imagick.subimagematch.php",
        "Description"
    ],
    "ImagickswirlImage": [
        "Imagick::swirlImage",
        "imagick.swirlimage.php",
        "画像の中心から、ピクセルを渦巻状にする"
    ],
    "ImagicktextureImage": [
        "Imagick::textureImage",
        "imagick.textureimage.php",
        "テクスチャ画像をタイル状に並べる"
    ],
    "ImagickthresholdImage": [
        "Imagick::thresholdImage",
        "imagick.thresholdimage.php",
        "閾値にもとづいて個々のピクセルの値を変更する"
    ],
    "ImagickthumbnailImage": [
        "Imagick::thumbnailImage",
        "imagick.thumbnailimage.php",
        "画像のサイズを変更する"
    ],
    "ImagicktintImage": [
        "Imagick::tintImage",
        "imagick.tintimage.php",
        "色ベクトルを画像の各ピクセルに適用する"
    ],
    "ImagicktransformImage": [
        "Imagick::transformImage",
        "imagick.transformimage.php",
        "切り取るサイズと画像のジオメトリを設定する便利なメソッド"
    ],
    "ImagicktransformImageColorspace": [
        "Imagick::transformImageColorspace",
        "imagick.transformimagecolorspace.php",
        "Transforms an image to a new colorspace"
    ],
    "ImagicktransparentPaintImage": [
        "Imagick::transparentPaintImage",
        "imagick.transparentpaintimage.php",
        "ピクセルを透過させる"
    ],
    "ImagicktransposeImage": [
        "Imagick::transposeImage",
        "imagick.transposeimage.php",
        "垂直方向に反転させた画像を作成する"
    ],
    "ImagicktransverseImage": [
        "Imagick::transverseImage",
        "imagick.transverseimage.php",
        "水平方向に反転させた画像を作成する"
    ],
    "ImagicktrimImage": [
        "Imagick::trimImage",
        "imagick.trimimage.php",
        "画像の輪郭を削除する"
    ],
    "ImagickuniqueImageColors": [
        "Imagick::uniqueImageColors",
        "imagick.uniqueimagecolors.php",
        "ある 1 色以外のすべての色のピクセルを削除する"
    ],
    "ImagickunsharpMaskImage": [
        "Imagick::unsharpMaskImage",
        "imagick.unsharpmaskimage.php",
        "画像をシャープにする"
    ],
    "Imagickvalid": [
        "Imagick::valid",
        "imagick.valid.php",
        "現在のアイテムが有効かどうかを調べる"
    ],
    "ImagickvignetteImage": [
        "Imagick::vignetteImage",
        "imagick.vignetteimage.php",
        "ビネットフィルタを画像に追加する"
    ],
    "ImagickwaveImage": [
        "Imagick::waveImage",
        "imagick.waveimage.php",
        "ウェーブフィルタを画像に適用する"
    ],
    "ImagickwhiteThresholdImage": [
        "Imagick::whiteThresholdImage",
        "imagick.whitethresholdimage.php",
        "閾値に満たないすべてのピクセルを白にする"
    ],
    "ImagickwriteImage": [
        "Imagick::writeImage",
        "imagick.writeimage.php",
        "指定した名前で画像を書き込む"
    ],
    "ImagickwriteImageFile": [
        "Imagick::writeImageFile",
        "imagick.writeimagefile.php",
        "画像をファイルハンドルに書き出す"
    ],
    "ImagickwriteImages": [
        "Imagick::writeImages",
        "imagick.writeimages.php",
        "画像あるいは画像シーケンスを書き込む"
    ],
    "ImagickwriteImagesFile": [
        "Imagick::writeImagesFile",
        "imagick.writeimagesfile.php",
        "フレームをファイルハンドルに書き出す"
    ],
    "Imagickconstruct": [
        "Imagick::__construct",
        "imagick.construct.php",
        "Imagick のコンストラクタ"
    ],
    "ImagicktoString": [
        "Imagick::__toString",
        "imagick.tostring.php",
        "Returns the image as a string"
    ],
    "ImagickDrawaffine": [
        "ImagickDraw::affine",
        "imagickdraw.affine.php",
        "現在のアフィン変換行列を設定する"
    ],
    "ImagickDrawannotation": [
        "ImagickDraw::annotation",
        "imagickdraw.annotation.php",
        "画像上にテキストを描画する"
    ],
    "ImagickDrawarc": [
        "ImagickDraw::arc",
        "imagickdraw.arc.php",
        "円弧を描画する"
    ],
    "ImagickDrawbezier": [
        "ImagickDraw::bezier",
        "imagickdraw.bezier.php",
        "ベジエ曲線を描画する"
    ],
    "ImagickDrawcircle": [
        "ImagickDraw::circle",
        "imagickdraw.circle.php",
        "円を描画する"
    ],
    "ImagickDrawclear": [
        "ImagickDraw::clear",
        "imagickdraw.clear.php",
        "ImagickDraw をクリアする"
    ],
    "ImagickDrawclone": [
        "ImagickDraw::clone",
        "imagickdraw.clone.php",
        "指定した ImagickDraw オブジェクトの完全なコピーを作成する"
    ],
    "ImagickDrawcolor": [
        "ImagickDraw::color",
        "imagickdraw.color.php",
        "画像上に色を描画する"
    ],
    "ImagickDrawcomment": [
        "ImagickDraw::comment",
        "imagickdraw.comment.php",
        "コメントを追加する"
    ],
    "ImagickDrawcomposite": [
        "ImagickDraw::composite",
        "imagickdraw.composite.php",
        "現在の画像上に別の画像を合成する"
    ],
    "ImagickDrawdestroy": [
        "ImagickDraw::destroy",
        "imagickdraw.destroy.php",
        "関連付けられたすべてのリソースを開放する"
    ],
    "ImagickDrawellipse": [
        "ImagickDraw::ellipse",
        "imagickdraw.ellipse.php",
        "画像上に楕円を描画する"
    ],
    "ImagickDrawgetClipPath": [
        "ImagickDraw::getClipPath",
        "imagickdraw.getclippath.php",
        "現在のクリッピングパスの ID を取得する"
    ],
    "ImagickDrawgetClipRule": [
        "ImagickDraw::getClipRule",
        "imagickdraw.getcliprule.php",
        "現在の多角形塗りつぶしルールを返す"
    ],
    "ImagickDrawgetClipUnits": [
        "ImagickDraw::getClipUnits",
        "imagickdraw.getclipunits.php",
        "クリップパスの単位の解釈を返す"
    ],
    "ImagickDrawgetFillColor": [
        "ImagickDraw::getFillColor",
        "imagickdraw.getfillcolor.php",
        "塗りつぶし色を返す"
    ],
    "ImagickDrawgetFillOpacity": [
        "ImagickDraw::getFillOpacity",
        "imagickdraw.getfillopacity.php",
        "描画時の透過度を返す"
    ],
    "ImagickDrawgetFillRule": [
        "ImagickDraw::getFillRule",
        "imagickdraw.getfillrule.php",
        "塗りつぶしルールを返す"
    ],
    "ImagickDrawgetFont": [
        "ImagickDraw::getFont",
        "imagickdraw.getfont.php",
        "フォントを返す"
    ],
    "ImagickDrawgetFontFamily": [
        "ImagickDraw::getFontFamily",
        "imagickdraw.getfontfamily.php",
        "フォントファミリーを返す"
    ],
    "ImagickDrawgetFontSize": [
        "ImagickDraw::getFontSize",
        "imagickdraw.getfontsize.php",
        "フォントのポイント数を返す"
    ],
    "ImagickDrawgetFontStretch": [
        "ImagickDraw::getFontStretch",
        "imagickdraw.getfontstretch.php",
        "Description"
    ],
    "ImagickDrawgetFontStyle": [
        "ImagickDraw::getFontStyle",
        "imagickdraw.getfontstyle.php",
        "フォントのスタイルを返す"
    ],
    "ImagickDrawgetFontWeight": [
        "ImagickDraw::getFontWeight",
        "imagickdraw.getfontweight.php",
        "フォントの重さを返す"
    ],
    "ImagickDrawgetGravity": [
        "ImagickDraw::getGravity",
        "imagickdraw.getgravity.php",
        "テキストの配置時の gravity を返す"
    ],
    "ImagickDrawgetStrokeAntialias": [
        "ImagickDraw::getStrokeAntialias",
        "imagickdraw.getstrokeantialias.php",
        "現在の縁取りのアンチエイリアス設定を返す"
    ],
    "ImagickDrawgetStrokeColor": [
        "ImagickDraw::getStrokeColor",
        "imagickdraw.getstrokecolor.php",
        "オブジェクトの縁取りに使用する色を返す"
    ],
    "ImagickDrawgetStrokeDashArray": [
        "ImagickDraw::getStrokeDashArray",
        "imagickdraw.getstrokedasharray.php",
        "パスの描画に使用する破線のパターンを表す配列を返す"
    ],
    "ImagickDrawgetStrokeDashOffset": [
        "ImagickDraw::getStrokeDashOffset",
        "imagickdraw.getstrokedashoffset.php",
        "破線パターンにおける破線の開始オフセットを返す"
    ],
    "ImagickDrawgetStrokeLineCap": [
        "ImagickDraw::getStrokeLineCap",
        "imagickdraw.getstrokelinecap.php",
        "開かれたサブパスを描画する際に使用する端点の形状を返す"
    ],
    "ImagickDrawgetStrokeLineJoin": [
        "ImagickDraw::getStrokeLineJoin",
        "imagickdraw.getstrokelinejoin.php",
        "パスの角を描画する際に使用する形状を返す"
    ],
    "ImagickDrawgetStrokeMiterLimit": [
        "ImagickDraw::getStrokeMiterLimit",
        "imagickdraw.getstrokemiterlimit.php",
        "マイターリミットを返す"
    ],
    "ImagickDrawgetStrokeOpacity": [
        "ImagickDraw::getStrokeOpacity",
        "imagickdraw.getstrokeopacity.php",
        "オブジェクトの枠線の透明度を返す"
    ],
    "ImagickDrawgetStrokeWidth": [
        "ImagickDraw::getStrokeWidth",
        "imagickdraw.getstrokewidth.php",
        "オブジェクトの枠線の描画に使用する線の幅を返す"
    ],
    "ImagickDrawgetTextAlignment": [
        "ImagickDraw::getTextAlignment",
        "imagickdraw.gettextalignment.php",
        "テキストの配置を返す"
    ],
    "ImagickDrawgetTextAntialias": [
        "ImagickDraw::getTextAntialias",
        "imagickdraw.gettextantialias.php",
        "現在のテキストのアンチエイリアス設定を返す"
    ],
    "ImagickDrawgetTextDecoration": [
        "ImagickDraw::getTextDecoration",
        "imagickdraw.gettextdecoration.php",
        "テキストの装飾を返す"
    ],
    "ImagickDrawgetTextEncoding": [
        "ImagickDraw::getTextEncoding",
        "imagickdraw.gettextencoding.php",
        "テキストによる注記の際に使用するコードセットを返す"
    ],
    "ImagickDrawgetTextInterlineSpacing": [
        "ImagickDraw::getTextInterlineSpacing",
        "imagickdraw.gettextinterlinespacing.php",
        "Description"
    ],
    "ImagickDrawgetTextInterwordSpacing": [
        "ImagickDraw::getTextInterwordSpacing",
        "imagickdraw.gettextinterwordspacing.php",
        "Description"
    ],
    "ImagickDrawgetTextKerning": [
        "ImagickDraw::getTextKerning",
        "imagickdraw.gettextkerning.php",
        "Description"
    ],
    "ImagickDrawgetTextUnderColor": [
        "ImagickDraw::getTextUnderColor",
        "imagickdraw.gettextundercolor.php",
        "テキストの背景色を返す"
    ],
    "ImagickDrawgetVectorGraphics": [
        "ImagickDraw::getVectorGraphics",
        "imagickdraw.getvectorgraphics.php",
        "ベクターグラフィックを含む文字列を返す"
    ],
    "ImagickDrawline": [
        "ImagickDraw::line",
        "imagickdraw.line.php",
        "直線を描画する"
    ],
    "ImagickDrawmatte": [
        "ImagickDraw::matte",
        "imagickdraw.matte.php",
        "画像の opacity チャネル上に描画する"
    ],
    "ImagickDrawpathClose": [
        "ImagickDraw::pathClose",
        "imagickdraw.pathclose.php",
        "パス要素を現在のパスに追加する"
    ],
    "ImagickDrawpathCurveToAbsolute": [
        "ImagickDraw::pathCurveToAbsolute",
        "imagickdraw.pathcurvetoabsolute.php",
        "三次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToQuadraticBezierAbsolute": [
        "ImagickDraw::pathCurveToQuadraticBezierAbsolute",
        "imagickdraw.pathcurvetoquadraticbezierabsolute.php",
        "二次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToQuadraticBezierRelative": [
        "ImagickDraw::pathCurveToQuadraticBezierRelative",
        "imagickdraw.pathcurvetoquadraticbezierrelative.php",
        "二次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToQuadraticBezierSmoothAbsolute": [
        "ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute",
        "imagickdraw.pathcurvetoquadraticbeziersmoothabsolute.php",
        "二次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToQuadraticBezierSmoothRelative": [
        "ImagickDraw::pathCurveToQuadraticBezierSmoothRelative",
        "imagickdraw.pathcurvetoquadraticbeziersmoothrelative.php",
        "二次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToRelative": [
        "ImagickDraw::pathCurveToRelative",
        "imagickdraw.pathcurvetorelative.php",
        "三次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToSmoothAbsolute": [
        "ImagickDraw::pathCurveToSmoothAbsolute",
        "imagickdraw.pathcurvetosmoothabsolute.php",
        "三次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathCurveToSmoothRelative": [
        "ImagickDraw::pathCurveToSmoothRelative",
        "imagickdraw.pathcurvetosmoothrelative.php",
        "三次ベジエ曲線を描画する"
    ],
    "ImagickDrawpathEllipticArcAbsolute": [
        "ImagickDraw::pathEllipticArcAbsolute",
        "imagickdraw.pathellipticarcabsolute.php",
        "楕円弧を描画する"
    ],
    "ImagickDrawpathEllipticArcRelative": [
        "ImagickDraw::pathEllipticArcRelative",
        "imagickdraw.pathellipticarcrelative.php",
        "楕円弧を描画する"
    ],
    "ImagickDrawpathFinish": [
        "ImagickDraw::pathFinish",
        "imagickdraw.pathfinish.php",
        "現在のパスを終了する"
    ],
    "ImagickDrawpathLineToAbsolute": [
        "ImagickDraw::pathLineToAbsolute",
        "imagickdraw.pathlinetoabsolute.php",
        "直線パスを描画する"
    ],
    "ImagickDrawpathLineToHorizontalAbsolute": [
        "ImagickDraw::pathLineToHorizontalAbsolute",
        "imagickdraw.pathlinetohorizontalabsolute.php",
        "水平直線パスを描画する"
    ],
    "ImagickDrawpathLineToHorizontalRelative": [
        "ImagickDraw::pathLineToHorizontalRelative",
        "imagickdraw.pathlinetohorizontalrelative.php",
        "水平直線パスを描画する"
    ],
    "ImagickDrawpathLineToRelative": [
        "ImagickDraw::pathLineToRelative",
        "imagickdraw.pathlinetorelative.php",
        "直線パスを描画する"
    ],
    "ImagickDrawpathLineToVerticalAbsolute": [
        "ImagickDraw::pathLineToVerticalAbsolute",
        "imagickdraw.pathlinetoverticalabsolute.php",
        "垂直直線パスを描画する"
    ],
    "ImagickDrawpathLineToVerticalRelative": [
        "ImagickDraw::pathLineToVerticalRelative",
        "imagickdraw.pathlinetoverticalrelative.php",
        "垂直直線パスを描画する"
    ],
    "ImagickDrawpathMoveToAbsolute": [
        "ImagickDraw::pathMoveToAbsolute",
        "imagickdraw.pathmovetoabsolute.php",
        "新しいサブパスを開始する"
    ],
    "ImagickDrawpathMoveToRelative": [
        "ImagickDraw::pathMoveToRelative",
        "imagickdraw.pathmovetorelative.php",
        "新しいサブパスを開始する"
    ],
    "ImagickDrawpathStart": [
        "ImagickDraw::pathStart",
        "imagickdraw.pathstart.php",
        "パス描画リストの開始を宣言する"
    ],
    "ImagickDrawpoint": [
        "ImagickDraw::point",
        "imagickdraw.point.php",
        "点を描画する"
    ],
    "ImagickDrawpolygon": [
        "ImagickDraw::polygon",
        "imagickdraw.polygon.php",
        "多角形を描画する"
    ],
    "ImagickDrawpolyline": [
        "ImagickDraw::polyline",
        "imagickdraw.polyline.php",
        "線分群を描画する"
    ],
    "ImagickDrawpop": [
        "ImagickDraw::pop",
        "imagickdraw.pop.php",
        "スタック内の現在の ImagickDraw を破棄し、事前に push された ImagickDraw を返す"
    ],
    "ImagickDrawpopClipPath": [
        "ImagickDraw::popClipPath",
        "imagickdraw.popclippath.php",
        "クリップパスの定義を終了する"
    ],
    "ImagickDrawpopDefs": [
        "ImagickDraw::popDefs",
        "imagickdraw.popdefs.php",
        "定義リストを終了する"
    ],
    "ImagickDrawpopPattern": [
        "ImagickDraw::popPattern",
        "imagickdraw.poppattern.php",
        "パターン定義を終了する"
    ],
    "ImagickDrawpush": [
        "ImagickDraw::push",
        "imagickdraw.push.php",
        "現在の ImagickDraw をコピーしてスタックに格納する"
    ],
    "ImagickDrawpushClipPath": [
        "ImagickDraw::pushClipPath",
        "imagickdraw.pushclippath.php",
        "クリップパスの定義を開始する"
    ],
    "ImagickDrawpushDefs": [
        "ImagickDraw::pushDefs",
        "imagickdraw.pushdefs.php",
        "後に続くコマンドが、処理の前に名前つき要素を作成することを示す"
    ],
    "ImagickDrawpushPattern": [
        "ImagickDraw::pushPattern",
        "imagickdraw.pushpattern.php",
        "後に続く ImagickDraw::opPattern() までのコマンドが、名前付きパターンを構成することを示す"
    ],
    "ImagickDrawrectangle": [
        "ImagickDraw::rectangle",
        "imagickdraw.rectangle.php",
        "矩形を描画する"
    ],
    "ImagickDrawrender": [
        "ImagickDraw::render",
        "imagickdraw.render.php",
        "これまでのすべての描画コマンドを画像上にレンダリングする"
    ],
    "ImagickDrawresetVectorGraphics": [
        "ImagickDraw::resetVectorGraphics",
        "imagickdraw.resetvectorgraphics.php",
        "Description"
    ],
    "ImagickDrawrotate": [
        "ImagickDraw::rotate",
        "imagickdraw.rotate.php",
        "指定した回転を現在の座標空間に適用する"
    ],
    "ImagickDrawroundRectangle": [
        "ImagickDraw::roundRectangle",
        "imagickdraw.roundrectangle.php",
        "角が丸い矩形を描画する"
    ],
    "ImagickDrawscale": [
        "ImagickDraw::scale",
        "imagickdraw.scale.php",
        "倍率を調整する"
    ],
    "ImagickDrawsetClipPath": [
        "ImagickDraw::setClipPath",
        "imagickdraw.setclippath.php",
        "指定した名前のクリッピングパスを画像に関連付ける"
    ],
    "ImagickDrawsetClipRule": [
        "ImagickDraw::setClipRule",
        "imagickdraw.setcliprule.php",
        "クリッピングパスで使用する多角形塗りつぶしルールを設定する"
    ],
    "ImagickDrawsetClipUnits": [
        "ImagickDraw::setClipUnits",
        "imagickdraw.setclipunits.php",
        "クリップパスの単位の解釈を設定する"
    ],
    "ImagickDrawsetFillAlpha": [
        "ImagickDraw::setFillAlpha",
        "imagickdraw.setfillalpha.php",
        "色やテクスチャによる塗りつぶしの際の透過度を設定する"
    ],
    "ImagickDrawsetFillColor": [
        "ImagickDraw::setFillColor",
        "imagickdraw.setfillcolor.php",
        "オブジェクトの塗りつぶしに使用する色を設定する"
    ],
    "ImagickDrawsetFillOpacity": [
        "ImagickDraw::setFillOpacity",
        "imagickdraw.setfillopacity.php",
        "色やテクスチャによる塗りつぶしの際の透過度を設定する"
    ],
    "ImagickDrawsetFillPatternURL": [
        "ImagickDraw::setFillPatternURL",
        "imagickdraw.setfillpatternurl.php",
        "オブジェクトの塗りつぶしパターンとして使用する URL を設定する"
    ],
    "ImagickDrawsetFillRule": [
        "ImagickDraw::setFillRule",
        "imagickdraw.setfillrule.php",
        "多角形の描画時に使用する塗りつぶしルールを設定する"
    ],
    "ImagickDrawsetFont": [
        "ImagickDraw::setFont",
        "imagickdraw.setfont.php",
        "テキストによる注記を行う際に使用するフォントを設定する"
    ],
    "ImagickDrawsetFontFamily": [
        "ImagickDraw::setFontFamily",
        "imagickdraw.setfontfamily.php",
        "テキストによる注記を行う際に使用するフォントファミリーを設定する"
    ],
    "ImagickDrawsetFontSize": [
        "ImagickDraw::setFontSize",
        "imagickdraw.setfontsize.php",
        "テキストによる注記を行う際に使用するフォントのポイント数を設定する"
    ],
    "ImagickDrawsetFontStretch": [
        "ImagickDraw::setFontStretch",
        "imagickdraw.setfontstretch.php",
        "テキストによる注記を行う際に使用するフォントの伸縮を設定する"
    ],
    "ImagickDrawsetFontStyle": [
        "ImagickDraw::setFontStyle",
        "imagickdraw.setfontstyle.php",
        "テキストによる注記を行う際に使用するフォントのスタイルを設定する"
    ],
    "ImagickDrawsetFontWeight": [
        "ImagickDraw::setFontWeight",
        "imagickdraw.setfontweight.php",
        "フォントの重さを設定する"
    ],
    "ImagickDrawsetGravity": [
        "ImagickDraw::setGravity",
        "imagickdraw.setgravity.php",
        "テキストの配置時の gravity を設定する"
    ],
    "ImagickDrawsetResolution": [
        "ImagickDraw::setResolution",
        "imagickdraw.setresolution.php",
        "Description"
    ],
    "ImagickDrawsetStrokeAlpha": [
        "ImagickDraw::setStrokeAlpha",
        "imagickdraw.setstrokealpha.php",
        "オブジェクトの枠線の透明度を指定する"
    ],
    "ImagickDrawsetStrokeAntialias": [
        "ImagickDraw::setStrokeAntialias",
        "imagickdraw.setstrokeantialias.php",
        "縁取りの枠線をアンチエイリアス処理するかどうかを制御する"
    ],
    "ImagickDrawsetStrokeColor": [
        "ImagickDraw::setStrokeColor",
        "imagickdraw.setstrokecolor.php",
        "オブジェクトの縁取りに使用する色を設定する"
    ],
    "ImagickDrawsetStrokeDashArray": [
        "ImagickDraw::setStrokeDashArray",
        "imagickdraw.setstrokedasharray.php",
        "パスの描画に使用する破線のパターンを指定する"
    ],
    "ImagickDrawsetStrokeDashOffset": [
        "ImagickDraw::setStrokeDashOffset",
        "imagickdraw.setstrokedashoffset.php",
        "破線パターンにおける破線の開始オフセットを指定する"
    ],
    "ImagickDrawsetStrokeLineCap": [
        "ImagickDraw::setStrokeLineCap",
        "imagickdraw.setstrokelinecap.php",
        "開かれたサブパスを描画する際に使用する端点の形状を指定する"
    ],
    "ImagickDrawsetStrokeLineJoin": [
        "ImagickDraw::setStrokeLineJoin",
        "imagickdraw.setstrokelinejoin.php",
        "パスの角を描画する際に使用する形状を指定する"
    ],
    "ImagickDrawsetStrokeMiterLimit": [
        "ImagickDraw::setStrokeMiterLimit",
        "imagickdraw.setstrokemiterlimit.php",
        "マイターリミットを指定する"
    ],
    "ImagickDrawsetStrokeOpacity": [
        "ImagickDraw::setStrokeOpacity",
        "imagickdraw.setstrokeopacity.php",
        "オブジェクトの枠線の透明度を指定する"
    ],
    "ImagickDrawsetStrokePatternURL": [
        "ImagickDraw::setStrokePatternURL",
        "imagickdraw.setstrokepatternurl.php",
        "オブジェクトの枠線の描画に使用するパターンを設定する"
    ],
    "ImagickDrawsetStrokeWidth": [
        "ImagickDraw::setStrokeWidth",
        "imagickdraw.setstrokewidth.php",
        "オブジェクトの枠線の描画に使用する線の幅を設定する"
    ],
    "ImagickDrawsetTextAlignment": [
        "ImagickDraw::setTextAlignment",
        "imagickdraw.settextalignment.php",
        "テキストの配置を指定する"
    ],
    "ImagickDrawsetTextAntialias": [
        "ImagickDraw::setTextAntialias",
        "imagickdraw.settextantialias.php",
        "テキストをアンチエイリアス処理するかどうかを制御する"
    ],
    "ImagickDrawsetTextDecoration": [
        "ImagickDraw::setTextDecoration",
        "imagickdraw.settextdecoration.php",
        "装飾を指定する"
    ],
    "ImagickDrawsetTextEncoding": [
        "ImagickDraw::setTextEncoding",
        "imagickdraw.settextencoding.php",
        "テキストのコードセットを指定する"
    ],
    "ImagickDrawsetTextInterlineSpacing": [
        "ImagickDraw::setTextInterlineSpacing",
        "imagickdraw.settextinterlinespacing.php",
        "Description"
    ],
    "ImagickDrawsetTextInterwordSpacing": [
        "ImagickDraw::setTextInterwordSpacing",
        "imagickdraw.settextinterwordspacing.php",
        "Description"
    ],
    "ImagickDrawsetTextKerning": [
        "ImagickDraw::setTextKerning",
        "imagickdraw.settextkerning.php",
        "Description"
    ],
    "ImagickDrawsetTextUnderColor": [
        "ImagickDraw::setTextUnderColor",
        "imagickdraw.settextundercolor.php",
        "背景の矩形の色を指定する"
    ],
    "ImagickDrawsetVectorGraphics": [
        "ImagickDraw::setVectorGraphics",
        "imagickdraw.setvectorgraphics.php",
        "ベクターグラフィックを設定する"
    ],
    "ImagickDrawsetViewbox": [
        "ImagickDraw::setViewbox",
        "imagickdraw.setviewbox.php",
        "キャンバス全体の大きさを設定する"
    ],
    "ImagickDrawskewX": [
        "ImagickDraw::skewX",
        "imagickdraw.skewx.php",
        "現在の座標系を水平方向に傾ける"
    ],
    "ImagickDrawskewY": [
        "ImagickDraw::skewY",
        "imagickdraw.skewy.php",
        "現在の座標系を垂直方向に傾ける"
    ],
    "ImagickDrawtranslate": [
        "ImagickDraw::translate",
        "imagickdraw.translate.php",
        "現在の座標系に変換を適用する"
    ],
    "ImagickDrawconstruct": [
        "ImagickDraw::__construct",
        "imagickdraw.construct.php",
        "ImagickDraw コンストラクタ"
    ],
    "ImagickKerneladdKernel": [
        "ImagickKernel::addKernel",
        "imagickkernel.addkernel.php",
        "Description"
    ],
    "ImagickKerneladdUnityKernel": [
        "ImagickKernel::addUnityKernel",
        "imagickkernel.addunitykernel.php",
        "Description"
    ],
    "ImagickKernelfromBuiltIn": [
        "ImagickKernel::fromBuiltIn",
        "imagickkernel.frombuiltin.php",
        "Description"
    ],
    "ImagickKernelfromMatrix": [
        "ImagickKernel::fromMatrix",
        "imagickkernel.frommatrix.php",
        "Description"
    ],
    "ImagickKernelgetMatrix": [
        "ImagickKernel::getMatrix",
        "imagickkernel.getmatrix.php",
        "Description"
    ],
    "ImagickKernelscale": [
        "ImagickKernel::scale",
        "imagickkernel.scale.php",
        "Description"
    ],
    "ImagickKernelseparate": [
        "ImagickKernel::separate",
        "imagickkernel.separate.php",
        "Description"
    ],
    "ImagickPixelclear": [
        "ImagickPixel::clear",
        "imagickpixel.clear.php",
        "このオブジェクトに関連付けられたリソースを消去する"
    ],
    "ImagickPixeldestroy": [
        "ImagickPixel::destroy",
        "imagickpixel.destroy.php",
        "このオブジェクトに関連付けられているリソースの割り当てを解除する"
    ],
    "ImagickPixelgetColor": [
        "ImagickPixel::getColor",
        "imagickpixel.getcolor.php",
        "色を返す"
    ],
    "ImagickPixelgetColorAsString": [
        "ImagickPixel::getColorAsString",
        "imagickpixel.getcolorasstring.php",
        "色を文字列で返す"
    ],
    "ImagickPixelgetColorCount": [
        "ImagickPixel::getColorCount",
        "imagickpixel.getcolorcount.php",
        "この色に関連付けられている色カウントを返す"
    ],
    "ImagickPixelgetColorQuantum": [
        "ImagickPixel::getColorQuantum",
        "imagickpixel.getcolorquantum.php",
        "Description"
    ],
    "ImagickPixelgetColorValue": [
        "ImagickPixel::getColorValue",
        "imagickpixel.getcolorvalue.php",
        "指定した色チャネルの値を正規化したものを取得する"
    ],
    "ImagickPixelgetColorValueQuantum": [
        "ImagickPixel::getColorValueQuantum",
        "imagickpixel.getcolorvaluequantum.php",
        "Description"
    ],
    "ImagickPixelgetHSL": [
        "ImagickPixel::getHSL",
        "imagickpixel.gethsl.php",
        "ImagickPixel オブジェクトの HSL カラーを正規化したものを返す"
    ],
    "ImagickPixelgetIndex": [
        "ImagickPixel::getIndex",
        "imagickpixel.getindex.php",
        "Description"
    ],
    "ImagickPixelisPixelSimilar": [
        "ImagickPixel::isPixelSimilar",
        "imagickpixel.ispixelsimilar.php",
        "Check the distance between this color and another"
    ],
    "ImagickPixelisPixelSimilarQuantum": [
        "ImagickPixel::isPixelSimilarQuantum",
        "imagickpixel.ispixelsimilarquantum.php",
        "Description"
    ],
    "ImagickPixelisSimilar": [
        "ImagickPixel::isSimilar",
        "imagickpixel.issimilar.php",
        "この色と別の色の差を調べる"
    ],
    "ImagickPixelsetColor": [
        "ImagickPixel::setColor",
        "imagickpixel.setcolor.php",
        "色を設定する"
    ],
    "ImagickPixelsetColorCount": [
        "ImagickPixel::setColorCount",
        "imagickpixel.setcolorcount.php",
        "Description"
    ],
    "ImagickPixelsetColorValue": [
        "ImagickPixel::setColorValue",
        "imagickpixel.setcolorvalue.php",
        "指定したチャネルの正規化した値を設定する"
    ],
    "ImagickPixelsetColorValueQuantum": [
        "ImagickPixel::setColorValueQuantum",
        "imagickpixel.setcolorvaluequantum.php",
        "Description"
    ],
    "ImagickPixelsetHSL": [
        "ImagickPixel::setHSL",
        "imagickpixel.sethsl.php",
        "正規化した HSL カラーを設定する"
    ],
    "ImagickPixelsetIndex": [
        "ImagickPixel::setIndex",
        "imagickpixel.setindex.php",
        "Description"
    ],
    "ImagickPixelconstruct": [
        "ImagickPixel::__construct",
        "imagickpixel.construct.php",
        "ImagickPixel のコンストラクタ"
    ],
    "ImagickPixelIteratorclear": [
        "ImagickPixelIterator::clear",
        "imagickpixeliterator.clear.php",
        "PixelIterator に関連付けられたリソースを消去する"
    ],
    "ImagickPixelIteratordestroy": [
        "ImagickPixelIterator::destroy",
        "imagickpixeliterator.destroy.php",
        "PixelIterator に関連付けられているリソースの割り当てを解除する"
    ],
    "ImagickPixelIteratorgetCurrentIteratorRow": [
        "ImagickPixelIterator::getCurrentIteratorRow",
        "imagickpixeliterator.getcurrentiteratorrow.php",
        "ImagickPixel オブジェクトの現在の行を返す"
    ],
    "ImagickPixelIteratorgetIteratorRow": [
        "ImagickPixelIterator::getIteratorRow",
        "imagickpixeliterator.getiteratorrow.php",
        "pixel iterator の現在の行を返す"
    ],
    "ImagickPixelIteratorgetNextIteratorRow": [
        "ImagickPixelIterator::getNextIteratorRow",
        "imagickpixeliterator.getnextiteratorrow.php",
        "pixel iterator の次の行を返す"
    ],
    "ImagickPixelIteratorgetPreviousIteratorRow": [
        "ImagickPixelIterator::getPreviousIteratorRow",
        "imagickpixeliterator.getpreviousiteratorrow.php",
        "前の行を返す"
    ],
    "ImagickPixelIteratornewPixelIterator": [
        "ImagickPixelIterator::newPixelIterator",
        "imagickpixeliterator.newpixeliterator.php",
        "新しい pixel iterator を返す"
    ],
    "ImagickPixelIteratornewPixelRegionIterator": [
        "ImagickPixelIterator::newPixelRegionIterator",
        "imagickpixeliterator.newpixelregioniterator.php",
        "新しい pixel iterator を返す"
    ],
    "ImagickPixelIteratorresetIterator": [
        "ImagickPixelIterator::resetIterator",
        "imagickpixeliterator.resetiterator.php",
        "pixel iterator をリセットする"
    ],
    "ImagickPixelIteratorsetIteratorFirstRow": [
        "ImagickPixelIterator::setIteratorFirstRow",
        "imagickpixeliterator.setiteratorfirstrow.php",
        "pixel iterator を最初の行に設定する"
    ],
    "ImagickPixelIteratorsetIteratorLastRow": [
        "ImagickPixelIterator::setIteratorLastRow",
        "imagickpixeliterator.setiteratorlastrow.php",
        "pixel iterator を最後の行に設定する"
    ],
    "ImagickPixelIteratorsetIteratorRow": [
        "ImagickPixelIterator::setIteratorRow",
        "imagickpixeliterator.setiteratorrow.php",
        "pixel iterator の行を設定する"
    ],
    "ImagickPixelIteratorsyncIterator": [
        "ImagickPixelIterator::syncIterator",
        "imagickpixeliterator.synciterator.php",
        "pixel iterator を同期する"
    ],
    "ImagickPixelIteratorconstruct": [
        "ImagickPixelIterator::__construct",
        "imagickpixeliterator.construct.php",
        "ImagickPixelIterator のコンストラクタ"
    ],
    "imap8bit": [
        "imap_8bit",
        "function.imap-8bit.php",
        "8 ビット文字列を quoted-printable 文字列に変換する"
    ],
    "imapalerts": [
        "imap_alerts",
        "function.imap-alerts.php",
        "発生した IMAP 警告メッセージを返す"
    ],
    "imapappend": [
        "imap_append",
        "function.imap-append.php",
        "指定されたメールボックスに文字列メッセージを追加する"
    ],
    "imapbase64": [
        "imap_base64",
        "function.imap-base64.php",
        "BASE64 でエンコードされたテキストをデコードする"
    ],
    "imapbinary": [
        "imap_binary",
        "function.imap-binary.php",
        "8 ビット文字列を base64 文字列に変換する"
    ],
    "imapbody": [
        "imap_body",
        "function.imap-body.php",
        "メッセージ本文を読む"
    ],
    "imapbodystruct": [
        "imap_bodystruct",
        "function.imap-bodystruct.php",
        "指定したメッセージの指定した body セクションの構造を読み込む"
    ],
    "imapcheck": [
        "imap_check",
        "function.imap-check.php",
        "現在のメールボックスをチェックする"
    ],
    "imapclearflagfull": [
        "imap_clearflag_full",
        "function.imap-clearflag-full.php",
        "メッセージのフラグをクリアする"
    ],
    "imapclose": [
        "imap_close",
        "function.imap-close.php",
        "IMAP ストリームをクローズする"
    ],
    "imapcreate": [
        "imap_create",
        "function.imap-create.php",
        "imap_createmailbox のエイリアス"
    ],
    "imapcreatemailbox": [
        "imap_createmailbox",
        "function.imap-createmailbox.php",
        "新しいメールボックスを作る"
    ],
    "imapdelete": [
        "imap_delete",
        "function.imap-delete.php",
        "現在のメールボックスから削除するメッセージに印を付ける"
    ],
    "imapdeletemailbox": [
        "imap_deletemailbox",
        "function.imap-deletemailbox.php",
        "メールボックスを削除する"
    ],
    "imaperrors": [
        "imap_errors",
        "function.imap-errors.php",
        "発生したすべての IMAP エラーを返す"
    ],
    "imapexpunge": [
        "imap_expunge",
        "function.imap-expunge.php",
        "削除用にマークされたすべてのメッセージを削除する"
    ],
    "imapfetchbody": [
        "imap_fetchbody",
        "function.imap-fetchbody.php",
        "メッセージ本文中の特定のセクションを取り出す"
    ],
    "imapfetchheader": [
        "imap_fetchheader",
        "function.imap-fetchheader.php",
        "メッセージのヘッダを返す"
    ],
    "imapfetchmime": [
        "imap_fetchmime",
        "function.imap-fetchmime.php",
        "メッセージの特定のセクションに対する MIME ヘッダを取り出します"
    ],
    "imapfetchstructure": [
        "imap_fetchstructure",
        "function.imap-fetchstructure.php",
        "特定のメッセージの構造を読み込む"
    ],
    "imapfetchtext": [
        "imap_fetchtext",
        "function.imap-fetchtext.php",
        "imap_body のエイリアス"
    ],
    "imapfetchoverview": [
        "imap_fetch_overview",
        "function.imap-fetch-overview.php",
        "指定したメッセージのヘッダ情報の概要を読む"
    ],
    "imapgc": [
        "imap_gc",
        "function.imap-gc.php",
        "IMAP キャッシュをクリアする"
    ],
    "imapgetacl": [
        "imap_getacl",
        "function.imap-getacl.php",
        "与えられたメールボックスの ACL を取得する"
    ],
    "imapgetmailboxes": [
        "imap_getmailboxes",
        "function.imap-getmailboxes.php",
        "メールボックスのリストを読み込み、各ボックスに関する詳細な情報を返す"
    ],
    "imapgetsubscribed": [
        "imap_getsubscribed",
        "function.imap-getsubscribed.php",
        "購読中の全メールボックスの一覧を取得する"
    ],
    "imapgetquota": [
        "imap_get_quota",
        "function.imap-get-quota.php",
        "クオータレベルの設定、メールボックス毎の使用状況を取得する"
    ],
    "imapgetquotaroot": [
        "imap_get_quotaroot",
        "function.imap-get-quotaroot.php",
        "ユーザー単位のクォータ設定を取得する"
    ],
    "imapheader": [
        "imap_header",
        "function.imap-header.php",
        "imap_headerinfo のエイリアス"
    ],
    "imapheaderinfo": [
        "imap_headerinfo",
        "function.imap-headerinfo.php",
        "メッセージヘッダを読み込む"
    ],
    "imapheaders": [
        "imap_headers",
        "function.imap-headers.php",
        "メールボックス内のすべてのメッセージのヘッダを返す"
    ],
    "imaplasterror": [
        "imap_last_error",
        "function.imap-last-error.php",
        "ページリクエスト時に生じた直近の IMAP エラーを返す"
    ],
    "imaplist": [
        "imap_list",
        "function.imap-list.php",
        "メールボックスのリストを読み込む"
    ],
    "imaplistmailbox": [
        "imap_listmailbox",
        "function.imap-listmailbox.php",
        "imap_list のエイリアス"
    ],
    "imaplistscan": [
        "imap_listscan",
        "function.imap-listscan.php",
        "指定したテキストにマッチするメールボックスの一覧を返す"
    ],
    "imaplistsubscribed": [
        "imap_listsubscribed",
        "function.imap-listsubscribed.php",
        "imap_lsub のエイリアス"
    ],
    "imaplsub": [
        "imap_lsub",
        "function.imap-lsub.php",
        "購読しているすべてのメールボックスの一覧を得る"
    ],
    "imapmail": [
        "imap_mail",
        "function.imap-mail.php",
        "e-mail メッセージを送信する"
    ],
    "imapmailboxmsginfo": [
        "imap_mailboxmsginfo",
        "function.imap-mailboxmsginfo.php",
        "現在のメールボックスに関する情報を得る"
    ],
    "imapmailcopy": [
        "imap_mail_copy",
        "function.imap-mail-copy.php",
        "指定されたメッセージをメールボックスにコピーする"
    ],
    "imapmailmove": [
        "imap_mail_move",
        "function.imap-mail-move.php",
        "指定されたメッセージをメールボックスに移動する"
    ],
    "imapmimeheaderdecode": [
        "imap_mime_header_decode",
        "function.imap-mime-header-decode.php",
        "MIME ヘッダ要素をデコードする"
    ],
    "imapmsgno": [
        "imap_msgno",
        "function.imap-msgno.php",
        "指定した UID のメッセージ番号を返す"
    ],
    "imapmutf7toutf8": [
        "imap_mutf7_to_utf8",
        "function.imap-mutf7-to-utf8.php",
        "修正UTF-7文字列をUTF-8にデコードする"
    ],
    "imapnummsg": [
        "imap_num_msg",
        "function.imap-num-msg.php",
        "現在のメールボックスのメッセージ数を取得する"
    ],
    "imapnumrecent": [
        "imap_num_recent",
        "function.imap-num-recent.php",
        "現在のメールボックスにある新規メッセージ数を取得する"
    ],
    "imapopen": [
        "imap_open",
        "function.imap-open.php",
        "メールボックスへの IMAP ストリームをオープンする"
    ],
    "imapping": [
        "imap_ping",
        "function.imap-ping.php",
        "IMAP ストリームがアクティブかどうかを調べる"
    ],
    "imapqprint": [
        "imap_qprint",
        "function.imap-qprint.php",
        "quoted-printable 文字列を 8 ビット文字列に変換する"
    ],
    "imaprename": [
        "imap_rename",
        "function.imap-rename.php",
        "imap_renamemailbox のエイリアス"
    ],
    "imaprenamemailbox": [
        "imap_renamemailbox",
        "function.imap-renamemailbox.php",
        "メールボックスの名前を変更する"
    ],
    "imapreopen": [
        "imap_reopen",
        "function.imap-reopen.php",
        "新規メールボックスへの IMAP ストリームを再度オープンする"
    ],
    "imaprfc822parseadrlist": [
        "imap_rfc822_parse_adrlist",
        "function.imap-rfc822-parse-adrlist.php",
        "アドレス文字列を解釈します"
    ],
    "imaprfc822parseheaders": [
        "imap_rfc822_parse_headers",
        "function.imap-rfc822-parse-headers.php",
        "文字列からメールヘッダを解釈する"
    ],
    "imapsavebody": [
        "imap_savebody",
        "function.imap-savebody.php",
        "指定した本文部をファイルに保存する"
    ],
    "imapscan": [
        "imap_scan",
        "function.imap-scan.php",
        "imap_listscan のエイリアス"
    ],
    "imapscanmailbox": [
        "imap_scanmailbox",
        "function.imap-scanmailbox.php",
        "imap_listscan のエイリアス"
    ],
    "imapsearch": [
        "imap_search",
        "function.imap-search.php",
        "指定した検索条件にマッチするメッセージを配列として返す"
    ],
    "imapsetacl": [
        "imap_setacl",
        "function.imap-setacl.php",
        "指定したメールボックスの ACL を設定する"
    ],
    "imapsetflagfull": [
        "imap_setflag_full",
        "function.imap-setflag-full.php",
        "メッセージにフラグをセットする"
    ],
    "imapsetquota": [
        "imap_set_quota",
        "function.imap-set-quota.php",
        "指定したメールボックスにクォータを設定する"
    ],
    "imapsort": [
        "imap_sort",
        "function.imap-sort.php",
        "メッセージヘッダの配列をソートする"
    ],
    "imapstatus": [
        "imap_status",
        "function.imap-status.php",
        "現在のメールボックス以外のメールボックスのステータス情報を返す"
    ],
    "imapsubscribe": [
        "imap_subscribe",
        "function.imap-subscribe.php",
        "メールボックスを購読する"
    ],
    "imapthread": [
        "imap_thread",
        "function.imap-thread.php",
        "スレッド化したメッセージのツリーを返す"
    ],
    "imaptimeout": [
        "imap_timeout",
        "function.imap-timeout.php",
        "imap タイムアウトを設定あるいは取得する"
    ],
    "imapuid": [
        "imap_uid",
        "function.imap-uid.php",
        "指定したメッセージシーケンス番号の UID を返す"
    ],
    "imapundelete": [
        "imap_undelete",
        "function.imap-undelete.php",
        "削除マークがついているメッセージのマークをはずす"
    ],
    "imapunsubscribe": [
        "imap_unsubscribe",
        "function.imap-unsubscribe.php",
        "メールボックスの購読をやめる"
    ],
    "imaputf7decode": [
        "imap_utf7_decode",
        "function.imap-utf7-decode.php",
        "修正版 UTF-7 エンコードされた文字列をデコードする"
    ],
    "imaputf7encode": [
        "imap_utf7_encode",
        "function.imap-utf7-encode.php",
        "ISO-8859-1 文字列を修正版 UTF-7 テキストに変換する"
    ],
    "imaputf8": [
        "imap_utf8",
        "function.imap-utf8.php",
        "MIME エンコードされたテキストを UTF-8 に変換する"
    ],
    "imaputf8tomutf7": [
        "imap_utf8_to_mutf7",
        "function.imap-utf8-to-mutf7.php",
        "UTF-8 文字列を修正UTF-7にエンコードする"
    ],
    "implode": [
        "implode",
        "function.implode.php",
        "配列要素を文字列により連結する"
    ],
    "inetntop": [
        "inet_ntop",
        "function.inet-ntop.php",
        "パックされたインターネットアドレスを、人間が読める形式に変換する"
    ],
    "inetpton": [
        "inet_pton",
        "function.inet-pton.php",
        "人間が読める形式の IP アドレスを、パックされた in_addr 形式に変換する"
    ],
    "InfiniteIteratornext": [
        "InfiniteIterator::next",
        "infiniteiterator.next.php",
        "内部イテレータを次に移動するか、巻き戻す"
    ],
    "InfiniteIteratorconstruct": [
        "InfiniteIterator::__construct",
        "infiniteiterator.construct.php",
        "InfiniteIterator を作成する"
    ],
    "inflateadd": [
        "inflate_add",
        "function.inflate-add.php",
        "インクリメンタルにエンコードされたデータを解凍する"
    ],
    "inflategetreadlen": [
        "inflate_get_read_len",
        "function.inflate-get-read-len.php",
        "これまでに読み取ったバイト数を得る"
    ],
    "inflategetstatus": [
        "inflate_get_status",
        "function.inflate-get-status.php",
        "解凍の状態を取得する"
    ],
    "inflateinit": [
        "inflate_init",
        "function.inflate-init.php",
        "インクリメンタルな解凍コンテキストを初期化する"
    ],
    "ingresautocommit": [
        "ingres_autocommit",
        "function.ingres-autocommit.php",
        "autocommit をオンまたはオフに切替える"
    ],
    "ingresautocommitstate": [
        "ingres_autocommit_state",
        "function.ingres-autocommit-state.php",
        "接続が autocommit を使っているかどうかを調べる"
    ],
    "ingrescharset": [
        "ingres_charset",
        "function.ingres-charset.php",
        "文字セットを返す"
    ],
    "ingresclose": [
        "ingres_close",
        "function.ingres-close.php",
        "Ingres データベース接続を閉じる"
    ],
    "ingrescommit": [
        "ingres_commit",
        "function.ingres-commit.php",
        "トランザクションをコミットする"
    ],
    "ingresconnect": [
        "ingres_connect",
        "function.ingres-connect.php",
        "Ingres データベースへの接続をオープンする"
    ],
    "ingrescursor": [
        "ingres_cursor",
        "function.ingres-cursor.php",
        "指定した結果リソースのカーソル名を取得する"
    ],
    "ingreserrno": [
        "ingres_errno",
        "function.ingres-errno.php",
        "直近に発生した ingres エラー番号を取得する"
    ],
    "ingreserror": [
        "ingres_error",
        "function.ingres-error.php",
        "直近に発生したエラーのエラーメッセージを取得する"
    ],
    "ingreserrsqlstate": [
        "ingres_errsqlstate",
        "function.ingres-errsqlstate.php",
        "直近に発生した SQLSTATE エラーコードを取得する"
    ],
    "ingresescapestring": [
        "ingres_escape_string",
        "function.ingres-escape-string.php",
        "クエリで使うために特殊文字をエスケープする"
    ],
    "ingresexecute": [
        "ingres_execute",
        "function.ingres-execute.php",
        "プリペアドクエリを実行する"
    ],
    "ingresfetcharray": [
        "ingres_fetch_array",
        "function.ingres-fetch-array.php",
        "1 行分の結果を配列に取得する"
    ],
    "ingresfetchassoc": [
        "ingres_fetch_assoc",
        "function.ingres-fetch-assoc.php",
        "1 行分の結果を連想配列に取得する"
    ],
    "ingresfetchobject": [
        "ingres_fetch_object",
        "function.ingres-fetch-object.php",
        "1 行分の結果をオブジェクトとして取得する"
    ],
    "ingresfetchprocreturn": [
        "ingres_fetch_proc_return",
        "function.ingres-fetch-proc-return.php",
        "プロシージャコールからの返り値を取得する"
    ],
    "ingresfetchrow": [
        "ingres_fetch_row",
        "function.ingres-fetch-row.php",
        "1 行分の結果を数値添字配列として取得する"
    ],
    "ingresfieldlength": [
        "ingres_field_length",
        "function.ingres-field-length.php",
        "フィールド長を得る"
    ],
    "ingresfieldname": [
        "ingres_field_name",
        "function.ingres-field-name.php",
        "クエリ結果においてフィールド名を得る"
    ],
    "ingresfieldnullable": [
        "ingres_field_nullable",
        "function.ingres-field-nullable.php",
        "フィールドに NULL 値を設定可能かどうか調べる"
    ],
    "ingresfieldprecision": [
        "ingres_field_precision",
        "function.ingres-field-precision.php",
        "フィールドの精度を得る"
    ],
    "ingresfieldscale": [
        "ingres_field_scale",
        "function.ingres-field-scale.php",
        "フィールドのスケールを得る"
    ],
    "ingresfieldtype": [
        "ingres_field_type",
        "function.ingres-field-type.php",
        "クエリ結果においてフィールドの型を得る"
    ],
    "ingresfreeresult": [
        "ingres_free_result",
        "function.ingres-free-result.php",
        "結果 ID に関連づけられたリソースを解放する"
    ],
    "ingresnexterror": [
        "ingres_next_error",
        "function.ingres-next-error.php",
        "次の Ingres エラーを取得する"
    ],
    "ingresnumfields": [
        "ingres_num_fields",
        "function.ingres-num-fields.php",
        "直近のクエリにより返されたフィールドの数を得る"
    ],
    "ingresnumrows": [
        "ingres_num_rows",
        "function.ingres-num-rows.php",
        "クエリが変更したり返したりしたレコードの数を取得する"
    ],
    "ingrespconnect": [
        "ingres_pconnect",
        "function.ingres-pconnect.php",
        "Ingres データベースへの持続的接続をオープンする"
    ],
    "ingresprepare": [
        "ingres_prepare",
        "function.ingres-prepare.php",
        "後で実行するためのクエリを準備する"
    ],
    "ingresquery": [
        "ingres_query",
        "function.ingres-query.php",
        "Ingres に SQL クエリを送信する"
    ],
    "ingresresultseek": [
        "ingres_result_seek",
        "function.ingres-result-seek.php",
        "データを取得する前に行の位置を設定する"
    ],
    "ingresrollback": [
        "ingres_rollback",
        "function.ingres-rollback.php",
        "トランザクションをロールバックする"
    ],
    "ingressetenvironment": [
        "ingres_set_environment",
        "function.ingres-set-environment.php",
        "環境を設定して出力オプションを制御する"
    ],
    "ingresunbufferedquery": [
        "ingres_unbuffered_query",
        "function.ingres-unbuffered-query.php",
        "未バッファ SQL クエリを Ingres に送信する"
    ],
    "inialter": [
        "ini_alter",
        "function.ini-alter.php",
        "ini_set のエイリアス"
    ],
    "iniget": [
        "ini_get",
        "function.ini-get.php",
        "設定オプションの値を得る"
    ],
    "inigetall": [
        "ini_get_all",
        "function.ini-get-all.php",
        "すべての設定オプションを得る"
    ],
    "inirestore": [
        "ini_restore",
        "function.ini-restore.php",
        "設定オプションの値を元に戻す"
    ],
    "iniset": [
        "ini_set",
        "function.ini-set.php",
        "設定オプションの値を設定する"
    ],
    "inotifyaddwatch": [
        "inotify_add_watch",
        "function.inotify-add-watch.php",
        "初期化済みの inotify インスタンスに監視対象を追加する"
    ],
    "inotifyinit": [
        "inotify_init",
        "function.inotify-init.php",
        "inotify インスタンスを初期化する"
    ],
    "inotifyqueuelen": [
        "inotify_queue_len",
        "function.inotify-queue-len.php",
        "待機中のイベントがある場合に正の数を返す"
    ],
    "inotifyread": [
        "inotify_read",
        "function.inotify-read.php",
        "inotify インスタンスからイベントを読み込む"
    ],
    "inotifyrmwatch": [
        "inotify_rm_watch",
        "function.inotify-rm-watch.php",
        "既存の監視を inotify インスタンスから削除する"
    ],
    "intdiv": [
        "intdiv",
        "function.intdiv.php",
        "整数値の除算"
    ],
    "interfaceexists": [
        "interface_exists",
        "function.interface-exists.php",
        "インターフェイスが宣言されているかどうかを確認する"
    ],
    "IntlBreakIteratorcreateCharacterInstance": [
        "IntlBreakIterator::createCharacterInstance",
        "intlbreakiterator.createcharacterinstance.php",
        "文字シーケンスの組み合わせの境界用にイテレータを作る"
    ],
    "IntlBreakIteratorcreateCodePointInstance": [
        "IntlBreakIterator::createCodePointInstance",
        "intlbreakiterator.createcodepointinstance.php",
        "コードポイントの境界用にイテレータを作る"
    ],
    "IntlBreakIteratorcreateLineInstance": [
        "IntlBreakIterator::createLineInstance",
        "intlbreakiterator.createlineinstance.php",
        "論理的に可能な改行用にイテレータを作る"
    ],
    "IntlBreakIteratorcreateSentenceInstance": [
        "IntlBreakIterator::createSentenceInstance",
        "intlbreakiterator.createsentenceinstance.php",
        "文末用にイテレータを作る"
    ],
    "IntlBreakIteratorcreateTitleInstance": [
        "IntlBreakIterator::createTitleInstance",
        "intlbreakiterator.createtitleinstance.php",
        "タイトル文字の区切り用にイテレータを作る"
    ],
    "IntlBreakIteratorcreateWordInstance": [
        "IntlBreakIterator::createWordInstance",
        "intlbreakiterator.createwordinstance.php",
        "単語の区切り用にイテレータを作る"
    ],
    "IntlBreakIteratorcurrent": [
        "IntlBreakIterator::current",
        "intlbreakiterator.current.php",
        "現在位置のインデックスを取得する"
    ],
    "IntlBreakIteratorfirst": [
        "IntlBreakIterator::first",
        "intlbreakiterator.first.php",
        "テキスト内の最初の文字を場所を取得する"
    ],
    "IntlBreakIteratorfollowing": [
        "IntlBreakIterator::following",
        "intlbreakiterator.following.php",
        "指定したオフセット以降の最初の境界までイテレータを進める"
    ],
    "IntlBreakIteratorgetErrorCode": [
        "IntlBreakIterator::getErrorCode",
        "intlbreakiterator.geterrorcode.php",
        "このオブジェクトの直近のエラーコードを取得する"
    ],
    "IntlBreakIteratorgetErrorMessage": [
        "IntlBreakIterator::getErrorMessage",
        "intlbreakiterator.geterrormessage.php",
        "このオブジェクトの直近のエラーメッセージを取得する"
    ],
    "IntlBreakIteratorgetLocale": [
        "IntlBreakIterator::getLocale",
        "intlbreakiterator.getlocale.php",
        "このオブジェクトに関連づけられたロケールを取得する"
    ],
    "IntlBreakIteratorgetPartsIterator": [
        "IntlBreakIterator::getPartsIterator",
        "intlbreakiterator.getpartsiterator.php",
        "境界と境界の間の navigating fragments 用にイテレータを作る"
    ],
    "IntlBreakIteratorgetText": [
        "IntlBreakIterator::getText",
        "intlbreakiterator.gettext.php",
        "スキャンするテキストを取得する"
    ],
    "IntlBreakIteratorisBoundary": [
        "IntlBreakIterator::isBoundary",
        "intlbreakiterator.isboundary.php",
        "あるオフセットが境界のオフセットかどうかを調べる"
    ],
    "IntlBreakIteratorlast": [
        "IntlBreakIterator::last",
        "intlbreakiterator.last.php",
        "イテレータの位置を、最後の文字より後に設定する"
    ],
    "IntlBreakIteratornext": [
        "IntlBreakIterator::next",
        "intlbreakiterator.next.php",
        "イテレータを次の境界まで進める"
    ],
    "IntlBreakIteratorpreceding": [
        "IntlBreakIterator::preceding",
        "intlbreakiterator.preceding.php",
        "イテレータの位置を、指定したオフセット以前の最初の境界に設定する"
    ],
    "IntlBreakIteratorprevious": [
        "IntlBreakIterator::previous",
        "intlbreakiterator.previous.php",
        "イテレータの位置を、現在位置の直前の境界に設定する"
    ],
    "IntlBreakIteratorsetText": [
        "IntlBreakIterator::setText",
        "intlbreakiterator.settext.php",
        "スキャンするテキストを設定する"
    ],
    "IntlBreakIteratorconstruct": [
        "IntlBreakIterator::__construct",
        "intlbreakiterator.construct.php",
        "インスタンス化を禁止するためのprivateなコンストラクタ"
    ],
    "IntlCalendaradd": [
        "IntlCalendar::add",
        "intlcalendar.add.php",
        "Add a (signed) amount of time to a field"
    ],
    "IntlCalendarafter": [
        "IntlCalendar::after",
        "intlcalendar.after.php",
        "Whether this objectʼs time is after that of the passed object"
    ],
    "IntlCalendarbefore": [
        "IntlCalendar::before",
        "intlcalendar.before.php",
        "Whether this objectʼs time is before that of the passed object"
    ],
    "IntlCalendarclear": [
        "IntlCalendar::clear",
        "intlcalendar.clear.php",
        "Clear a field or all fields"
    ],
    "IntlCalendarcreateInstance": [
        "IntlCalendar::createInstance",
        "intlcalendar.createinstance.php",
        "Create a new IntlCalendar"
    ],
    "IntlCalendarequals": [
        "IntlCalendar::equals",
        "intlcalendar.equals.php",
        "Compare time of two IntlCalendar objects for equality"
    ],
    "IntlCalendarfieldDifference": [
        "IntlCalendar::fieldDifference",
        "intlcalendar.fielddifference.php",
        "Calculate difference between given time and this objectʼs time"
    ],
    "IntlCalendarfromDateTime": [
        "IntlCalendar::fromDateTime",
        "intlcalendar.fromdatetime.php",
        "Create an IntlCalendar from a DateTime object or string"
    ],
    "IntlCalendarget": [
        "IntlCalendar::get",
        "intlcalendar.get.php",
        "Get the value for a field"
    ],
    "IntlCalendargetActualMaximum": [
        "IntlCalendar::getActualMaximum",
        "intlcalendar.getactualmaximum.php",
        "The maximum value for a field, considering the objectʼs current time"
    ],
    "IntlCalendargetActualMinimum": [
        "IntlCalendar::getActualMinimum",
        "intlcalendar.getactualminimum.php",
        "The minimum value for a field, considering the objectʼs current time"
    ],
    "IntlCalendargetAvailableLocales": [
        "IntlCalendar::getAvailableLocales",
        "intlcalendar.getavailablelocales.php",
        "Get array of locales for which there is data"
    ],
    "IntlCalendargetDayOfWeekType": [
        "IntlCalendar::getDayOfWeekType",
        "intlcalendar.getdayofweektype.php",
        "Tell whether a day is a weekday, weekend or a day that has a transition between the two"
    ],
    "IntlCalendargetErrorCode": [
        "IntlCalendar::getErrorCode",
        "intlcalendar.geterrorcode.php",
        "Get last error code on the object"
    ],
    "IntlCalendargetErrorMessage": [
        "IntlCalendar::getErrorMessage",
        "intlcalendar.geterrormessage.php",
        "Get last error message on the object"
    ],
    "IntlCalendargetFirstDayOfWeek": [
        "IntlCalendar::getFirstDayOfWeek",
        "intlcalendar.getfirstdayofweek.php",
        "Get the first day of the week for the calendarʼs locale"
    ],
    "IntlCalendargetGreatestMinimum": [
        "IntlCalendar::getGreatestMinimum",
        "intlcalendar.getgreatestminimum.php",
        "Get the largest local minimum value for a field"
    ],
    "IntlCalendargetKeywordValuesForLocale": [
        "IntlCalendar::getKeywordValuesForLocale",
        "intlcalendar.getkeywordvaluesforlocale.php",
        "Get set of locale keyword values"
    ],
    "IntlCalendargetLeastMaximum": [
        "IntlCalendar::getLeastMaximum",
        "intlcalendar.getleastmaximum.php",
        "Get the smallest local maximum for a field"
    ],
    "IntlCalendargetLocale": [
        "IntlCalendar::getLocale",
        "intlcalendar.getlocale.php",
        "Get the locale associated with the object"
    ],
    "IntlCalendargetMaximum": [
        "IntlCalendar::getMaximum",
        "intlcalendar.getmaximum.php",
        "Get the global maximum value for a field"
    ],
    "IntlCalendargetMinimalDaysInFirstWeek": [
        "IntlCalendar::getMinimalDaysInFirstWeek",
        "intlcalendar.getminimaldaysinfirstweek.php",
        "Get minimal number of days the first week in a year or month can have"
    ],
    "IntlCalendargetMinimum": [
        "IntlCalendar::getMinimum",
        "intlcalendar.getminimum.php",
        "Get the global minimum value for a field"
    ],
    "IntlCalendargetNow": [
        "IntlCalendar::getNow",
        "intlcalendar.getnow.php",
        "Get number representing the current time"
    ],
    "IntlCalendargetRepeatedWallTimeOption": [
        "IntlCalendar::getRepeatedWallTimeOption",
        "intlcalendar.getrepeatedwalltimeoption.php",
        "Get behavior for handling repeating wall time"
    ],
    "IntlCalendargetSkippedWallTimeOption": [
        "IntlCalendar::getSkippedWallTimeOption",
        "intlcalendar.getskippedwalltimeoption.php",
        "Get behavior for handling skipped wall time"
    ],
    "IntlCalendargetTime": [
        "IntlCalendar::getTime",
        "intlcalendar.gettime.php",
        "Get time currently represented by the object"
    ],
    "IntlCalendargetTimeZone": [
        "IntlCalendar::getTimeZone",
        "intlcalendar.gettimezone.php",
        "Get the objectʼs timezone"
    ],
    "IntlCalendargetType": [
        "IntlCalendar::getType",
        "intlcalendar.gettype.php",
        "Get the calendar type"
    ],
    "IntlCalendargetWeekendTransition": [
        "IntlCalendar::getWeekendTransition",
        "intlcalendar.getweekendtransition.php",
        "Get time of the day at which weekend begins or ends"
    ],
    "IntlCalendarinDaylightTime": [
        "IntlCalendar::inDaylightTime",
        "intlcalendar.indaylighttime.php",
        "Whether the objectʼs time is in Daylight Savings Time"
    ],
    "IntlCalendarisEquivalentTo": [
        "IntlCalendar::isEquivalentTo",
        "intlcalendar.isequivalentto.php",
        "Whether another calendar is equal but for a different time"
    ],
    "IntlCalendarisLenient": [
        "IntlCalendar::isLenient",
        "intlcalendar.islenient.php",
        "Whether date/time interpretation is in lenient mode"
    ],
    "IntlCalendarisSet": [
        "IntlCalendar::isSet",
        "intlcalendar.isset.php",
        "Whether a field is set"
    ],
    "IntlCalendarisWeekend": [
        "IntlCalendar::isWeekend",
        "intlcalendar.isweekend.php",
        "Whether a certain date/time is in the weekend"
    ],
    "IntlCalendarroll": [
        "IntlCalendar::roll",
        "intlcalendar.roll.php",
        "Add value to field without carrying into more significant fields"
    ],
    "IntlCalendarset": [
        "IntlCalendar::set",
        "intlcalendar.set.php",
        "Set a time field or several common fields at once"
    ],
    "IntlCalendarsetFirstDayOfWeek": [
        "IntlCalendar::setFirstDayOfWeek",
        "intlcalendar.setfirstdayofweek.php",
        "Set the day on which the week is deemed to start"
    ],
    "IntlCalendarsetLenient": [
        "IntlCalendar::setLenient",
        "intlcalendar.setlenient.php",
        "Set whether date/time interpretation is to be lenient"
    ],
    "IntlCalendarsetMinimalDaysInFirstWeek": [
        "IntlCalendar::setMinimalDaysInFirstWeek",
        "intlcalendar.setminimaldaysinfirstweek.php",
        "Set minimal number of days the first week in a year or month can have"
    ],
    "IntlCalendarsetRepeatedWallTimeOption": [
        "IntlCalendar::setRepeatedWallTimeOption",
        "intlcalendar.setrepeatedwalltimeoption.php",
        "Set behavior for handling repeating wall times at negative timezone offset transitions"
    ],
    "IntlCalendarsetSkippedWallTimeOption": [
        "IntlCalendar::setSkippedWallTimeOption",
        "intlcalendar.setskippedwalltimeoption.php",
        "Set behavior for handling skipped wall times at positive timezone offset transitions"
    ],
    "IntlCalendarsetTime": [
        "IntlCalendar::setTime",
        "intlcalendar.settime.php",
        "Set the calendar time in milliseconds since the epoch"
    ],
    "IntlCalendarsetTimeZone": [
        "IntlCalendar::setTimeZone",
        "intlcalendar.settimezone.php",
        "Set the timezone used by this calendar"
    ],
    "IntlCalendartoDateTime": [
        "IntlCalendar::toDateTime",
        "intlcalendar.todatetime.php",
        "Convert an IntlCalendar into a DateTime object"
    ],
    "IntlCalendarconstruct": [
        "IntlCalendar::__construct",
        "intlcalendar.construct.php",
        "Private constructor for disallowing instantiation"
    ],
    "IntlCharcharAge": [
        "IntlChar::charAge",
        "intlchar.charage.php",
        "Get the &quot;age&quot; of the code point"
    ],
    "IntlCharcharDigitValue": [
        "IntlChar::charDigitValue",
        "intlchar.chardigitvalue.php",
        "Get the decimal digit value of a decimal digit character"
    ],
    "IntlCharcharDirection": [
        "IntlChar::charDirection",
        "intlchar.chardirection.php",
        "Get bidirectional category value for a code point"
    ],
    "IntlCharcharFromName": [
        "IntlChar::charFromName",
        "intlchar.charfromname.php",
        "Find Unicode character by name and return its code point value"
    ],
    "IntlCharcharMirror": [
        "IntlChar::charMirror",
        "intlchar.charmirror.php",
        "Get the &quot;mirror-image&quot; character for a code point"
    ],
    "IntlCharcharName": [
        "IntlChar::charName",
        "intlchar.charname.php",
        "Retrieve the name of a Unicode character"
    ],
    "IntlCharcharType": [
        "IntlChar::charType",
        "intlchar.chartype.php",
        "Get the general category value for a code point"
    ],
    "IntlCharchr": [
        "IntlChar::chr",
        "intlchar.chr.php",
        "Return Unicode character by code point value"
    ],
    "IntlChardigit": [
        "IntlChar::digit",
        "intlchar.digit.php",
        "Get the decimal digit value of a code point for a given radix"
    ],
    "IntlCharenumCharNames": [
        "IntlChar::enumCharNames",
        "intlchar.enumcharnames.php",
        "Enumerate all assigned Unicode characters within a range"
    ],
    "IntlCharenumCharTypes": [
        "IntlChar::enumCharTypes",
        "intlchar.enumchartypes.php",
        "Enumerate all code points with their Unicode general categories"
    ],
    "IntlCharfoldCase": [
        "IntlChar::foldCase",
        "intlchar.foldcase.php",
        "Perform case folding on a code point"
    ],
    "IntlCharforDigit": [
        "IntlChar::forDigit",
        "intlchar.fordigit.php",
        "Get character representation for a given digit and radix"
    ],
    "IntlChargetBidiPairedBracket": [
        "IntlChar::getBidiPairedBracket",
        "intlchar.getbidipairedbracket.php",
        "Get the paired bracket character for a code point"
    ],
    "IntlChargetBlockCode": [
        "IntlChar::getBlockCode",
        "intlchar.getblockcode.php",
        "Get the Unicode allocation block containing a code point"
    ],
    "IntlChargetCombiningClass": [
        "IntlChar::getCombiningClass",
        "intlchar.getcombiningclass.php",
        "Get the combining class of a code point"
    ],
    "IntlChargetFCNFKCClosure": [
        "IntlChar::getFC_NFKC_Closure",
        "intlchar.getfc-nfkc-closure.php",
        "Get the FC_NFKC_Closure property for a code point"
    ],
    "IntlChargetIntPropertyMaxValue": [
        "IntlChar::getIntPropertyMaxValue",
        "intlchar.getintpropertymaxvalue.php",
        "Get the max value for a Unicode property"
    ],
    "IntlChargetIntPropertyMinValue": [
        "IntlChar::getIntPropertyMinValue",
        "intlchar.getintpropertyminvalue.php",
        "Get the min value for a Unicode property"
    ],
    "IntlChargetIntPropertyValue": [
        "IntlChar::getIntPropertyValue",
        "intlchar.getintpropertyvalue.php",
        "Get the value for a Unicode property for a code point"
    ],
    "IntlChargetNumericValue": [
        "IntlChar::getNumericValue",
        "intlchar.getnumericvalue.php",
        "Get the numeric value for a Unicode code point"
    ],
    "IntlChargetPropertyEnum": [
        "IntlChar::getPropertyEnum",
        "intlchar.getpropertyenum.php",
        "Get the property constant value for a given property name"
    ],
    "IntlChargetPropertyName": [
        "IntlChar::getPropertyName",
        "intlchar.getpropertyname.php",
        "Get the Unicode name for a property"
    ],
    "IntlChargetPropertyValueEnum": [
        "IntlChar::getPropertyValueEnum",
        "intlchar.getpropertyvalueenum.php",
        "Get the property value for a given value name"
    ],
    "IntlChargetPropertyValueName": [
        "IntlChar::getPropertyValueName",
        "intlchar.getpropertyvaluename.php",
        "Get the Unicode name for a property value"
    ],
    "IntlChargetUnicodeVersion": [
        "IntlChar::getUnicodeVersion",
        "intlchar.getunicodeversion.php",
        "Get the Unicode version"
    ],
    "IntlCharhasBinaryProperty": [
        "IntlChar::hasBinaryProperty",
        "intlchar.hasbinaryproperty.php",
        "Check a binary Unicode property for a code point"
    ],
    "IntlCharisalnum": [
        "IntlChar::isalnum",
        "intlchar.isalnum.php",
        "Check if code point is an alphanumeric character"
    ],
    "IntlCharisalpha": [
        "IntlChar::isalpha",
        "intlchar.isalpha.php",
        "Check if code point is a letter character"
    ],
    "IntlCharisbase": [
        "IntlChar::isbase",
        "intlchar.isbase.php",
        "Check if code point is a base character"
    ],
    "IntlCharisblank": [
        "IntlChar::isblank",
        "intlchar.isblank.php",
        "Check if code point is a &quot;blank&quot; or &quot;horizontal space&quot; character"
    ],
    "IntlChariscntrl": [
        "IntlChar::iscntrl",
        "intlchar.iscntrl.php",
        "Check if code point is a control character"
    ],
    "IntlCharisdefined": [
        "IntlChar::isdefined",
        "intlchar.isdefined.php",
        "Check whether the code point is defined"
    ],
    "IntlCharisdigit": [
        "IntlChar::isdigit",
        "intlchar.isdigit.php",
        "Check if code point is a digit character"
    ],
    "IntlCharisgraph": [
        "IntlChar::isgraph",
        "intlchar.isgraph.php",
        "Check if code point is a graphic character"
    ],
    "IntlCharisIDIgnorable": [
        "IntlChar::isIDIgnorable",
        "intlchar.isidignorable.php",
        "Check if code point is an ignorable character"
    ],
    "IntlCharisIDPart": [
        "IntlChar::isIDPart",
        "intlchar.isidpart.php",
        "Check if code point is permissible in an identifier"
    ],
    "IntlCharisIDStart": [
        "IntlChar::isIDStart",
        "intlchar.isidstart.php",
        "Check if code point is permissible as the first character in an identifier"
    ],
    "IntlCharisISOControl": [
        "IntlChar::isISOControl",
        "intlchar.isisocontrol.php",
        "Check if code point is an ISO control code"
    ],
    "IntlCharisJavaIDPart": [
        "IntlChar::isJavaIDPart",
        "intlchar.isjavaidpart.php",
        "Check if code point is permissible in a Java identifier"
    ],
    "IntlCharisJavaIDStart": [
        "IntlChar::isJavaIDStart",
        "intlchar.isjavaidstart.php",
        "Check if code point is permissible as the first character in a Java identifier"
    ],
    "IntlCharisJavaSpaceChar": [
        "IntlChar::isJavaSpaceChar",
        "intlchar.isjavaspacechar.php",
        "Check if code point is a space character according to Java"
    ],
    "IntlCharislower": [
        "IntlChar::islower",
        "intlchar.islower.php",
        "Check if code point is a lowercase letter"
    ],
    "IntlCharisMirrored": [
        "IntlChar::isMirrored",
        "intlchar.ismirrored.php",
        "Check if code point has the Bidi_Mirrored property"
    ],
    "IntlCharisprint": [
        "IntlChar::isprint",
        "intlchar.isprint.php",
        "Check if code point is a printable character"
    ],
    "IntlCharispunct": [
        "IntlChar::ispunct",
        "intlchar.ispunct.php",
        "Check if code point is punctuation character"
    ],
    "IntlCharisspace": [
        "IntlChar::isspace",
        "intlchar.isspace.php",
        "Check if code point is a space character"
    ],
    "IntlCharistitle": [
        "IntlChar::istitle",
        "intlchar.istitle.php",
        "Check if code point is a titlecase letter"
    ],
    "IntlCharisUAlphabetic": [
        "IntlChar::isUAlphabetic",
        "intlchar.isualphabetic.php",
        "Check if code point has the Alphabetic Unicode property"
    ],
    "IntlCharisULowercase": [
        "IntlChar::isULowercase",
        "intlchar.isulowercase.php",
        "Check if code point has the Lowercase Unicode property"
    ],
    "IntlCharisupper": [
        "IntlChar::isupper",
        "intlchar.isupper.php",
        "Check if code point has the general category &quot;Lu&quot; (uppercase letter)"
    ],
    "IntlCharisUUppercase": [
        "IntlChar::isUUppercase",
        "intlchar.isuuppercase.php",
        "Check if code point has the Uppercase Unicode property"
    ],
    "IntlCharisUWhiteSpace": [
        "IntlChar::isUWhiteSpace",
        "intlchar.isuwhitespace.php",
        "Check if code point has the White_Space Unicode property"
    ],
    "IntlCharisWhitespace": [
        "IntlChar::isWhitespace",
        "intlchar.iswhitespace.php",
        "Check if code point is a whitespace character according to ICU"
    ],
    "IntlCharisxdigit": [
        "IntlChar::isxdigit",
        "intlchar.isxdigit.php",
        "Check if code point is a hexadecimal digit"
    ],
    "IntlCharord": [
        "IntlChar::ord",
        "intlchar.ord.php",
        "Return Unicode code point value of character"
    ],
    "IntlChartolower": [
        "IntlChar::tolower",
        "intlchar.tolower.php",
        "Make Unicode character lowercase"
    ],
    "IntlChartotitle": [
        "IntlChar::totitle",
        "intlchar.totitle.php",
        "Make Unicode character titlecase"
    ],
    "IntlChartoupper": [
        "IntlChar::toupper",
        "intlchar.toupper.php",
        "Make Unicode character uppercase"
    ],
    "IntlCodePointBreakIteratorgetLastCodePoint": [
        "IntlCodePointBreakIterator::getLastCodePoint",
        "intlcodepointbreakiterator.getlastcodepoint.php",
        "Get last code point passed over after advancing or receding the iterator"
    ],
    "IntlDateFormattercreate": [
        "IntlDateFormatter::create",
        "intldateformatter.create.php",
        "Date Formatter を作成する"
    ],
    "IntlDateFormatterformat": [
        "IntlDateFormatter::format",
        "intldateformatter.format.php",
        "日付/時刻 の値を文字列としてフォーマットする"
    ],
    "IntlDateFormatterformatObject": [
        "IntlDateFormatter::formatObject",
        "intldateformatter.formatobject.php",
        "オブジェクトの書式を設定する"
    ],
    "IntlDateFormattergetCalendar": [
        "IntlDateFormatter::getCalendar",
        "intldateformatter.getcalendar.php",
        "IntlDateFormatter が使用するカレンダー型を取得する"
    ],
    "IntlDateFormattergetCalendarObject": [
        "IntlDateFormatter::getCalendarObject",
        "intldateformatter.getcalendarobject.php",
        "カレンダーオブジェクトのコピーを取得する"
    ],
    "IntlDateFormattergetDateType": [
        "IntlDateFormatter::getDateType",
        "intldateformatter.getdatetype.php",
        "IntlDateFormatter が使用する日付形式を取得する"
    ],
    "IntlDateFormattergetErrorCode": [
        "IntlDateFormatter::getErrorCode",
        "intldateformatter.geterrorcode.php",
        "直近の操作のエラーコードを取得する"
    ],
    "IntlDateFormattergetErrorMessage": [
        "IntlDateFormatter::getErrorMessage",
        "intldateformatter.geterrormessage.php",
        "直近の操作のエラーテキストを取得する"
    ],
    "IntlDateFormattergetLocale": [
        "IntlDateFormatter::getLocale",
        "intldateformatter.getlocale.php",
        "Formatter が使用するロケールを取得する"
    ],
    "IntlDateFormattergetPattern": [
        "IntlDateFormatter::getPattern",
        "intldateformatter.getpattern.php",
        "IntlDateFormatter が使用するパターンを取得する"
    ],
    "IntlDateFormattergetTimeType": [
        "IntlDateFormatter::getTimeType",
        "intldateformatter.gettimetype.php",
        "IntlDateFormatter が使用する時刻形式を取得する"
    ],
    "IntlDateFormattergetTimeZone": [
        "IntlDateFormatter::getTimeZone",
        "intldateformatter.gettimezone.php",
        "タイムゾーンを取得する"
    ],
    "IntlDateFormattergetTimeZoneId": [
        "IntlDateFormatter::getTimeZoneId",
        "intldateformatter.gettimezoneid.php",
        "IntlDateFormatter が使用するタイムゾーン ID を取得する"
    ],
    "IntlDateFormatterisLenient": [
        "IntlDateFormatter::isLenient",
        "intldateformatter.islenient.php",
        "IntlDateFormatter で使用する寛大さを取得する"
    ],
    "IntlDateFormatterlocaltime": [
        "IntlDateFormatter::localtime",
        "intldateformatter.localtime.php",
        "文字列をパースして、フィールドベースの時刻値にする"
    ],
    "IntlDateFormatterparse": [
        "IntlDateFormatter::parse",
        "intldateformatter.parse.php",
        "文字列をパースしてタイムスタンプにする"
    ],
    "IntlDateFormattersetCalendar": [
        "IntlDateFormatter::setCalendar",
        "intldateformatter.setcalendar.php",
        "Formatter が使うカレンダー型を設定する"
    ],
    "IntlDateFormattersetLenient": [
        "IntlDateFormatter::setLenient",
        "intldateformatter.setlenient.php",
        "パーサの寛大さを設定する"
    ],
    "IntlDateFormattersetPattern": [
        "IntlDateFormatter::setPattern",
        "intldateformatter.setpattern.php",
        "IntlDateFormatter が使用するパターンを設定する"
    ],
    "IntlDateFormattersetTimeZone": [
        "IntlDateFormatter::setTimeZone",
        "intldateformatter.settimezone.php",
        "タイムゾーンを設定する"
    ],
    "IntlDateFormattersetTimeZoneId": [
        "IntlDateFormatter::setTimeZoneId",
        "intldateformatter.settimezoneid.php",
        "使用するタイムゾーンを設定する"
    ],
    "IntlGregorianCalendargetGregorianChange": [
        "IntlGregorianCalendar::getGregorianChange",
        "intlgregoriancalendar.getgregorianchange.php",
        "Get the Gregorian Calendar change date"
    ],
    "IntlGregorianCalendarisLeapYear": [
        "IntlGregorianCalendar::isLeapYear",
        "intlgregoriancalendar.isleapyear.php",
        "Determine if the given year is a leap year"
    ],
    "IntlGregorianCalendarsetGregorianChange": [
        "IntlGregorianCalendar::setGregorianChange",
        "intlgregoriancalendar.setgregorianchange.php",
        "Set the Gregorian Calendar the change date"
    ],
    "IntlGregorianCalendarconstruct": [
        "IntlGregorianCalendar::__construct",
        "intlgregoriancalendar.construct.php",
        "Create the Gregorian Calendar class"
    ],
    "IntlIteratorcurrent": [
        "IntlIterator::current",
        "intliterator.current.php",
        "Get the current element"
    ],
    "IntlIteratorkey": [
        "IntlIterator::key",
        "intliterator.key.php",
        "Get the current key"
    ],
    "IntlIteratornext": [
        "IntlIterator::next",
        "intliterator.next.php",
        "Move forward to the next element"
    ],
    "IntlIteratorrewind": [
        "IntlIterator::rewind",
        "intliterator.rewind.php",
        "Rewind the iterator to the first element"
    ],
    "IntlIteratorvalid": [
        "IntlIterator::valid",
        "intliterator.valid.php",
        "Check if current position is valid"
    ],
    "IntlPartsIteratorgetBreakIterator": [
        "IntlPartsIterator::getBreakIterator",
        "intlpartsiterator.getbreakiterator.php",
        "Get IntlBreakIterator backing this parts iterator"
    ],
    "IntlRuleBasedBreakIteratorgetBinaryRules": [
        "IntlRuleBasedBreakIterator::getBinaryRules",
        "intlrulebasedbreakiterator.getbinaryrules.php",
        "Get the binary form of compiled rules"
    ],
    "IntlRuleBasedBreakIteratorgetRules": [
        "IntlRuleBasedBreakIterator::getRules",
        "intlrulebasedbreakiterator.getrules.php",
        "Get the rule set used to create this object"
    ],
    "IntlRuleBasedBreakIteratorgetRuleStatus": [
        "IntlRuleBasedBreakIterator::getRuleStatus",
        "intlrulebasedbreakiterator.getrulestatus.php",
        "Get the largest status value from the break rules that determined the current break position"
    ],
    "IntlRuleBasedBreakIteratorgetRuleStatusVec": [
        "IntlRuleBasedBreakIterator::getRuleStatusVec",
        "intlrulebasedbreakiterator.getrulestatusvec.php",
        "Get the status values from the break rules that determined the current break position"
    ],
    "IntlRuleBasedBreakIteratorconstruct": [
        "IntlRuleBasedBreakIterator::__construct",
        "intlrulebasedbreakiterator.construct.php",
        "Create iterator from ruleset"
    ],
    "IntlTimeZonecountEquivalentIDs": [
        "IntlTimeZone::countEquivalentIDs",
        "intltimezone.countequivalentids.php",
        "指定した ID を含む等価グループの中にある ID の数を取得する"
    ],
    "IntlTimeZonecreateDefault": [
        "IntlTimeZone::createDefault",
        "intltimezone.createdefault.php",
        "このホストのデフォルトタイムゾーンの新しいコピーを作る"
    ],
    "IntlTimeZonecreateEnumeration": [
        "IntlTimeZone::createEnumeration",
        "intltimezone.createenumeration.php",
        "指定した国あるいはオフセットに関連するタイムゾーン ID の一覧を取得する"
    ],
    "IntlTimeZonecreateTimeZone": [
        "IntlTimeZone::createTimeZone",
        "intltimezone.createtimezone.php",
        "指定した ID のタイムゾーンオブジェクトを作る"
    ],
    "IntlTimeZonecreateTimeZoneIDEnumeration": [
        "IntlTimeZone::createTimeZoneIDEnumeration",
        "intltimezone.createtimezoneidenumeration.php",
        "Get an enumeration over system time zone IDs with the given filter conditions"
    ],
    "IntlTimeZonefromDateTimeZone": [
        "IntlTimeZone::fromDateTimeZone",
        "intltimezone.fromdatetimezone.php",
        "DateTimeZone からタイムゾーンオブジェクトを作る"
    ],
    "IntlTimeZonegetCanonicalID": [
        "IntlTimeZone::getCanonicalID",
        "intltimezone.getcanonicalid.php",
        "指定したタイムゾーン ID の、正式なシステムタイムゾーン ID あるいは正規化したカスタムタイムゾーン ID を取得する"
    ],
    "IntlTimeZonegetDisplayName": [
        "IntlTimeZone::getDisplayName",
        "intltimezone.getdisplayname.php",
        "このタイムゾーンの、ユーザー向けに表示する名前を取得する"
    ],
    "IntlTimeZonegetDSTSavings": [
        "IntlTimeZone::getDSTSavings",
        "intltimezone.getdstsavings.php",
        "ローカルの標準時刻からローカルの実測時刻を得るために加算する時間を取得する"
    ],
    "IntlTimeZonegetEquivalentID": [
        "IntlTimeZone::getEquivalentID",
        "intltimezone.getequivalentid.php",
        "指定した ID を含む等価グループの ID を取得する"
    ],
    "IntlTimeZonegetErrorCode": [
        "IntlTimeZone::getErrorCode",
        "intltimezone.geterrorcode.php",
        "直近のエラーコードを取得する"
    ],
    "IntlTimeZonegetErrorMessage": [
        "IntlTimeZone::getErrorMessage",
        "intltimezone.geterrormessage.php",
        "直近のエラーメッセージを取得する"
    ],
    "IntlTimeZonegetGMT": [
        "IntlTimeZone::getGMT",
        "intltimezone.getgmt.php",
        "GMT (UTC) タイムゾーンを作る"
    ],
    "IntlTimeZonegetID": [
        "IntlTimeZone::getID",
        "intltimezone.getid.php",
        "タイムゾーン ID を取得する"
    ],
    "IntlTimeZonegetIDForWindowsID": [
        "IntlTimeZone::getIDForWindowsID",
        "intltimezone.getidforwindowsid.php",
        "Translate a Windows timezone into a system timezone"
    ],
    "IntlTimeZonegetOffset": [
        "IntlTimeZone::getOffset",
        "intltimezone.getoffset.php",
        "指定した時刻の、GMT へのオフセットを取得する"
    ],
    "IntlTimeZonegetRawOffset": [
        "IntlTimeZone::getRawOffset",
        "intltimezone.getrawoffset.php",
        "(夏時間を考慮せずに) GMT へのオフセットを取得する"
    ],
    "IntlTimeZonegetRegion": [
        "IntlTimeZone::getRegion",
        "intltimezone.getregion.php",
        "Get the region code associated with the given system time zone ID"
    ],
    "IntlTimeZonegetTZDataVersion": [
        "IntlTimeZone::getTZDataVersion",
        "intltimezone.gettzdataversion.php",
        "ICU が使っているタイムゾーンデータのバージョンを取得する"
    ],
    "IntlTimeZonegetUnknown": [
        "IntlTimeZone::getUnknown",
        "intltimezone.getunknown.php",
        "Get the &quot;unknown&quot; time zone"
    ],
    "IntlTimeZonegetWindowsID": [
        "IntlTimeZone::getWindowsID",
        "intltimezone.getwindowsid.php",
        "Translate a system timezone into a Windows timezone"
    ],
    "IntlTimeZonehasSameRules": [
        "IntlTimeZone::hasSameRules",
        "intltimezone.hassamerules.php",
        "このタイムゾーンが別のタイムゾーンと同じルールおよびオフセットを使っているかどうかを調べる"
    ],
    "IntlTimeZonetoDateTimeZone": [
        "IntlTimeZone::toDateTimeZone",
        "intltimezone.todatetimezone.php",
        "DateTimeZone オブジェクトに変換する"
    ],
    "IntlTimeZoneuseDaylightTime": [
        "IntlTimeZone::useDaylightTime",
        "intltimezone.usedaylighttime.php",
        "このタイムゾーンが夏時間を採用しているかどうかを調べる"
    ],
    "intlerrorname": [
        "intl_error_name",
        "function.intl-error-name.php",
        "指定したエラーコードに対応する名前を取得する"
    ],
    "intlgeterrorcode": [
        "intl_get_error_code",
        "function.intl-get-error-code.php",
        "直近のエラーコードを取得する"
    ],
    "intlgeterrormessage": [
        "intl_get_error_message",
        "function.intl-get-error-message.php",
        "直近のエラーの説明を取得する"
    ],
    "intlisfailure": [
        "intl_is_failure",
        "function.intl-is-failure.php",
        "指定したエラーコードが失敗を表すかどうかを調べる"
    ],
    "intval": [
        "intval",
        "function.intval.php",
        "変数の整数としての値を取得する"
    ],
    "inarray": [
        "in_array",
        "function.in-array.php",
        "配列に値があるかチェックする"
    ],
    "ip2long": [
        "ip2long",
        "function.ip2long.php",
        "ドット表記の (IPv4) IP アドレスを、長整数表現に変換する"
    ],
    "iptcembed": [
        "iptcembed",
        "function.iptcembed.php",
        "バイナリ IPTC データを JPEG イメージに埋めこむ"
    ],
    "iptcparse": [
        "iptcparse",
        "function.iptcparse.php",
        "バイナリの IPTC ブロックのタグをパースする"
    ],
    "isset": [
        "isset",
        "function.isset.php",
        "変数が宣言されていること、そして NULL とは異なることを検査する"
    ],
    "isa": [
        "is_a",
        "function.is-a.php",
        "オブジェクトがこのクラスのものであるか、このクラスをその親クラスのひとつとしているかどうかを調べる"
    ],
    "isarray": [
        "is_array",
        "function.is-array.php",
        "変数が配列かどうかを検査する"
    ],
    "isbool": [
        "is_bool",
        "function.is-bool.php",
        "変数が boolean であるかを調べる"
    ],
    "iscallable": [
        "is_callable",
        "function.is-callable.php",
        "引数が、関数としてコール可能な構造であるかどうかを調べる"
    ],
    "iscountable": [
        "is_countable",
        "function.is-countable.php",
        "引数が、数えられる値かどうかを調べる"
    ],
    "isdir": [
        "is_dir",
        "function.is-dir.php",
        "ファイルがディレクトリかどうかを調べる"
    ],
    "isdouble": [
        "is_double",
        "function.is-double.php",
        "is_float のエイリアス"
    ],
    "isexecutable": [
        "is_executable",
        "function.is-executable.php",
        "ファイルが実行可能かどうかを調べる"
    ],
    "isfile": [
        "is_file",
        "function.is-file.php",
        "通常ファイルかどうかを調べる"
    ],
    "isfinite": [
        "is_finite",
        "function.is-finite.php",
        "値が有限の数値であるかどうかを判定する"
    ],
    "isfloat": [
        "is_float",
        "function.is-float.php",
        "変数の型が float かどうか調べる"
    ],
    "isinfinite": [
        "is_infinite",
        "function.is-infinite.php",
        "値が無限大であるかどうかを判定する"
    ],
    "isint": [
        "is_int",
        "function.is-int.php",
        "変数が整数型かどうかを検査する"
    ],
    "isinteger": [
        "is_integer",
        "function.is-integer.php",
        "is_int のエイリアス"
    ],
    "isiterable": [
        "is_iterable",
        "function.is-iterable.php",
        "変数の内容が反復可能な値であることを確認する"
    ],
    "islink": [
        "is_link",
        "function.is-link.php",
        "ファイルがシンボリックリンクかどうかを調べる"
    ],
    "islong": [
        "is_long",
        "function.is-long.php",
        "is_int のエイリアス"
    ],
    "isnan": [
        "is_nan",
        "function.is-nan.php",
        "値が非数かどうかを判定する"
    ],
    "isnull": [
        "is_null",
        "function.is-null.php",
        "変数が NULL かどうか調べる"
    ],
    "isnumeric": [
        "is_numeric",
        "function.is-numeric.php",
        "変数が数字または数値形式の文字列であるかを調べる"
    ],
    "isobject": [
        "is_object",
        "function.is-object.php",
        "変数がオブジェクトかどうかを検査する"
    ],
    "isreadable": [
        "is_readable",
        "function.is-readable.php",
        "ファイルが存在し、読み込み可能であるかどうかを知る"
    ],
    "isreal": [
        "is_real",
        "function.is-real.php",
        "is_float のエイリアス"
    ],
    "isresource": [
        "is_resource",
        "function.is-resource.php",
        "変数がリソースかどうかを調べる"
    ],
    "isscalar": [
        "is_scalar",
        "function.is-scalar.php",
        "変数がスカラかどうかを調べる"
    ],
    "issoapfault": [
        "is_soap_fault",
        "function.is-soap-fault.php",
        "SOAP コールが失敗したかどうかを調べる"
    ],
    "isstring": [
        "is_string",
        "function.is-string.php",
        "変数の型が文字列かどうかを調べる"
    ],
    "issubclassof": [
        "is_subclass_of",
        "function.is-subclass-of.php",
        "あるオブジェクトが指定したクラスのサブクラスに属するか (あるいは指定したインターフェイスを実装しているか) どうかを調べる"
    ],
    "istainted": [
        "is_tainted",
        "function.is-tainted.php",
        "文字列が汚染されているかどうかを調べる"
    ],
    "isuploadedfile": [
        "is_uploaded_file",
        "function.is-uploaded-file.php",
        "HTTP POST でアップロードされたファイルかどうかを調べる"
    ],
    "iswritable": [
        "is_writable",
        "function.is-writable.php",
        "ファイルが書き込み可能かどうかを調べる"
    ],
    "iswriteable": [
        "is_writeable",
        "function.is-writeable.php",
        "is_writable のエイリアス"
    ],
    "Iteratorcurrent": [
        "Iterator::current",
        "iterator.current.php",
        "現在の要素を返す"
    ],
    "Iteratorkey": [
        "Iterator::key",
        "iterator.key.php",
        "現在の要素のキーを返す"
    ],
    "Iteratornext": [
        "Iterator::next",
        "iterator.next.php",
        "次の要素に進む"
    ],
    "Iteratorrewind": [
        "Iterator::rewind",
        "iterator.rewind.php",
        "イテレータの最初の要素に巻き戻す"
    ],
    "Iteratorvalid": [
        "Iterator::valid",
        "iterator.valid.php",
        "現在位置が有効かどうかを調べる"
    ],
    "IteratorAggregategetIterator": [
        "IteratorAggregate::getIterator",
        "iteratoraggregate.getiterator.php",
        "外部イテレータを取得する"
    ],
    "IteratorIteratorcurrent": [
        "IteratorIterator::current",
        "iteratoriterator.current.php",
        "現在の値を取得する"
    ],
    "IteratorIteratorgetInnerIterator": [
        "IteratorIterator::getInnerIterator",
        "iteratoriterator.getinneriterator.php",
        "内部イテレータを取得する"
    ],
    "IteratorIteratorkey": [
        "IteratorIterator::key",
        "iteratoriterator.key.php",
        "現在の要素のキーを取得する"
    ],
    "IteratorIteratornext": [
        "IteratorIterator::next",
        "iteratoriterator.next.php",
        "次の要素に移動する"
    ],
    "IteratorIteratorrewind": [
        "IteratorIterator::rewind",
        "iteratoriterator.rewind.php",
        "最初の要素に巻き戻す"
    ],
    "IteratorIteratorvalid": [
        "IteratorIterator::valid",
        "iteratoriterator.valid.php",
        "イテレータが有効かどうかを調べる"
    ],
    "IteratorIteratorconstruct": [
        "IteratorIterator::__construct",
        "iteratoriterator.construct.php",
        "traversable な何かからイテレータを作成する"
    ],
    "iteratorapply": [
        "iterator_apply",
        "function.iterator-apply.php",
        "ユーザー関数をイテレータのすべての要素でコールする"
    ],
    "iteratorcount": [
        "iterator_count",
        "function.iterator-count.php",
        "イテレータにある要素をカウントする"
    ],
    "iteratortoarray": [
        "iterator_to_array",
        "function.iterator-to-array.php",
        "イテレータを配列にコピーする"
    ],
    "jddayofweek": [
        "jddayofweek",
        "function.jddayofweek.php",
        "曜日を返す"
    ],
    "jdmonthname": [
        "jdmonthname",
        "function.jdmonthname.php",
        "月の名前を返す"
    ],
    "jdtofrench": [
        "jdtofrench",
        "function.jdtofrench.php",
        "ユリウス積算日をフランス革命暦(共和暦)に変換する"
    ],
    "jdtogregorian": [
        "jdtogregorian",
        "function.jdtogregorian.php",
        "ユリウス積算日をグレゴリウス日に変換する"
    ],
    "jdtojewish": [
        "jdtojewish",
        "function.jdtojewish.php",
        "ユリウス積算日をユダヤ暦に変換する"
    ],
    "jdtojulian": [
        "jdtojulian",
        "function.jdtojulian.php",
        "ユリウス積算日をユリウス暦に変換する"
    ],
    "jdtounix": [
        "jdtounix",
        "function.jdtounix.php",
        "ユリウス歴を Unix タイムスタンプに変換する"
    ],
    "jewishtojd": [
        "jewishtojd",
        "function.jewishtojd.php",
        "ユダヤ暦の日付けをユリウス積算日に変換する"
    ],
    "join": [
        "join",
        "function.join.php",
        "implode のエイリアス"
    ],
    "jpeg2wbmp": [
        "jpeg2wbmp",
        "function.jpeg2wbmp.php",
        "JPEG画像をWBMP画像に変換する"
    ],
    "JsonSerializablejsonSerialize": [
        "JsonSerializable::jsonSerialize",
        "jsonserializable.jsonserialize.php",
        "JSON にシリアライズしたいデータを指定する"
    ],
    "jsondecode": [
        "json_decode",
        "function.json-decode.php",
        "JSON 文字列をデコードする"
    ],
    "jsonencode": [
        "json_encode",
        "function.json-encode.php",
        "値を JSON 形式にして返す"
    ],
    "jsonlasterror": [
        "json_last_error",
        "function.json-last-error.php",
        "直近に発生したエラーを返す"
    ],
    "jsonlasterrormsg": [
        "json_last_error_msg",
        "function.json-last-error-msg.php",
        "直近の json_encode() や json_decode() の呼び出しのエラー文字列を返す"
    ],
    "JudybyCount": [
        "Judy::byCount",
        "judy.bycount.php",
        "Locate the Nth index present in the Judy array"
    ],
    "Judycount": [
        "Judy::count",
        "judy.count.php",
        "Count the number of elements in the Judy array"
    ],
    "Judyfirst": [
        "Judy::first",
        "judy.first.php",
        "Search for the first index in the Judy array"
    ],
    "JudyfirstEmpty": [
        "Judy::firstEmpty",
        "judy.firstempty.php",
        "Search for the first absent index in the Judy array"
    ],
    "Judyfree": [
        "Judy::free",
        "judy.free.php",
        "Free the entire Judy array"
    ],
    "JudygetType": [
        "Judy::getType",
        "judy.gettype.php",
        "Return the type of the current Judy array"
    ],
    "Judylast": [
        "Judy::last",
        "judy.last.php",
        "Search for the last index in the Judy array"
    ],
    "JudylastEmpty": [
        "Judy::lastEmpty",
        "judy.lastempty.php",
        "Search for the last absent index in the Judy array"
    ],
    "JudymemoryUsage": [
        "Judy::memoryUsage",
        "judy.memoryusage.php",
        "Return the memory used by the Judy array"
    ],
    "Judynext": [
        "Judy::next",
        "judy.next.php",
        "Search for the next index in the Judy array"
    ],
    "JudynextEmpty": [
        "Judy::nextEmpty",
        "judy.nextempty.php",
        "Search for the next absent index in the Judy array"
    ],
    "JudyoffsetExists": [
        "Judy::offsetExists",
        "judy.offsetexists.php",
        "Whether a offset exists"
    ],
    "JudyoffsetGet": [
        "Judy::offsetGet",
        "judy.offsetget.php",
        "Offset to retrieve"
    ],
    "JudyoffsetSet": [
        "Judy::offsetSet",
        "judy.offsetset.php",
        "Offset to set"
    ],
    "JudyoffsetUnset": [
        "Judy::offsetUnset",
        "judy.offsetunset.php",
        "Offset to unset"
    ],
    "Judyprev": [
        "Judy::prev",
        "judy.prev.php",
        "Search for the previous index in the Judy array"
    ],
    "JudyprevEmpty": [
        "Judy::prevEmpty",
        "judy.prevempty.php",
        "Search for the previous absent index in the Judy array"
    ],
    "Judysize": [
        "Judy::size",
        "judy.size.php",
        "Return the size of the current Judy array"
    ],
    "Judyconstruct": [
        "Judy::__construct",
        "judy.construct.php",
        "Construct a new Judy object"
    ],
    "Judydestruct": [
        "Judy::__destruct",
        "judy.destruct.php",
        "Destruct a Judy object"
    ],
    "judytype": [
        "judy_type",
        "function.judy-type.php",
        "Return the type of a Judy array"
    ],
    "judyversion": [
        "judy_version",
        "function.judy-version.php",
        "Return or print the current PHP Judy version"
    ],
    "juliantojd": [
        "juliantojd",
        "function.juliantojd.php",
        "ユリウス暦をユリウス積算日に変換する"
    ],
    "key": [
        "key",
        "function.key.php",
        "配列からキーを取り出す"
    ],
    "keyexists": [
        "key_exists",
        "function.key-exists.php",
        "array_key_exists のエイリアス"
    ],
    "krsort": [
        "krsort",
        "function.krsort.php",
        "配列をキーで逆順にソートする"
    ],
    "ksort": [
        "ksort",
        "function.ksort.php",
        "配列をキーでソートする"
    ],
    "lcfirst": [
        "lcfirst",
        "function.lcfirst.php",
        "文字列の最初の文字を小文字にする"
    ],
    "lcgvalue": [
        "lcg_value",
        "function.lcg-value.php",
        "複合線形合同法"
    ],
    "lchgrp": [
        "lchgrp",
        "function.lchgrp.php",
        "シンボリックリンクのグループ所有権を変更する"
    ],
    "lchown": [
        "lchown",
        "function.lchown.php",
        "シンボリックリンクの所有者を変更する"
    ],
    "ldap8859tot61": [
        "ldap_8859_to_t61",
        "function.ldap-8859-to-t61.php",
        "8859 文字を t61 文字に変換する"
    ],
    "ldapadd": [
        "ldap_add",
        "function.ldap-add.php",
        "LDAP ディレクトリにエントリを付加する"
    ],
    "ldapaddext": [
        "ldap_add_ext",
        "function.ldap-add-ext.php",
        "LDAP ディレクトリにエントリを付加する"
    ],
    "ldapbind": [
        "ldap_bind",
        "function.ldap-bind.php",
        "LDAP ディレクトリにバインドする"
    ],
    "ldapbindext": [
        "ldap_bind_ext",
        "function.ldap-bind-ext.php",
        "LDAP ディレクトリにバインドする"
    ],
    "ldapclose": [
        "ldap_close",
        "function.ldap-close.php",
        "ldap_unbind のエイリアス"
    ],
    "ldapcompare": [
        "ldap_compare",
        "function.ldap-compare.php",
        "指定した DN のエントリで見付かった属性の値を比較する"
    ],
    "ldapconnect": [
        "ldap_connect",
        "function.ldap-connect.php",
        "LDAP サーバーへ接続する"
    ],
    "ldapcontrolpagedresult": [
        "ldap_control_paged_result",
        "function.ldap-control-paged-result.php",
        "LDAP ページネーション制御情報を送信する"
    ],
    "ldapcontrolpagedresultresponse": [
        "ldap_control_paged_result_response",
        "function.ldap-control-paged-result-response.php",
        "LDAP ページネーションクッキーを取得する"
    ],
    "ldapcountentries": [
        "ldap_count_entries",
        "function.ldap-count-entries.php",
        "検索結果のエントリ数を数える"
    ],
    "ldapdelete": [
        "ldap_delete",
        "function.ldap-delete.php",
        "ディレクトリからエントリを削除する"
    ],
    "ldapdeleteext": [
        "ldap_delete_ext",
        "function.ldap-delete-ext.php",
        "ディレクトリからエントリを削除する"
    ],
    "ldapdn2ufn": [
        "ldap_dn2ufn",
        "function.ldap-dn2ufn.php",
        "DN をユーザーに分かりやすい名前のフォーマットに変換する"
    ],
    "ldaperr2str": [
        "ldap_err2str",
        "function.ldap-err2str.php",
        "LDAP のエラー番号をエラーメッセージ文字列に変換する"
    ],
    "ldaperrno": [
        "ldap_errno",
        "function.ldap-errno.php",
        "直近の LDAP コマンドの LDAP エラー番号を返す"
    ],
    "ldaperror": [
        "ldap_error",
        "function.ldap-error.php",
        "直近の LDAP コマンドの LDAP エラーメッセージを返す"
    ],
    "ldapescape": [
        "ldap_escape",
        "function.ldap-escape.php",
        "LDAP フィルタまたは DN で使われる文字列をエスケープする"
    ],
    "ldapexop": [
        "ldap_exop",
        "function.ldap-exop.php",
        "拡張されたオペレーションを実行する"
    ],
    "ldapexoppasswd": [
        "ldap_exop_passwd",
        "function.ldap-exop-passwd.php",
        "PASSWD 拡張オペレーションのヘルパ"
    ],
    "ldapexoprefresh": [
        "ldap_exop_refresh",
        "function.ldap-exop-refresh.php",
        "Refresh 拡張操作のヘルパ"
    ],
    "ldapexopwhoami": [
        "ldap_exop_whoami",
        "function.ldap-exop-whoami.php",
        "WHOAMI 拡張オペレーションのヘルパ"
    ],
    "ldapexplodedn": [
        "ldap_explode_dn",
        "function.ldap-explode-dn.php",
        "DN を構成要素ごとに分割する"
    ],
    "ldapfirstattribute": [
        "ldap_first_attribute",
        "function.ldap-first-attribute.php",
        "最初の属性を返す"
    ],
    "ldapfirstentry": [
        "ldap_first_entry",
        "function.ldap-first-entry.php",
        "最初の結果 ID を返す"
    ],
    "ldapfirstreference": [
        "ldap_first_reference",
        "function.ldap-first-reference.php",
        "最初のリファレンスを返す"
    ],
    "ldapfreeresult": [
        "ldap_free_result",
        "function.ldap-free-result.php",
        "結果メモリを開放する"
    ],
    "ldapgetattributes": [
        "ldap_get_attributes",
        "function.ldap-get-attributes.php",
        "検索結果エントリから属性を得る"
    ],
    "ldapgetdn": [
        "ldap_get_dn",
        "function.ldap-get-dn.php",
        "結果エントリから DN を得る"
    ],
    "ldapgetentries": [
        "ldap_get_entries",
        "function.ldap-get-entries.php",
        "全ての結果エントリを得る"
    ],
    "ldapgetoption": [
        "ldap_get_option",
        "function.ldap-get-option.php",
        "指定したオプションの現在の値を得る"
    ],
    "ldapgetvalues": [
        "ldap_get_values",
        "function.ldap-get-values.php",
        "結果エントリから全ての値を得る"
    ],
    "ldapgetvalueslen": [
        "ldap_get_values_len",
        "function.ldap-get-values-len.php",
        "結果エントリから全てのバイナリ値を得る"
    ],
    "ldaplist": [
        "ldap_list",
        "function.ldap-list.php",
        "単一階層の検索を行う"
    ],
    "ldapmodify": [
        "ldap_modify",
        "function.ldap-modify.php",
        "のエイリアス ldap_mod_replace"
    ],
    "ldapmodifybatch": [
        "ldap_modify_batch",
        "function.ldap-modify-batch.php",
        "LDAP エントリの変更をまとめて実行する"
    ],
    "ldapmodadd": [
        "ldap_mod_add",
        "function.ldap-mod-add.php",
        "現在の属性に属性を追加する"
    ],
    "ldapmodaddext": [
        "ldap_mod_add_ext",
        "function.ldap-mod_add-ext.php",
        "現在の属性に属性を追加する"
    ],
    "ldapmoddel": [
        "ldap_mod_del",
        "function.ldap-mod-del.php",
        "現在の属性から属性を削除する"
    ],
    "ldapmoddelext": [
        "ldap_mod_del_ext",
        "function.ldap-mod_del-ext.php",
        "現在の属性から属性を削除する"
    ],
    "ldapmodreplace": [
        "ldap_mod_replace",
        "function.ldap-mod-replace.php",
        "属性を新規の値に置換する"
    ],
    "ldapmodreplaceext": [
        "ldap_mod_replace_ext",
        "function.ldap-mod_replace-ext.php",
        "属性を新規の値に置換する"
    ],
    "ldapnextattribute": [
        "ldap_next_attribute",
        "function.ldap-next-attribute.php",
        "結果における次の属性を得る"
    ],
    "ldapnextentry": [
        "ldap_next_entry",
        "function.ldap-next-entry.php",
        "次の結果エントリを得る"
    ],
    "ldapnextreference": [
        "ldap_next_reference",
        "function.ldap-next-reference.php",
        "次のリファレンスを得る"
    ],
    "ldapparseexop": [
        "ldap_parse_exop",
        "function.ldap-parse-exop.php",
        "LDAP拡張オペレーションの結果オブジェクトをパースする"
    ],
    "ldapparsereference": [
        "ldap_parse_reference",
        "function.ldap-parse-reference.php",
        "参照エントリから情報を展開する"
    ],
    "ldapparseresult": [
        "ldap_parse_result",
        "function.ldap-parse-result.php",
        "結果から情報を展開する"
    ],
    "ldapread": [
        "ldap_read",
        "function.ldap-read.php",
        "エントリを読み込む"
    ],
    "ldaprename": [
        "ldap_rename",
        "function.ldap-rename.php",
        "エントリ名を修正する"
    ],
    "ldaprenameext": [
        "ldap_rename_ext",
        "function.ldap-rename-ext.php",
        "エントリ名を修正する"
    ],
    "ldapsaslbind": [
        "ldap_sasl_bind",
        "function.ldap-sasl-bind.php",
        "SASL を使用して LDAP ディレクトリにバインドする"
    ],
    "ldapsearch": [
        "ldap_search",
        "function.ldap-search.php",
        "LDAP ツリーを探索する"
    ],
    "ldapsetoption": [
        "ldap_set_option",
        "function.ldap-set-option.php",
        "指定したオプションの値を設定する"
    ],
    "ldapsetrebindproc": [
        "ldap_set_rebind_proc",
        "function.ldap-set-rebind-proc.php",
        "参照先を再バインドするためのコールバック関数を設定する"
    ],
    "ldapsort": [
        "ldap_sort",
        "function.ldap-sort.php",
        "LDAP 結果エントリをクライアント側でソートする"
    ],
    "ldapstarttls": [
        "ldap_start_tls",
        "function.ldap-start-tls.php",
        "TLS を開始する"
    ],
    "ldapt61to8859": [
        "ldap_t61_to_8859",
        "function.ldap-t61-to-8859.php",
        "t61 文字を 8859 文字に変換する"
    ],
    "ldapunbind": [
        "ldap_unbind",
        "function.ldap-unbind.php",
        "LDAP ディレクトリへのバインドを解除する"
    ],
    "levenshtein": [
        "levenshtein",
        "function.levenshtein.php",
        "二つの文字列のレーベンシュタイン距離を計算する"
    ],
    "libxmlclearerrors": [
        "libxml_clear_errors",
        "function.libxml-clear-errors.php",
        "libxmlエラーハンドラをクリアする"
    ],
    "libxmldisableentityloader": [
        "libxml_disable_entity_loader",
        "function.libxml-disable-entity-loader.php",
        "外部エンティティの読み込み機能を無効にする"
    ],
    "libxmlgeterrors": [
        "libxml_get_errors",
        "function.libxml-get-errors.php",
        "エラー配列を取得する"
    ],
    "libxmlgetlasterror": [
        "libxml_get_last_error",
        "function.libxml-get-last-error.php",
        "libxmlから直近のエラーを取得する"
    ],
    "libxmlsetexternalentityloader": [
        "libxml_set_external_entity_loader",
        "function.libxml-set-external-entity-loader.php",
        "デフォルトの外部エンティティローダーを変更する"
    ],
    "libxmlsetstreamscontext": [
        "libxml_set_streams_context",
        "function.libxml-set-streams-context.php",
        "次のlibxmlドキュメントの読込／書きこみのためにストリームコンテキストを設定する"
    ],
    "libxmluseinternalerrors": [
        "libxml_use_internal_errors",
        "function.libxml-use-internal-errors.php",
        "libxmlエラーを無効にし、ユーザーが必要に応じてエラー情報を取得できるようにする"
    ],
    "LimitIteratorcurrent": [
        "LimitIterator::current",
        "limititerator.current.php",
        "現在の要素を取得する"
    ],
    "LimitIteratorgetInnerIterator": [
        "LimitIterator::getInnerIterator",
        "limititerator.getinneriterator.php",
        "内部イテレータを取得する"
    ],
    "LimitIteratorgetPosition": [
        "LimitIterator::getPosition",
        "limititerator.getposition.php",
        "現在の位置を返す"
    ],
    "LimitIteratorkey": [
        "LimitIterator::key",
        "limititerator.key.php",
        "現在のキーを取得する"
    ],
    "LimitIteratornext": [
        "LimitIterator::next",
        "limititerator.next.php",
        "イテレータを前に移動する"
    ],
    "LimitIteratorrewind": [
        "LimitIterator::rewind",
        "limititerator.rewind.php",
        "イテレータを指定した開始オフセットに巻き戻す"
    ],
    "LimitIteratorseek": [
        "LimitIterator::seek",
        "limititerator.seek.php",
        "与えられた位置に移動する"
    ],
    "LimitIteratorvalid": [
        "LimitIterator::valid",
        "limititerator.valid.php",
        "現在の要素が有効かどうかをチェックする"
    ],
    "LimitIteratorconstruct": [
        "LimitIterator::__construct",
        "limititerator.construct.php",
        "LimitIterator を作成する"
    ],
    "link": [
        "link",
        "function.link.php",
        "ハードリンクを作成する"
    ],
    "linkinfo": [
        "linkinfo",
        "function.linkinfo.php",
        "リンクに関する情報を取得する"
    ],
    "list": [
        "list",
        "function.list.php",
        "配列と同様の形式で、複数の変数への代入を行う"
    ],
    "LocaleacceptFromHttp": [
        "Locale::acceptFromHttp",
        "locale.acceptfromhttp.php",
        "最もあてはまるロケールを HTTP &quot;Accept-Language&quot; ヘッダにもとづいて探す"
    ],
    "Localecanonicalize": [
        "Locale::canonicalize",
        "locale.canonicalize.php",
        "ロケール文字列を正規化する"
    ],
    "LocalecomposeLocale": [
        "Locale::composeLocale",
        "locale.composelocale.php",
        "正しく並べ替えて区切られたロケール ID を返す"
    ],
    "LocalefilterMatches": [
        "Locale::filterMatches",
        "locale.filtermatches.php",
        "言語タグフィルタがロケールにマッチするかどうかを調べる"
    ],
    "LocalegetAllVariants": [
        "Locale::getAllVariants",
        "locale.getallvariants.php",
        "入力ロケールの変化系を取得する"
    ],
    "LocalegetDefault": [
        "Locale::getDefault",
        "locale.getdefault.php",
        "INTL のグローバル 'default_locale' からデフォルトのロケールを取得する"
    ],
    "LocalegetDisplayLanguage": [
        "Locale::getDisplayLanguage",
        "locale.getdisplaylanguage.php",
        "入力ロケールの言語の表示名を、適切に地域化して返す"
    ],
    "LocalegetDisplayName": [
        "Locale::getDisplayName",
        "locale.getdisplayname.php",
        "入力ロケールの表示名を、適切に地域化して返す"
    ],
    "LocalegetDisplayRegion": [
        "Locale::getDisplayRegion",
        "locale.getdisplayregion.php",
        "入力ロケールの地域の表示名を、適切に地域化して返す"
    ],
    "LocalegetDisplayScript": [
        "Locale::getDisplayScript",
        "locale.getdisplayscript.php",
        "入力ロケールの文字の表示名を、適切に地域化して返す"
    ],
    "LocalegetDisplayVariant": [
        "Locale::getDisplayVariant",
        "locale.getdisplayvariant.php",
        "入力ロケールの変化形の表示名を、適切に地域化して返す"
    ],
    "LocalegetKeywords": [
        "Locale::getKeywords",
        "locale.getkeywords.php",
        "入力ロケールのキーワードを取得する"
    ],
    "LocalegetPrimaryLanguage": [
        "Locale::getPrimaryLanguage",
        "locale.getprimarylanguage.php",
        "入力ロケールのプライマリ言語を取得する"
    ],
    "LocalegetRegion": [
        "Locale::getRegion",
        "locale.getregion.php",
        "入力ロケールの地域を取得する"
    ],
    "LocalegetScript": [
        "Locale::getScript",
        "locale.getscript.php",
        "入力ロケールの文字を取得する"
    ],
    "Localelookup": [
        "Locale::lookup",
        "locale.lookup.php",
        "その言語にマッチする言語タグの一覧を検索する"
    ],
    "LocaleparseLocale": [
        "Locale::parseLocale",
        "locale.parselocale.php",
        "ロケール ID のサブタグ要素を連想配列で返す"
    ],
    "LocalesetDefault": [
        "Locale::setDefault",
        "locale.setdefault.php",
        "デフォルトの実行時ロケールを設定する"
    ],
    "localeconv": [
        "localeconv",
        "function.localeconv.php",
        "数値に関するフォーマット情報を得る"
    ],
    "localtime": [
        "localtime",
        "function.localtime.php",
        "ローカルタイムを得る"
    ],
    "log": [
        "log",
        "function.log.php",
        "自然対数"
    ],
    "log1p": [
        "log1p",
        "function.log1p.php",
        "値がゼロに近い時にでも精度を保つ方法で計算した log(1 + number) を返す"
    ],
    "log10": [
        "log10",
        "function.log10.php",
        "底が 10 の対数"
    ],
    "logcmddelete": [
        "log_cmd_delete",
        "function.log-cmd-delete.php",
        "Callback When Deleting Documents"
    ],
    "logcmdinsert": [
        "log_cmd_insert",
        "function.log-cmd-insert.php",
        "Callback When Inserting Documents"
    ],
    "logcmdupdate": [
        "log_cmd_update",
        "function.log-cmd-update.php",
        "Callback When Updating Documents"
    ],
    "loggetmore": [
        "log_getmore",
        "function.log-getmore.php",
        "Callback When Retrieving Next Cursor Batch"
    ],
    "logkillcursor": [
        "log_killcursor",
        "function.log-killcursor.php",
        "Callback When Executing KILLCURSOR operations"
    ],
    "logreply": [
        "log_reply",
        "function.log-reply.php",
        "Callback When Reading the MongoDB reply"
    ],
    "logwritebatch": [
        "log_write_batch",
        "function.log-write-batch.php",
        "Callback When Writing Batches"
    ],
    "long2ip": [
        "long2ip",
        "function.long2ip.php",
        "長整数表現のインターネットアドレスを (IPv4) インターネット標準ドット表記に変換する"
    ],
    "lstat": [
        "lstat",
        "function.lstat.php",
        "ファイルあるいはシンボリックリンクの情報を取得する"
    ],
    "ltrim": [
        "ltrim",
        "function.ltrim.php",
        "文字列の最初から空白 (もしくはその他の文字) を取り除く"
    ],
    "Luaassign": [
        "Lua::assign",
        "lua.assign.php",
        "PHP 変数を Lua にアサイン"
    ],
    "Luacall": [
        "Lua::call",
        "lua.call.php",
        "Lua 関数を呼び出す"
    ],
    "Luaeval": [
        "Lua::eval",
        "lua.eval.php",
        "文字列を Lua コードとして評価"
    ],
    "LuagetVersion": [
        "Lua::getVersion",
        "lua.getversion.php",
        "getversion 用途"
    ],
    "Luainclude": [
        "Lua::include",
        "lua.include.php",
        "Lua スクリプトファイルをパース"
    ],
    "LuaregisterCallback": [
        "Lua::registerCallback",
        "lua.registercallback.php",
        "PHP 関数を Lua に登録"
    ],
    "Luaconstruct": [
        "Lua::__construct",
        "lua.construct.php",
        "Lua コンストラクタ"
    ],
    "LuaClosureinvoke": [
        "LuaClosure::__invoke",
        "luaclosure.invoke.php",
        "luaclosure を起動"
    ],
    "LuaSandboxcallFunction": [
        "LuaSandbox::callFunction",
        "luasandbox.callfunction.php",
        "Call a function in a Lua global variable"
    ],
    "LuaSandboxdisableProfiler": [
        "LuaSandbox::disableProfiler",
        "luasandbox.disableprofiler.php",
        "Disable the profiler"
    ],
    "LuaSandboxenableProfiler": [
        "LuaSandbox::enableProfiler",
        "luasandbox.enableprofiler.php",
        "Enable the profiler."
    ],
    "LuaSandboxgetCPUUsage": [
        "LuaSandbox::getCPUUsage",
        "luasandbox.getcpuusage.php",
        "Fetch the current CPU time usage of the Lua environment"
    ],
    "LuaSandboxgetMemoryUsage": [
        "LuaSandbox::getMemoryUsage",
        "luasandbox.getmemoryusage.php",
        "Fetch the current memory usage of the Lua environment"
    ],
    "LuaSandboxgetPeakMemoryUsage": [
        "LuaSandbox::getPeakMemoryUsage",
        "luasandbox.getpeakmemoryusage.php",
        "Fetch the peak memory usage of the Lua environment"
    ],
    "LuaSandboxgetProfilerFunctionReport": [
        "LuaSandbox::getProfilerFunctionReport",
        "luasandbox.getprofilerfunctionreport.php",
        "Fetch profiler data"
    ],
    "LuaSandboxgetVersionInfo": [
        "LuaSandbox::getVersionInfo",
        "luasandbox.getversioninfo.php",
        "Return the versions of LuaSandbox and Lua"
    ],
    "LuaSandboxloadBinary": [
        "LuaSandbox::loadBinary",
        "luasandbox.loadbinary.php",
        "Load a precompiled binary chunk into the Lua environment"
    ],
    "LuaSandboxloadString": [
        "LuaSandbox::loadString",
        "luasandbox.loadstring.php",
        "Load Lua code into the Lua environment"
    ],
    "LuaSandboxpauseUsageTimer": [
        "LuaSandbox::pauseUsageTimer",
        "luasandbox.pauseusagetimer.php",
        "Pause the CPU usage timer"
    ],
    "LuaSandboxregisterLibrary": [
        "LuaSandbox::registerLibrary",
        "luasandbox.registerlibrary.php",
        "Register a set of PHP functions as a Lua library"
    ],
    "LuaSandboxsetCPULimit": [
        "LuaSandbox::setCPULimit",
        "luasandbox.setcpulimit.php",
        "Set the CPU time limit for the Lua environment"
    ],
    "LuaSandboxsetMemoryLimit": [
        "LuaSandbox::setMemoryLimit",
        "luasandbox.setmemorylimit.php",
        "Set the memory limit for the Lua environment"
    ],
    "LuaSandboxunpauseUsageTimer": [
        "LuaSandbox::unpauseUsageTimer",
        "luasandbox.unpauseusagetimer.php",
        "Unpause the timer paused by LuaSandbox::pauseUsageTimer"
    ],
    "LuaSandboxwrapPhpFunction": [
        "LuaSandbox::wrapPhpFunction",
        "luasandbox.wrapphpfunction.php",
        "Wrap a PHP callable in a LuaSandboxFunction"
    ],
    "LuaSandboxFunctioncall": [
        "LuaSandboxFunction::call",
        "luasandboxfunction.call.php",
        "Call a Lua function"
    ],
    "LuaSandboxFunctiondump": [
        "LuaSandboxFunction::dump",
        "luasandboxfunction.dump.php",
        "Dump the function as a binary blob"
    ],
    "LuaSandboxFunctionconstruct": [
        "LuaSandboxFunction::__construct",
        "luasandboxfunction.construct.php",
        "Unused"
    ],
    "lzfcompress": [
        "lzf_compress",
        "function.lzf-compress.php",
        "LZF 圧縮を行う"
    ],
    "lzfdecompress": [
        "lzf_decompress",
        "function.lzf-decompress.php",
        "LZF 圧縮を伸長する"
    ],
    "lzfoptimizedfor": [
        "lzf_optimized_for",
        "function.lzf-optimized-for.php",
        "LZF 拡張モジュールの最適化指定を取得する"
    ],
    "mail": [
        "mail",
        "function.mail.php",
        "メールを送信する"
    ],
    "mailparsedeterminebestxferencoding": [
        "mailparse_determine_best_xfer_encoding",
        "function.mailparse-determine-best-xfer-encoding.php",
        "最も適したエンコーディングを取得する"
    ],
    "mailparsemsgcreate": [
        "mailparse_msg_create",
        "function.mailparse-msg-create.php",
        "mime メールリソースを作成する"
    ],
    "mailparsemsgextractpart": [
        "mailparse_msg_extract_part",
        "function.mailparse-msg-extract-part.php",
        "メッセージセクションを展開/デコードする"
    ],
    "mailparsemsgextractpartfile": [
        "mailparse_msg_extract_part_file",
        "function.mailparse-msg-extract-part-file.php",
        "メッセージセクションを展開/デコードする"
    ],
    "mailparsemsgextractwholepartfile": [
        "mailparse_msg_extract_whole_part_file",
        "function.mailparse-msg-extract-whole-part-file.php",
        "ヘッダを含むメッセージセクションを、transfer encoding をデコードせずに展開する"
    ],
    "mailparsemsgfree": [
        "mailparse_msg_free",
        "function.mailparse-msg-free.php",
        "MIME リソースを解放する"
    ],
    "mailparsemsggetpart": [
        "mailparse_msg_get_part",
        "function.mailparse-msg-get-part.php",
        "MIME メッセージの指定したセクションに関するハンドルを返す"
    ],
    "mailparsemsggetpartdata": [
        "mailparse_msg_get_part_data",
        "function.mailparse-msg-get-part-data.php",
        "メッセージに関する情報の連想配列を返す"
    ],
    "mailparsemsggetstructure": [
        "mailparse_msg_get_structure",
        "function.mailparse-msg-get-structure.php",
        "指定したメッセージ内の MIME セクション名の配列を返す"
    ],
    "mailparsemsgparse": [
        "mailparse_msg_parse",
        "function.mailparse-msg-parse.php",
        "データをパースし、バッファに追加する"
    ],
    "mailparsemsgparsefile": [
        "mailparse_msg_parse_file",
        "function.mailparse-msg-parse-file.php",
        "ファイルをパースする"
    ],
    "mailparserfc822parseaddresses": [
        "mailparse_rfc822_parse_addresses",
        "function.mailparse-rfc822-parse-addresses.php",
        "RFC 822 準拠のアドレスをパースする"
    ],
    "mailparseuudecodeall": [
        "mailparse_uudecode_all",
        "function.mailparse-uudecode-all.php",
        "ファイルポインタからデータをスキャンし、uuencode されたファイルを展開する"
    ],
    "main": [
        "main",
        "function.main.php",
        "main のダミー"
    ],
    "max": [
        "max",
        "function.max.php",
        "最大値を返す"
    ],
    "mbcheckencoding": [
        "mb_check_encoding",
        "function.mb-check-encoding.php",
        "文字列が、指定したエンコーディングで有効なものかどうかを調べる"
    ],
    "mbchr": [
        "mb_chr",
        "function.mb-chr.php",
        "特定の文字を取得する"
    ],
    "mbconvertcase": [
        "mb_convert_case",
        "function.mb-convert-case.php",
        "文字列に対してケースフォールディングを行う"
    ],
    "mbconvertencoding": [
        "mb_convert_encoding",
        "function.mb-convert-encoding.php",
        "文字エンコーディングを変換する"
    ],
    "mbconvertkana": [
        "mb_convert_kana",
        "function.mb-convert-kana.php",
        "カナを(&quot;全角かな&quot;、&quot;半角かな&quot;等に)変換する"
    ],
    "mbconvertvariables": [
        "mb_convert_variables",
        "function.mb-convert-variables.php",
        "変数の文字コードを変換する"
    ],
    "mbdecodemimeheader": [
        "mb_decode_mimeheader",
        "function.mb-decode-mimeheader.php",
        "MIME ヘッダフィールドの文字列をデコードする"
    ],
    "mbdecodenumericentity": [
        "mb_decode_numericentity",
        "function.mb-decode-numericentity.php",
        "HTML 数値エンティティを文字にデコードする"
    ],
    "mbdetectencoding": [
        "mb_detect_encoding",
        "function.mb-detect-encoding.php",
        "文字エンコーディングを検出する"
    ],
    "mbdetectorder": [
        "mb_detect_order",
        "function.mb-detect-order.php",
        "文字エンコーディング検出順序を設定あるいは取得する"
    ],
    "mbencodemimeheader": [
        "mb_encode_mimeheader",
        "function.mb-encode-mimeheader.php",
        "MIMEヘッダの文字列をエンコードする"
    ],
    "mbencodenumericentity": [
        "mb_encode_numericentity",
        "function.mb-encode-numericentity.php",
        "文字を HTML 数値エンティティにエンコードする"
    ],
    "mbencodingaliases": [
        "mb_encoding_aliases",
        "function.mb-encoding-aliases.php",
        "既知のエンコーディング・タイプのエイリアスを取得"
    ],
    "mbereg": [
        "mb_ereg",
        "function.mb-ereg.php",
        "マルチバイト対応の正規表現マッチ"
    ],
    "mberegi": [
        "mb_eregi",
        "function.mb-eregi.php",
        "マルチバイトをサポートし、大文字小文字を無視した正規表現マッチ"
    ],
    "mberegireplace": [
        "mb_eregi_replace",
        "function.mb-eregi-replace.php",
        "マルチバイト文字列に大文字小文字を区別せずに正規表現による置換を行う"
    ],
    "mberegmatch": [
        "mb_ereg_match",
        "function.mb-ereg-match.php",
        "マルチバイト文字列が正規表現に一致するか調べる"
    ],
    "mberegreplace": [
        "mb_ereg_replace",
        "function.mb-ereg-replace.php",
        "マルチバイト文字列に正規表現による置換を行う"
    ],
    "mberegreplacecallback": [
        "mb_ereg_replace_callback",
        "function.mb-ereg-replace-callback.php",
        "マルチバイト文字列にコールバック関数を用いた正規表現による置換を行う"
    ],
    "mberegsearch": [
        "mb_ereg_search",
        "function.mb-ereg-search.php",
        "指定したマルチバイト文字列が正規表現に一致するか調べる"
    ],
    "mberegsearchgetpos": [
        "mb_ereg_search_getpos",
        "function.mb-ereg-search-getpos.php",
        "次の正規表現検索を開始する位置を取得する"
    ],
    "mberegsearchgetregs": [
        "mb_ereg_search_getregs",
        "function.mb-ereg-search-getregs.php",
        "マルチバイト文字列が正規表現に一致する部分があるか調べる"
    ],
    "mberegsearchinit": [
        "mb_ereg_search_init",
        "function.mb-ereg-search-init.php",
        "マルチバイト正規表現検索用の文字列と正規表現を設定する"
    ],
    "mberegsearchpos": [
        "mb_ereg_search_pos",
        "function.mb-ereg-search-pos.php",
        "指定したマルチバイト文字列が正規表現に一致する部分の位置と長さを返す"
    ],
    "mberegsearchregs": [
        "mb_ereg_search_regs",
        "function.mb-ereg-search-regs.php",
        "指定したマルチバイト文字列が正規表現に一致する部分を取得する"
    ],
    "mberegsearchsetpos": [
        "mb_ereg_search_setpos",
        "function.mb-ereg-search-setpos.php",
        "次の正規表現検索を開始する位置を設定する"
    ],
    "mbgetinfo": [
        "mb_get_info",
        "function.mb-get-info.php",
        "mbstring の内部設定値を取得する"
    ],
    "mbhttpinput": [
        "mb_http_input",
        "function.mb-http-input.php",
        "HTTP 入力文字エンコーディングを検出する"
    ],
    "mbhttpoutput": [
        "mb_http_output",
        "function.mb-http-output.php",
        "HTTP 出力文字エンコーディングを設定あるいは取得する"
    ],
    "mbinternalencoding": [
        "mb_internal_encoding",
        "function.mb-internal-encoding.php",
        "内部文字エンコーディングを設定あるいは取得する"
    ],
    "mblanguage": [
        "mb_language",
        "function.mb-language.php",
        "現在の言語を設定あるいは取得する"
    ],
    "mblistencodings": [
        "mb_list_encodings",
        "function.mb-list-encodings.php",
        "サポートするすべてのエンコーディングの配列を返す"
    ],
    "mbord": [
        "mb_ord",
        "function.mb-ord.php",
        "文字のコードポイントを取得する"
    ],
    "mboutputhandler": [
        "mb_output_handler",
        "function.mb-output-handler.php",
        "出力バッファ内で文字エンコーディングを変換するコールバック関数"
    ],
    "mbparsestr": [
        "mb_parse_str",
        "function.mb-parse-str.php",
        "GET/POST/COOKIE データをパースし、グローバル変数を設定する"
    ],
    "mbpreferredmimename": [
        "mb_preferred_mime_name",
        "function.mb-preferred-mime-name.php",
        "MIME 文字設定を文字列で得る"
    ],
    "mbregexencoding": [
        "mb_regex_encoding",
        "function.mb-regex-encoding.php",
        "現在のマルチバイト正規表現用のエンコーディングを取得または設定する"
    ],
    "mbregexsetoptions": [
        "mb_regex_set_options",
        "function.mb-regex-set-options.php",
        "マルチバイト正規表現関数のデフォルトオプションを取得または設定する"
    ],
    "mbscrub": [
        "mb_scrub",
        "function.mb-scrub.php",
        "文字列に含まれる不正なバイト列を代替文字に置き換える"
    ],
    "mbsendmail": [
        "mb_send_mail",
        "function.mb-send-mail.php",
        "エンコード変換を行ってメールを送信する"
    ],
    "mbsplit": [
        "mb_split",
        "function.mb-split.php",
        "マルチバイト文字列を正規表現により分割する"
    ],
    "mbstrcut": [
        "mb_strcut",
        "function.mb-strcut.php",
        "文字列の一部を得る"
    ],
    "mbstrimwidth": [
        "mb_strimwidth",
        "function.mb-strimwidth.php",
        "指定した幅で文字列を丸める"
    ],
    "mbstrlen": [
        "mb_strlen",
        "function.mb-strlen.php",
        "文字列の長さを得る"
    ],
    "mbstrpos": [
        "mb_strpos",
        "function.mb-strpos.php",
        "文字列の中に指定した文字列が最初に現れる位置を見つける"
    ],
    "mbstrrchr": [
        "mb_strrchr",
        "function.mb-strrchr.php",
        "別の文字列の中で、ある文字が最後に現れる場所を見つける"
    ],
    "mbstrrpos": [
        "mb_strrpos",
        "function.mb-strrpos.php",
        "文字列の中に指定した文字列が最後に現れる位置を見つける"
    ],
    "mbstrstr": [
        "mb_strstr",
        "function.mb-strstr.php",
        "文字列の中で、指定した文字列が最初に現れる位置を見つける"
    ],
    "mbstrtolower": [
        "mb_strtolower",
        "function.mb-strtolower.php",
        "文字列を小文字にする"
    ],
    "mbstrtoupper": [
        "mb_strtoupper",
        "function.mb-strtoupper.php",
        "文字列を大文字にする"
    ],
    "mbstrwidth": [
        "mb_strwidth",
        "function.mb-strwidth.php",
        "文字列の幅を返す"
    ],
    "mbstrsplit": [
        "mb_str_split",
        "function.mb-str-split.php",
        "マルチバイト文字列を受取り、文字の配列を返す"
    ],
    "mbsubstitutecharacter": [
        "mb_substitute_character",
        "function.mb-substitute-character.php",
        "置換文字を設定あるいは取得する"
    ],
    "mbsubstr": [
        "mb_substr",
        "function.mb-substr.php",
        "文字列の一部を得る"
    ],
    "mbsubstrcount": [
        "mb_substr_count",
        "function.mb-substr-count.php",
        "部分文字列の出現回数を数える"
    ],
    "mcryptcbc": [
        "mcrypt_cbc",
        "function.mcrypt-cbc.php",
        "CBC モードでデータを暗号化/復号する"
    ],
    "mcryptcfb": [
        "mcrypt_cfb",
        "function.mcrypt-cfb.php",
        "CFB モードでデータを暗号化/復号する"
    ],
    "mcryptcreateiv": [
        "mcrypt_create_iv",
        "function.mcrypt-create-iv.php",
        "Creates an initialization vector (IV) from a random source"
    ],
    "mcryptdecrypt": [
        "mcrypt_decrypt",
        "function.mcrypt-decrypt.php",
        "Decrypts crypttext with given parameters"
    ],
    "mcryptecb": [
        "mcrypt_ecb",
        "function.mcrypt-ecb.php",
        "非推奨: ECB モードでデータを暗号化/復号する"
    ],
    "mcryptencrypt": [
        "mcrypt_encrypt",
        "function.mcrypt-encrypt.php",
        "指定したパラメータでプレーンテキストを暗号化する"
    ],
    "mcryptencgetalgorithmsname": [
        "mcrypt_enc_get_algorithms_name",
        "function.mcrypt-enc-get-algorithms-name.php",
        "Returns the name of the opened algorithm"
    ],
    "mcryptencgetblocksize": [
        "mcrypt_enc_get_block_size",
        "function.mcrypt-enc-get-block-size.php",
        "Returns the blocksize of the opened algorithm"
    ],
    "mcryptencgetivsize": [
        "mcrypt_enc_get_iv_size",
        "function.mcrypt-enc-get-iv-size.php",
        "オープンされたアルゴリズムの IV の大きさを返す"
    ],
    "mcryptencgetkeysize": [
        "mcrypt_enc_get_key_size",
        "function.mcrypt-enc-get-key-size.php",
        "オープンされたモードでサポートされる最大キー長を返す"
    ],
    "mcryptencgetmodesname": [
        "mcrypt_enc_get_modes_name",
        "function.mcrypt-enc-get-modes-name.php",
        "オープンされたモードの名前を返す"
    ],
    "mcryptencgetsupportedkeysizes": [
        "mcrypt_enc_get_supported_key_sizes",
        "function.mcrypt-enc-get-supported-key-sizes.php",
        "オープンされたアルゴリズムでサポートされるキー長を配列にして返す"
    ],
    "mcryptencisblockalgorithm": [
        "mcrypt_enc_is_block_algorithm",
        "function.mcrypt-enc-is-block-algorithm.php",
        "オープンされたモードの暗号がブロックアルゴリズムであるかどうかを調べる"
    ],
    "mcryptencisblockalgorithmmode": [
        "mcrypt_enc_is_block_algorithm_mode",
        "function.mcrypt-enc-is-block-algorithm-mode.php",
        "オープンされたモードの暗号がブロックモードで動作するかどうかを調べる"
    ],
    "mcryptencisblockmode": [
        "mcrypt_enc_is_block_mode",
        "function.mcrypt-enc-is-block-mode.php",
        "オープンされたモードがブロック出力を行うかどうかを調べる"
    ],
    "mcryptencselftest": [
        "mcrypt_enc_self_test",
        "function.mcrypt-enc-self-test.php",
        "オープンしたモジュールのセルフテストを実行する"
    ],
    "mcryptgeneric": [
        "mcrypt_generic",
        "function.mcrypt-generic.php",
        "データを暗号化する"
    ],
    "mcryptgenericdeinit": [
        "mcrypt_generic_deinit",
        "function.mcrypt-generic-deinit.php",
        "暗号化モジュールを終了する"
    ],
    "mcryptgenericend": [
        "mcrypt_generic_end",
        "function.mcrypt-generic-end.php",
        "暗号処理を終了する"
    ],
    "mcryptgenericinit": [
        "mcrypt_generic_init",
        "function.mcrypt-generic-init.php",
        "暗号化に必要な全てのバッファを初期化する"
    ],
    "mcryptgetblocksize": [
        "mcrypt_get_block_size",
        "function.mcrypt-get-block-size.php",
        "指定した暗号のブロックサイズを得る"
    ],
    "mcryptgetciphername": [
        "mcrypt_get_cipher_name",
        "function.mcrypt-get-cipher-name.php",
        "指定した暗号の名前を得る"
    ],
    "mcryptgetivsize": [
        "mcrypt_get_iv_size",
        "function.mcrypt-get-iv-size.php",
        "指定した暗号/モードの組み合わせに属する IV の大きさを返す"
    ],
    "mcryptgetkeysize": [
        "mcrypt_get_key_size",
        "function.mcrypt-get-key-size.php",
        "指定した暗号のキーの長さを得る"
    ],
    "mcryptlistalgorithms": [
        "mcrypt_list_algorithms",
        "function.mcrypt-list-algorithms.php",
        "サポートされる全ての暗号を配列として取得する"
    ],
    "mcryptlistmodes": [
        "mcrypt_list_modes",
        "function.mcrypt-list-modes.php",
        "サポートされる全てのモードの配列を取得する"
    ],
    "mcryptmoduleclose": [
        "mcrypt_module_close",
        "function.mcrypt-module-close.php",
        "mcrypt モジュールを閉じる"
    ],
    "mcryptmodulegetalgoblocksize": [
        "mcrypt_module_get_algo_block_size",
        "function.mcrypt-module-get-algo-block-size.php",
        "指定したアルゴリズムのブロック長を返す"
    ],
    "mcryptmodulegetalgokeysize": [
        "mcrypt_module_get_algo_key_size",
        "function.mcrypt-module-get-algo-key-size.php",
        "オープンされたモードでサポートされる最大キー長を返す"
    ],
    "mcryptmodulegetsupportedkeysizes": [
        "mcrypt_module_get_supported_key_sizes",
        "function.mcrypt-module-get-supported-key-sizes.php",
        "オープンされたアルゴリズムでサポートされるキーのサイズを配列として返す"
    ],
    "mcryptmoduleisblockalgorithm": [
        "mcrypt_module_is_block_algorithm",
        "function.mcrypt-module-is-block-algorithm.php",
        "指定したアルゴリズムがブロックアルゴリズムであるかを調べる"
    ],
    "mcryptmoduleisblockalgorithmmode": [
        "mcrypt_module_is_block_algorithm_mode",
        "function.mcrypt-module-is-block-algorithm-mode.php",
        "指定したモジュールがブロックアルゴリズムであるかどうかを返す"
    ],
    "mcryptmoduleisblockmode": [
        "mcrypt_module_is_block_mode",
        "function.mcrypt-module-is-block-mode.php",
        "指定したモードがブロック出力を行うかどうかを返す"
    ],
    "mcryptmoduleopen": [
        "mcrypt_module_open",
        "function.mcrypt-module-open.php",
        "使用するアルゴリズムおよびモードのモジュールをオープンする"
    ],
    "mcryptmoduleselftest": [
        "mcrypt_module_self_test",
        "function.mcrypt-module-self-test.php",
        "指定したモジュールのセルフテストを実行する"
    ],
    "mcryptofb": [
        "mcrypt_ofb",
        "function.mcrypt-ofb.php",
        "OFB モードでデータを暗号化/復号する"
    ],
    "md5": [
        "md5",
        "function.md5.php",
        "文字列のmd5ハッシュ値を計算する"
    ],
    "md5file": [
        "md5_file",
        "function.md5-file.php",
        "指定したファイルのMD5ハッシュ値を計算する"
    ],
    "mdecryptgeneric": [
        "mdecrypt_generic",
        "function.mdecrypt-generic.php",
        "データを復号する"
    ],
    "Memcacheadd": [
        "Memcache::add",
        "memcache.add.php",
        "サーバーに項目を追加する"
    ],
    "MemcacheaddServer": [
        "Memcache::addServer",
        "memcache.addserver.php",
        "コネクションプールに memcached サーバーを追加する"
    ],
    "Memcacheclose": [
        "Memcache::close",
        "memcache.close.php",
        "memcached サーバーとの接続を閉じる"
    ],
    "Memcacheconnect": [
        "Memcache::connect",
        "memcache.connect.php",
        "memcached サーバーへの接続をオープンする"
    ],
    "Memcachedecrement": [
        "Memcache::decrement",
        "memcache.decrement.php",
        "項目の値を減らす"
    ],
    "Memcachedelete": [
        "Memcache::delete",
        "memcache.delete.php",
        "サーバーから項目を削除する"
    ],
    "Memcacheflush": [
        "Memcache::flush",
        "memcache.flush.php",
        "サーバー上のすべての既存項目を消去する"
    ],
    "Memcacheget": [
        "Memcache::get",
        "memcache.get.php",
        "サーバーから項目を取得する"
    ],
    "MemcachegetExtendedStats": [
        "Memcache::getExtendedStats",
        "memcache.getextendedstats.php",
        "プール内のすべてのサーバーの統計情報を取得する"
    ],
    "MemcachegetServerStatus": [
        "Memcache::getServerStatus",
        "memcache.getserverstatus.php",
        "サーバーの状態を返す"
    ],
    "MemcachegetStats": [
        "Memcache::getStats",
        "memcache.getstats.php",
        "サーバーの統計情報を取得する"
    ],
    "MemcachegetVersion": [
        "Memcache::getVersion",
        "memcache.getversion.php",
        "サーバーのバージョンを返す"
    ],
    "Memcacheincrement": [
        "Memcache::increment",
        "memcache.increment.php",
        "項目の値を増やす"
    ],
    "Memcachepconnect": [
        "Memcache::pconnect",
        "memcache.pconnect.php",
        "memcached サーバーへの持続的な接続をオープンする"
    ],
    "Memcachereplace": [
        "Memcache::replace",
        "memcache.replace.php",
        "既存項目の値を置換する"
    ],
    "Memcacheset": [
        "Memcache::set",
        "memcache.set.php",
        "データをサーバーに格納する"
    ],
    "MemcachesetCompressThreshold": [
        "Memcache::setCompressThreshold",
        "memcache.setcompressthreshold.php",
        "大きな値に対する自動圧縮処理を有効にする"
    ],
    "MemcachesetServerParams": [
        "Memcache::setServerParams",
        "memcache.setserverparams.php",
        "サーバーのパラメータおよび状態を、実行時に変更する"
    ],
    "Memcachedadd": [
        "Memcached::add",
        "memcached.add.php",
        "アイテムを新しいキーで追加する"
    ],
    "MemcachedaddByKey": [
        "Memcached::addByKey",
        "memcached.addbykey.php",
        "指定したサーバーにアイテムを新しいキーで追加する"
    ],
    "MemcachedaddServer": [
        "Memcached::addServer",
        "memcached.addserver.php",
        "サーバーをサーバープールに追加する"
    ],
    "MemcachedaddServers": [
        "Memcached::addServers",
        "memcached.addservers.php",
        "複数のサーバーをサーバープールに追加する"
    ],
    "Memcachedappend": [
        "Memcached::append",
        "memcached.append.php",
        "データを既存のアイテムに追記する"
    ],
    "MemcachedappendByKey": [
        "Memcached::appendByKey",
        "memcached.appendbykey.php",
        "指定したサーバーでデータを既存のアイテムに追記する"
    ],
    "Memcachedcas": [
        "Memcached::cas",
        "memcached.cas.php",
        "アイテムを比較して入れ替える"
    ],
    "MemcachedcasByKey": [
        "Memcached::casByKey",
        "memcached.casbykey.php",
        "指定したサーバーでアイテムを比較して入れ替える"
    ],
    "Memcacheddecrement": [
        "Memcached::decrement",
        "memcached.decrement.php",
        "数値アイテムの値を減らす"
    ],
    "MemcacheddecrementByKey": [
        "Memcached::decrementByKey",
        "memcached.decrementbykey.php",
        "指定したサーバー上にある数値アイテムの値を減らす"
    ],
    "Memcacheddelete": [
        "Memcached::delete",
        "memcached.delete.php",
        "アイテムを削除する"
    ],
    "MemcacheddeleteByKey": [
        "Memcached::deleteByKey",
        "memcached.deletebykey.php",
        "指定したサーバーからアイテムを削除する"
    ],
    "MemcacheddeleteMulti": [
        "Memcached::deleteMulti",
        "memcached.deletemulti.php",
        "複数のアイテムを削除する"
    ],
    "MemcacheddeleteMultiByKey": [
        "Memcached::deleteMultiByKey",
        "memcached.deletemultibykey.php",
        "指定したサーバーから複数のアイテムを削除する"
    ],
    "Memcachedfetch": [
        "Memcached::fetch",
        "memcached.fetch.php",
        "次の結果を取得する"
    ],
    "MemcachedfetchAll": [
        "Memcached::fetchAll",
        "memcached.fetchall.php",
        "残りのすべての結果を取得する"
    ],
    "Memcachedflush": [
        "Memcached::flush",
        "memcached.flush.php",
        "キャッシュ内のすべてのアイテムを無効にする"
    ],
    "Memcachedget": [
        "Memcached::get",
        "memcached.get.php",
        "アイテムを取得する"
    ],
    "MemcachedgetAllKeys": [
        "Memcached::getAllKeys",
        "memcached.getallkeys.php",
        "すべてのサーバーのキーを取得する"
    ],
    "MemcachedgetByKey": [
        "Memcached::getByKey",
        "memcached.getbykey.php",
        "指定したサーバーからアイテムを取得する"
    ],
    "MemcachedgetDelayed": [
        "Memcached::getDelayed",
        "memcached.getdelayed.php",
        "複数のアイテムを要求する"
    ],
    "MemcachedgetDelayedByKey": [
        "Memcached::getDelayedByKey",
        "memcached.getdelayedbykey.php",
        "指定したサーバーに複数のアイテムを要求する"
    ],
    "MemcachedgetMulti": [
        "Memcached::getMulti",
        "memcached.getmulti.php",
        "複数のアイテムを取得する"
    ],
    "MemcachedgetMultiByKey": [
        "Memcached::getMultiByKey",
        "memcached.getmultibykey.php",
        "指定したサーバーから複数のアイテムを取得する"
    ],
    "MemcachedgetOption": [
        "Memcached::getOption",
        "memcached.getoption.php",
        "Memcached のオプションの値を取得する"
    ],
    "MemcachedgetResultCode": [
        "Memcached::getResultCode",
        "memcached.getresultcode.php",
        "直近の操作の結果コードを返す"
    ],
    "MemcachedgetResultMessage": [
        "Memcached::getResultMessage",
        "memcached.getresultmessage.php",
        "最後に実行した操作の結果を説明したメッセージを返す。"
    ],
    "MemcachedgetServerByKey": [
        "Memcached::getServerByKey",
        "memcached.getserverbykey.php",
        "キーとサーバーを関連付ける"
    ],
    "MemcachedgetServerList": [
        "Memcached::getServerList",
        "memcached.getserverlist.php",
        "プール内のサーバーの一覧を取得する"
    ],
    "MemcachedgetStats": [
        "Memcached::getStats",
        "memcached.getstats.php",
        "サーバープールの統計情報を取得する"
    ],
    "MemcachedgetVersion": [
        "Memcached::getVersion",
        "memcached.getversion.php",
        "サーバープールのバージョン情報を取得する"
    ],
    "Memcachedincrement": [
        "Memcached::increment",
        "memcached.increment.php",
        "数値アイテムの値を増やす"
    ],
    "MemcachedincrementByKey": [
        "Memcached::incrementByKey",
        "memcached.incrementbykey.php",
        "指定したサーバー上にある数値アイテムの値を増やす"
    ],
    "MemcachedisPersistent": [
        "Memcached::isPersistent",
        "memcached.ispersistent.php",
        "memcache への接続で持続的接続を使っているかどうかを調べる"
    ],
    "MemcachedisPristine": [
        "Memcached::isPristine",
        "memcached.ispristine.php",
        "直近に作られたインスタンスかどうかを調べる"
    ],
    "Memcachedprepend": [
        "Memcached::prepend",
        "memcached.prepend.php",
        "既存のアイテムの前にデータを付加する"
    ],
    "MemcachedprependByKey": [
        "Memcached::prependByKey",
        "memcached.prependbykey.php",
        "指定したサーバーで既存のアイテムの前にデータを付加する"
    ],
    "Memcachedquit": [
        "Memcached::quit",
        "memcached.quit.php",
        "開いている接続を閉じる"
    ],
    "Memcachedreplace": [
        "Memcached::replace",
        "memcached.replace.php",
        "既存のキーのアイテムを入れ替える"
    ],
    "MemcachedreplaceByKey": [
        "Memcached::replaceByKey",
        "memcached.replacebykey.php",
        "指定したサーバーで既存のキーのアイテムを入れ替える"
    ],
    "MemcachedresetServerList": [
        "Memcached::resetServerList",
        "memcached.resetserverlist.php",
        "サーバーリストからすべてのサーバーを消去する"
    ],
    "Memcachedset": [
        "Memcached::set",
        "memcached.set.php",
        "アイテムを格納する"
    ],
    "MemcachedsetByKey": [
        "Memcached::setByKey",
        "memcached.setbykey.php",
        "指定したサーバーにアイテムを格納する"
    ],
    "MemcachedsetMulti": [
        "Memcached::setMulti",
        "memcached.setmulti.php",
        "複数のアイテムを格納する"
    ],
    "MemcachedsetMultiByKey": [
        "Memcached::setMultiByKey",
        "memcached.setmultibykey.php",
        "指定したサーバーで複数のアイテムを格納する"
    ],
    "MemcachedsetOption": [
        "Memcached::setOption",
        "memcached.setoption.php",
        "Memcached のオプションの値を設定する"
    ],
    "MemcachedsetOptions": [
        "Memcached::setOptions",
        "memcached.setoptions.php",
        "Memcached のオプションの値を設定する"
    ],
    "MemcachedsetSaslAuthData": [
        "Memcached::setSaslAuthData",
        "memcached.setsaslauthdata.php",
        "認証用の資格情報を設定する"
    ],
    "Memcachedtouch": [
        "Memcached::touch",
        "memcached.touch.php",
        "アイテムに新しい有効期限を設定する"
    ],
    "MemcachedtouchByKey": [
        "Memcached::touchByKey",
        "memcached.touchbykey.php",
        "指定したサーバー上のアイテムに新しい有効期限を設定する"
    ],
    "Memcachedconstruct": [
        "Memcached::__construct",
        "memcached.construct.php",
        "Memcached のインスタンスを作成する"
    ],
    "memcachedebug": [
        "memcache_debug",
        "function.memcache-debug.php",
        "デバッグ出力のオン/オフを切り替える"
    ],
    "memorygetpeakusage": [
        "memory_get_peak_usage",
        "function.memory-get-peak-usage.php",
        "PHP によって割り当てられたメモリの最大値を返す"
    ],
    "memorygetusage": [
        "memory_get_usage",
        "function.memory-get-usage.php",
        "PHP に割り当てられたメモリの量を返す"
    ],
    "MessageFormattercreate": [
        "MessageFormatter::create",
        "messageformatter.create.php",
        "新しいメッセージフォーマッタを作成する"
    ],
    "MessageFormatterformat": [
        "MessageFormatter::format",
        "messageformatter.format.php",
        "メッセージをフォーマットする"
    ],
    "MessageFormatterformatMessage": [
        "MessageFormatter::formatMessage",
        "messageformatter.formatmessage.php",
        "手早くメッセージをフォーマットする"
    ],
    "MessageFormattergetErrorCode": [
        "MessageFormatter::getErrorCode",
        "messageformatter.geterrorcode.php",
        "直近の操作のエラーコードを取得する"
    ],
    "MessageFormattergetErrorMessage": [
        "MessageFormatter::getErrorMessage",
        "messageformatter.geterrormessage.php",
        "直近の操作のエラーテキストを取得する"
    ],
    "MessageFormattergetLocale": [
        "MessageFormatter::getLocale",
        "messageformatter.getlocale.php",
        "フォーマッタを作成した際のロケールを取得する"
    ],
    "MessageFormattergetPattern": [
        "MessageFormatter::getPattern",
        "messageformatter.getpattern.php",
        "フォーマッタが使用するパターンを取得する"
    ],
    "MessageFormatterparse": [
        "MessageFormatter::parse",
        "messageformatter.parse.php",
        "パターンを使用して入力文字列をパースする"
    ],
    "MessageFormatterparseMessage": [
        "MessageFormatter::parseMessage",
        "messageformatter.parsemessage.php",
        "手早く入力文字列をパースする"
    ],
    "MessageFormattersetPattern": [
        "MessageFormatter::setPattern",
        "messageformatter.setpattern.php",
        "フォーマッタが使用するパターンを設定する"
    ],
    "metaphone": [
        "metaphone",
        "function.metaphone.php",
        "文字列の metaphone キーを計算する"
    ],
    "methodexists": [
        "method_exists",
        "function.method-exists.php",
        "クラスメソッドが存在するかどうかを確認する"
    ],
    "mhash": [
        "mhash",
        "function.mhash.php",
        "ハッシュ値を計算する"
    ],
    "mhashcount": [
        "mhash_count",
        "function.mhash-count.php",
        "利用可能なハッシュ ID の最大値を得る"
    ],
    "mhashgetblocksize": [
        "mhash_get_block_size",
        "function.mhash-get-block-size.php",
        "指定したハッシュのブロックサイズを得る"
    ],
    "mhashgethashname": [
        "mhash_get_hash_name",
        "function.mhash-get-hash-name.php",
        "指定したハッシュの名前を得る"
    ],
    "mhashkeygens2k": [
        "mhash_keygen_s2k",
        "function.mhash-keygen-s2k.php",
        "キーを生成する"
    ],
    "microtime": [
        "microtime",
        "function.microtime.php",
        "現在の Unix タイムスタンプをマイクロ秒まで返す"
    ],
    "mimecontenttype": [
        "mime_content_type",
        "function.mime-content-type.php",
        "ファイルの MIME Content-type を検出する"
    ],
    "min": [
        "min",
        "function.min.php",
        "最小値を返す"
    ],
    "mkdir": [
        "mkdir",
        "function.mkdir.php",
        "ディレクトリを作る"
    ],
    "mktime": [
        "mktime",
        "function.mktime.php",
        "日付を Unix のタイムスタンプとして取得する"
    ],
    "moneyformat": [
        "money_format",
        "function.money-format.php",
        "数値を金額文字列にフォーマットする"
    ],
    "Mongoclose": [
        "Mongo::close",
        "mongo.close.php",
        "接続を閉じる"
    ],
    "Mongoconnect": [
        "Mongo::connect",
        "mongo.connect.php",
        "データベースサーバーに接続する"
    ],
    "MongoconnectUtil": [
        "Mongo::connectUtil",
        "mongo.connectutil.php",
        "データベースサーバーに接続する"
    ],
    "MongogetHosts": [
        "Mongo::getHosts",
        "mongo.gethosts.php",
        "関連づけられたすべてのホストの状態を更新する"
    ],
    "MongogetPoolSize": [
        "Mongo::getPoolSize",
        "mongo.getpoolsize.php",
        "接続プールのサイズを取得する"
    ],
    "MongogetSlave": [
        "Mongo::getSlave",
        "mongo.getslave.php",
        "slaveOkay の読み込みに使われているアドレスを返す"
    ],
    "MongogetSlaveOkay": [
        "Mongo::getSlaveOkay",
        "mongo.getslaveokay.php",
        "この接続の slaveOkay 設定を取得する"
    ],
    "MongopoolDebug": [
        "Mongo::poolDebug",
        "mongo.pooldebug.php",
        "Returns information about all connection pools"
    ],
    "MongosetPoolSize": [
        "Mongo::setPoolSize",
        "mongo.setpoolsize.php",
        "Set the size for future connection pools"
    ],
    "MongosetSlaveOkay": [
        "Mongo::setSlaveOkay",
        "mongo.setslaveokay.php",
        "Change slaveOkay setting for this connection"
    ],
    "MongoswitchSlave": [
        "Mongo::switchSlave",
        "mongo.switchslave.php",
        "slaveOkay 読み込み用の新しいセカンダリを選ぶ"
    ],
    "Mongoconstruct": [
        "Mongo::__construct",
        "mongo.construct.php",
        "コンストラクタ"
    ],
    "Mongoget": [
        "Mongo::__get",
        "mongo.get.php",
        "データベースを取得する"
    ],
    "MongotoString": [
        "Mongo::__toString",
        "mongo.tostring.php",
        "この接続の文字列表現"
    ],
    "MongoBinDataconstruct": [
        "MongoBinData::__construct",
        "mongobindata.construct.php",
        "Creates a new binary data object"
    ],
    "MongoBinDatatoString": [
        "MongoBinData::__toString",
        "mongobindata.tostring.php",
        "The string representation of this binary data object"
    ],
    "MongoClientdropDB": [
        "MongoClient::dropDB",
        "mongoclient.dropdb.php",
        "Drops a database [deprecated]"
    ],
    "MongoClientgetConnections": [
        "MongoClient::getConnections",
        "mongoclient.getconnections.php",
        "開いているすべての接続の情報を返す"
    ],
    "MongoClientgetReadPreference": [
        "MongoClient::getReadPreference",
        "mongoclient.getreadpreference.php",
        "この接続の優先読み込みを取得する"
    ],
    "MongoClientgetWriteConcern": [
        "MongoClient::getWriteConcern",
        "mongoclient.getwriteconcern.php",
        "Get the write concern for this connection"
    ],
    "MongoClientkillCursor": [
        "MongoClient::killCursor",
        "mongoclient.killcursor.php",
        "サーバー上の指定したカーソルを削除する"
    ],
    "MongoClientlistDBs": [
        "MongoClient::listDBs",
        "mongoclient.listdbs.php",
        "Lists all of the databases available"
    ],
    "MongoClientselectCollection": [
        "MongoClient::selectCollection",
        "mongoclient.selectcollection.php",
        "Gets a database collection"
    ],
    "MongoClientselectDB": [
        "MongoClient::selectDB",
        "mongoclient.selectdb.php",
        "Gets a database"
    ],
    "MongoClientsetReadPreference": [
        "MongoClient::setReadPreference",
        "mongoclient.setreadpreference.php",
        "この接続の優先読み込みを設定する"
    ],
    "MongoClientsetWriteConcern": [
        "MongoClient::setWriteConcern",
        "mongoclient.setwriteconcern.php",
        "Set the write concern for this connection"
    ],
    "MongoClientconstruct": [
        "MongoClient::__construct",
        "mongoclient.construct.php",
        "Creates a new database connection object"
    ],
    "MongoCodeconstruct": [
        "MongoCode::__construct",
        "mongocode.construct.php",
        "新しいコードオブジェクトを作成する"
    ],
    "MongoCodetoString": [
        "MongoCode::__toString",
        "mongocode.tostring.php",
        "このコードを文字列で返す"
    ],
    "MongoCollectionaggregate": [
        "MongoCollection::aggregate",
        "mongocollection.aggregate.php",
        "aggregation フレームワークを使って集約する"
    ],
    "MongoCollectionaggregateCursor": [
        "MongoCollection::aggregateCursor",
        "mongocollection.aggregatecursor.php",
        "Execute an aggregation pipeline command and retrieve results through a cursor"
    ],
    "MongoCollectionbatchInsert": [
        "MongoCollection::batchInsert",
        "mongocollection.batchinsert.php",
        "複数のドキュメントをコレクションに追加する"
    ],
    "MongoCollectioncount": [
        "MongoCollection::count",
        "mongocollection.count.php",
        "コレクション内のドキュメント数を数える"
    ],
    "MongoCollectioncreateDBRef": [
        "MongoCollection::createDBRef",
        "mongocollection.createdbref.php",
        "データベースへの参照を作成する"
    ],
    "MongoCollectioncreateIndex": [
        "MongoCollection::createIndex",
        "mongocollection.createindex.php",
        "Creates an index on the specified field(s) if it does not already exist"
    ],
    "MongoCollectiondeleteIndex": [
        "MongoCollection::deleteIndex",
        "mongocollection.deleteindex.php",
        "コレクションからインデックスを削除する"
    ],
    "MongoCollectiondeleteIndexes": [
        "MongoCollection::deleteIndexes",
        "mongocollection.deleteindexes.php",
        "コレクションのすべてのインデックスを削除する"
    ],
    "MongoCollectiondistinct": [
        "MongoCollection::distinct",
        "mongocollection.distinct.php",
        "Retrieve a list of distinct values for the given key across a collection"
    ],
    "MongoCollectiondrop": [
        "MongoCollection::drop",
        "mongocollection.drop.php",
        "コレクションを削除する"
    ],
    "MongoCollectionensureIndex": [
        "MongoCollection::ensureIndex",
        "mongocollection.ensureindex.php",
        "Creates an index on the specified field(s) if it does not already exist"
    ],
    "MongoCollectionfind": [
        "MongoCollection::find",
        "mongocollection.find.php",
        "コレクションに問い合わせ、結果セットの MongoCursor を返す"
    ],
    "MongoCollectionfindAndModify": [
        "MongoCollection::findAndModify",
        "mongocollection.findandmodify.php",
        "ドキュメントを更新して返す"
    ],
    "MongoCollectionfindOne": [
        "MongoCollection::findOne",
        "mongocollection.findone.php",
        "コレクションに問い合わせ、単一の要素を返す"
    ],
    "MongoCollectiongetDBRef": [
        "MongoCollection::getDBRef",
        "mongocollection.getdbref.php",
        "データベース参照が指すドキュメントを取得する"
    ],
    "MongoCollectiongetIndexInfo": [
        "MongoCollection::getIndexInfo",
        "mongocollection.getindexinfo.php",
        "このコレクションのインデックスについての情報を返す"
    ],
    "MongoCollectiongetName": [
        "MongoCollection::getName",
        "mongocollection.getname.php",
        "コレクションの名前を返す"
    ],
    "MongoCollectiongetReadPreference": [
        "MongoCollection::getReadPreference",
        "mongocollection.getreadpreference.php",
        "このコレクションの優先読み込みを取得する"
    ],
    "MongoCollectiongetSlaveOkay": [
        "MongoCollection::getSlaveOkay",
        "mongocollection.getslaveokay.php",
        "このコレクションの slaveOkay 設定を取得する"
    ],
    "MongoCollectiongetWriteConcern": [
        "MongoCollection::getWriteConcern",
        "mongocollection.getwriteconcern.php",
        "Get the write concern for this collection"
    ],
    "MongoCollectiongroup": [
        "MongoCollection::group",
        "mongocollection.group.php",
        "SQL の GROUP BY コマンドと似た処理を行う"
    ],
    "MongoCollectioninsert": [
        "MongoCollection::insert",
        "mongocollection.insert.php",
        "ドキュメントをコレクションに追加する"
    ],
    "MongoCollectionparallelCollectionScan": [
        "MongoCollection::parallelCollectionScan",
        "mongocollection.parallelcollectionscan.php",
        "Returns an array of cursors to iterator over a full collection in parallel"
    ],
    "MongoCollectionremove": [
        "MongoCollection::remove",
        "mongocollection.remove.php",
        "レコードをコレクションから削除する"
    ],
    "MongoCollectionsave": [
        "MongoCollection::save",
        "mongocollection.save.php",
        "ドキュメントをコレクションに保存する"
    ],
    "MongoCollectionsetReadPreference": [
        "MongoCollection::setReadPreference",
        "mongocollection.setreadpreference.php",
        "このコレクションの優先読み込みを設定する"
    ],
    "MongoCollectionsetSlaveOkay": [
        "MongoCollection::setSlaveOkay",
        "mongocollection.setslaveokay.php",
        "Change slaveOkay setting for this collection"
    ],
    "MongoCollectionsetWriteConcern": [
        "MongoCollection::setWriteConcern",
        "mongocollection.setwriteconcern.php",
        "Set the write concern for this database"
    ],
    "MongoCollectiontoIndexString": [
        "MongoCollection::toIndexString",
        "mongocollection.toindexstring.php",
        "インデックスを指定するキーを、インデックスを指す文字列に変換する"
    ],
    "MongoCollectionupdate": [
        "MongoCollection::update",
        "mongocollection.update.php",
        "指定した条件にもとづいてレコードを更新する"
    ],
    "MongoCollectionvalidate": [
        "MongoCollection::validate",
        "mongocollection.validate.php",
        "コレクションを検証する"
    ],
    "MongoCollectionconstruct": [
        "MongoCollection::__construct",
        "mongocollection.construct.php",
        "新しいコレクションを作成する"
    ],
    "MongoCollectionget": [
        "MongoCollection::__get",
        "mongocollection.get.php",
        "コレクションを取得する"
    ],
    "MongoCollectiontoString": [
        "MongoCollection::__toString",
        "mongocollection.--tostring.php",
        "このコレクションの文字列表現"
    ],
    "MongoCommandCursorbatchSize": [
        "MongoCommandCursor::batchSize",
        "mongocommandcursor.batchsize.php",
        "Limits the number of elements returned in one batch"
    ],
    "MongoCommandCursorcreateFromDocument": [
        "MongoCommandCursor::createFromDocument",
        "mongocommandcursor.createfromdocument.php",
        "Create a new command cursor from an existing command response document"
    ],
    "MongoCommandCursorcurrent": [
        "MongoCommandCursor::current",
        "mongocommandcursor.current.php",
        "Returns the current element"
    ],
    "MongoCommandCursordead": [
        "MongoCommandCursor::dead",
        "mongocommandcursor.dead.php",
        "Checks if there are results that have not yet been sent from the database"
    ],
    "MongoCommandCursorgetReadPreference": [
        "MongoCommandCursor::getReadPreference",
        "mongocommandcursor.getreadpreference.php",
        "Get the read preference for this command"
    ],
    "MongoCommandCursorinfo": [
        "MongoCommandCursor::info",
        "mongocommandcursor.info.php",
        "Gets information about the cursor's creation and iteration"
    ],
    "MongoCommandCursorkey": [
        "MongoCommandCursor::key",
        "mongocommandcursor.key.php",
        "Returns the current result's index within the result set"
    ],
    "MongoCommandCursornext": [
        "MongoCommandCursor::next",
        "mongocommandcursor.next.php",
        "Advances the cursor to the next result"
    ],
    "MongoCommandCursorrewind": [
        "MongoCommandCursor::rewind",
        "mongocommandcursor.rewind.php",
        "Executes the command and resets the cursor to the start of the result set"
    ],
    "MongoCommandCursorsetReadPreference": [
        "MongoCommandCursor::setReadPreference",
        "mongocommandcursor.setreadpreference.php",
        "Set the read preference for this command"
    ],
    "MongoCommandCursortimeout": [
        "MongoCommandCursor::timeout",
        "mongocommandcursor.timeout.php",
        "Sets a client-side timeout for this command"
    ],
    "MongoCommandCursorvalid": [
        "MongoCommandCursor::valid",
        "mongocommandcursor.valid.php",
        "Checks if the cursor is reading a valid result"
    ],
    "MongoCommandCursorconstruct": [
        "MongoCommandCursor::__construct",
        "mongocommandcursor.construct.php",
        "Create a new command cursor"
    ],
    "MongoCursoraddOption": [
        "MongoCursor::addOption",
        "mongocursor.addoption.php",
        "トップレベルの キー/値 のペアをクエリに追加する"
    ],
    "MongoCursorawaitData": [
        "MongoCursor::awaitData",
        "mongocursor.awaitdata.php",
        "Sets whether this cursor will wait for a while for a tailable cursor to return more data"
    ],
    "MongoCursorbatchSize": [
        "MongoCursor::batchSize",
        "mongocursor.batchsize.php",
        "Limits the number of elements returned in one batch"
    ],
    "MongoCursorcount": [
        "MongoCursor::count",
        "mongocursor.count.php",
        "このクエリの結果の数を数える"
    ],
    "MongoCursorcurrent": [
        "MongoCursor::current",
        "mongocursor.current.php",
        "現在の要素を返す"
    ],
    "MongoCursordead": [
        "MongoCursor::dead",
        "mongocursor.dead.php",
        "まだデータベースから送信されていないドキュメントがあるかどうかを調べる"
    ],
    "MongoCursordoQuery": [
        "MongoCursor::doQuery",
        "mongocursor.doquery.php",
        "Execute the query"
    ],
    "MongoCursorexplain": [
        "MongoCursor::explain",
        "mongocursor.explain.php",
        "最適化やデバッグの際に有効な、クエリの explain を返す"
    ],
    "MongoCursorfields": [
        "MongoCursor::fields",
        "mongocursor.fields.php",
        "クエリのフィールドを設定する"
    ],
    "MongoCursorgetNext": [
        "MongoCursor::getNext",
        "mongocursor.getnext.php",
        "カーソルを次の結果に進めてその結果を返す"
    ],
    "MongoCursorgetReadPreference": [
        "MongoCursor::getReadPreference",
        "mongocursor.getreadpreference.php",
        "このクエリの優先読み込みを取得する"
    ],
    "MongoCursorhasNext": [
        "MongoCursor::hasNext",
        "mongocursor.hasnext.php",
        "このカーソルにまだ要素があるかどうかを調べる"
    ],
    "MongoCursorhint": [
        "MongoCursor::hint",
        "mongocursor.hint.php",
        "クエリについてのヒントをデータベースに与える"
    ],
    "MongoCursorimmortal": [
        "MongoCursor::immortal",
        "mongocursor.immortal.php",
        "Sets whether this cursor will timeout"
    ],
    "MongoCursorinfo": [
        "MongoCursor::info",
        "mongocursor.info.php",
        "カーソルの作成と走査に関する情報を取得する"
    ],
    "MongoCursorkey": [
        "MongoCursor::key",
        "mongocursor.key.php",
        "現在の結果の _id、あるいは結果セット内のインデックスを返す"
    ],
    "MongoCursorlimit": [
        "MongoCursor::limit",
        "mongocursor.limit.php",
        "返す結果の数を制限する"
    ],
    "MongoCursormaxTimeMS": [
        "MongoCursor::maxTimeMS",
        "mongocursor.maxtimems.php",
        "Sets a server-side timeout for this query"
    ],
    "MongoCursornext": [
        "MongoCursor::next",
        "mongocursor.next.php",
        "カーソルを次の結果に進めてその結果を返す"
    ],
    "MongoCursorpartial": [
        "MongoCursor::partial",
        "mongocursor.partial.php",
        "If this query should fetch partial results from mongos if a shard is down"
    ],
    "MongoCursorreset": [
        "MongoCursor::reset",
        "mongocursor.reset.php",
        "カーソルを消去する"
    ],
    "MongoCursorrewind": [
        "MongoCursor::rewind",
        "mongocursor.rewind.php",
        "カーソルを結果セットの先頭に戻す"
    ],
    "MongoCursorsetFlag": [
        "MongoCursor::setFlag",
        "mongocursor.setflag.php",
        "Sets arbitrary flags in case there is no method available the specific flag"
    ],
    "MongoCursorsetReadPreference": [
        "MongoCursor::setReadPreference",
        "mongocursor.setreadpreference.php",
        "このクエリの優先読み込みを設定する"
    ],
    "MongoCursorskip": [
        "MongoCursor::skip",
        "mongocursor.skip.php",
        "結果をスキップする"
    ],
    "MongoCursorslaveOkay": [
        "MongoCursor::slaveOkay",
        "mongocursor.slaveokay.php",
        "Sets whether this query can be done on a secondary [deprecated]"
    ],
    "MongoCursorsnapshot": [
        "MongoCursor::snapshot",
        "mongocursor.snapshot.php",
        "このクエリでスナップショットモードを使う"
    ],
    "MongoCursorsort": [
        "MongoCursor::sort",
        "mongocursor.sort.php",
        "指定したフィールドで結果をソートする"
    ],
    "MongoCursortailable": [
        "MongoCursor::tailable",
        "mongocursor.tailable.php",
        "Sets whether this cursor will be left open after fetching the last results"
    ],
    "MongoCursortimeout": [
        "MongoCursor::timeout",
        "mongocursor.timeout.php",
        "このクエリのクライアント側のタイムアウトを設定する"
    ],
    "MongoCursorvalid": [
        "MongoCursor::valid",
        "mongocursor.valid.php",
        "Checks if the cursor is reading a valid result"
    ],
    "MongoCursorconstruct": [
        "MongoCursor::__construct",
        "mongocursor.construct.php",
        "新しいカーソルを作成する"
    ],
    "MongoCursorExceptiongetHost": [
        "MongoCursorException::getHost",
        "mongocursorexception.gethost.php",
        "エラーが発生したサーバーのホスト名を取得する"
    ],
    "MongoCursorInterfacebatchSize": [
        "MongoCursorInterface::batchSize",
        "mongocursorinterface.batchsize.php",
        "Limits the number of elements returned in one batch"
    ],
    "MongoCursorInterfacedead": [
        "MongoCursorInterface::dead",
        "mongocursorinterface.dead.php",
        "Checks if there are results that have not yet been sent from the database"
    ],
    "MongoCursorInterfacegetReadPreference": [
        "MongoCursorInterface::getReadPreference",
        "mongocursorinterface.getreadpreference.php",
        "Get the read preference for this query"
    ],
    "MongoCursorInterfaceinfo": [
        "MongoCursorInterface::info",
        "mongocursorinterface.info.php",
        "Gets information about the cursor's creation and iteration"
    ],
    "MongoCursorInterfacesetReadPreference": [
        "MongoCursorInterface::setReadPreference",
        "mongocursorinterface.setreadpreference.php",
        "Set the read preference for this query"
    ],
    "MongoCursorInterfacetimeout": [
        "MongoCursorInterface::timeout",
        "mongocursorinterface.timeout.php",
        "Sets a client-side timeout for this query"
    ],
    "MongoDatetoDateTime": [
        "MongoDate::toDateTime",
        "mongodate.todatetime.php",
        "Returns a DateTime object representing this date"
    ],
    "MongoDateconstruct": [
        "MongoDate::__construct",
        "mongodate.construct.php",
        "Creates a new date"
    ],
    "MongoDatetoString": [
        "MongoDate::__toString",
        "mongodate.tostring.php",
        "Returns a string representation of this date"
    ],
    "MongoDBauthenticate": [
        "MongoDB::authenticate",
        "mongodb.authenticate.php",
        "このデータベースにログインする"
    ],
    "MongoDBcommand": [
        "MongoDB::command",
        "mongodb.command.php",
        "データベースコマンドを実行する"
    ],
    "MongoDBcreateCollection": [
        "MongoDB::createCollection",
        "mongodb.createcollection.php",
        "コレクションを作成する"
    ],
    "MongoDBcreateDBRef": [
        "MongoDB::createDBRef",
        "mongodb.createdbref.php",
        "データベース参照を作成する"
    ],
    "MongoDBdrop": [
        "MongoDB::drop",
        "mongodb.drop.php",
        "このデータベースを削除する"
    ],
    "MongoDBdropCollection": [
        "MongoDB::dropCollection",
        "mongodb.dropcollection.php",
        "コレクションを削除する [非推奨]"
    ],
    "MongoDBexecute": [
        "MongoDB::execute",
        "mongodb.execute.php",
        "JavaScript コードをデータベースサーバー上で実行する [非推奨]"
    ],
    "MongoDBforceError": [
        "MongoDB::forceError",
        "mongodb.forceerror.php",
        "データベースのエラーを作成する"
    ],
    "MongoDBgetCollectionInfo": [
        "MongoDB::getCollectionInfo",
        "mongodb.getcollectioninfo.php",
        "Returns information about collections in this database"
    ],
    "MongoDBgetCollectionNames": [
        "MongoDB::getCollectionNames",
        "mongodb.getcollectionnames.php",
        "このデータベースのすべてのコレクション名の配列を取得する"
    ],
    "MongoDBgetDBRef": [
        "MongoDB::getDBRef",
        "mongodb.getdbref.php",
        "データベース参照が指すドキュメントを取得する"
    ],
    "MongoDBgetGridFS": [
        "MongoDB::getGridFS",
        "mongodb.getgridfs.php",
        "このデータベースに格納されているファイルを扱うためのツールキットを取得する"
    ],
    "MongoDBgetProfilingLevel": [
        "MongoDB::getProfilingLevel",
        "mongodb.getprofilinglevel.php",
        "このデータベースのプロファイリングレベルを取得する"
    ],
    "MongoDBgetReadPreference": [
        "MongoDB::getReadPreference",
        "mongodb.getreadpreference.php",
        "このデータベースの優先読み込みを取得する"
    ],
    "MongoDBgetSlaveOkay": [
        "MongoDB::getSlaveOkay",
        "mongodb.getslaveokay.php",
        "このデータベースの slaveOkay 設定を取得する"
    ],
    "MongoDBgetWriteConcern": [
        "MongoDB::getWriteConcern",
        "mongodb.getwriteconcern.php",
        "Get the write concern for this database"
    ],
    "MongoDBlastError": [
        "MongoDB::lastError",
        "mongodb.lasterror.php",
        "直近のデータベース操作でエラーが発生したかどうかを調べる"
    ],
    "MongoDBlistCollections": [
        "MongoDB::listCollections",
        "mongodb.listcollections.php",
        "このデータベース内のすべてのコレクションの MongoCollection オブジェクトの配列を取得する"
    ],
    "MongoDBprevError": [
        "MongoDB::prevError",
        "mongodb.preverror.php",
        "データベース操作中の直近に発生したエラーを調べる"
    ],
    "MongoDBrepair": [
        "MongoDB::repair",
        "mongodb.repair.php",
        "このデータベースを修復・圧縮する"
    ],
    "MongoDBresetError": [
        "MongoDB::resetError",
        "mongodb.reseterror.php",
        "データベースで発生したすべてのエラーをクリアする"
    ],
    "MongoDBselectCollection": [
        "MongoDB::selectCollection",
        "mongodb.selectcollection.php",
        "コレクションを取得する"
    ],
    "MongoDBsetProfilingLevel": [
        "MongoDB::setProfilingLevel",
        "mongodb.setprofilinglevel.php",
        "このデータベースのプロファイリングレベルを設定する"
    ],
    "MongoDBsetReadPreference": [
        "MongoDB::setReadPreference",
        "mongodb.setreadpreference.php",
        "このデータベースの優先読み込みを設定する"
    ],
    "MongoDBsetSlaveOkay": [
        "MongoDB::setSlaveOkay",
        "mongodb.setslaveokay.php",
        "Change slaveOkay setting for this database"
    ],
    "MongoDBsetWriteConcern": [
        "MongoDB::setWriteConcern",
        "mongodb.setwriteconcern.php",
        "Set the write concern for this database"
    ],
    "MongoDBconstruct": [
        "MongoDB::__construct",
        "mongodb.construct.php",
        "新しいデータベースを作成する"
    ],
    "MongoDBget": [
        "MongoDB::__get",
        "mongodb.get.php",
        "コレクションを取得する"
    ],
    "MongoDBtoString": [
        "MongoDB::__toString",
        "mongodb.--tostring.php",
        "このデータベースの名前"
    ],
    "MongoDBRefcreate": [
        "MongoDBRef::create",
        "mongodbref.create.php",
        "新しいデータベース参照を作成する"
    ],
    "MongoDBRefget": [
        "MongoDBRef::get",
        "mongodbref.get.php",
        "参照が指すオブジェクトを取得する"
    ],
    "MongoDBRefisRef": [
        "MongoDBRef::isRef",
        "mongodbref.isref.php",
        "配列がデータベース参照か否かを調べる"
    ],
    "MongoDBBSONBinarygetData": [
        "MongoDB\\BSON\\Binary::getData",
        "mongodb-bson-binary.getdata.php",
        "Returns the Binary's data"
    ],
    "MongoDBBSONBinarygetType": [
        "MongoDB\\BSON\\Binary::getType",
        "mongodb-bson-binary.gettype.php",
        "Returns the Binary's type"
    ],
    "MongoDBBSONBinaryjsonSerialize": [
        "MongoDB\\BSON\\Binary::jsonSerialize",
        "mongodb-bson-binary.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONBinaryserialize": [
        "MongoDB\\BSON\\Binary::serialize",
        "mongodb-bson-binary.serialize.php",
        "Serialize a Binary"
    ],
    "MongoDBBSONBinaryunserialize": [
        "MongoDB\\BSON\\Binary::unserialize",
        "mongodb-bson-binary.unserialize.php",
        "Unserialize a Binary"
    ],
    "MongoDBBSONBinaryconstruct": [
        "MongoDB\\BSON\\Binary::__construct",
        "mongodb-bson-binary.construct.php",
        "Construct a new Binary"
    ],
    "MongoDBBSONBinarytoString": [
        "MongoDB\\BSON\\Binary::__toString",
        "mongodb-bson-binary.tostring.php",
        "Returns the Binary's data"
    ],
    "MongoDBBSONBinaryInterfacegetData": [
        "MongoDB\\BSON\\BinaryInterface::getData",
        "mongodb-bson-binaryinterface.getdata.php",
        "Returns the BinaryInterface's data"
    ],
    "MongoDBBSONBinaryInterfacegetType": [
        "MongoDB\\BSON\\BinaryInterface::getType",
        "mongodb-bson-binaryinterface.gettype.php",
        "Returns the BinaryInterface's type"
    ],
    "MongoDBBSONBinaryInterfacetoString": [
        "MongoDB\\BSON\\BinaryInterface::__toString",
        "mongodb-bson-binaryinterface.tostring.php",
        "Returns the BinaryInterface's data"
    ],
    "MongoDBBSONDBPointerjsonSerialize": [
        "MongoDB\\BSON\\DBPointer::jsonSerialize",
        "mongodb-bson-dbpointer.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONDBPointerserialize": [
        "MongoDB\\BSON\\DBPointer::serialize",
        "mongodb-bson-dbpointer.serialize.php",
        "Serialize a DBPointer"
    ],
    "MongoDBBSONDBPointerunserialize": [
        "MongoDB\\BSON\\DBPointer::unserialize",
        "mongodb-bson-dbpointer.unserialize.php",
        "Unserialize a DBPointer"
    ],
    "MongoDBBSONDBPointerconstruct": [
        "MongoDB\\BSON\\DBPointer::__construct",
        "mongodb-bson-dbpointer.construct.php",
        "Construct a new DBPointer (unused)"
    ],
    "MongoDBBSONDBPointertoString": [
        "MongoDB\\BSON\\DBPointer::__toString",
        "mongodb-bson-dbpointer.tostring.php",
        "Returns an empty string"
    ],
    "MongoDBBSONDecimal128jsonSerialize": [
        "MongoDB\\BSON\\Decimal128::jsonSerialize",
        "mongodb-bson-decimal128.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONDecimal128serialize": [
        "MongoDB\\BSON\\Decimal128::serialize",
        "mongodb-bson-decimal128.serialize.php",
        "Serialize a Decimal128"
    ],
    "MongoDBBSONDecimal128unserialize": [
        "MongoDB\\BSON\\Decimal128::unserialize",
        "mongodb-bson-decimal128.unserialize.php",
        "Unserialize a Decimal128"
    ],
    "MongoDBBSONDecimal128construct": [
        "MongoDB\\BSON\\Decimal128::__construct",
        "mongodb-bson-decimal128.construct.php",
        "Construct a new Decimal128"
    ],
    "MongoDBBSONDecimal128toString": [
        "MongoDB\\BSON\\Decimal128::__toString",
        "mongodb-bson-decimal128.tostring.php",
        "Returns the string representation of this Decimal128"
    ],
    "MongoDBBSONDecimal128InterfacetoString": [
        "MongoDB\\BSON\\Decimal128Interface::__toString",
        "mongodb-bson-decimal128interface.tostring.php",
        "Returns the string representation of this Decimal128Interface"
    ],
    "MongoDBBSONfromJSON": [
        "MongoDB\\BSON\\fromJSON",
        "function.mongodb.bson-fromjson.php",
        "Returns the BSON representation of a JSON value"
    ],
    "MongoDBBSONfromPHP": [
        "MongoDB\\BSON\\fromPHP",
        "function.mongodb.bson-fromphp.php",
        "Returns the BSON representation of a PHP value"
    ],
    "MongoDBBSONInt64jsonSerialize": [
        "MongoDB\\BSON\\Int64::jsonSerialize",
        "mongodb-bson-int64.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONInt64serialize": [
        "MongoDB\\BSON\\Int64::serialize",
        "mongodb-bson-int64.serialize.php",
        "Serialize an Int64"
    ],
    "MongoDBBSONInt64unserialize": [
        "MongoDB\\BSON\\Int64::unserialize",
        "mongodb-bson-int64.unserialize.php",
        "Unserialize an Int64"
    ],
    "MongoDBBSONInt64construct": [
        "MongoDB\\BSON\\Int64::__construct",
        "mongodb-bson-int64.construct.php",
        "Construct a new Int64 (unused)"
    ],
    "MongoDBBSONInt64toString": [
        "MongoDB\\BSON\\Int64::__toString",
        "mongodb-bson-int64.tostring.php",
        "Returns the string representation of this Int64"
    ],
    "MongoDBBSONJavascriptgetCode": [
        "MongoDB\\BSON\\Javascript::getCode",
        "mongodb-bson-javascript.getcode.php",
        "Returns the Javascript's code"
    ],
    "MongoDBBSONJavascriptgetScope": [
        "MongoDB\\BSON\\Javascript::getScope",
        "mongodb-bson-javascript.getscope.php",
        "Returns the Javascript's scope document"
    ],
    "MongoDBBSONJavascriptjsonSerialize": [
        "MongoDB\\BSON\\Javascript::jsonSerialize",
        "mongodb-bson-javascript.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONJavascriptserialize": [
        "MongoDB\\BSON\\Javascript::serialize",
        "mongodb-bson-javascript.serialize.php",
        "Serialize a Javascript"
    ],
    "MongoDBBSONJavascriptunserialize": [
        "MongoDB\\BSON\\Javascript::unserialize",
        "mongodb-bson-javascript.unserialize.php",
        "Unserialize a Javascript"
    ],
    "MongoDBBSONJavascriptconstruct": [
        "MongoDB\\BSON\\Javascript::__construct",
        "mongodb-bson-javascript.construct.php",
        "Construct a new Javascript"
    ],
    "MongoDBBSONJavascripttoString": [
        "MongoDB\\BSON\\Javascript::__toString",
        "mongodb-bson-javascript.tostring.php",
        "Returns the Javascript's code"
    ],
    "MongoDBBSONJavascriptInterfacegetCode": [
        "MongoDB\\BSON\\JavascriptInterface::getCode",
        "mongodb-bson-javascriptinterface.getcode.php",
        "Returns the JavascriptInterface's code"
    ],
    "MongoDBBSONJavascriptInterfacegetScope": [
        "MongoDB\\BSON\\JavascriptInterface::getScope",
        "mongodb-bson-javascriptinterface.getscope.php",
        "Returns the JavascriptInterface's scope document"
    ],
    "MongoDBBSONJavascriptInterfacetoString": [
        "MongoDB\\BSON\\JavascriptInterface::__toString",
        "mongodb-bson-javascriptinterface.tostring.php",
        "Returns the JavascriptInterface's code"
    ],
    "MongoDBBSONMaxKeyjsonSerialize": [
        "MongoDB\\BSON\\MaxKey::jsonSerialize",
        "mongodb-bson-maxkey.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONMaxKeyserialize": [
        "MongoDB\\BSON\\MaxKey::serialize",
        "mongodb-bson-maxkey.serialize.php",
        "Serialize a MaxKey"
    ],
    "MongoDBBSONMaxKeyunserialize": [
        "MongoDB\\BSON\\MaxKey::unserialize",
        "mongodb-bson-maxkey.unserialize.php",
        "Unserialize a MaxKey"
    ],
    "MongoDBBSONMaxKeyconstruct": [
        "MongoDB\\BSON\\MaxKey::__construct",
        "mongodb-bson-maxkey.construct.php",
        "Construct a new MaxKey"
    ],
    "MongoDBBSONMinKeyjsonSerialize": [
        "MongoDB\\BSON\\MinKey::jsonSerialize",
        "mongodb-bson-minkey.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONMinKeyserialize": [
        "MongoDB\\BSON\\MinKey::serialize",
        "mongodb-bson-minkey.serialize.php",
        "Serialize a MinKey"
    ],
    "MongoDBBSONMinKeyunserialize": [
        "MongoDB\\BSON\\MinKey::unserialize",
        "mongodb-bson-minkey.unserialize.php",
        "Unserialize a MinKey"
    ],
    "MongoDBBSONMinKeyconstruct": [
        "MongoDB\\BSON\\MinKey::__construct",
        "mongodb-bson-minkey.construct.php",
        "Construct a new MinKey"
    ],
    "MongoDBBSONObjectIdgetTimestamp": [
        "MongoDB\\BSON\\ObjectId::getTimestamp",
        "mongodb-bson-objectid.gettimestamp.php",
        "Returns the timestamp component of this ObjectId"
    ],
    "MongoDBBSONObjectIdjsonSerialize": [
        "MongoDB\\BSON\\ObjectId::jsonSerialize",
        "mongodb-bson-objectid.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONObjectIdserialize": [
        "MongoDB\\BSON\\ObjectId::serialize",
        "mongodb-bson-objectid.serialize.php",
        "Serialize an ObjectId"
    ],
    "MongoDBBSONObjectIdunserialize": [
        "MongoDB\\BSON\\ObjectId::unserialize",
        "mongodb-bson-objectid.unserialize.php",
        "Unserialize an ObjectId"
    ],
    "MongoDBBSONObjectIdconstruct": [
        "MongoDB\\BSON\\ObjectId::__construct",
        "mongodb-bson-objectid.construct.php",
        "Construct a new ObjectId"
    ],
    "MongoDBBSONObjectIdtoString": [
        "MongoDB\\BSON\\ObjectId::__toString",
        "mongodb-bson-objectid.tostring.php",
        "Returns the hexidecimal representation of this ObjectId"
    ],
    "MongoDBBSONObjectIdInterfacegetTimestamp": [
        "MongoDB\\BSON\\ObjectIdInterface::getTimestamp",
        "mongodb-bson-objectidinterface.gettimestamp.php",
        "Returns the timestamp component of this ObjectIdInterface"
    ],
    "MongoDBBSONObjectIdInterfacetoString": [
        "MongoDB\\BSON\\ObjectIdInterface::__toString",
        "mongodb-bson-objectidinterface.tostring.php",
        "Returns the hexidecimal representation of this ObjectIdInterface"
    ],
    "MongoDBBSONRegexgetFlags": [
        "MongoDB\\BSON\\Regex::getFlags",
        "mongodb-bson-regex.getflags.php",
        "Returns the Regex's flags"
    ],
    "MongoDBBSONRegexgetPattern": [
        "MongoDB\\BSON\\Regex::getPattern",
        "mongodb-bson-regex.getpattern.php",
        "Returns the Regex's pattern"
    ],
    "MongoDBBSONRegexjsonSerialize": [
        "MongoDB\\BSON\\Regex::jsonSerialize",
        "mongodb-bson-regex.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONRegexserialize": [
        "MongoDB\\BSON\\Regex::serialize",
        "mongodb-bson-regex.serialize.php",
        "Serialize a Regex"
    ],
    "MongoDBBSONRegexunserialize": [
        "MongoDB\\BSON\\Regex::unserialize",
        "mongodb-bson-regex.unserialize.php",
        "Unserialize a Regex"
    ],
    "MongoDBBSONRegexconstruct": [
        "MongoDB\\BSON\\Regex::__construct",
        "mongodb-bson-regex.construct.php",
        "Construct a new Regex"
    ],
    "MongoDBBSONRegextoString": [
        "MongoDB\\BSON\\Regex::__toString",
        "mongodb-bson-regex.tostring.php",
        "Returns the string representation of this Regex"
    ],
    "MongoDBBSONRegexInterfacegetFlags": [
        "MongoDB\\BSON\\RegexInterface::getFlags",
        "mongodb-bson-regexinterface.getflags.php",
        "Returns the RegexInterface's flags"
    ],
    "MongoDBBSONRegexInterfacegetPattern": [
        "MongoDB\\BSON\\RegexInterface::getPattern",
        "mongodb-bson-regexinterface.getpattern.php",
        "Returns the RegexInterface's pattern"
    ],
    "MongoDBBSONRegexInterfacetoString": [
        "MongoDB\\BSON\\RegexInterface::__toString",
        "mongodb-bson-regexinterface.tostring.php",
        "Returns the string representation of this RegexInterface"
    ],
    "MongoDBBSONSerializablebsonSerialize": [
        "MongoDB\\BSON\\Serializable::bsonSerialize",
        "mongodb-bson-serializable.bsonserialize.php",
        "Provides an array or document to serialize as BSON"
    ],
    "MongoDBBSONSymboljsonSerialize": [
        "MongoDB\\BSON\\Symbol::jsonSerialize",
        "mongodb-bson-symbol.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONSymbolserialize": [
        "MongoDB\\BSON\\Symbol::serialize",
        "mongodb-bson-symbol.serialize.php",
        "Serialize a Symbol"
    ],
    "MongoDBBSONSymbolunserialize": [
        "MongoDB\\BSON\\Symbol::unserialize",
        "mongodb-bson-symbol.unserialize.php",
        "Unserialize a Symbol"
    ],
    "MongoDBBSONSymbolconstruct": [
        "MongoDB\\BSON\\Symbol::__construct",
        "mongodb-bson-symbol.construct.php",
        "Construct a new Symbol (unused)"
    ],
    "MongoDBBSONSymboltoString": [
        "MongoDB\\BSON\\Symbol::__toString",
        "mongodb-bson-symbol.tostring.php",
        "Returns the Symbol as a string"
    ],
    "MongoDBBSONTimestampgetIncrement": [
        "MongoDB\\BSON\\Timestamp::getIncrement",
        "mongodb-bson-timestamp.getincrement.php",
        "Returns the increment component of this Timestamp"
    ],
    "MongoDBBSONTimestampgetTimestamp": [
        "MongoDB\\BSON\\Timestamp::getTimestamp",
        "mongodb-bson-timestamp.gettimestamp.php",
        "Returns the timestamp component of this Timestamp"
    ],
    "MongoDBBSONTimestampjsonSerialize": [
        "MongoDB\\BSON\\Timestamp::jsonSerialize",
        "mongodb-bson-timestamp.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONTimestampserialize": [
        "MongoDB\\BSON\\Timestamp::serialize",
        "mongodb-bson-timestamp.serialize.php",
        "Serialize a Timestamp"
    ],
    "MongoDBBSONTimestampunserialize": [
        "MongoDB\\BSON\\Timestamp::unserialize",
        "mongodb-bson-timestamp.unserialize.php",
        "Unserialize a Timestamp"
    ],
    "MongoDBBSONTimestampconstruct": [
        "MongoDB\\BSON\\Timestamp::__construct",
        "mongodb-bson-timestamp.construct.php",
        "Construct a new Timestamp"
    ],
    "MongoDBBSONTimestamptoString": [
        "MongoDB\\BSON\\Timestamp::__toString",
        "mongodb-bson-timestamp.tostring.php",
        "Returns the string representation of this Timestamp"
    ],
    "MongoDBBSONTimestampInterfacegetIncrement": [
        "MongoDB\\BSON\\TimestampInterface::getIncrement",
        "mongodb-bson-timestampinterface.getincrement.php",
        "Returns the increment component of this TimestampInterface"
    ],
    "MongoDBBSONTimestampInterfacegetTimestamp": [
        "MongoDB\\BSON\\TimestampInterface::getTimestamp",
        "mongodb-bson-timestampinterface.gettimestamp.php",
        "Returns the timestamp component of this TimestampInterface"
    ],
    "MongoDBBSONTimestampInterfacetoString": [
        "MongoDB\\BSON\\TimestampInterface::__toString",
        "mongodb-bson-timestampinterface.tostring.php",
        "Returns the string representation of this TimestampInterface"
    ],
    "MongoDBBSONtoCanonicalExtendedJSON": [
        "MongoDB\\BSON\\toCanonicalExtendedJSON",
        "function.mongodb.bson-tocanonicalextendedjson.php",
        "Returns the Canonical Extended JSON representation of a BSON value"
    ],
    "MongoDBBSONtoJSON": [
        "MongoDB\\BSON\\toJSON",
        "function.mongodb.bson-tojson.php",
        "Returns the Legacy Extended JSON representation of a BSON value"
    ],
    "MongoDBBSONtoPHP": [
        "MongoDB\\BSON\\toPHP",
        "function.mongodb.bson-tophp.php",
        "Returns the PHP representation of a BSON value"
    ],
    "MongoDBBSONtoRelaxedExtendedJSON": [
        "MongoDB\\BSON\\toRelaxedExtendedJSON",
        "function.mongodb.bson-torelaxedextendedjson.php",
        "Returns the Relaxed Extended JSON representation of a BSON value"
    ],
    "MongoDBBSONUndefinedjsonSerialize": [
        "MongoDB\\BSON\\Undefined::jsonSerialize",
        "mongodb-bson-undefined.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONUndefinedserialize": [
        "MongoDB\\BSON\\Undefined::serialize",
        "mongodb-bson-undefined.serialize.php",
        "Serialize a Undefined"
    ],
    "MongoDBBSONUndefinedunserialize": [
        "MongoDB\\BSON\\Undefined::unserialize",
        "mongodb-bson-undefined.unserialize.php",
        "Unserialize a Undefined"
    ],
    "MongoDBBSONUndefinedconstruct": [
        "MongoDB\\BSON\\Undefined::__construct",
        "mongodb-bson-undefined.construct.php",
        "Construct a new Undefined (unused)"
    ],
    "MongoDBBSONUndefinedtoString": [
        "MongoDB\\BSON\\Undefined::__toString",
        "mongodb-bson-undefined.tostring.php",
        "Returns an empty string"
    ],
    "MongoDBBSONUnserializablebsonUnserialize": [
        "MongoDB\\BSON\\Unserializable::bsonUnserialize",
        "mongodb-bson-unserializable.bsonunserialize.php",
        "Constructs the object from a BSON array or document"
    ],
    "MongoDBBSONUTCDateTimejsonSerialize": [
        "MongoDB\\BSON\\UTCDateTime::jsonSerialize",
        "mongodb-bson-utcdatetime.jsonserialize.php",
        "Returns a representation that can be converted to JSON"
    ],
    "MongoDBBSONUTCDateTimeserialize": [
        "MongoDB\\BSON\\UTCDateTime::serialize",
        "mongodb-bson-utcdatetime.serialize.php",
        "Serialize a UTCDateTime"
    ],
    "MongoDBBSONUTCDateTimetoDateTime": [
        "MongoDB\\BSON\\UTCDateTime::toDateTime",
        "mongodb-bson-utcdatetime.todatetime.php",
        "Returns the DateTime representation of this UTCDateTime"
    ],
    "MongoDBBSONUTCDateTimeunserialize": [
        "MongoDB\\BSON\\UTCDateTime::unserialize",
        "mongodb-bson-utcdatetime.unserialize.php",
        "Unserialize a UTCDateTime"
    ],
    "MongoDBBSONUTCDateTimeconstruct": [
        "MongoDB\\BSON\\UTCDateTime::__construct",
        "mongodb-bson-utcdatetime.construct.php",
        "Construct a new UTCDateTime"
    ],
    "MongoDBBSONUTCDateTimetoString": [
        "MongoDB\\BSON\\UTCDateTime::__toString",
        "mongodb-bson-utcdatetime.tostring.php",
        "Returns the string representation of this UTCDateTime"
    ],
    "MongoDBBSONUTCDateTimeInterfacetoDateTime": [
        "MongoDB\\BSON\\UTCDateTimeInterface::toDateTime",
        "mongodb-bson-utcdatetimeinterface.todatetime.php",
        "Returns the DateTime representation of this UTCDateTimeInterface"
    ],
    "MongoDBBSONUTCDateTimeInterfacetoString": [
        "MongoDB\\BSON\\UTCDateTimeInterface::__toString",
        "mongodb-bson-utcdatetimeinterface.tostring.php",
        "Returns the string representation of this UTCDateTimeInterface"
    ],
    "MongoDBDriverBulkWritecount": [
        "MongoDB\\Driver\\BulkWrite::count",
        "mongodb-driver-bulkwrite.count.php",
        "Count number of write operations in the bulk"
    ],
    "MongoDBDriverBulkWritedelete": [
        "MongoDB\\Driver\\BulkWrite::delete",
        "mongodb-driver-bulkwrite.delete.php",
        "Add a delete operation to the bulk"
    ],
    "MongoDBDriverBulkWriteinsert": [
        "MongoDB\\Driver\\BulkWrite::insert",
        "mongodb-driver-bulkwrite.insert.php",
        "Add an insert operation to the bulk"
    ],
    "MongoDBDriverBulkWriteupdate": [
        "MongoDB\\Driver\\BulkWrite::update",
        "mongodb-driver-bulkwrite.update.php",
        "Add an update operation to the bulk"
    ],
    "MongoDBDriverBulkWriteconstruct": [
        "MongoDB\\Driver\\BulkWrite::__construct",
        "mongodb-driver-bulkwrite.construct.php",
        "Create a new BulkWrite"
    ],
    "MongoDBDriverClientEncryptioncreateDataKey": [
        "MongoDB\\Driver\\ClientEncryption::createDataKey",
        "mongodb-driver-clientencryption.createdatakey.php",
        "Create a new encryption data key"
    ],
    "MongoDBDriverClientEncryptiondecrypt": [
        "MongoDB\\Driver\\ClientEncryption::decrypt",
        "mongodb-driver-clientencryption.decrypt.php",
        "Decrypt a value"
    ],
    "MongoDBDriverClientEncryptionencrypt": [
        "MongoDB\\Driver\\ClientEncryption::encrypt",
        "mongodb-driver-clientencryption.encrypt.php",
        "Encrypt a value"
    ],
    "MongoDBDriverCommandconstruct": [
        "MongoDB\\Driver\\Command::__construct",
        "mongodb-driver-command.construct.php",
        "Create a new Command"
    ],
    "MongoDBDriverCursorcurrent": [
        "MongoDB\\Driver\\Cursor::current",
        "mongodb-driver-cursor.current.php",
        "Returns the current element"
    ],
    "MongoDBDriverCursorgetId": [
        "MongoDB\\Driver\\Cursor::getId",
        "mongodb-driver-cursor.getid.php",
        "Returns the ID for this cursor"
    ],
    "MongoDBDriverCursorgetServer": [
        "MongoDB\\Driver\\Cursor::getServer",
        "mongodb-driver-cursor.getserver.php",
        "Returns the server associated with this cursor"
    ],
    "MongoDBDriverCursorisDead": [
        "MongoDB\\Driver\\Cursor::isDead",
        "mongodb-driver-cursor.isdead.php",
        "Checks if the cursor is exhausted or may have additional results"
    ],
    "MongoDBDriverCursorkey": [
        "MongoDB\\Driver\\Cursor::key",
        "mongodb-driver-cursor.key.php",
        "Returns the current result's index within the cursor"
    ],
    "MongoDBDriverCursornext": [
        "MongoDB\\Driver\\Cursor::next",
        "mongodb-driver-cursor.next.php",
        "Advances the cursor to the next result"
    ],
    "MongoDBDriverCursorrewind": [
        "MongoDB\\Driver\\Cursor::rewind",
        "mongodb-driver-cursor.rewind.php",
        "Rewind the cursor to the first result"
    ],
    "MongoDBDriverCursorsetTypeMap": [
        "MongoDB\\Driver\\Cursor::setTypeMap",
        "mongodb-driver-cursor.settypemap.php",
        "Sets a type map to use for BSON unserialization"
    ],
    "MongoDBDriverCursortoArray": [
        "MongoDB\\Driver\\Cursor::toArray",
        "mongodb-driver-cursor.toarray.php",
        "Returns an array containing all results for this cursor"
    ],
    "MongoDBDriverCursorvalid": [
        "MongoDB\\Driver\\Cursor::valid",
        "mongodb-driver-cursor.valid.php",
        "Checks if the current position in the cursor is valid"
    ],
    "MongoDBDriverCursorconstruct": [
        "MongoDB\\Driver\\Cursor::__construct",
        "mongodb-driver-cursor.construct.php",
        "Create a new Cursor (not used)"
    ],
    "MongoDBDriverCursorIdserialize": [
        "MongoDB\\Driver\\CursorId::serialize",
        "mongodb-driver-cursorid.serialize.php",
        "Serialize a CursorId"
    ],
    "MongoDBDriverCursorIdunserialize": [
        "MongoDB\\Driver\\CursorId::unserialize",
        "mongodb-driver-cursorid.unserialize.php",
        "Unserialize a CursorId"
    ],
    "MongoDBDriverCursorIdconstruct": [
        "MongoDB\\Driver\\CursorId::__construct",
        "mongodb-driver-cursorid.construct.php",
        "Create a new CursorId (not used)"
    ],
    "MongoDBDriverCursorIdtoString": [
        "MongoDB\\Driver\\CursorId::__toString",
        "mongodb-driver-cursorid.tostring.php",
        "String representation of the cursor ID"
    ],
    "MongoDBDriverCursorInterfacegetId": [
        "MongoDB\\Driver\\CursorInterface::getId",
        "mongodb-driver-cursorinterface.getid.php",
        "Returns the ID for this cursor"
    ],
    "MongoDBDriverCursorInterfacegetServer": [
        "MongoDB\\Driver\\CursorInterface::getServer",
        "mongodb-driver-cursorinterface.getserver.php",
        "Returns the server associated with this cursor"
    ],
    "MongoDBDriverCursorInterfaceisDead": [
        "MongoDB\\Driver\\CursorInterface::isDead",
        "mongodb-driver-cursorinterface.isdead.php",
        "Checks if the cursor may have additional results"
    ],
    "MongoDBDriverCursorInterfacesetTypeMap": [
        "MongoDB\\Driver\\CursorInterface::setTypeMap",
        "mongodb-driver-cursorinterface.settypemap.php",
        "Sets a type map to use for BSON unserialization"
    ],
    "MongoDBDriverCursorInterfacetoArray": [
        "MongoDB\\Driver\\CursorInterface::toArray",
        "mongodb-driver-cursorinterface.toarray.php",
        "Returns an array containing all results for this cursor"
    ],
    "MongoDBDriverExceptionCommandExceptiongetResultDocument": [
        "MongoDB\\Driver\\Exception\\CommandException::getResultDocument",
        "mongodb-driver-commandexception.getresultdocument.php",
        "Returns the result document for the failed command"
    ],
    "MongoDBDriverExceptionRuntimeExceptionhasErrorLabel": [
        "MongoDB\\Driver\\Exception\\RuntimeException::hasErrorLabel",
        "mongodb-driver-runtimeexception.haserrorlabel.php",
        "Returns whether an error label is associated with an exception"
    ],
    "MongoDBDriverExceptionWriteExceptiongetWriteResult": [
        "MongoDB\\Driver\\Exception\\WriteException::getWriteResult",
        "mongodb-driver-writeexception.getwriteresult.php",
        "Returns the WriteResult for the failed write operation"
    ],
    "MongoDBDriverManagercreateClientEncryption": [
        "MongoDB\\Driver\\Manager::createClientEncryption",
        "mongodb-driver-manager.createclientencryption.php",
        "Create a new ClientEncryption object"
    ],
    "MongoDBDriverManagerexecuteBulkWrite": [
        "MongoDB\\Driver\\Manager::executeBulkWrite",
        "mongodb-driver-manager.executebulkwrite.php",
        "Execute one or more write operations"
    ],
    "MongoDBDriverManagerexecuteCommand": [
        "MongoDB\\Driver\\Manager::executeCommand",
        "mongodb-driver-manager.executecommand.php",
        "Execute a database command"
    ],
    "MongoDBDriverManagerexecuteQuery": [
        "MongoDB\\Driver\\Manager::executeQuery",
        "mongodb-driver-manager.executequery.php",
        "Execute a database query"
    ],
    "MongoDBDriverManagerexecuteReadCommand": [
        "MongoDB\\Driver\\Manager::executeReadCommand",
        "mongodb-driver-manager.executereadcommand.php",
        "Execute a database command that reads"
    ],
    "MongoDBDriverManagerexecuteReadWriteCommand": [
        "MongoDB\\Driver\\Manager::executeReadWriteCommand",
        "mongodb-driver-manager.executereadwritecommand.php",
        "Execute a database command that reads and writes"
    ],
    "MongoDBDriverManagerexecuteWriteCommand": [
        "MongoDB\\Driver\\Manager::executeWriteCommand",
        "mongodb-driver-manager.executewritecommand.php",
        "Execute a database command that writes"
    ],
    "MongoDBDriverManagergetReadConcern": [
        "MongoDB\\Driver\\Manager::getReadConcern",
        "mongodb-driver-manager.getreadconcern.php",
        "Return the ReadConcern for the Manager"
    ],
    "MongoDBDriverManagergetReadPreference": [
        "MongoDB\\Driver\\Manager::getReadPreference",
        "mongodb-driver-manager.getreadpreference.php",
        "Return the ReadPreference for the Manager"
    ],
    "MongoDBDriverManagergetServers": [
        "MongoDB\\Driver\\Manager::getServers",
        "mongodb-driver-manager.getservers.php",
        "Return the servers to which this manager is connected"
    ],
    "MongoDBDriverManagergetWriteConcern": [
        "MongoDB\\Driver\\Manager::getWriteConcern",
        "mongodb-driver-manager.getwriteconcern.php",
        "Return the WriteConcern for the Manager"
    ],
    "MongoDBDriverManagerselectServer": [
        "MongoDB\\Driver\\Manager::selectServer",
        "mongodb-driver-manager.selectserver.php",
        "Select a server matching a read preference"
    ],
    "MongoDBDriverManagerstartSession": [
        "MongoDB\\Driver\\Manager::startSession",
        "mongodb-driver-manager.startsession.php",
        "Start a new client session for use with this client"
    ],
    "MongoDBDriverManagerconstruct": [
        "MongoDB\\Driver\\Manager::__construct",
        "mongodb-driver-manager.construct.php",
        "Create new MongoDB Manager"
    ],
    "MongoDBDriverMonitoringaddSubscriber": [
        "MongoDB\\Driver\\Monitoring\\addSubscriber",
        "function.mongodb.driver.monitoring.addsubscriber.php",
        "Registers a new monitoring event subscriber"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetCommandName": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getCommandName",
        "mongodb-driver-monitoring-commandfailedevent.getcommandname.php",
        "Returns the command name"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetDurationMicros": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getDurationMicros",
        "mongodb-driver-monitoring-commandfailedevent.getdurationmicros.php",
        "Returns the command's duration in microseconds"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetError": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getError",
        "mongodb-driver-monitoring-commandfailedevent.geterror.php",
        "Returns the Exception associated with the failed command"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetOperationId": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getOperationId",
        "mongodb-driver-monitoring-commandfailedevent.getoperationid.php",
        "Returns the command's operation ID"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetReply": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getReply",
        "mongodb-driver-monitoring-commandfailedevent.getreply.php",
        "Returns the command reply document"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetRequestId": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getRequestId",
        "mongodb-driver-monitoring-commandfailedevent.getrequestid.php",
        "Returns the command's request ID"
    ],
    "MongoDBDriverMonitoringCommandFailedEventgetServer": [
        "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getServer",
        "mongodb-driver-monitoring-commandfailedevent.getserver.php",
        "Returns the Server on which the command was executed"
    ],
    "MongoDBDriverMonitoringCommandStartedEventgetCommand": [
        "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommand",
        "mongodb-driver-monitoring-commandstartedevent.getcommand.php",
        "Returns the command document"
    ],
    "MongoDBDriverMonitoringCommandStartedEventgetCommandName": [
        "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommandName",
        "mongodb-driver-monitoring-commandstartedevent.getcommandname.php",
        "Returns the command name"
    ],
    "MongoDBDriverMonitoringCommandStartedEventgetDatabaseName": [
        "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getDatabaseName",
        "mongodb-driver-monitoring-commandstartedevent.getdatabasename.php",
        "Returns the database on which the command was executed"
    ],
    "MongoDBDriverMonitoringCommandStartedEventgetOperationId": [
        "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getOperationId",
        "mongodb-driver-monitoring-commandstartedevent.getoperationid.php",
        "Returns the command's operation ID"
    ],
    "MongoDBDriverMonitoringCommandStartedEventgetRequestId": [
        "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getRequestId",
        "mongodb-driver-monitoring-commandstartedevent.getrequestid.php",
        "Returns the command's request ID"
    ],
    "MongoDBDriverMonitoringCommandStartedEventgetServer": [
        "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getServer",
        "mongodb-driver-monitoring-commandstartedevent.getserver.php",
        "Returns the Server on which the command was executed"
    ],
    "MongoDBDriverMonitoringCommandSubscribercommandFailed": [
        "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandFailed",
        "mongodb-driver-monitoring-commandsubscriber.commandfailed.php",
        "Notification method for a failed command"
    ],
    "MongoDBDriverMonitoringCommandSubscribercommandStarted": [
        "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandStarted",
        "mongodb-driver-monitoring-commandsubscriber.commandstarted.php",
        "Notification method for a started command"
    ],
    "MongoDBDriverMonitoringCommandSubscribercommandSucceeded": [
        "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandSucceeded",
        "mongodb-driver-monitoring-commandsubscriber.commandsucceeded.php",
        "Notification method for a successful command"
    ],
    "MongoDBDriverMonitoringCommandSucceededEventgetCommandName": [
        "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getCommandName",
        "mongodb-driver-monitoring-commandsucceededevent.getcommandname.php",
        "Returns the command name"
    ],
    "MongoDBDriverMonitoringCommandSucceededEventgetDurationMicros": [
        "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getDurationMicros",
        "mongodb-driver-monitoring-commandsucceededevent.getdurationmicros.php",
        "Returns the command's duration in microseconds"
    ],
    "MongoDBDriverMonitoringCommandSucceededEventgetOperationId": [
        "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getOperationId",
        "mongodb-driver-monitoring-commandsucceededevent.getoperationid.php",
        "Returns the command's operation ID"
    ],
    "MongoDBDriverMonitoringCommandSucceededEventgetReply": [
        "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getReply",
        "mongodb-driver-monitoring-commandsucceededevent.getreply.php",
        "Returns the command reply document"
    ],
    "MongoDBDriverMonitoringCommandSucceededEventgetRequestId": [
        "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getRequestId",
        "mongodb-driver-monitoring-commandsucceededevent.getrequestid.php",
        "Returns the command's request ID"
    ],
    "MongoDBDriverMonitoringCommandSucceededEventgetServer": [
        "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getServer",
        "mongodb-driver-monitoring-commandsucceededevent.getserver.php",
        "Returns the Server on which the command was executed"
    ],
    "MongoDBDriverMonitoringremoveSubscriber": [
        "MongoDB\\Driver\\Monitoring\\removeSubscriber",
        "function.mongodb.driver.monitoring.removesubscriber.php",
        "Unregisters an existing monitoring event subscriber"
    ],
    "MongoDBDriverQueryconstruct": [
        "MongoDB\\Driver\\Query::__construct",
        "mongodb-driver-query.construct.php",
        "Create a new Query"
    ],
    "MongoDBDriverReadConcernbsonSerialize": [
        "MongoDB\\Driver\\ReadConcern::bsonSerialize",
        "mongodb-driver-readconcern.bsonserialize.php",
        "Returns an object for BSON serialization"
    ],
    "MongoDBDriverReadConcerngetLevel": [
        "MongoDB\\Driver\\ReadConcern::getLevel",
        "mongodb-driver-readconcern.getlevel.php",
        "Returns the ReadConcern's &quot;level&quot; option"
    ],
    "MongoDBDriverReadConcernisDefault": [
        "MongoDB\\Driver\\ReadConcern::isDefault",
        "mongodb-driver-readconcern.isdefault.php",
        "Checks if this is the default read concern"
    ],
    "MongoDBDriverReadConcernserialize": [
        "MongoDB\\Driver\\ReadConcern::serialize",
        "mongodb-driver-readconcern.serialize.php",
        "Serialize a ReadConcern"
    ],
    "MongoDBDriverReadConcernunserialize": [
        "MongoDB\\Driver\\ReadConcern::unserialize",
        "mongodb-driver-readconcern.unserialize.php",
        "Unserialize a ReadConcern"
    ],
    "MongoDBDriverReadConcernconstruct": [
        "MongoDB\\Driver\\ReadConcern::__construct",
        "mongodb-driver-readconcern.construct.php",
        "Create a new ReadConcern"
    ],
    "MongoDBDriverReadPreferencebsonSerialize": [
        "MongoDB\\Driver\\ReadPreference::bsonSerialize",
        "mongodb-driver-readpreference.bsonserialize.php",
        "Returns an object for BSON serialization"
    ],
    "MongoDBDriverReadPreferencegetHedge": [
        "MongoDB\\Driver\\ReadPreference::getHedge",
        "mongodb-driver-readpreference.gethedge.php",
        "Returns the ReadPreference's &quot;hedge&quot; option"
    ],
    "MongoDBDriverReadPreferencegetMaxStalenessSeconds": [
        "MongoDB\\Driver\\ReadPreference::getMaxStalenessSeconds",
        "mongodb-driver-readpreference.getmaxstalenessseconds.php",
        "Returns the ReadPreference's &quot;maxStalenessSeconds&quot; option"
    ],
    "MongoDBDriverReadPreferencegetMode": [
        "MongoDB\\Driver\\ReadPreference::getMode",
        "mongodb-driver-readpreference.getmode.php",
        "Returns the ReadPreference's &quot;mode&quot; option"
    ],
    "MongoDBDriverReadPreferencegetModeString": [
        "MongoDB\\Driver\\ReadPreference::getModeString",
        "mongodb-driver-readpreference.getmodestring.php",
        "Returns the ReadPreference's &quot;mode&quot; option as a string"
    ],
    "MongoDBDriverReadPreferencegetTagSets": [
        "MongoDB\\Driver\\ReadPreference::getTagSets",
        "mongodb-driver-readpreference.gettagsets.php",
        "Returns the ReadPreference's &quot;tagSets&quot; option"
    ],
    "MongoDBDriverReadPreferenceserialize": [
        "MongoDB\\Driver\\ReadPreference::serialize",
        "mongodb-driver-readpreference.serialize.php",
        "Serialize a ReadPreference"
    ],
    "MongoDBDriverReadPreferenceunserialize": [
        "MongoDB\\Driver\\ReadPreference::unserialize",
        "mongodb-driver-readpreference.unserialize.php",
        "Unserialize a ReadPreference"
    ],
    "MongoDBDriverReadPreferenceconstruct": [
        "MongoDB\\Driver\\ReadPreference::__construct",
        "mongodb-driver-readpreference.construct.php",
        "Create a new ReadPreference"
    ],
    "MongoDBDriverServerexecuteBulkWrite": [
        "MongoDB\\Driver\\Server::executeBulkWrite",
        "mongodb-driver-server.executebulkwrite.php",
        "Execute one or more write operations on this server"
    ],
    "MongoDBDriverServerexecuteCommand": [
        "MongoDB\\Driver\\Server::executeCommand",
        "mongodb-driver-server.executecommand.php",
        "Execute a database command on this server"
    ],
    "MongoDBDriverServerexecuteQuery": [
        "MongoDB\\Driver\\Server::executeQuery",
        "mongodb-driver-server.executequery.php",
        "Execute a database query on this server"
    ],
    "MongoDBDriverServerexecuteReadCommand": [
        "MongoDB\\Driver\\Server::executeReadCommand",
        "mongodb-driver-server.executereadcommand.php",
        "Execute a database command that reads on this server"
    ],
    "MongoDBDriverServerexecuteReadWriteCommand": [
        "MongoDB\\Driver\\Server::executeReadWriteCommand",
        "mongodb-driver-server.executereadwritecommand.php",
        "Execute a database command that reads and writes on this server"
    ],
    "MongoDBDriverServerexecuteWriteCommand": [
        "MongoDB\\Driver\\Server::executeWriteCommand",
        "mongodb-driver-server.executewritecommand.php",
        "Execute a database command that writes on this server"
    ],
    "MongoDBDriverServergetHost": [
        "MongoDB\\Driver\\Server::getHost",
        "mongodb-driver-server.gethost.php",
        "Returns the hostname of this server"
    ],
    "MongoDBDriverServergetInfo": [
        "MongoDB\\Driver\\Server::getInfo",
        "mongodb-driver-server.getinfo.php",
        "Returns an array of information about this server"
    ],
    "MongoDBDriverServergetLatency": [
        "MongoDB\\Driver\\Server::getLatency",
        "mongodb-driver-server.getlatency.php",
        "Returns the latency of this server"
    ],
    "MongoDBDriverServergetPort": [
        "MongoDB\\Driver\\Server::getPort",
        "mongodb-driver-server.getport.php",
        "Returns the port on which this server is listening"
    ],
    "MongoDBDriverServergetTags": [
        "MongoDB\\Driver\\Server::getTags",
        "mongodb-driver-server.gettags.php",
        "Returns an array of tags describing this server in a replica set"
    ],
    "MongoDBDriverServergetType": [
        "MongoDB\\Driver\\Server::getType",
        "mongodb-driver-server.gettype.php",
        "Returns an integer denoting the type of this server"
    ],
    "MongoDBDriverServerisArbiter": [
        "MongoDB\\Driver\\Server::isArbiter",
        "mongodb-driver-server.isarbiter.php",
        "Checks if this server is an arbiter member of a replica set"
    ],
    "MongoDBDriverServerisHidden": [
        "MongoDB\\Driver\\Server::isHidden",
        "mongodb-driver-server.ishidden.php",
        "Checks if this server is a hidden member of a replica set"
    ],
    "MongoDBDriverServerisPassive": [
        "MongoDB\\Driver\\Server::isPassive",
        "mongodb-driver-server.ispassive.php",
        "Checks if this server is a passive member of a replica set"
    ],
    "MongoDBDriverServerisPrimary": [
        "MongoDB\\Driver\\Server::isPrimary",
        "mongodb-driver-server.isprimary.php",
        "Checks if this server is a primary member of a replica set"
    ],
    "MongoDBDriverServerisSecondary": [
        "MongoDB\\Driver\\Server::isSecondary",
        "mongodb-driver-server.issecondary.php",
        "Checks if this server is a secondary member of a replica set"
    ],
    "MongoDBDriverServerconstruct": [
        "MongoDB\\Driver\\Server::__construct",
        "mongodb-driver-server.construct.php",
        "Create a new Server (not used)"
    ],
    "MongoDBDriverSessionabortTransaction": [
        "MongoDB\\Driver\\Session::abortTransaction",
        "mongodb-driver-session.aborttransaction.php",
        "Aborts a transaction"
    ],
    "MongoDBDriverSessionadvanceClusterTime": [
        "MongoDB\\Driver\\Session::advanceClusterTime",
        "mongodb-driver-session.advanceclustertime.php",
        "Advances the cluster time for this session"
    ],
    "MongoDBDriverSessionadvanceOperationTime": [
        "MongoDB\\Driver\\Session::advanceOperationTime",
        "mongodb-driver-session.advanceoperationtime.php",
        "Advances the operation time for this session"
    ],
    "MongoDBDriverSessioncommitTransaction": [
        "MongoDB\\Driver\\Session::commitTransaction",
        "mongodb-driver-session.committransaction.php",
        "Commits a transaction"
    ],
    "MongoDBDriverSessionendSession": [
        "MongoDB\\Driver\\Session::endSession",
        "mongodb-driver-session.endsession.php",
        "Terminates a session"
    ],
    "MongoDBDriverSessiongetClusterTime": [
        "MongoDB\\Driver\\Session::getClusterTime",
        "mongodb-driver-session.getclustertime.php",
        "Returns the cluster time for this session"
    ],
    "MongoDBDriverSessiongetLogicalSessionId": [
        "MongoDB\\Driver\\Session::getLogicalSessionId",
        "mongodb-driver-session.getlogicalsessionid.php",
        "Returns the logical session ID for this session"
    ],
    "MongoDBDriverSessiongetOperationTime": [
        "MongoDB\\Driver\\Session::getOperationTime",
        "mongodb-driver-session.getoperationtime.php",
        "Returns the operation time for this session"
    ],
    "MongoDBDriverSessiongetServer": [
        "MongoDB\\Driver\\Session::getServer",
        "mongodb-driver-session.getserver.php",
        "Returns the server to which this session is pinned"
    ],
    "MongoDBDriverSessiongetTransactionOptions": [
        "MongoDB\\Driver\\Session::getTransactionOptions",
        "mongodb-driver-session.gettransactionoptions.php",
        "Returns options for the currently running transaction"
    ],
    "MongoDBDriverSessiongetTransactionState": [
        "MongoDB\\Driver\\Session::getTransactionState",
        "mongodb-driver-session.gettransactionstate.php",
        "Returns the current transaction state for this session"
    ],
    "MongoDBDriverSessionisInTransaction": [
        "MongoDB\\Driver\\Session::isInTransaction",
        "mongodb-driver-session.isintransaction.php",
        "Returns whether a multi-document transaction is in progress"
    ],
    "MongoDBDriverSessionstartTransaction": [
        "MongoDB\\Driver\\Session::startTransaction",
        "mongodb-driver-session.starttransaction.php",
        "Starts a transaction"
    ],
    "MongoDBDriverSessionconstruct": [
        "MongoDB\\Driver\\Session::__construct",
        "mongodb-driver-session.construct.php",
        "Create a new Session (not used)"
    ],
    "MongoDBDriverWriteConcernbsonSerialize": [
        "MongoDB\\Driver\\WriteConcern::bsonSerialize",
        "mongodb-driver-writeconcern.bsonserialize.php",
        "Returns an object for BSON serialization"
    ],
    "MongoDBDriverWriteConcerngetJournal": [
        "MongoDB\\Driver\\WriteConcern::getJournal",
        "mongodb-driver-writeconcern.getjournal.php",
        "Returns the WriteConcern's &quot;journal&quot; option"
    ],
    "MongoDBDriverWriteConcerngetW": [
        "MongoDB\\Driver\\WriteConcern::getW",
        "mongodb-driver-writeconcern.getw.php",
        "Returns the WriteConcern's &quot;w&quot; option"
    ],
    "MongoDBDriverWriteConcerngetWtimeout": [
        "MongoDB\\Driver\\WriteConcern::getWtimeout",
        "mongodb-driver-writeconcern.getwtimeout.php",
        "Returns the WriteConcern's &quot;wtimeout&quot; option"
    ],
    "MongoDBDriverWriteConcernisDefault": [
        "MongoDB\\Driver\\WriteConcern::isDefault",
        "mongodb-driver-writeconcern.isdefault.php",
        "Checks if this is the default write concern"
    ],
    "MongoDBDriverWriteConcernserialize": [
        "MongoDB\\Driver\\WriteConcern::serialize",
        "mongodb-driver-writeconcern.serialize.php",
        "Serialize a WriteConcern"
    ],
    "MongoDBDriverWriteConcernunserialize": [
        "MongoDB\\Driver\\WriteConcern::unserialize",
        "mongodb-driver-writeconcern.unserialize.php",
        "Unserialize a WriteConcern"
    ],
    "MongoDBDriverWriteConcernconstruct": [
        "MongoDB\\Driver\\WriteConcern::__construct",
        "mongodb-driver-writeconcern.construct.php",
        "Create a new WriteConcern"
    ],
    "MongoDBDriverWriteConcernErrorgetCode": [
        "MongoDB\\Driver\\WriteConcernError::getCode",
        "mongodb-driver-writeconcernerror.getcode.php",
        "Returns the WriteConcernError's error code"
    ],
    "MongoDBDriverWriteConcernErrorgetInfo": [
        "MongoDB\\Driver\\WriteConcernError::getInfo",
        "mongodb-driver-writeconcernerror.getinfo.php",
        "Returns metadata document for the WriteConcernError"
    ],
    "MongoDBDriverWriteConcernErrorgetMessage": [
        "MongoDB\\Driver\\WriteConcernError::getMessage",
        "mongodb-driver-writeconcernerror.getmessage.php",
        "Returns the WriteConcernError's error message"
    ],
    "MongoDBDriverWriteErrorgetCode": [
        "MongoDB\\Driver\\WriteError::getCode",
        "mongodb-driver-writeerror.getcode.php",
        "Returns the WriteError's error code"
    ],
    "MongoDBDriverWriteErrorgetIndex": [
        "MongoDB\\Driver\\WriteError::getIndex",
        "mongodb-driver-writeerror.getindex.php",
        "Returns the index of the write operation corresponding to this WriteError"
    ],
    "MongoDBDriverWriteErrorgetInfo": [
        "MongoDB\\Driver\\WriteError::getInfo",
        "mongodb-driver-writeerror.getinfo.php",
        "Returns metadata document for the WriteError"
    ],
    "MongoDBDriverWriteErrorgetMessage": [
        "MongoDB\\Driver\\WriteError::getMessage",
        "mongodb-driver-writeerror.getmessage.php",
        "Returns the WriteError's error message"
    ],
    "MongoDBDriverWriteResultgetDeletedCount": [
        "MongoDB\\Driver\\WriteResult::getDeletedCount",
        "mongodb-driver-writeresult.getdeletedcount.php",
        "Returns the number of documents deleted"
    ],
    "MongoDBDriverWriteResultgetInsertedCount": [
        "MongoDB\\Driver\\WriteResult::getInsertedCount",
        "mongodb-driver-writeresult.getinsertedcount.php",
        "Returns the number of documents inserted (excluding upserts)"
    ],
    "MongoDBDriverWriteResultgetMatchedCount": [
        "MongoDB\\Driver\\WriteResult::getMatchedCount",
        "mongodb-driver-writeresult.getmatchedcount.php",
        "Returns the number of documents selected for update"
    ],
    "MongoDBDriverWriteResultgetModifiedCount": [
        "MongoDB\\Driver\\WriteResult::getModifiedCount",
        "mongodb-driver-writeresult.getmodifiedcount.php",
        "Returns the number of existing documents updated"
    ],
    "MongoDBDriverWriteResultgetServer": [
        "MongoDB\\Driver\\WriteResult::getServer",
        "mongodb-driver-writeresult.getserver.php",
        "Returns the server associated with this write result"
    ],
    "MongoDBDriverWriteResultgetUpsertedCount": [
        "MongoDB\\Driver\\WriteResult::getUpsertedCount",
        "mongodb-driver-writeresult.getupsertedcount.php",
        "Returns the number of documents inserted by an upsert"
    ],
    "MongoDBDriverWriteResultgetUpsertedIds": [
        "MongoDB\\Driver\\WriteResult::getUpsertedIds",
        "mongodb-driver-writeresult.getupsertedids.php",
        "Returns an array of identifiers for upserted documents"
    ],
    "MongoDBDriverWriteResultgetWriteConcernError": [
        "MongoDB\\Driver\\WriteResult::getWriteConcernError",
        "mongodb-driver-writeresult.getwriteconcernerror.php",
        "Returns any write concern error that occurred"
    ],
    "MongoDBDriverWriteResultgetWriteErrors": [
        "MongoDB\\Driver\\WriteResult::getWriteErrors",
        "mongodb-driver-writeresult.getwriteerrors.php",
        "Returns any write errors that occurred"
    ],
    "MongoDBDriverWriteResultisAcknowledged": [
        "MongoDB\\Driver\\WriteResult::isAcknowledged",
        "mongodb-driver-writeresult.isacknowledged.php",
        "Returns whether the write was acknowledged"
    ],
    "MongoDB": [
        "MongoDB コンテキストオプション",
        "context.mongodb.php",
        "MongoDB コンテキストオプション一覧"
    ],
    "MongoDeleteBatchconstruct": [
        "MongoDeleteBatch::__construct",
        "mongodeletebatch.construct.php",
        "Description"
    ],
    "MongoGridFSdelete": [
        "MongoGridFS::delete",
        "mongogridfs.delete.php",
        "ファイルとそのチャンクをデータベースから削除する"
    ],
    "MongoGridFSdrop": [
        "MongoGridFS::drop",
        "mongogridfs.drop.php",
        "ファイルコレクションおよびチャンクコレクションを削除する"
    ],
    "MongoGridFSfind": [
        "MongoGridFS::find",
        "mongogridfs.find.php",
        "ファイルを問い合わせる"
    ],
    "MongoGridFSfindOne": [
        "MongoGridFS::findOne",
        "mongogridfs.findone.php",
        "条件にマッチする単一のファイルを返す"
    ],
    "MongoGridFSget": [
        "MongoGridFS::get",
        "mongogridfs.get.php",
        "ファイルをデータベースから取得する"
    ],
    "MongoGridFSput": [
        "MongoGridFS::put",
        "mongogridfs.put.php",
        "ファイルをデータベースに格納する"
    ],
    "MongoGridFSremove": [
        "MongoGridFS::remove",
        "mongogridfs.remove.php",
        "ファイルとそのチャンクをデータベースから削除する"
    ],
    "MongoGridFSstoreBytes": [
        "MongoGridFS::storeBytes",
        "mongogridfs.storebytes.php",
        "バイト列をデータベースに格納する"
    ],
    "MongoGridFSstoreFile": [
        "MongoGridFS::storeFile",
        "mongogridfs.storefile.php",
        "ファイルをデータベースに格納する"
    ],
    "MongoGridFSstoreUpload": [
        "MongoGridFS::storeUpload",
        "mongogridfs.storeupload.php",
        "アップロードされたファイルをデータベースに格納する"
    ],
    "MongoGridFSconstruct": [
        "MongoGridFS::__construct",
        "mongogridfs.construct.php",
        "新しいファイルコレクションを作成する"
    ],
    "MongoGridFSCursorcurrent": [
        "MongoGridFSCursor::current",
        "mongogridfscursor.current.php",
        "現在のファイルを返す"
    ],
    "MongoGridFSCursorgetNext": [
        "MongoGridFSCursor::getNext",
        "mongogridfscursor.getnext.php",
        "カーソルが指す次のファイルを返し、カーソルを進める"
    ],
    "MongoGridFSCursorkey": [
        "MongoGridFSCursor::key",
        "mongogridfscursor.key.php",
        "現在の結果のファイル名を返す"
    ],
    "MongoGridFSCursorconstruct": [
        "MongoGridFSCursor::__construct",
        "mongogridfscursor.construct.php",
        "新しいカーソルを作成する"
    ],
    "MongoGridFSFilegetBytes": [
        "MongoGridFSFile::getBytes",
        "mongogridfsfile.getbytes.php",
        "このファイルの内容をバイト文字列で返す"
    ],
    "MongoGridFSFilegetFilename": [
        "MongoGridFSFile::getFilename",
        "mongogridfsfile.getfilename.php",
        "このファイルのファイル名を返す"
    ],
    "MongoGridFSFilegetResource": [
        "MongoGridFSFile::getResource",
        "mongogridfsfile.getresource.php",
        "格納されたファイルを読むために使うリソースを返す"
    ],
    "MongoGridFSFilegetSize": [
        "MongoGridFSFile::getSize",
        "mongogridfsfile.getsize.php",
        "このファイルのサイズを返す"
    ],
    "MongoGridFSFilewrite": [
        "MongoGridFSFile::write",
        "mongogridfsfile.write.php",
        "このファイルをファイルシステムに書き込む"
    ],
    "MongoGridfsFileconstruct": [
        "MongoGridfsFile::__construct",
        "mongogridfsfile.construct.php",
        "新しい GridFS ファイルを作成する"
    ],
    "MongoIdgetHostname": [
        "MongoId::getHostname",
        "mongoid.gethostname.php",
        "このマシンの id に使うホスト名を取得する"
    ],
    "MongoIdgetInc": [
        "MongoId::getInc",
        "mongoid.getinc.php",
        "この id を作るためにインクリメントされた値を取得する"
    ],
    "MongoIdgetPID": [
        "MongoId::getPID",
        "mongoid.getpid.php",
        "プロセス ID を取得する"
    ],
    "MongoIdgetTimestamp": [
        "MongoId::getTimestamp",
        "mongoid.gettimestamp.php",
        "この id が作られたときのエポックからの経過秒数を取得する"
    ],
    "MongoIdisValid": [
        "MongoId::isValid",
        "mongoid.isvalid.php",
        "Check if a value is a valid ObjectId"
    ],
    "MongoIdconstruct": [
        "MongoId::__construct",
        "mongoid.construct.php",
        "Creates a new id"
    ],
    "MongoIdsetstate": [
        "MongoId::__set_state",
        "mongoid.set-state.php",
        "ダミー MongoId を作成する"
    ],
    "MongoIdtoString": [
        "MongoId::__toString",
        "mongoid.tostring.php",
        "Returns a hexidecimal representation of this id"
    ],
    "MongoInsertBatchconstruct": [
        "MongoInsertBatch::__construct",
        "mongoinsertbatch.construct.php",
        "Description"
    ],
    "MongoInt32construct": [
        "MongoInt32::__construct",
        "mongoint32.construct.php",
        "Creates a new 32-bit integer"
    ],
    "MongoInt32toString": [
        "MongoInt32::__toString",
        "mongoint32.tostring.php",
        "Returns the string representation of this 32-bit integer"
    ],
    "MongoInt64construct": [
        "MongoInt64::__construct",
        "mongoint64.construct.php",
        "Creates a new 64-bit integer"
    ],
    "MongoInt64toString": [
        "MongoInt64::__toString",
        "mongoint64.tostring.php",
        "Returns the string representation of this 64-bit integer"
    ],
    "MongoLoggetCallback": [
        "MongoLog::getCallback",
        "mongolog.getcallback.php",
        "以前に設定されたコールバック関数の名前を取得する"
    ],
    "MongoLoggetLevel": [
        "MongoLog::getLevel",
        "mongolog.getlevel.php",
        "現在記録されているログレベルを取得する"
    ],
    "MongoLoggetModule": [
        "MongoLog::getModule",
        "mongolog.getmodule.php",
        "現在ログを記録しているモジュールを取得する"
    ],
    "MongoLogsetCallback": [
        "MongoLog::setCallback",
        "mongolog.setcallback.php",
        "イベントに対応して呼ばれるコールバック関数を設定する"
    ],
    "MongoLogsetLevel": [
        "MongoLog::setLevel",
        "mongolog.setlevel.php",
        "記録するログレベルを設定する"
    ],
    "MongoLogsetModule": [
        "MongoLog::setModule",
        "mongolog.setmodule.php",
        "ログに記録するモジュールを設定する"
    ],
    "MongoPoolgetSize": [
        "MongoPool::getSize",
        "mongopool.getsize.php",
        "Get pool size for connection pools"
    ],
    "MongoPoolinfo": [
        "MongoPool::info",
        "mongopool.info.php",
        "Returns information about all connection pools"
    ],
    "MongoPoolsetSize": [
        "MongoPool::setSize",
        "mongopool.setsize.php",
        "Set the size for future connection pools"
    ],
    "MongoRegexconstruct": [
        "MongoRegex::__construct",
        "mongoregex.construct.php",
        "新しい正規表現を作成する"
    ],
    "MongoRegextoString": [
        "MongoRegex::__toString",
        "mongoregex.tostring.php",
        "この正規表現の文字列表現"
    ],
    "MongoResultExceptiongetDocument": [
        "MongoResultException::getDocument",
        "mongoresultexception.getdocument.php",
        "結果ドキュメントを取得する"
    ],
    "MongoTimestampconstruct": [
        "MongoTimestamp::__construct",
        "mongotimestamp.construct.php",
        "Creates a new timestamp"
    ],
    "MongoTimestamptoString": [
        "MongoTimestamp::__toString",
        "mongotimestamp.tostring.php",
        "Returns a string representation of this timestamp"
    ],
    "MongoUpdateBatchconstruct": [
        "MongoUpdateBatch::__construct",
        "mongoupdatebatch.construct.php",
        "Description"
    ],
    "MongoWriteBatchadd": [
        "MongoWriteBatch::add",
        "mongowritebatch.add.php",
        "Adds a write operation to a batch"
    ],
    "MongoWriteBatchexecute": [
        "MongoWriteBatch::execute",
        "mongowritebatch.execute.php",
        "Executes a batch of write operations"
    ],
    "MongoWriteBatchconstruct": [
        "MongoWriteBatch::__construct",
        "mongowritebatch.construct.php",
        "Creates a new batch of write operations"
    ],
    "MongoWriteConcernExceptiongetDocument": [
        "MongoWriteConcernException::getDocument",
        "mongowriteconcernexception.getdocument.php",
        "Get the error document"
    ],
    "moveuploadedfile": [
        "move_uploaded_file",
        "function.move-uploaded-file.php",
        "アップロードされたファイルを新しい位置に移動する"
    ],
    "mqseriesback": [
        "mqseries_back",
        "function.mqseries-back.php",
        "MQSeries MQBACK"
    ],
    "mqseriesbegin": [
        "mqseries_begin",
        "function.mqseries-begin.php",
        "MQseries MQBEGIN"
    ],
    "mqseriesclose": [
        "mqseries_close",
        "function.mqseries-close.php",
        "MQSeries MQCLOSE"
    ],
    "mqseriescmit": [
        "mqseries_cmit",
        "function.mqseries-cmit.php",
        "MQSeries MQCMIT"
    ],
    "mqseriesconn": [
        "mqseries_conn",
        "function.mqseries-conn.php",
        "MQSeries MQCONN"
    ],
    "mqseriesconnx": [
        "mqseries_connx",
        "function.mqseries-connx.php",
        "MQSeries MQCONNX"
    ],
    "mqseriesdisc": [
        "mqseries_disc",
        "function.mqseries-disc.php",
        "MQSeries MQDISC"
    ],
    "mqseriesget": [
        "mqseries_get",
        "function.mqseries-get.php",
        "MQSeries MQGET"
    ],
    "mqseriesinq": [
        "mqseries_inq",
        "function.mqseries-inq.php",
        "MQSeries MQINQ"
    ],
    "mqseriesopen": [
        "mqseries_open",
        "function.mqseries-open.php",
        "MQSeries MQOPEN"
    ],
    "mqseriesput": [
        "mqseries_put",
        "function.mqseries-put.php",
        "MQSeries MQPUT"
    ],
    "mqseriesput1": [
        "mqseries_put1",
        "function.mqseries-put1.php",
        "MQSeries MQPUT1"
    ],
    "mqseriesset": [
        "mqseries_set",
        "function.mqseries-set.php",
        "MQSeries MQSET"
    ],
    "mqseriesstrerror": [
        "mqseries_strerror",
        "function.mqseries-strerror.php",
        "結果コード (MQRC) に対応するエラーメッセージを返す"
    ],
    "msggetqueue": [
        "msg_get_queue",
        "function.msg-get-queue.php",
        "メッセージキューを作成またはそれにアタッチする"
    ],
    "msgqueueexists": [
        "msg_queue_exists",
        "function.msg-queue-exists.php",
        "メッセージキューが存在するかどうかを調べる"
    ],
    "msgreceive": [
        "msg_receive",
        "function.msg-receive.php",
        "メッセージキューからメッセージを受信する"
    ],
    "msgremovequeue": [
        "msg_remove_queue",
        "function.msg-remove-queue.php",
        "メッセージキューを破棄する"
    ],
    "msgsend": [
        "msg_send",
        "function.msg-send.php",
        "メッセージキューにメッセージを送信する"
    ],
    "msgsetqueue": [
        "msg_set_queue",
        "function.msg-set-queue.php",
        "メッセージキューデータ構造体の情報を設定する"
    ],
    "msgstatqueue": [
        "msg_stat_queue",
        "function.msg-stat-queue.php",
        "メッセージキューデータ構造体の情報を返す"
    ],
    "mtgetrandmax": [
        "mt_getrandmax",
        "function.mt-getrandmax.php",
        "乱数値の最大値を表示する"
    ],
    "mtrand": [
        "mt_rand",
        "function.mt-rand.php",
        "メルセンヌ・ツイスター乱数生成器を介して乱数値を生成する"
    ],
    "mtsrand": [
        "mt_srand",
        "function.mt-srand.php",
        "メルセンヌ・ツイスター乱数生成器にシードを指定する"
    ],
    "MultipleIteratorattachIterator": [
        "MultipleIterator::attachIterator",
        "multipleiterator.attachiterator.php",
        "イテレータの情報をアタッチする"
    ],
    "MultipleIteratorcontainsIterator": [
        "MultipleIterator::containsIterator",
        "multipleiterator.containsiterator.php",
        "イテレータがアタッチされているかどうかを調べる"
    ],
    "MultipleIteratorcountIterators": [
        "MultipleIterator::countIterators",
        "multipleiterator.countiterators.php",
        "アタッチされているイテレータインスタンスの数を取得する"
    ],
    "MultipleIteratorcurrent": [
        "MultipleIterator::current",
        "multipleiterator.current.php",
        "登録されているイテレータインスタンスを取得する"
    ],
    "MultipleIteratordetachIterator": [
        "MultipleIterator::detachIterator",
        "multipleiterator.detachiterator.php",
        "イテレータをデタッチする"
    ],
    "MultipleIteratorgetFlags": [
        "MultipleIterator::getFlags",
        "multipleiterator.getflags.php",
        "フラグの情報を取得する"
    ],
    "MultipleIteratorkey": [
        "MultipleIterator::key",
        "multipleiterator.key.php",
        "登録されているイテレータインスタンスを取得する"
    ],
    "MultipleIteratornext": [
        "MultipleIterator::next",
        "multipleiterator.next.php",
        "アタッチしているすべてのイテレータインスタンスを次に移動させる"
    ],
    "MultipleIteratorrewind": [
        "MultipleIterator::rewind",
        "multipleiterator.rewind.php",
        "アタッチしているすべてのイテレータインスタンスを巻き戻す"
    ],
    "MultipleIteratorsetFlags": [
        "MultipleIterator::setFlags",
        "multipleiterator.setflags.php",
        "フラグを設定する"
    ],
    "MultipleIteratorvalid": [
        "MultipleIterator::valid",
        "multipleiterator.valid.php",
        "サブイテレータの有効性を調べる"
    ],
    "MultipleIteratorconstruct": [
        "MultipleIterator::__construct",
        "multipleiterator.construct.php",
        "新しい MultipleIterator を作成する"
    ],
    "Mutexcreate": [
        "Mutex::create",
        "mutex.create.php",
        "Create a Mutex"
    ],
    "Mutexdestroy": [
        "Mutex::destroy",
        "mutex.destroy.php",
        "Destroy Mutex"
    ],
    "Mutexlock": [
        "Mutex::lock",
        "mutex.lock.php",
        "Acquire Mutex"
    ],
    "Mutextrylock": [
        "Mutex::trylock",
        "mutex.trylock.php",
        "Attempt to Acquire Mutex"
    ],
    "Mutexunlock": [
        "Mutex::unlock",
        "mutex.unlock.php",
        "Release Mutex"
    ],
    "mysqliaffectedrows": [
        "mysqli::$affected_rows",
        "mysqli.affected-rows.php",
        "直前の MySQL の操作で変更された行の数を得る"
    ],
    "mysqliclientinfo": [
        "mysqli::$client_info",
        "mysqli.get-client-info.php",
        "MySQL クライアント情報を取得する"
    ],
    "mysqliclientversion": [
        "mysqli::$client_version",
        "mysqli.get-client-version.php",
        "MySQL クライアントのバージョンを整数値で返す"
    ],
    "mysqliconnecterrno": [
        "mysqli::$connect_errno",
        "mysqli.connect-errno.php",
        "直近の接続コールに関するエラーコードを返す"
    ],
    "mysqliconnecterror": [
        "mysqli::$connect_error",
        "mysqli.connect-error.php",
        "直近の接続エラーの内容を文字列で返す"
    ],
    "mysqlierrno": [
        "mysqli::$errno",
        "mysqli.errno.php",
        "直近の関数コールによるエラーコードを返す"
    ],
    "mysqlierror": [
        "mysqli::$error",
        "mysqli.error.php",
        "直近のエラーの内容を文字列で返す"
    ],
    "mysqlierrorlist": [
        "mysqli::$error_list",
        "mysqli.error-list.php",
        "直近で実行したコマンドからのエラーの一覧を返す"
    ],
    "mysqlifieldcount": [
        "mysqli::$field_count",
        "mysqli.field-count.php",
        "直近のクエリのカラムの数を返す"
    ],
    "mysqlihostinfo": [
        "mysqli::$host_info",
        "mysqli.get-host-info.php",
        "使用している接続の型を文字列で返す"
    ],
    "mysqliinfo": [
        "mysqli::$info",
        "mysqli.info.php",
        "直近に実行されたクエリの情報を取得する"
    ],
    "mysqliinsertid": [
        "mysqli::$insert_id",
        "mysqli.insert-id.php",
        "直近のクエリで使用した自動生成の ID を返す"
    ],
    "mysqliprotocolversion": [
        "mysqli::$protocol_version",
        "mysqli.get-proto-info.php",
        "使用している MySQL プロトコルのバージョンを返す"
    ],
    "mysqliserverinfo": [
        "mysqli::$server_info",
        "mysqli.get-server-info.php",
        "MySQL サーバーのバージョンを返す"
    ],
    "mysqliserverversion": [
        "mysqli::$server_version",
        "mysqli.get-server-version.php",
        "MySQL サーバーのバージョンを整数値で返す"
    ],
    "mysqlisqlstate": [
        "mysqli::$sqlstate",
        "mysqli.sqlstate.php",
        "直前の MySQL の操作での SQLSTATE エラーを返す"
    ],
    "mysqlithreadid": [
        "mysqli::$thread_id",
        "mysqli.thread-id.php",
        "現在の接続のスレッド ID を返す"
    ],
    "mysqliwarningcount": [
        "mysqli::$warning_count",
        "mysqli.warning-count.php",
        "指定した接続の直近のクエリから発生した警告の数を返す"
    ],
    "mysqliautocommit": [
        "mysqli::autocommit",
        "mysqli.autocommit.php",
        "データベース更新の自動コミットをオンまたはオフにする"
    ],
    "mysqlibegintransaction": [
        "mysqli::begin_transaction",
        "mysqli.begin-transaction.php",
        "トランザクションを開始する"
    ],
    "mysqlichangeuser": [
        "mysqli::change_user",
        "mysqli.change-user.php",
        "指定されたデータベース接続のユーザー名を変更する"
    ],
    "mysqlicharactersetname": [
        "mysqli::character_set_name",
        "mysqli.character-set-name.php",
        "データベース接続のデフォルトの文字コードセットを返す"
    ],
    "mysqliclose": [
        "mysqli::close",
        "mysqli.close.php",
        "事前にオープンしているデータベース接続を閉じる"
    ],
    "mysqlicommit": [
        "mysqli::commit",
        "mysqli.commit.php",
        "現在のトランザクションをコミットする"
    ],
    "mysqlidebug": [
        "mysqli::debug",
        "mysqli.debug.php",
        "デバッグ操作を行う"
    ],
    "mysqlidumpdebuginfo": [
        "mysqli::dump_debug_info",
        "mysqli.dump-debug-info.php",
        "デバッグ情報をログに出力する"
    ],
    "mysqligetcharset": [
        "mysqli::get_charset",
        "mysqli.get-charset.php",
        "文字セットオブジェクトを返す"
    ],
    "mysqligetconnectionstats": [
        "mysqli::get_connection_stats",
        "mysqli.get-connection-stats.php",
        "クライアント接続に関する統計情報を返す"
    ],
    "mysqligetwarnings": [
        "mysqli::get_warnings",
        "mysqli.get-warnings.php",
        "SHOW WARNINGS の結果を取得する"
    ],
    "mysqliinit": [
        "mysqli::init",
        "mysqli.init.php",
        "MySQLi を初期化し、mysqli_real_connect() で使うオブジェクトを返す"
    ],
    "mysqlikill": [
        "mysqli::kill",
        "mysqli.kill.php",
        "サーバーに MySQL スレッドの停止を問い合わせる"
    ],
    "mysqlimoreresults": [
        "mysqli::more_results",
        "mysqli.more-results.php",
        "マルチクエリからの結果がまだ残っているかどうかを調べる"
    ],
    "mysqlimultiquery": [
        "mysqli::multi_query",
        "mysqli.multi-query.php",
        "データベース上でクエリを実行する"
    ],
    "mysqlinextresult": [
        "mysqli::next_result",
        "mysqli.next-result.php",
        "multi_query の、次の結果を準備する"
    ],
    "mysqlioptions": [
        "mysqli::options",
        "mysqli.options.php",
        "オプションを設定する"
    ],
    "mysqliping": [
        "mysqli::ping",
        "mysqli.ping.php",
        "サーバーとの接続をチェックし、もし切断されている場合は再接続を試みる"
    ],
    "mysqlipoll": [
        "mysqli::poll",
        "mysqli.poll.php",
        "接続を問い合わせる"
    ],
    "mysqliprepare": [
        "mysqli::prepare",
        "mysqli.prepare.php",
        "実行するための SQL ステートメントを準備する"
    ],
    "mysqliquery": [
        "mysqli::query",
        "mysqli.query.php",
        "データベース上でクエリを実行する"
    ],
    "mysqlirealconnect": [
        "mysqli::real_connect",
        "mysqli.real-connect.php",
        "mysql サーバーとの接続をオープンする"
    ],
    "mysqlirealescapestring": [
        "mysqli::real_escape_string",
        "mysqli.real-escape-string.php",
        "接続の現在の文字セットを考慮して、SQL 文で使用する文字列の特殊文字をエスケープする"
    ],
    "mysqlirealquery": [
        "mysqli::real_query",
        "mysqli.real-query.php",
        "SQL クエリを実行する"
    ],
    "mysqlireapasyncquery": [
        "mysqli::reap_async_query",
        "mysqli.reap-async-query.php",
        "非同期クエリから結果を取得する"
    ],
    "mysqlirefresh": [
        "mysqli::refresh",
        "mysqli.refresh.php",
        "リフレッシュする"
    ],
    "mysqlireleasesavepoint": [
        "mysqli::release_savepoint",
        "mysqli.release-savepoint.php",
        "現在のトランザクションのセーブポイント群から、指定した名前のセーブポイントを削除する"
    ],
    "mysqlirollback": [
        "mysqli::rollback",
        "mysqli.rollback.php",
        "現在のトランザクションをロールバックする"
    ],
    "mysqlisavepoint": [
        "mysqli::savepoint",
        "mysqli.savepoint.php",
        "トランザクションのセーブポイントを設定する"
    ],
    "mysqliselectdb": [
        "mysqli::select_db",
        "mysqli.select-db.php",
        "クエリを実行するためのデフォルトのデータベースを選択する"
    ],
    "mysqlisetcharset": [
        "mysqli::set_charset",
        "mysqli.set-charset.php",
        "クライアントのデフォルト文字セットを設定する"
    ],
    "mysqlisetopt": [
        "mysqli::set_opt",
        "function.mysqli-set-opt.php",
        "mysqli_options のエイリアス"
    ],
    "mysqlisslset": [
        "mysqli::ssl_set",
        "mysqli.ssl-set.php",
        "SSL を使用したセキュアな接続を確立する"
    ],
    "mysqlistat": [
        "mysqli::stat",
        "mysqli.stat.php",
        "現在のシステム状態を取得する"
    ],
    "mysqlistmtinit": [
        "mysqli::stmt_init",
        "mysqli.stmt-init.php",
        "ステートメントを初期化し、mysqli_stmt_prepare で使用するオブジェクトを返す"
    ],
    "mysqlistoreresult": [
        "mysqli::store_result",
        "mysqli.store-result.php",
        "直近のクエリから結果セットを転送する"
    ],
    "mysqlithreadsafe": [
        "mysqli::thread_safe",
        "mysqli.thread-safe.php",
        "スレッドセーフであるかどうかを返す"
    ],
    "mysqliuseresult": [
        "mysqli::use_result",
        "mysqli.use-result.php",
        "結果セットの取得を開始する"
    ],
    "mysqliconstruct": [
        "mysqli::__construct",
        "mysqli.construct.php",
        "新規に MySQL サーバーへの接続をオープンする"
    ],
    "mysqliconnect": [
        "mysqli_connect",
        "function.mysqli-connect.php",
        "mysqli::__construct のエイリアス"
    ],
    "mysqlidriverreportmode": [
        "mysqli_driver::$report_mode",
        "mysqli-driver.report-mode.php",
        "内部のレポート機能を有効あるいは無効にする"
    ],
    "mysqlidriverembeddedserverend": [
        "mysqli_driver::embedded_server_end",
        "mysqli-driver.embedded-server-end.php",
        "組み込みサーバーを停止する"
    ],
    "mysqlidriverembeddedserverstart": [
        "mysqli_driver::embedded_server_start",
        "mysqli-driver.embedded-server-start.php",
        "組み込みサーバーを初期化して開始する"
    ],
    "mysqliescapestring": [
        "mysqli_escape_string",
        "function.mysqli-escape-string.php",
        "mysqli_real_escape_string のエイリアス"
    ],
    "mysqliexecute": [
        "mysqli_execute",
        "function.mysqli-execute.php",
        "mysqli_stmt_execute のエイリアス"
    ],
    "mysqligetclientstats": [
        "mysqli_get_client_stats",
        "function.mysqli-get-client-stats.php",
        "プロセスごとのクライアントの統計を返す"
    ],
    "mysqligetlinksstats": [
        "mysqli_get_links_stats",
        "function.mysqli-get-links-stats.php",
        "オープン済みとキャッシュ済みのリンクに関する情報を返す"
    ],
    "mysqlireport": [
        "mysqli_report",
        "function.mysqli-report.php",
        "mysqli_driver-&gt;report_mode のエイリアス"
    ],
    "mysqliresultcurrentfield": [
        "mysqli_result::$current_field",
        "mysqli-result.current-field.php",
        "結果ポインタにおける現在のフィールドオフセットを取得する"
    ],
    "mysqliresultfieldcount": [
        "mysqli_result::$field_count",
        "mysqli-result.field-count.php",
        "結果のフィールド数を取得する"
    ],
    "mysqliresultlengths": [
        "mysqli_result::$lengths",
        "mysqli-result.lengths.php",
        "結果セットにおける現在の行のカラムの長さを返す"
    ],
    "mysqliresultnumrows": [
        "mysqli_result::$num_rows",
        "mysqli-result.num-rows.php",
        "結果の行数を取得する"
    ],
    "mysqliresultdataseek": [
        "mysqli_result::data_seek",
        "mysqli-result.data-seek.php",
        "結果の任意の行にポインタを移動する"
    ],
    "mysqliresultfetchall": [
        "mysqli_result::fetch_all",
        "mysqli-result.fetch-all.php",
        "結果のすべての行を連想配列・数値添字配列あるいはその両方の形式で取得する"
    ],
    "mysqliresultfetcharray": [
        "mysqli_result::fetch_array",
        "mysqli-result.fetch-array.php",
        "結果の行を連想配列・数値添字配列あるいはその両方の形式で取得する"
    ],
    "mysqliresultfetchassoc": [
        "mysqli_result::fetch_assoc",
        "mysqli-result.fetch-assoc.php",
        "結果の行を連想配列で取得する"
    ],
    "mysqliresultfetchfield": [
        "mysqli_result::fetch_field",
        "mysqli-result.fetch-field.php",
        "結果セットの次のフィールドを返す"
    ],
    "mysqliresultfetchfields": [
        "mysqli_result::fetch_fields",
        "mysqli-result.fetch-fields.php",
        "結果セットのフィールド情報をオブジェクトの配列で返す"
    ],
    "mysqliresultfetchfielddirect": [
        "mysqli_result::fetch_field_direct",
        "mysqli-result.fetch-field-direct.php",
        "単一のフィールドのメタデータを取得する"
    ],
    "mysqliresultfetchobject": [
        "mysqli_result::fetch_object",
        "mysqli-result.fetch-object.php",
        "結果セットの現在の行をオブジェクトとして返す"
    ],
    "mysqliresultfetchrow": [
        "mysqli_result::fetch_row",
        "mysqli-result.fetch-row.php",
        "結果の行を数値添字配列で取得する"
    ],
    "mysqliresultfieldseek": [
        "mysqli_result::field_seek",
        "mysqli-result.field-seek.php",
        "結果ポインタを、指定したフィールドオフセットに設定する"
    ],
    "mysqliresultfree": [
        "mysqli_result::free",
        "mysqli-result.free.php",
        "結果に関連付けられたメモリを開放する"
    ],
    "mysqlistmtaffectedrows": [
        "mysqli_stmt::$affected_rows",
        "mysqli-stmt.affected-rows.php",
        "直近に実行されたステートメントで変更・削除・あるいは追加された行の総数を返す"
    ],
    "mysqlistmterrno": [
        "mysqli_stmt::$errno",
        "mysqli-stmt.errno.php",
        "直近のステートメントのコールに関するエラーコードを返す"
    ],
    "mysqlistmterror": [
        "mysqli_stmt::$error",
        "mysqli-stmt.error.php",
        "直近のステートメントのエラー内容を文字列で返す"
    ],
    "mysqlistmterrorlist": [
        "mysqli_stmt::$error_list",
        "mysqli-stmt.error-list.php",
        "直近で実行したステートメントからのエラーの一覧を返す"
    ],
    "mysqlistmtfieldcount": [
        "mysqli_stmt::$field_count",
        "mysqli-stmt.field-count.php",
        "指定したステートメントのフィールド数を返す"
    ],
    "mysqlistmtinsertid": [
        "mysqli_stmt::$insert_id",
        "mysqli-stmt.insert-id.php",
        "直近の INSERT 操作で生成した ID を取得する"
    ],
    "mysqlistmtnumrows": [
        "mysqli_stmt::$num_rows",
        "mysqli-stmt.num-rows.php",
        "ステートメントの結果セットの行数を返す"
    ],
    "mysqlistmtparamcount": [
        "mysqli_stmt::$param_count",
        "mysqli-stmt.param-count.php",
        "指定したステートメントのパラメータ数を返す"
    ],
    "mysqlistmtsqlstate": [
        "mysqli_stmt::$sqlstate",
        "mysqli-stmt.sqlstate.php",
        "直前のステートメントの操作での SQLSTATE エラーを返す"
    ],
    "mysqlistmtattrget": [
        "mysqli_stmt::attr_get",
        "mysqli-stmt.attr-get.php",
        "ステートメントの属性の現在の値を取得する"
    ],
    "mysqlistmtattrset": [
        "mysqli_stmt::attr_set",
        "mysqli-stmt.attr-set.php",
        "プリペアドステートメントの振る舞いを変更する"
    ],
    "mysqlistmtbindparam": [
        "mysqli_stmt::bind_param",
        "mysqli-stmt.bind-param.php",
        "プリペアドステートメントのパラメータに変数をバインドする"
    ],
    "mysqlistmtbindresult": [
        "mysqli_stmt::bind_result",
        "mysqli-stmt.bind-result.php",
        "結果を保存するため、プリペアドステートメントに変数をバインドする"
    ],
    "mysqlistmtclose": [
        "mysqli_stmt::close",
        "mysqli-stmt.close.php",
        "プリペアドステートメントを閉じる"
    ],
    "mysqlistmtdataseek": [
        "mysqli_stmt::data_seek",
        "mysqli-stmt.data-seek.php",
        "ステートメントの結果セットの任意の行に移動する"
    ],
    "mysqlistmtexecute": [
        "mysqli_stmt::execute",
        "mysqli-stmt.execute.php",
        "プリペアドクエリを実行する"
    ],
    "mysqlistmtfetch": [
        "mysqli_stmt::fetch",
        "mysqli-stmt.fetch.php",
        "プリペアドステートメントから結果を取得し、バインド変数に格納する"
    ],
    "mysqlistmtfreeresult": [
        "mysqli_stmt::free_result",
        "mysqli-stmt.free-result.php",
        "指定したステートメントハンドルの結果を格納したメモリを開放する"
    ],
    "mysqlistmtgetresult": [
        "mysqli_stmt::get_result",
        "mysqli-stmt.get-result.php",
        "プリペアード・ステートメントから結果セットを取得"
    ],
    "mysqlistmtgetwarnings": [
        "mysqli_stmt::get_warnings",
        "mysqli-stmt.get-warnings.php",
        "SHOW WARNINGS の結果を取得する"
    ],
    "mysqlistmtmoreresults": [
        "mysqli_stmt::more_results",
        "mysqli-stmt.more-results.php",
        "複数クエリで、次の結果が存在するかどうかを調べる"
    ],
    "mysqlistmtnextresult": [
        "mysqli_stmt::next_result",
        "mysqli-stmt.next-result.php",
        "複数クエリから、次の結果を読み込む"
    ],
    "mysqlistmtprepare": [
        "mysqli_stmt::prepare",
        "mysqli-stmt.prepare.php",
        "SQL ステートメントを実行するために準備する"
    ],
    "mysqlistmtreset": [
        "mysqli_stmt::reset",
        "mysqli-stmt.reset.php",
        "プリペアドステートメントをリセットする"
    ],
    "mysqlistmtresultmetadata": [
        "mysqli_stmt::result_metadata",
        "mysqli-stmt.result-metadata.php",
        "プリペアドステートメントから結果セットのメタデータを返す"
    ],
    "mysqlistmtsendlongdata": [
        "mysqli_stmt::send_long_data",
        "mysqli-stmt.send-long-data.php",
        "データをブロックで送信する"
    ],
    "mysqlistmtstoreresult": [
        "mysqli_stmt::store_result",
        "mysqli-stmt.store-result.php",
        "プリペアドステートメントから結果を転送する"
    ],
    "mysqlistmtconstruct": [
        "mysqli_stmt::__construct",
        "mysqli-stmt.construct.php",
        "新しい mysqli_stmt オブジェクトを構築する"
    ],
    "mysqliwarningnext": [
        "mysqli_warning::next",
        "mysqli-warning.next.php",
        "次の警告を取得する"
    ],
    "MysqlndUhConnectionchangeUser": [
        "MysqlndUhConnection::changeUser",
        "mysqlnduhconnection.changeuser.php",
        "Changes the user of the specified mysqlnd database connection"
    ],
    "MysqlndUhConnectioncharsetName": [
        "MysqlndUhConnection::charsetName",
        "mysqlnduhconnection.charsetname.php",
        "Returns the default character set for the database connection"
    ],
    "MysqlndUhConnectionclose": [
        "MysqlndUhConnection::close",
        "mysqlnduhconnection.close.php",
        "Closes a previously opened database connection"
    ],
    "MysqlndUhConnectionconnect": [
        "MysqlndUhConnection::connect",
        "mysqlnduhconnection.connect.php",
        "Open a new connection to the MySQL server"
    ],
    "MysqlndUhConnectionendPSession": [
        "MysqlndUhConnection::endPSession",
        "mysqlnduhconnection.endpsession.php",
        "End a persistent connection"
    ],
    "MysqlndUhConnectiongetAffectedRows": [
        "MysqlndUhConnection::getAffectedRows",
        "mysqlnduhconnection.getaffectedrows.php",
        "Gets the number of affected rows in a previous MySQL operation"
    ],
    "MysqlndUhConnectiongetErrorNumber": [
        "MysqlndUhConnection::getErrorNumber",
        "mysqlnduhconnection.geterrornumber.php",
        "Returns the error code for the most recent function call"
    ],
    "MysqlndUhConnectiongetErrorString": [
        "MysqlndUhConnection::getErrorString",
        "mysqlnduhconnection.geterrorstring.php",
        "Returns a string description of the last error"
    ],
    "MysqlndUhConnectiongetFieldCount": [
        "MysqlndUhConnection::getFieldCount",
        "mysqlnduhconnection.getfieldcount.php",
        "Returns the number of columns for the most recent query"
    ],
    "MysqlndUhConnectiongetHostInformation": [
        "MysqlndUhConnection::getHostInformation",
        "mysqlnduhconnection.gethostinformation.php",
        "Returns a string representing the type of connection used"
    ],
    "MysqlndUhConnectiongetLastInsertId": [
        "MysqlndUhConnection::getLastInsertId",
        "mysqlnduhconnection.getlastinsertid.php",
        "Returns the auto generated id used in the last query"
    ],
    "MysqlndUhConnectiongetLastMessage": [
        "MysqlndUhConnection::getLastMessage",
        "mysqlnduhconnection.getlastmessage.php",
        "Retrieves information about the most recently executed query"
    ],
    "MysqlndUhConnectiongetProtocolInformation": [
        "MysqlndUhConnection::getProtocolInformation",
        "mysqlnduhconnection.getprotocolinformation.php",
        "Returns the version of the MySQL protocol used"
    ],
    "MysqlndUhConnectiongetServerInformation": [
        "MysqlndUhConnection::getServerInformation",
        "mysqlnduhconnection.getserverinformation.php",
        "Returns the version of the MySQL server"
    ],
    "MysqlndUhConnectiongetServerStatistics": [
        "MysqlndUhConnection::getServerStatistics",
        "mysqlnduhconnection.getserverstatistics.php",
        "Gets the current system status"
    ],
    "MysqlndUhConnectiongetServerVersion": [
        "MysqlndUhConnection::getServerVersion",
        "mysqlnduhconnection.getserverversion.php",
        "Returns the version of the MySQL server as an integer"
    ],
    "MysqlndUhConnectiongetSqlstate": [
        "MysqlndUhConnection::getSqlstate",
        "mysqlnduhconnection.getsqlstate.php",
        "Returns the SQLSTATE error from previous MySQL operation"
    ],
    "MysqlndUhConnectiongetStatistics": [
        "MysqlndUhConnection::getStatistics",
        "mysqlnduhconnection.getstatistics.php",
        "Returns statistics about the client connection"
    ],
    "MysqlndUhConnectiongetThreadId": [
        "MysqlndUhConnection::getThreadId",
        "mysqlnduhconnection.getthreadid.php",
        "Returns the thread ID for the current connection"
    ],
    "MysqlndUhConnectiongetWarningCount": [
        "MysqlndUhConnection::getWarningCount",
        "mysqlnduhconnection.getwarningcount.php",
        "Returns the number of warnings from the last query for the given link"
    ],
    "MysqlndUhConnectioninit": [
        "MysqlndUhConnection::init",
        "mysqlnduhconnection.init.php",
        "Initialize mysqlnd connection"
    ],
    "MysqlndUhConnectionkillConnection": [
        "MysqlndUhConnection::killConnection",
        "mysqlnduhconnection.killconnection.php",
        "Asks the server to kill a MySQL thread"
    ],
    "MysqlndUhConnectionlistFields": [
        "MysqlndUhConnection::listFields",
        "mysqlnduhconnection.listfields.php",
        "List MySQL table fields"
    ],
    "MysqlndUhConnectionlistMethod": [
        "MysqlndUhConnection::listMethod",
        "mysqlnduhconnection.listmethod.php",
        "Wrapper for assorted list commands"
    ],
    "MysqlndUhConnectionmoreResults": [
        "MysqlndUhConnection::moreResults",
        "mysqlnduhconnection.moreresults.php",
        "Check if there are any more query results from a multi query"
    ],
    "MysqlndUhConnectionnextResult": [
        "MysqlndUhConnection::nextResult",
        "mysqlnduhconnection.nextresult.php",
        "Prepare next result from multi_query"
    ],
    "MysqlndUhConnectionping": [
        "MysqlndUhConnection::ping",
        "mysqlnduhconnection.ping.php",
        "Pings a server connection, or tries to reconnect if the connection has gone down"
    ],
    "MysqlndUhConnectionquery": [
        "MysqlndUhConnection::query",
        "mysqlnduhconnection.query.php",
        "Performs a query on the database"
    ],
    "MysqlndUhConnectionqueryReadResultsetHeader": [
        "MysqlndUhConnection::queryReadResultsetHeader",
        "mysqlnduhconnection.queryreadresultsetheader.php",
        "Read a result set header"
    ],
    "MysqlndUhConnectionreapQuery": [
        "MysqlndUhConnection::reapQuery",
        "mysqlnduhconnection.reapquery.php",
        "Get result from async query"
    ],
    "MysqlndUhConnectionrefreshServer": [
        "MysqlndUhConnection::refreshServer",
        "mysqlnduhconnection.refreshserver.php",
        "Flush or reset tables and caches"
    ],
    "MysqlndUhConnectionrestartPSession": [
        "MysqlndUhConnection::restartPSession",
        "mysqlnduhconnection.restartpsession.php",
        "Restart a persistent mysqlnd connection"
    ],
    "MysqlndUhConnectionselectDb": [
        "MysqlndUhConnection::selectDb",
        "mysqlnduhconnection.selectdb.php",
        "Selects the default database for database queries"
    ],
    "MysqlndUhConnectionsendClose": [
        "MysqlndUhConnection::sendClose",
        "mysqlnduhconnection.sendclose.php",
        "Sends a close command to MySQL"
    ],
    "MysqlndUhConnectionsendQuery": [
        "MysqlndUhConnection::sendQuery",
        "mysqlnduhconnection.sendquery.php",
        "Sends a query to MySQL"
    ],
    "MysqlndUhConnectionserverDumpDebugInformation": [
        "MysqlndUhConnection::serverDumpDebugInformation",
        "mysqlnduhconnection.serverdumpdebuginformation.php",
        "Dump debugging information into the log for the MySQL server"
    ],
    "MysqlndUhConnectionsetAutocommit": [
        "MysqlndUhConnection::setAutocommit",
        "mysqlnduhconnection.setautocommit.php",
        "Turns on or off auto-committing database modifications"
    ],
    "MysqlndUhConnectionsetCharset": [
        "MysqlndUhConnection::setCharset",
        "mysqlnduhconnection.setcharset.php",
        "Sets the default client character set"
    ],
    "MysqlndUhConnectionsetClientOption": [
        "MysqlndUhConnection::setClientOption",
        "mysqlnduhconnection.setclientoption.php",
        "Sets a client option"
    ],
    "MysqlndUhConnectionsetServerOption": [
        "MysqlndUhConnection::setServerOption",
        "mysqlnduhconnection.setserveroption.php",
        "Sets a server option"
    ],
    "MysqlndUhConnectionshutdownServer": [
        "MysqlndUhConnection::shutdownServer",
        "mysqlnduhconnection.shutdownserver.php",
        "The shutdownServer purpose"
    ],
    "MysqlndUhConnectionsimpleCommand": [
        "MysqlndUhConnection::simpleCommand",
        "mysqlnduhconnection.simplecommand.php",
        "Sends a basic COM_* command"
    ],
    "MysqlndUhConnectionsimpleCommandHandleResponse": [
        "MysqlndUhConnection::simpleCommandHandleResponse",
        "mysqlnduhconnection.simplecommandhandleresponse.php",
        "Process a response for a basic COM_* command send to the client"
    ],
    "MysqlndUhConnectionsslSet": [
        "MysqlndUhConnection::sslSet",
        "mysqlnduhconnection.sslset.php",
        "Used for establishing secure connections using SSL"
    ],
    "MysqlndUhConnectionstmtInit": [
        "MysqlndUhConnection::stmtInit",
        "mysqlnduhconnection.stmtinit.php",
        "Initializes a statement and returns a resource for use with mysqli_statement::prepare"
    ],
    "MysqlndUhConnectionstoreResult": [
        "MysqlndUhConnection::storeResult",
        "mysqlnduhconnection.storeresult.php",
        "Transfers a result set from the last query"
    ],
    "MysqlndUhConnectiontxCommit": [
        "MysqlndUhConnection::txCommit",
        "mysqlnduhconnection.txcommit.php",
        "Commits the current transaction"
    ],
    "MysqlndUhConnectiontxRollback": [
        "MysqlndUhConnection::txRollback",
        "mysqlnduhconnection.txrollback.php",
        "Rolls back current transaction"
    ],
    "MysqlndUhConnectionuseResult": [
        "MysqlndUhConnection::useResult",
        "mysqlnduhconnection.useresult.php",
        "Initiate a result set retrieval"
    ],
    "MysqlndUhConnectionconstruct": [
        "MysqlndUhConnection::__construct",
        "mysqlnduhconnection.construct.php",
        "The __construct purpose"
    ],
    "MysqlndUhPreparedStatementexecute": [
        "MysqlndUhPreparedStatement::execute",
        "mysqlnduhpreparedstatement.execute.php",
        "Executes a prepared Query"
    ],
    "MysqlndUhPreparedStatementprepare": [
        "MysqlndUhPreparedStatement::prepare",
        "mysqlnduhpreparedstatement.prepare.php",
        "Prepare an SQL statement for execution"
    ],
    "MysqlndUhPreparedStatementconstruct": [
        "MysqlndUhPreparedStatement::__construct",
        "mysqlnduhpreparedstatement.construct.php",
        "The __construct purpose"
    ],
    "mysqlndmemcachegetconfig": [
        "mysqlnd_memcache_get_config",
        "function.mysqlnd-memcache-get-config.php",
        "プラグインの設定情報を返す"
    ],
    "mysqlndmemcacheset": [
        "mysqlnd_memcache_set",
        "function.mysqlnd-memcache-set.php",
        "MySQL の接続を Memcache の接続と関連づける"
    ],
    "mysqlndmsdumpservers": [
        "mysqlnd_ms_dump_servers",
        "function.mysqlnd-ms-dump-servers.php",
        "Returns a list of currently configured servers"
    ],
    "mysqlndmsfabricselectglobal": [
        "mysqlnd_ms_fabric_select_global",
        "function.mysqlnd-ms-fabric-select-global.php",
        "Switch to global sharding server for a given table"
    ],
    "mysqlndmsfabricselectshard": [
        "mysqlnd_ms_fabric_select_shard",
        "function.mysqlnd-ms-fabric-select-shard.php",
        "Switch to shard"
    ],
    "mysqlndmsgetlastgtid": [
        "mysqlnd_ms_get_last_gtid",
        "function.mysqlnd-ms-get-last-gtid.php",
        "Returns the latest global transaction ID"
    ],
    "mysqlndmsgetlastusedconnection": [
        "mysqlnd_ms_get_last_used_connection",
        "function.mysqlnd-ms-get-last-used-connection.php",
        "Returns an array which describes the last used connection"
    ],
    "mysqlndmsgetstats": [
        "mysqlnd_ms_get_stats",
        "function.mysqlnd-ms-get-stats.php",
        "Returns query distribution and connection statistics"
    ],
    "mysqlndmsmatchwild": [
        "mysqlnd_ms_match_wild",
        "function.mysqlnd-ms-match-wild.php",
        "Finds whether a table name matches a wildcard pattern or not"
    ],
    "mysqlndmsqueryisselect": [
        "mysqlnd_ms_query_is_select",
        "function.mysqlnd-ms-query-is-select.php",
        "Find whether to send the query to the master, the slave or the last used MySQL server"
    ],
    "mysqlndmssetqos": [
        "mysqlnd_ms_set_qos",
        "function.mysqlnd-ms-set-qos.php",
        "Sets the quality of service needed from the cluster"
    ],
    "mysqlndmssetuserpickserver": [
        "mysqlnd_ms_set_user_pick_server",
        "function.mysqlnd-ms-set-user-pick-server.php",
        "Sets a callback for user-defined read/write splitting"
    ],
    "mysqlndmsxabegin": [
        "mysqlnd_ms_xa_begin",
        "function.mysqlnd-ms-xa-begin.php",
        "Starts a distributed/XA transaction among MySQL servers"
    ],
    "mysqlndmsxacommit": [
        "mysqlnd_ms_xa_commit",
        "function.mysqlnd-ms-xa-commit.php",
        "Commits a distributed/XA transaction among MySQL servers"
    ],
    "mysqlndmsxagc": [
        "mysqlnd_ms_xa_gc",
        "function.mysqlnd-ms-xa-gc.php",
        "Garbage collects unfinished XA transactions after severe errors"
    ],
    "mysqlndmsxarollback": [
        "mysqlnd_ms_xa_rollback",
        "function.mysqlnd-ms-xa-rollback.php",
        "Rolls back a distributed/XA transaction among MySQL servers"
    ],
    "mysqlndqcclearcache": [
        "mysqlnd_qc_clear_cache",
        "function.mysqlnd-qc-clear-cache.php",
        "Flush all cache contents"
    ],
    "mysqlndqcgetavailablehandlers": [
        "mysqlnd_qc_get_available_handlers",
        "function.mysqlnd-qc-get-available-handlers.php",
        "Returns a list of available storage handler"
    ],
    "mysqlndqcgetcacheinfo": [
        "mysqlnd_qc_get_cache_info",
        "function.mysqlnd-qc-get-cache-info.php",
        "Returns information on the current handler, the number of cache entries and cache entries, if available"
    ],
    "mysqlndqcgetcorestats": [
        "mysqlnd_qc_get_core_stats",
        "function.mysqlnd-qc-get-core-stats.php",
        "Statistics collected by the core of the query cache"
    ],
    "mysqlndqcgetnormalizedquerytracelog": [
        "mysqlnd_qc_get_normalized_query_trace_log",
        "function.mysqlnd-qc-get-normalized-query-trace-log.php",
        "Returns a normalized query trace log for each query inspected by the query cache"
    ],
    "mysqlndqcgetquerytracelog": [
        "mysqlnd_qc_get_query_trace_log",
        "function.mysqlnd-qc-get-query-trace-log.php",
        "Returns a backtrace for each query inspected by the query cache"
    ],
    "mysqlndqcsetcachecondition": [
        "mysqlnd_qc_set_cache_condition",
        "function.mysqlnd-qc-set-cache-condition.php",
        "Set conditions for automatic caching"
    ],
    "mysqlndqcsetisselect": [
        "mysqlnd_qc_set_is_select",
        "function.mysqlnd-qc-set-is-select.php",
        "Installs a callback which decides whether a statement is cached"
    ],
    "mysqlndqcsetstoragehandler": [
        "mysqlnd_qc_set_storage_handler",
        "function.mysqlnd-qc-set-storage-handler.php",
        "Change current storage handler"
    ],
    "mysqlndqcsetuserhandlers": [
        "mysqlnd_qc_set_user_handlers",
        "function.mysqlnd-qc-set-user-handlers.php",
        "Sets the callback functions for a user-defined procedural storage handler"
    ],
    "mysqlnduhconverttomysqlnd": [
        "mysqlnd_uh_convert_to_mysqlnd",
        "function.mysqlnd-uh-convert-to-mysqlnd.php",
        "Converts a MySQL connection handle into a mysqlnd connection handle"
    ],
    "mysqlnduhsetconnectionproxy": [
        "mysqlnd_uh_set_connection_proxy",
        "function.mysqlnd-uh-set-connection-proxy.php",
        "Installs a proxy for mysqlnd connections"
    ],
    "mysqlnduhsetstatementproxy": [
        "mysqlnd_uh_set_statement_proxy",
        "function.mysqlnd-uh-set-statement-proxy.php",
        "Installs a proxy for mysqlnd statements"
    ],
    "mysqlaffectedrows": [
        "mysql_affected_rows",
        "function.mysql-affected-rows.php",
        "一番最近の操作で変更された行の数を得る"
    ],
    "mysqlclientencoding": [
        "mysql_client_encoding",
        "function.mysql-client-encoding.php",
        "文字セット名を返す"
    ],
    "mysqlclose": [
        "mysql_close",
        "function.mysql-close.php",
        "MySQL 接続を閉じる"
    ],
    "mysqlconnect": [
        "mysql_connect",
        "function.mysql-connect.php",
        "MySQL サーバーへの接続をオープンする"
    ],
    "mysqlcreatedb": [
        "mysql_create_db",
        "function.mysql-create-db.php",
        "MySQL データベースを作成する"
    ],
    "mysqldataseek": [
        "mysql_data_seek",
        "function.mysql-data-seek.php",
        "内部的な結果ポインタを移動する"
    ],
    "mysqldbname": [
        "mysql_db_name",
        "function.mysql-db-name.php",
        "mysql_list_dbs のコール結果からデータベース名を取得する"
    ],
    "mysqldbquery": [
        "mysql_db_query",
        "function.mysql-db-query.php",
        "データベースを選択し、そこでクエリーを実行する"
    ],
    "mysqldropdb": [
        "mysql_drop_db",
        "function.mysql-drop-db.php",
        "MySQLデータベースを破棄(削除)する"
    ],
    "mysqlerrno": [
        "mysql_errno",
        "function.mysql-errno.php",
        "直近の MySQL 処理からエラーメッセージのエラー番号を返す"
    ],
    "mysqlerror": [
        "mysql_error",
        "function.mysql-error.php",
        "直近に実行された MySQL 操作のエラーメッセージを返す"
    ],
    "mysqlescapestring": [
        "mysql_escape_string",
        "function.mysql-escape-string.php",
        "mysql_query で使用するために文字列をエスケープする"
    ],
    "mysqlfetcharray": [
        "mysql_fetch_array",
        "function.mysql-fetch-array.php",
        "連想配列、添字配列、またはその両方として結果の行を取得する"
    ],
    "mysqlfetchassoc": [
        "mysql_fetch_assoc",
        "function.mysql-fetch-assoc.php",
        "連想配列として結果の行を取得する"
    ],
    "mysqlfetchfield": [
        "mysql_fetch_field",
        "function.mysql-fetch-field.php",
        "結果からカラム情報を取得し、オブジェクトとして返す"
    ],
    "mysqlfetchlengths": [
        "mysql_fetch_lengths",
        "function.mysql-fetch-lengths.php",
        "結果における各出力の長さを得る"
    ],
    "mysqlfetchobject": [
        "mysql_fetch_object",
        "function.mysql-fetch-object.php",
        "結果の行をオブジェクトとして取得する"
    ],
    "mysqlfetchrow": [
        "mysql_fetch_row",
        "function.mysql-fetch-row.php",
        "結果を添字配列として取得する"
    ],
    "mysqlfieldflags": [
        "mysql_field_flags",
        "function.mysql-field-flags.php",
        "結果において指定したフィールドのフラグを取得する"
    ],
    "mysqlfieldlen": [
        "mysql_field_len",
        "function.mysql-field-len.php",
        "指定したフィールドの長さを返す"
    ],
    "mysqlfieldname": [
        "mysql_field_name",
        "function.mysql-field-name.php",
        "結果において指定したフィールド名を取得する"
    ],
    "mysqlfieldseek": [
        "mysql_field_seek",
        "function.mysql-field-seek.php",
        "結果ポインタを指定したフィールドオフセットにセットする"
    ],
    "mysqlfieldtable": [
        "mysql_field_table",
        "function.mysql-field-table.php",
        "指定したフィールドが含まれるテーブルの名前を取得する"
    ],
    "mysqlfieldtype": [
        "mysql_field_type",
        "function.mysql-field-type.php",
        "結果において指定したフィールドの型を取得する"
    ],
    "mysqlfreeresult": [
        "mysql_free_result",
        "function.mysql-free-result.php",
        "結果保持用メモリを開放する"
    ],
    "mysqlgetclientinfo": [
        "mysql_get_client_info",
        "function.mysql-get-client-info.php",
        "MySQL クライアント情報を取得する"
    ],
    "mysqlgethostinfo": [
        "mysql_get_host_info",
        "function.mysql-get-host-info.php",
        "MySQL ホスト情報を取得する"
    ],
    "mysqlgetprotoinfo": [
        "mysql_get_proto_info",
        "function.mysql-get-proto-info.php",
        "MySQL プロトコル情報を取得する"
    ],
    "mysqlgetserverinfo": [
        "mysql_get_server_info",
        "function.mysql-get-server-info.php",
        "MySQL サーバー情報を取得する"
    ],
    "mysqlinfo": [
        "mysql_info",
        "function.mysql-info.php",
        "直近のクエリについての情報を得る"
    ],
    "mysqlinsertid": [
        "mysql_insert_id",
        "function.mysql-insert-id.php",
        "直近のクエリで生成された ID を得る"
    ],
    "mysqllistdbs": [
        "mysql_list_dbs",
        "function.mysql-list-dbs.php",
        "MySQL サーバー上で利用可能なデータベースのリストを得る"
    ],
    "mysqllistfields": [
        "mysql_list_fields",
        "function.mysql-list-fields.php",
        "MySQL テーブルのフィールドのリストを得る"
    ],
    "mysqllistprocesses": [
        "mysql_list_processes",
        "function.mysql-list-processes.php",
        "MySQL プロセスのリストを得る"
    ],
    "mysqllisttables": [
        "mysql_list_tables",
        "function.mysql-list-tables.php",
        "MySQL データベース上のテーブルのリストを得る"
    ],
    "mysqlnumfields": [
        "mysql_num_fields",
        "function.mysql-num-fields.php",
        "結果におけるフィールドの数を得る"
    ],
    "mysqlnumrows": [
        "mysql_num_rows",
        "function.mysql-num-rows.php",
        "結果における行の数を得る"
    ],
    "mysqlpconnect": [
        "mysql_pconnect",
        "function.mysql-pconnect.php",
        "MySQL サーバーへの持続的な接続をオープンする"
    ],
    "mysqlping": [
        "mysql_ping",
        "function.mysql-ping.php",
        "サーバーとの接続状況を調べ、接続されていない場合は再接続する"
    ],
    "mysqlquery": [
        "mysql_query",
        "function.mysql-query.php",
        "MySQL クエリを送信する"
    ],
    "mysqlrealescapestring": [
        "mysql_real_escape_string",
        "function.mysql-real-escape-string.php",
        "SQL 文中で用いる文字列の特殊文字をエスケープする"
    ],
    "mysqlresult": [
        "mysql_result",
        "function.mysql-result.php",
        "結果データを得る"
    ],
    "mysqlselectdb": [
        "mysql_select_db",
        "function.mysql-select-db.php",
        "MySQL データベースを選択する"
    ],
    "mysqlsetcharset": [
        "mysql_set_charset",
        "function.mysql-set-charset.php",
        "クライアントの文字セットを設定する"
    ],
    "mysqlstat": [
        "mysql_stat",
        "function.mysql-stat.php",
        "現在のシステムの状態を取得する"
    ],
    "mysqltablename": [
        "mysql_tablename",
        "function.mysql-tablename.php",
        "フィールドのテーブル名を得る"
    ],
    "mysqlthreadid": [
        "mysql_thread_id",
        "function.mysql-thread-id.php",
        "カレントのスレッド ID を返す"
    ],
    "mysqlunbufferedquery": [
        "mysql_unbuffered_query",
        "function.mysql-unbuffered-query.php",
        "MySQL に SQL クエリを送信するが、結果に対してのフェッチやバッファリングは行わない"
    ],
    "mysqlxdevapiClientclose": [
        "mysql_xdevapi\\Client::close",
        "mysql-xdevapi-client.close.php",
        "クライアントの接続を閉じる"
    ],
    "natcasesort": [
        "natcasesort",
        "function.natcasesort.php",
        "大文字小文字を区別しない&quot;自然順&quot;アルゴリズムを用いて配列をソートする"
    ],
    "natsort": [
        "natsort",
        "function.natsort.php",
        "&quot;自然順&quot;アルゴリズムで配列をソートする"
    ],
    "ncursesaddch": [
        "ncurses_addch",
        "function.ncurses-addch.php",
        "現在の位置に文字を追加し、カーソルを進める"
    ],
    "ncursesaddchnstr": [
        "ncurses_addchnstr",
        "function.ncurses-addchnstr.php",
        "現在の位置に指定した長さの属性付き文字列を追加する"
    ],
    "ncursesaddchstr": [
        "ncurses_addchstr",
        "function.ncurses-addchstr.php",
        "現在の位置に属性付き文字列を追加する"
    ],
    "ncursesaddnstr": [
        "ncurses_addnstr",
        "function.ncurses-addnstr.php",
        "現在の位置に、指定した長さの文字列を追加する"
    ],
    "ncursesaddstr": [
        "ncurses_addstr",
        "function.ncurses-addstr.php",
        "現在の位置にテキストを出力する"
    ],
    "ncursesassumedefaultcolors": [
        "ncurses_assume_default_colors",
        "function.ncurses-assume-default-colors.php",
        "カラー 0 のデフォルト色を定義する"
    ],
    "ncursesattroff": [
        "ncurses_attroff",
        "function.ncurses-attroff.php",
        "指定した属性を無効とする"
    ],
    "ncursesattron": [
        "ncurses_attron",
        "function.ncurses-attron.php",
        "指定した属性を有効にする"
    ],
    "ncursesattrset": [
        "ncurses_attrset",
        "function.ncurses-attrset.php",
        "指定した属性を設定する"
    ],
    "ncursesbaudrate": [
        "ncurses_baudrate",
        "function.ncurses-baudrate.php",
        "端末のボーレートを返す"
    ],
    "ncursesbeep": [
        "ncurses_beep",
        "function.ncurses-beep.php",
        "端末のビープを鳴らす"
    ],
    "ncursesbkgd": [
        "ncurses_bkgd",
        "function.ncurses-bkgd.php",
        "端末画面の背景属性を設定する"
    ],
    "ncursesbkgdset": [
        "ncurses_bkgdset",
        "function.ncurses-bkgdset.php",
        "画面背景を制御する"
    ],
    "ncursesborder": [
        "ncurses_border",
        "function.ncurses-border.php",
        "属性付きの文字で画面周囲に境界を描画する"
    ],
    "ncursesbottompanel": [
        "ncurses_bottom_panel",
        "function.ncurses-bottom-panel.php",
        "パネルをスタックの最下部に移動する"
    ],
    "ncursescanchangecolor": [
        "ncurses_can_change_color",
        "function.ncurses-can-change-color.php",
        "端末の色を変更可能かどうか確認する"
    ],
    "ncursescbreak": [
        "ncurses_cbreak",
        "function.ncurses-cbreak.php",
        "入力のバッファリングをオフにする"
    ],
    "ncursesclear": [
        "ncurses_clear",
        "function.ncurses-clear.php",
        "スクリーンをクリアする"
    ],
    "ncursesclrtobot": [
        "ncurses_clrtobot",
        "function.ncurses-clrtobot.php",
        "現在位置から最下部までスクリーンをクリアする"
    ],
    "ncursesclrtoeol": [
        "ncurses_clrtoeol",
        "function.ncurses-clrtoeol.php",
        "現在位置から行末までスクリーンをクリアする"
    ],
    "ncursescolorcontent": [
        "ncurses_color_content",
        "function.ncurses-color-content.php",
        "色の RGB 値を取得する"
    ],
    "ncursescolorset": [
        "ncurses_color_set",
        "function.ncurses-color-set.php",
        "前景/背景色を設定する"
    ],
    "ncursescursset": [
        "ncurses_curs_set",
        "function.ncurses-curs-set.php",
        "カーソル状態を設定する"
    ],
    "ncursesdefinekey": [
        "ncurses_define_key",
        "function.ncurses-define-key.php",
        "キーコードを定義する"
    ],
    "ncursesdefprogmode": [
        "ncurses_def_prog_mode",
        "function.ncurses-def-prog-mode.php",
        "端末(プログラム)モードを保存する"
    ],
    "ncursesdefshellmode": [
        "ncurses_def_shell_mode",
        "function.ncurses-def-shell-mode.php",
        "端末(シェル)モードを保存する"
    ],
    "ncursesdelayoutput": [
        "ncurses_delay_output",
        "function.ncurses-delay-output.php",
        "パディング文字を用いて端末出力を遅延させる"
    ],
    "ncursesdelch": [
        "ncurses_delch",
        "function.ncurses-delch.php",
        "現在位置の文字を削除し、残った部分を左に移動する"
    ],
    "ncursesdeleteln": [
        "ncurses_deleteln",
        "function.ncurses-deleteln.php",
        "現在位置の行を削除し、残りの部分を上に上げる"
    ],
    "ncursesdelwin": [
        "ncurses_delwin",
        "function.ncurses-delwin.php",
        "ncurses ウインドウを削除する"
    ],
    "ncursesdoupdate": [
        "ncurses_doupdate",
        "function.ncurses-doupdate.php",
        "準備中の全ての出力を書き込み、端末をリフレッシュする"
    ],
    "ncursesecho": [
        "ncurses_echo",
        "function.ncurses-echo.php",
        "キーボード入力のエコーを有効とする"
    ],
    "ncursesechochar": [
        "ncurses_echochar",
        "function.ncurses-echochar.php",
        "リフレッシュを行いつつ 1 文字出力する"
    ],
    "ncursesend": [
        "ncurses_end",
        "function.ncurses-end.php",
        "ncurses を終了し、画面を消去する"
    ],
    "ncurseserase": [
        "ncurses_erase",
        "function.ncurses-erase.php",
        "端末画面を消去する"
    ],
    "ncurseserasechar": [
        "ncurses_erasechar",
        "function.ncurses-erasechar.php",
        "現在の erase 文字を返す"
    ],
    "ncursesfilter": [
        "ncurses_filter",
        "function.ncurses-filter.php",
        "iniscr() および newterm() の LINES を 1 に設定する"
    ],
    "ncursesflash": [
        "ncurses_flash",
        "function.ncurses-flash.php",
        "端末画面をフラッシュする(ビジュアルベル)"
    ],
    "ncursesflushinp": [
        "ncurses_flushinp",
        "function.ncurses-flushinp.php",
        "キーボード入力バッファをフラッシュする"
    ],
    "ncursesgetch": [
        "ncurses_getch",
        "function.ncurses-getch.php",
        "キーボードから 1 文字読み込む"
    ],
    "ncursesgetmaxyx": [
        "ncurses_getmaxyx",
        "function.ncurses-getmaxyx.php",
        "ウィンドウの大きさを返す"
    ],
    "ncursesgetmouse": [
        "ncurses_getmouse",
        "function.ncurses-getmouse.php",
        "マウスイベントを読みこむ"
    ],
    "ncursesgetyx": [
        "ncurses_getyx",
        "function.ncurses-getyx.php",
        "ウィンドウ内の現在のカーソル位置を返す"
    ],
    "ncurseshalfdelay": [
        "ncurses_halfdelay",
        "function.ncurses-halfdelay.php",
        "端末をハーフディレイモードにする"
    ],
    "ncurseshascolors": [
        "ncurses_has_colors",
        "function.ncurses-has-colors.php",
        "カラー端末かどうか確認する"
    ],
    "ncurseshasic": [
        "ncurses_has_ic",
        "function.ncurses-has-ic.php",
        "挿入/削除機能の有無を確認する"
    ],
    "ncurseshasil": [
        "ncurses_has_il",
        "function.ncurses-has-il.php",
        "行挿入/削除機能の有無を確認する"
    ],
    "ncurseshaskey": [
        "ncurses_has_key",
        "function.ncurses-has-key.php",
        "端末キーボードにおいてファンクションキーの有無を調べる"
    ],
    "ncurseshidepanel": [
        "ncurses_hide_panel",
        "function.ncurses-hide-panel.php",
        "パネルをスタックから取り除き、見えなくする"
    ],
    "ncurseshline": [
        "ncurses_hline",
        "function.ncurses-hline.php",
        "現在位置に属性付きの文字を用いて最大 n 文字長の線を水平に描画する"
    ],
    "ncursesinch": [
        "ncurses_inch",
        "function.ncurses-inch.php",
        "現在位置の文字と属性を取得する"
    ],
    "ncursesinit": [
        "ncurses_init",
        "function.ncurses-init.php",
        "ncurses を初期化する"
    ],
    "ncursesinitcolor": [
        "ncurses_init_color",
        "function.ncurses-init-color.php",
        "端末の色を定義する"
    ],
    "ncursesinitpair": [
        "ncurses_init_pair",
        "function.ncurses-init-pair.php",
        "色ペアを定義する"
    ],
    "ncursesinsch": [
        "ncurses_insch",
        "function.ncurses-insch.php",
        "文字を挿入し、現在位置にある文字を含む残りの行を移動する"
    ],
    "ncursesinsertln": [
        "ncurses_insertln",
        "function.ncurses-insertln.php",
        "行を挿入し、残りの部分をスクロールダウンする"
    ],
    "ncursesinsstr": [
        "ncurses_insstr",
        "function.ncurses-insstr.php",
        "現在位置に文字列を挿入し、残りの行を右に移動する"
    ],
    "ncursesinstr": [
        "ncurses_instr",
        "function.ncurses-instr.php",
        "端末画面から文字列を読み込む"
    ],
    "ncursesisendwin": [
        "ncurses_isendwin",
        "function.ncurses-isendwin.php",
        "Ncurses が endwin モードの場合、通常の画面出力が実行可能"
    ],
    "ncurseskeyok": [
        "ncurses_keyok",
        "function.ncurses-keyok.php",
        "キーコードを有効または無効にする"
    ],
    "ncurseskeypad": [
        "ncurses_keypad",
        "function.ncurses-keypad.php",
        "キーパッドを on あるいは off にする"
    ],
    "ncurseskillchar": [
        "ncurses_killchar",
        "function.ncurses-killchar.php",
        "現在の行削除文字を返す"
    ],
    "ncurseslongname": [
        "ncurses_longname",
        "function.ncurses-longname.php",
        "端末の説明を返す"
    ],
    "ncursesmeta": [
        "ncurses_meta",
        "function.ncurses-meta.php",
        "8 ビットのメタキー情報を有効/無効にする"
    ],
    "ncursesmouseinterval": [
        "ncurses_mouseinterval",
        "function.ncurses-mouseinterval.php",
        "マウスボタンクリックのタイムアウトを設定する"
    ],
    "ncursesmousemask": [
        "ncurses_mousemask",
        "function.ncurses-mousemask.php",
        "マウスオプションを設定する"
    ],
    "ncursesmousetrafo": [
        "ncurses_mouse_trafo",
        "function.ncurses-mouse-trafo.php",
        "座標を変換する"
    ],
    "ncursesmove": [
        "ncurses_move",
        "function.ncurses-move.php",
        "出力位置を移動する"
    ],
    "ncursesmovepanel": [
        "ncurses_move_panel",
        "function.ncurses-move-panel.php",
        "左上が [startx, starty] となるようにパネルを移動する"
    ],
    "ncursesmvaddch": [
        "ncurses_mvaddch",
        "function.ncurses-mvaddch.php",
        "現在位置を移動し、文字を追加する"
    ],
    "ncursesmvaddchnstr": [
        "ncurses_mvaddchnstr",
        "function.ncurses-mvaddchnstr.php",
        "位置を移動し、指定長の属性付きの文字列を追加する"
    ],
    "ncursesmvaddchstr": [
        "ncurses_mvaddchstr",
        "function.ncurses-mvaddchstr.php",
        "位置を移動し、属性付きの文字列を追加する"
    ],
    "ncursesmvaddnstr": [
        "ncurses_mvaddnstr",
        "function.ncurses-mvaddnstr.php",
        "位置を移動し、指定長の文字列を追加する"
    ],
    "ncursesmvaddstr": [
        "ncurses_mvaddstr",
        "function.ncurses-mvaddstr.php",
        "位置を移動し、文字列を追加する"
    ],
    "ncursesmvcur": [
        "ncurses_mvcur",
        "function.ncurses-mvcur.php",
        "直ちにカーソルを移動する"
    ],
    "ncursesmvdelch": [
        "ncurses_mvdelch",
        "function.ncurses-mvdelch.php",
        "位置を移動し、文字を削除、行の残りを左シフトする"
    ],
    "ncursesmvgetch": [
        "ncurses_mvgetch",
        "function.ncurses-mvgetch.php",
        "位置を移動し、新しい位置で文字を得る"
    ],
    "ncursesmvhline": [
        "ncurses_mvhline",
        "function.ncurses-mvhline.php",
        "位置を新しく設定し、属性付きの文字を用いて最大n文字の水平線を描画"
    ],
    "ncursesmvinch": [
        "ncurses_mvinch",
        "function.ncurses-mvinch.php",
        "位置を移動し、新しい位置の属性付きの文字を取得する"
    ],
    "ncursesmvvline": [
        "ncurses_mvvline",
        "function.ncurses-mvvline.php",
        "位置を新しく設定し、属性付きの文字を用いて最大 n 文字の垂直線を描画する"
    ],
    "ncursesmvwaddstr": [
        "ncurses_mvwaddstr",
        "function.ncurses-mvwaddstr.php",
        "ウインドウの新規位置に文字列を追加する"
    ],
    "ncursesnapms": [
        "ncurses_napms",
        "function.ncurses-napms.php",
        "スリープ"
    ],
    "ncursesnewpad": [
        "ncurses_newpad",
        "function.ncurses-newpad.php",
        "新しいパッド (window) を作成する"
    ],
    "ncursesnewwin": [
        "ncurses_newwin",
        "function.ncurses-newwin.php",
        "新規ウインドウを作成する"
    ],
    "ncursesnewpanel": [
        "ncurses_new_panel",
        "function.ncurses-new-panel.php",
        "新しいパネルを作成し、それをウィンドウに関連づける"
    ],
    "ncursesnl": [
        "ncurses_nl",
        "function.ncurses-nl.php",
        "改行と復改/ラインフィードを変換する"
    ],
    "ncursesnocbreak": [
        "ncurses_nocbreak",
        "function.ncurses-nocbreak.php",
        "端末を cooked モードに変更する"
    ],
    "ncursesnoecho": [
        "ncurses_noecho",
        "function.ncurses-noecho.php",
        "キーボード入力エコーを無効にする"
    ],
    "ncursesnonl": [
        "ncurses_nonl",
        "function.ncurses-nonl.php",
        "改行と復改/ラインフィードを変換しない"
    ],
    "ncursesnoqiflush": [
        "ncurses_noqiflush",
        "function.ncurses-noqiflush.php",
        "シグナル文字のフラッシュを無効とする"
    ],
    "ncursesnoraw": [
        "ncurses_noraw",
        "function.ncurses-noraw.php",
        "端末を raw モード以外に変更する"
    ],
    "ncursespaircontent": [
        "ncurses_pair_content",
        "function.ncurses-pair-content.php",
        "色ペアの前景色と背景色を取得する"
    ],
    "ncursespanelabove": [
        "ncurses_panel_above",
        "function.ncurses-panel-above.php",
        "パネルの上のパネルを返す"
    ],
    "ncursespanelbelow": [
        "ncurses_panel_below",
        "function.ncurses-panel-below.php",
        "パネルの下のパネルを返す"
    ],
    "ncursespanelwindow": [
        "ncurses_panel_window",
        "function.ncurses-panel-window.php",
        "パネルに関連付けられたウィンドウを返す"
    ],
    "ncursespnoutrefresh": [
        "ncurses_pnoutrefresh",
        "function.ncurses-pnoutrefresh.php",
        "パッドから仮想画面にリージョンをコピーする"
    ],
    "ncursesprefresh": [
        "ncurses_prefresh",
        "function.ncurses-prefresh.php",
        "パッドから仮想画面にリージョンをコピーする"
    ],
    "ncursesputp": [
        "ncurses_putp",
        "function.ncurses-putp.php",
        "パディング情報を文字列に適用し、それを出力する"
    ],
    "ncursesqiflush": [
        "ncurses_qiflush",
        "function.ncurses-qiflush.php",
        "シグナル文字のフラッシュを有効とする"
    ],
    "ncursesraw": [
        "ncurses_raw",
        "function.ncurses-raw.php",
        "端末を raw モードに変更する"
    ],
    "ncursesrefresh": [
        "ncurses_refresh",
        "function.ncurses-refresh.php",
        "画面をリフレッシュする"
    ],
    "ncursesreplacepanel": [
        "ncurses_replace_panel",
        "function.ncurses-replace-panel.php",
        "パネルに関連付けられたウィンドウを置き換える"
    ],
    "ncursesresetty": [
        "ncurses_resetty",
        "function.ncurses-resetty.php",
        "保存した端末モードに復帰する"
    ],
    "ncursesresetprogmode": [
        "ncurses_reset_prog_mode",
        "function.ncurses-reset-prog-mode.php",
        "def_prog_mode で保存したプログラムモードをリセットする"
    ],
    "ncursesresetshellmode": [
        "ncurses_reset_shell_mode",
        "function.ncurses-reset-shell-mode.php",
        "def_shell_mode で保存したシェルモードをリセットする"
    ],
    "ncursessavetty": [
        "ncurses_savetty",
        "function.ncurses-savetty.php",
        "端末の状態を保存する"
    ],
    "ncursesscrl": [
        "ncurses_scrl",
        "function.ncurses-scrl.php",
        "現在位置を変更せずに画面の内容をスクロールアップまたはダウンする"
    ],
    "ncursesscrdump": [
        "ncurses_scr_dump",
        "function.ncurses-scr-dump.php",
        "画面の内容をファイルにダンプする"
    ],
    "ncursesscrinit": [
        "ncurses_scr_init",
        "function.ncurses-scr-init.php",
        "ファイルダンプから画面を初期化する"
    ],
    "ncursesscrrestore": [
        "ncurses_scr_restore",
        "function.ncurses-scr-restore.php",
        "ファイルダンプから画面を復帰する"
    ],
    "ncursesscrset": [
        "ncurses_scr_set",
        "function.ncurses-scr-set.php",
        "ファイルダンプから画面を継承する"
    ],
    "ncursesshowpanel": [
        "ncurses_show_panel",
        "function.ncurses-show-panel.php",
        "不可視のパネルをスタックの最上部に置き、見えるようにする"
    ],
    "ncursesslkattr": [
        "ncurses_slk_attr",
        "function.ncurses-slk-attr.php",
        "現在のソフトラベルキー属性を返す"
    ],
    "ncursesslkattroff": [
        "ncurses_slk_attroff",
        "function.ncurses-slk-attroff.php",
        "ソフトファンクションキーラベルの指定した属性を無効にする"
    ],
    "ncursesslkattron": [
        "ncurses_slk_attron",
        "function.ncurses-slk-attron.php",
        "ソフトファンクションキーラベルの指定した属性を有効にする"
    ],
    "ncursesslkattrset": [
        "ncurses_slk_attrset",
        "function.ncurses-slk-attrset.php",
        "ソフトファンクションキーラベルに、指定した属性を設定する"
    ],
    "ncursesslkclear": [
        "ncurses_slk_clear",
        "function.ncurses-slk-clear.php",
        "画面からソフトラベルをクリアする"
    ],
    "ncursesslkcolor": [
        "ncurses_slk_color",
        "function.ncurses-slk-color.php",
        "ソフトラベルキーの色を設定する"
    ],
    "ncursesslkinit": [
        "ncurses_slk_init",
        "function.ncurses-slk-init.php",
        "ソフトラベルキー関数を初期化する"
    ],
    "ncursesslknoutrefresh": [
        "ncurses_slk_noutrefresh",
        "function.ncurses-slk-noutrefresh.php",
        "仮想画面にソフトラベルキーをコピーする"
    ],
    "ncursesslkrefresh": [
        "ncurses_slk_refresh",
        "function.ncurses-slk-refresh.php",
        "ソフトラベルキーを画面にコピーする"
    ],
    "ncursesslkrestore": [
        "ncurses_slk_restore",
        "function.ncurses-slk-restore.php",
        "ソフトラベルキーを復帰する"
    ],
    "ncursesslkset": [
        "ncurses_slk_set",
        "function.ncurses-slk-set.php",
        "ファンクションキーラベルを設定する"
    ],
    "ncursesslktouch": [
        "ncurses_slk_touch",
        "function.ncurses-slk-touch.php",
        "ncurses_slk_noutrefresh を実行する際に強制的に出力する"
    ],
    "ncursesstandend": [
        "ncurses_standend",
        "function.ncurses-standend.php",
        "'standout' 属性の使用を停止する"
    ],
    "ncursesstandout": [
        "ncurses_standout",
        "function.ncurses-standout.php",
        "'standout' 属性の使用を開始する"
    ],
    "ncursesstartcolor": [
        "ncurses_start_color",
        "function.ncurses-start-color.php",
        "色機能を初期化する"
    ],
    "ncursestermattrs": [
        "ncurses_termattrs",
        "function.ncurses-termattrs.php",
        "端末でサポートされる全ての属性フラグの論理和を返す"
    ],
    "ncursestermname": [
        "ncurses_termname",
        "function.ncurses-termname.php",
        "端末の(簡略)名を返す"
    ],
    "ncursestimeout": [
        "ncurses_timeout",
        "function.ncurses-timeout.php",
        "特別なキーシーケンスのタイムアウトを設定する"
    ],
    "ncursestoppanel": [
        "ncurses_top_panel",
        "function.ncurses-top-panel.php",
        "可視パネルをスタックの最上部に移動する"
    ],
    "ncursestypeahead": [
        "ncurses_typeahead",
        "function.ncurses-typeahead.php",
        "typeahead 確認用に別のファイル記述子を指定する"
    ],
    "ncursesungetch": [
        "ncurses_ungetch",
        "function.ncurses-ungetch.php",
        "入力ストリームに 1 文字戻す"
    ],
    "ncursesungetmouse": [
        "ncurses_ungetmouse",
        "function.ncurses-ungetmouse.php",
        "マウスイベントをキューにプッシュする"
    ],
    "ncursesupdatepanels": [
        "ncurses_update_panels",
        "function.ncurses-update-panels.php",
        "仮想画面を再描画し、スタック内のパネルとの関係を反映させる"
    ],
    "ncursesusedefaultcolors": [
        "ncurses_use_default_colors",
        "function.ncurses-use-default-colors.php",
        "端末のデフォルト色をカラー ID -1 に割り付ける"
    ],
    "ncursesuseenv": [
        "ncurses_use_env",
        "function.ncurses-use-env.php",
        "端末の大きさに関する環境情報の使用を制御する"
    ],
    "ncursesuseextendednames": [
        "ncurses_use_extended_names",
        "function.ncurses-use-extended-names.php",
        "terminfo 記述において拡張名の使用を制御する"
    ],
    "ncursesvidattr": [
        "ncurses_vidattr",
        "function.ncurses-vidattr.php",
        "video attribute モードで、端末上に文字列を表示する"
    ],
    "ncursesvline": [
        "ncurses_vline",
        "function.ncurses-vline.php",
        "現在位置に最大 n 文字の属性付きの文字を用いて垂直線を描画する"
    ],
    "ncurseswaddch": [
        "ncurses_waddch",
        "function.ncurses-waddch.php",
        "ウィンドウ内の現在位置に文字を追加し、カーソルを進める"
    ],
    "ncurseswaddstr": [
        "ncurses_waddstr",
        "function.ncurses-waddstr.php",
        "ウィンドウ内の現在位置にテキストを出力する"
    ],
    "ncurseswattroff": [
        "ncurses_wattroff",
        "function.ncurses-wattroff.php",
        "ウィンドウの属性をオフにする"
    ],
    "ncurseswattron": [
        "ncurses_wattron",
        "function.ncurses-wattron.php",
        "ウィンドウの属性をオンにする"
    ],
    "ncurseswattrset": [
        "ncurses_wattrset",
        "function.ncurses-wattrset.php",
        "ウィンドウの属性を設定する"
    ],
    "ncurseswborder": [
        "ncurses_wborder",
        "function.ncurses-wborder.php",
        "属性文字を使用してウィンドウの周囲に線を描画する"
    ],
    "ncurseswclear": [
        "ncurses_wclear",
        "function.ncurses-wclear.php",
        "ウィンドウをクリアする"
    ],
    "ncurseswcolorset": [
        "ncurses_wcolor_set",
        "function.ncurses-wcolor-set.php",
        "ウィンドウの色の組み合わせを設定する"
    ],
    "ncurseswerase": [
        "ncurses_werase",
        "function.ncurses-werase.php",
        "ウィンドウを消去する"
    ],
    "ncurseswgetch": [
        "ncurses_wgetch",
        "function.ncurses-wgetch.php",
        "キーボート (ウィンドウ) から文字を読み込む"
    ],
    "ncurseswmousetrafo": [
        "ncurses_wmouse_trafo",
        "function.ncurses-wmouse-trafo.php",
        "ウィンドウ/標準画面の座標系を変換する"
    ],
    "ncurseswmove": [
        "ncurses_wmove",
        "function.ncurses-wmove.php",
        "ウィンドウの出力位置を移動する"
    ],
    "ncurseswnoutrefresh": [
        "ncurses_wnoutrefresh",
        "function.ncurses-wnoutrefresh.php",
        "ウィンドウを仮想画面にコピーする"
    ],
    "ncurseswrefresh": [
        "ncurses_wrefresh",
        "function.ncurses-wrefresh.php",
        "端末画面のウインドウをリフレッシュする"
    ],
    "ncurseswstandend": [
        "ncurses_wstandend",
        "function.ncurses-wstandend.php",
        "ウィンドウの standout モードを終了する"
    ],
    "ncurseswstandout": [
        "ncurses_wstandout",
        "function.ncurses-wstandout.php",
        "ウィンドウの standout モードに入る"
    ],
    "next": [
        "next",
        "function.next.php",
        "配列の内部ポインタを進める"
    ],
    "ngettext": [
        "ngettext",
        "function.ngettext.php",
        "gettext の複数形版"
    ],
    "nl2br": [
        "nl2br",
        "function.nl2br.php",
        "改行文字の前に HTML の改行タグを挿入する"
    ],
    "nllanginfo": [
        "nl_langinfo",
        "function.nl-langinfo.php",
        "言語およびロケール情報を検索する"
    ],
    "NoRewindIteratorcurrent": [
        "NoRewindIterator::current",
        "norewinditerator.current.php",
        "現在の値を取得する"
    ],
    "NoRewindIteratorgetInnerIterator": [
        "NoRewindIterator::getInnerIterator",
        "norewinditerator.getinneriterator.php",
        "内部イテレータを取得する"
    ],
    "NoRewindIteratorkey": [
        "NoRewindIterator::key",
        "norewinditerator.key.php",
        "現在のキーを取得する"
    ],
    "NoRewindIteratornext": [
        "NoRewindIterator::next",
        "norewinditerator.next.php",
        "次の要素に移動する"
    ],
    "NoRewindIteratorrewind": [
        "NoRewindIterator::rewind",
        "norewinditerator.rewind.php",
        "内部イテレータの巻き戻し操作を阻止する"
    ],
    "NoRewindIteratorvalid": [
        "NoRewindIterator::valid",
        "norewinditerator.valid.php",
        "イテレータの有効性を検証する"
    ],
    "NoRewindIteratorconstruct": [
        "NoRewindIterator::__construct",
        "norewinditerator.construct.php",
        "NoRewindIterator を作成する"
    ],
    "NormalizergetRawDecomposition": [
        "Normalizer::getRawDecomposition",
        "normalizer.getrawdecomposition.php",
        "Gets the Decomposition_Mapping property for the given UTF-8 encoded code point"
    ],
    "NormalizerisNormalized": [
        "Normalizer::isNormalized",
        "normalizer.isnormalized.php",
        "渡された文字列が、指定した正規化を適用済みかどうかを調べる"
    ],
    "Normalizernormalize": [
        "Normalizer::normalize",
        "normalizer.normalize.php",
        "渡された入力を正規化し、正規化後の文字列を返す"
    ],
    "nsapirequestheaders": [
        "nsapi_request_headers",
        "function.nsapi-request-headers.php",
        "HTTP リクエストヘッダを全て取得する"
    ],
    "nsapiresponseheaders": [
        "nsapi_response_headers",
        "function.nsapi-response-headers.php",
        "すべての HTTP レスポンスヘッダを取得する"
    ],
    "nsapivirtual": [
        "nsapi_virtual",
        "function.nsapi-virtual.php",
        "NSAPI サブリクエストを発行する"
    ],
    "NumberFormattercreate": [
        "NumberFormatter::create",
        "numberformatter.create.php",
        "数値フォーマッタを作成する"
    ],
    "NumberFormatterformat": [
        "NumberFormatter::format",
        "numberformatter.format.php",
        "数値をフォーマットする"
    ],
    "NumberFormatterformatCurrency": [
        "NumberFormatter::formatCurrency",
        "numberformatter.formatcurrency.php",
        "通貨の値をフォーマットする"
    ],
    "NumberFormattergetAttribute": [
        "NumberFormatter::getAttribute",
        "numberformatter.getattribute.php",
        "属性を取得する"
    ],
    "NumberFormattergetErrorCode": [
        "NumberFormatter::getErrorCode",
        "numberformatter.geterrorcode.php",
        "フォーマッタの直近のエラーコードを取得する"
    ],
    "NumberFormattergetErrorMessage": [
        "NumberFormatter::getErrorMessage",
        "numberformatter.geterrormessage.php",
        "フォーマッタの直近のエラーメッセージを取得する"
    ],
    "NumberFormattergetLocale": [
        "NumberFormatter::getLocale",
        "numberformatter.getlocale.php",
        "フォーマッタのロケールを取得する"
    ],
    "NumberFormattergetPattern": [
        "NumberFormatter::getPattern",
        "numberformatter.getpattern.php",
        "フォーマッタのパターンを取得する"
    ],
    "NumberFormattergetSymbol": [
        "NumberFormatter::getSymbol",
        "numberformatter.getsymbol.php",
        "記号を取得する"
    ],
    "NumberFormattergetTextAttribute": [
        "NumberFormatter::getTextAttribute",
        "numberformatter.gettextattribute.php",
        "テキストの属性を取得する"
    ],
    "NumberFormatterparse": [
        "NumberFormatter::parse",
        "numberformatter.parse.php",
        "数値をパースする"
    ],
    "NumberFormatterparseCurrency": [
        "NumberFormatter::parseCurrency",
        "numberformatter.parsecurrency.php",
        "通貨をパースする"
    ],
    "NumberFormattersetAttribute": [
        "NumberFormatter::setAttribute",
        "numberformatter.setattribute.php",
        "属性を設定する"
    ],
    "NumberFormattersetPattern": [
        "NumberFormatter::setPattern",
        "numberformatter.setpattern.php",
        "フォーマッタのパターンを設定する"
    ],
    "NumberFormattersetSymbol": [
        "NumberFormatter::setSymbol",
        "numberformatter.setsymbol.php",
        "記号の値を設定する"
    ],
    "NumberFormattersetTextAttribute": [
        "NumberFormatter::setTextAttribute",
        "numberformatter.settextattribute.php",
        "テキスト属性を設定する"
    ],
    "numberformat": [
        "number_format",
        "function.number-format.php",
        "数字を千位毎にグループ化してフォーマットする"
    ],
    "OAuthdisableDebug": [
        "OAuth::disableDebug",
        "oauth.disabledebug.php",
        "デバッグを無効にする"
    ],
    "OAuthdisableRedirects": [
        "OAuth::disableRedirects",
        "oauth.disableredirects.php",
        "リダイレクトを無効にする"
    ],
    "OAuthdisableSSLChecks": [
        "OAuth::disableSSLChecks",
        "oauth.disablesslchecks.php",
        "SSL チェックを無効にする"
    ],
    "OAuthenableDebug": [
        "OAuth::enableDebug",
        "oauth.enabledebug.php",
        "デバッグを有効にする"
    ],
    "OAuthenableRedirects": [
        "OAuth::enableRedirects",
        "oauth.enableredirects.php",
        "リダイレクトを有効にする"
    ],
    "OAuthenableSSLChecks": [
        "OAuth::enableSSLChecks",
        "oauth.enablesslchecks.php",
        "SSL チェックを有効にする"
    ],
    "OAuthfetch": [
        "OAuth::fetch",
        "oauth.fetch.php",
        "OAuth で保護されたリソースを取得する"
    ],
    "OAuthgenerateSignature": [
        "OAuth::generateSignature",
        "oauth.generatesignature.php",
        "シグネチャを生成する"
    ],
    "OAuthgetAccessToken": [
        "OAuth::getAccessToken",
        "oauth.getaccesstoken.php",
        "アクセストークンを取得する"
    ],
    "OAuthgetCAPath": [
        "OAuth::getCAPath",
        "oauth.getcapath.php",
        "CA 情報を取得する"
    ],
    "OAuthgetLastResponse": [
        "OAuth::getLastResponse",
        "oauth.getlastresponse.php",
        "直近のレスポンスを取得する"
    ],
    "OAuthgetLastResponseHeaders": [
        "OAuth::getLastResponseHeaders",
        "oauth.getlastresponseheaders.php",
        "最後のレスポンスのヘッダを取得する"
    ],
    "OAuthgetLastResponseInfo": [
        "OAuth::getLastResponseInfo",
        "oauth.getlastresponseinfo.php",
        "直近のレスポンスの HTTP 情報を取得する"
    ],
    "OAuthgetRequestHeader": [
        "OAuth::getRequestHeader",
        "oauth.getrequestheader.php",
        "OAuth ヘッダ文字列シグネチャを生成する"
    ],
    "OAuthgetRequestToken": [
        "OAuth::getRequestToken",
        "oauth.getrequesttoken.php",
        "リクエストトークンを取得する"
    ],
    "OAuthsetAuthType": [
        "OAuth::setAuthType",
        "oauth.setauthtype.php",
        "認証方式を設定する"
    ],
    "OAuthsetCAPath": [
        "OAuth::setCAPath",
        "oauth.setcapath.php",
        "CA パスおよび情報を設定する"
    ],
    "OAuthsetNonce": [
        "OAuth::setNonce",
        "oauth.setnonce.php",
        "続くリクエスト用のノンスを設定する"
    ],
    "OAuthsetRequestEngine": [
        "OAuth::setRequestEngine",
        "oauth.setrequestengine.php",
        "setRequestEngine"
    ],
    "OAuthsetRSACertificate": [
        "OAuth::setRSACertificate",
        "oauth.setrsacertificate.php",
        "RSA 証明書を設定する"
    ],
    "OAuthsetSSLChecks": [
        "OAuth::setSSLChecks",
        "oauth.setsslchecks.php",
        "リクエストに固有の SSL チェックを調整する"
    ],
    "OAuthsetTimestamp": [
        "OAuth::setTimestamp",
        "oauth.settimestamp.php",
        "タイムスタンプを設定する"
    ],
    "OAuthsetToken": [
        "OAuth::setToken",
        "oauth.settoken.php",
        "トークンと secret を設定する"
    ],
    "OAuthsetVersion": [
        "OAuth::setVersion",
        "oauth.setversion.php",
        "OAuth のバージョンを設定する"
    ],
    "OAuthconstruct": [
        "OAuth::__construct",
        "oauth.construct.php",
        "新しい OAuth オブジェクトを作成する"
    ],
    "OAuthdestruct": [
        "OAuth::__destruct",
        "oauth.destruct.php",
        "デストラクタ"
    ],
    "OAuthProvideraddRequiredParameter": [
        "OAuthProvider::addRequiredParameter",
        "oauthprovider.addrequiredparameter.php",
        "必須パラメータを追加する"
    ],
    "OAuthProvidercallconsumerHandler": [
        "OAuthProvider::callconsumerHandler",
        "oauthprovider.callconsumerhandler.php",
        "consumerNonceHandler コールバックをコールする"
    ],
    "OAuthProvidercallTimestampNonceHandler": [
        "OAuthProvider::callTimestampNonceHandler",
        "oauthprovider.calltimestampnoncehandler.php",
        "timestampNonceHandler コールバックをコールする"
    ],
    "OAuthProvidercalltokenHandler": [
        "OAuthProvider::calltokenHandler",
        "oauthprovider.calltokenhandler.php",
        "tokenNonceHandler コールバックをコールする"
    ],
    "OAuthProvidercheckOAuthRequest": [
        "OAuthProvider::checkOAuthRequest",
        "oauthprovider.checkoauthrequest.php",
        "oauth リクエストをチェックする"
    ],
    "OAuthProviderconsumerHandler": [
        "OAuthProvider::consumerHandler",
        "oauthprovider.consumerhandler.php",
        "consumerHandler コールバックを設定する"
    ],
    "OAuthProvidergenerateToken": [
        "OAuthProvider::generateToken",
        "oauthprovider.generatetoken.php",
        "ランダムなトークンを生成する"
    ],
    "OAuthProvideris2LeggedEndpoint": [
        "OAuthProvider::is2LeggedEndpoint",
        "oauthprovider.is2leggedendpoint.php",
        "is2LeggedEndpoint"
    ],
    "OAuthProviderisRequestTokenEndpoint": [
        "OAuthProvider::isRequestTokenEndpoint",
        "oauthprovider.isrequesttokenendpoint.php",
        "isRequestTokenEndpoint を設定する"
    ],
    "OAuthProviderremoveRequiredParameter": [
        "OAuthProvider::removeRequiredParameter",
        "oauthprovider.removerequiredparameter.php",
        "必須パラメータを削除する"
    ],
    "OAuthProviderreportProblem": [
        "OAuthProvider::reportProblem",
        "oauthprovider.reportproblem.php",
        "問題を報告する"
    ],
    "OAuthProvidersetParam": [
        "OAuthProvider::setParam",
        "oauthprovider.setparam.php",
        "パラメータを設定する"
    ],
    "OAuthProvidersetRequestTokenPath": [
        "OAuthProvider::setRequestTokenPath",
        "oauthprovider.setrequesttokenpath.php",
        "リクエストトークンのパスを設定する"
    ],
    "OAuthProvidertimestampNonceHandler": [
        "OAuthProvider::timestampNonceHandler",
        "oauthprovider.timestampnoncehandler.php",
        "timestampNonceHandler コールバックを設定する"
    ],
    "OAuthProvidertokenHandler": [
        "OAuthProvider::tokenHandler",
        "oauthprovider.tokenhandler.php",
        "tokenHandler コールバックを設定する"
    ],
    "OAuthProviderconstruct": [
        "OAuthProvider::__construct",
        "oauthprovider.construct.php",
        "新しい OAuthProvider オブジェクトを作る"
    ],
    "oauthgetsbs": [
        "oauth_get_sbs",
        "function.oauth-get-sbs.php",
        "SBSを生成する"
    ],
    "oauthurlencode": [
        "oauth_urlencode",
        "function.oauth-urlencode.php",
        "URI を RFC 3686 形式でエンコードする"
    ],
    "obclean": [
        "ob_clean",
        "function.ob-clean.php",
        "出力バッファをクリア(消去)する"
    ],
    "obendclean": [
        "ob_end_clean",
        "function.ob-end-clean.php",
        "出力用バッファをクリア(消去)し、出力のバッファリングをオフにする"
    ],
    "obendflush": [
        "ob_end_flush",
        "function.ob-end-flush.php",
        "出力用バッファをフラッシュ(送信)し、出力のバッファリングをオフにする"
    ],
    "obflush": [
        "ob_flush",
        "function.ob-flush.php",
        "出力バッファをフラッシュ(送信)する"
    ],
    "obgetclean": [
        "ob_get_clean",
        "function.ob-get-clean.php",
        "現在のバッファの内容を取得し、出力バッファを削除する"
    ],
    "obgetcontents": [
        "ob_get_contents",
        "function.ob-get-contents.php",
        "出力用バッファの内容を返す"
    ],
    "obgetflush": [
        "ob_get_flush",
        "function.ob-get-flush.php",
        "出力バッファをフラッシュし、その内容を文字列として返した後で出力バッファリングを終了する"
    ],
    "obgetlength": [
        "ob_get_length",
        "function.ob-get-length.php",
        "出力バッファの長さを返す"
    ],
    "obgetlevel": [
        "ob_get_level",
        "function.ob-get-level.php",
        "出力バッファリング機構のネストレベルを返す"
    ],
    "obgetstatus": [
        "ob_get_status",
        "function.ob-get-status.php",
        "出力バッファのステータスを取得する"
    ],
    "obgzhandler": [
        "ob_gzhandler",
        "function.ob-gzhandler.php",
        "出力バッファを gzip 圧縮するための ob_start コールバック関数"
    ],
    "obiconvhandler": [
        "ob_iconv_handler",
        "function.ob-iconv-handler.php",
        "出力バッファハンドラとして文字エンコーディングを変換する"
    ],
    "obimplicitflush": [
        "ob_implicit_flush",
        "function.ob-implicit-flush.php",
        "自動フラッシュをオンまたはオフにする"
    ],
    "oblisthandlers": [
        "ob_list_handlers",
        "function.ob-list-handlers.php",
        "使用中の出力ハンドラの一覧を取得する"
    ],
    "obstart": [
        "ob_start",
        "function.ob-start.php",
        "出力のバッファリングを有効にする"
    ],
    "obtidyhandler": [
        "ob_tidyhandler",
        "function.ob-tidyhandler.php",
        "バッファを修正するための ob_start コールバック関数"
    ],
    "ocibindbyname": [
        "oci_bind_by_name",
        "function.oci-bind-by-name.php",
        "Oracle プレースホルダに PHP 変数をバインドする"
    ],
    "ocicancel": [
        "oci_cancel",
        "function.oci-cancel.php",
        "カーソルからの読み込みをキャンセルする"
    ],
    "ocicloselob": [
        "ocicloselob",
        "function.ocicloselob.php",
        "OCI-Lob::close のエイリアス"
    ],
    "ocicollappend": [
        "ocicollappend",
        "function.ocicollappend.php",
        "のエイリアス OCICollection::append"
    ],
    "ocicollassign": [
        "ocicollassign",
        "function.ocicollassign.php",
        "のエイリアス OCICollection::assign"
    ],
    "ocicollassignelem": [
        "ocicollassignelem",
        "function.ocicollassignelem.php",
        "のエイリアス OCICollection::assignElem"
    ],
    "OCICollectionappend": [
        "OCICollection::append",
        "oci-collection.append.php",
        "コレクションに要素を追加する"
    ],
    "OCICollectionassign": [
        "OCICollection::assign",
        "oci-collection.assign.php",
        "コレクションに他の存在するコレクションから値を割り当てる"
    ],
    "OCICollectionassignElem": [
        "OCICollection::assignElem",
        "oci-collection.assignelem.php",
        "コレクションの要素に値を割り当てる"
    ],
    "OCICollectionfree": [
        "OCICollection::free",
        "oci-collection.free.php",
        "コレクションオブジェクトに関連付けられたリソースを解放する"
    ],
    "OCICollectiongetElem": [
        "OCICollection::getElem",
        "oci-collection.getelem.php",
        "要素の値を返す"
    ],
    "OCICollectionmax": [
        "OCICollection::max",
        "oci-collection.max.php",
        "コレクション内の要素の最大数を取得する"
    ],
    "OCICollectionsize": [
        "OCICollection::size",
        "oci-collection.size.php",
        "コレクションのサイズを返す"
    ],
    "OCICollectiontrim": [
        "OCICollection::trim",
        "oci-collection.trim.php",
        "コレクションの最後から要素を切り取る"
    ],
    "ocicollgetelem": [
        "ocicollgetelem",
        "function.ocicollgetelem.php",
        "のエイリアス OCICollection::getElem"
    ],
    "ocicollmax": [
        "ocicollmax",
        "function.ocicollmax.php",
        "のエイリアス OCICollection::max"
    ],
    "ocicollsize": [
        "ocicollsize",
        "function.ocicollsize.php",
        "のエイリアス OCICollection::size"
    ],
    "ocicolltrim": [
        "ocicolltrim",
        "function.ocicolltrim.php",
        "のエイリアス OCICollection::trim"
    ],
    "ocicolumnisnull": [
        "ocicolumnisnull",
        "function.ocicolumnisnull.php",
        "oci_field_is_null のエイリアス"
    ],
    "ocicolumnname": [
        "ocicolumnname",
        "function.ocicolumnname.php",
        "oci_field_name のエイリアス"
    ],
    "ocicolumnprecision": [
        "ocicolumnprecision",
        "function.ocicolumnprecision.php",
        "oci_field_precision のエイリアス"
    ],
    "ocicolumnscale": [
        "ocicolumnscale",
        "function.ocicolumnscale.php",
        "oci_field_scale のエイリアス"
    ],
    "ocicolumnsize": [
        "ocicolumnsize",
        "function.ocicolumnsize.php",
        "oci_field_size のエイリアス"
    ],
    "ocicolumntype": [
        "ocicolumntype",
        "function.ocicolumntype.php",
        "oci_field_type のエイリアス"
    ],
    "ocicolumntyperaw": [
        "ocicolumntyperaw",
        "function.ocicolumntyperaw.php",
        "oci_field_type_raw のエイリアス"
    ],
    "ocicommit": [
        "oci_commit",
        "function.oci-commit.php",
        "未解決のトランザクションをコミットする"
    ],
    "ocidefinebyname": [
        "oci_define_by_name",
        "function.oci-define-by-name.php",
        "PHP の変数を、クエリで取得するカラムに関連づける"
    ],
    "ocierror": [
        "oci_error",
        "function.oci-error.php",
        "最後に見つかったエラーを返す"
    ],
    "ociexecute": [
        "oci_execute",
        "function.oci-execute.php",
        "文を実行する"
    ],
    "ocifetch": [
        "oci_fetch",
        "function.oci-fetch.php",
        "クエリの次の行を内部バッファに取得する"
    ],
    "ocifetchstatement": [
        "ocifetchstatement",
        "function.ocifetchstatement.php",
        "oci_fetch_all のエイリアス"
    ],
    "ocifreecollection": [
        "ocifreecollection",
        "function.ocifreecollection.php",
        "のエイリアス OCICollection::free"
    ],
    "ocifreecursor": [
        "ocifreecursor",
        "function.ocifreecursor.php",
        "oci_free_statement のエイリアス"
    ],
    "ocifreedesc": [
        "ocifreedesc",
        "function.ocifreedesc.php",
        "OCI-Lob::free のエイリアス"
    ],
    "ocifreestatement": [
        "oci_free_statement",
        "function.oci-free-statement.php",
        "文やカーソルに関連付けられた全てのリソースを解放する"
    ],
    "ociinternaldebug": [
        "oci_internal_debug",
        "function.oci-internal-debug.php",
        "内部的なデバッグ出力を有効/無効にする"
    ],
    "ociloadlob": [
        "ociloadlob",
        "function.ociloadlob.php",
        "OCI-Lob::load のエイリアス"
    ],
    "OCILobappend": [
        "OCILob::append",
        "oci-lob.append.php",
        "ラージオブジェクトのデータを他のラージオブジェクトに追加する"
    ],
    "OCILobclose": [
        "OCILob::close",
        "oci-lob.close.php",
        "LOB ディスクリプタを閉じる"
    ],
    "OCILobeof": [
        "OCILob::eof",
        "oci-lob.eof.php",
        "ラージオブジェクトのディスクリプタが EOF かどうかを調べる"
    ],
    "OCILoberase": [
        "OCILob::erase",
        "oci-lob.erase.php",
        "内部 LOB データの特定の位置を消去する"
    ],
    "OCILobexport": [
        "OCILob::export",
        "oci-lob.export.php",
        "LOB の内容をファイルに出力する"
    ],
    "OCILobflush": [
        "OCILob::flush",
        "oci-lob.flush.php",
        "LOB のバッファをサーバーにフラッシュする、あるいは書き込む"
    ],
    "OCILobfree": [
        "OCILob::free",
        "oci-lob.free.php",
        "LOB ディスクリプタに関連付けられたりソースを解放する"
    ],
    "OCILobgetBuffering": [
        "OCILob::getBuffering",
        "oci-lob.getbuffering.php",
        "ラージオブジェクトに対する現在のバッファリングの状態を返す"
    ],
    "OCILobimport": [
        "OCILob::import",
        "oci-lob.import.php",
        "ファイルデータを LOB にインポートする"
    ],
    "OCILobload": [
        "OCILob::load",
        "oci-lob.load.php",
        "ラージオブジェクトの内容を返す"
    ],
    "OCILobread": [
        "OCILob::read",
        "oci-lob.read.php",
        "ラージオブジェクトの一部を読み込む"
    ],
    "OCILobrewind": [
        "OCILob::rewind",
        "oci-lob.rewind.php",
        "内部ポインタをラージオブジェクトの先頭に移動する"
    ],
    "OCILobsave": [
        "OCILob::save",
        "oci-lob.save.php",
        "データをラージオブジェクトに保存する"
    ],
    "OCILobsaveFile": [
        "OCILob::saveFile",
        "oci-lob.savefile.php",
        "のエイリアス OCILob::import"
    ],
    "OCILobseek": [
        "OCILob::seek",
        "oci-lob.seek.php",
        "ラージオブジェクトの内部ポインタをセットする"
    ],
    "OCILobsetBuffering": [
        "OCILob::setBuffering",
        "oci-lob.setbuffering.php",
        "現在のラージオブジェクト用のバッファリング状態を変更する"
    ],
    "OCILobsize": [
        "OCILob::size",
        "oci-lob.size.php",
        "ラージオブジェクトのサイズを返す"
    ],
    "OCILobtell": [
        "OCILob::tell",
        "oci-lob.tell.php",
        "ラージオブジェクトの内部ポインタの現在位置を返す"
    ],
    "OCILobtruncate": [
        "OCILob::truncate",
        "oci-lob.truncate.php",
        "ラージオブジェクトを切りつめる"
    ],
    "OCILobwrite": [
        "OCILob::write",
        "oci-lob.write.php",
        "データをラージオブジェクトに書き込む"
    ],
    "OCILobwriteTemporary": [
        "OCILob::writeTemporary",
        "oci-lob.writetemporary.php",
        "一時的なラージオブジェクトを書き込む"
    ],
    "OCILobwriteToFile": [
        "OCILob::writeToFile",
        "oci-lob.writetofile.php",
        "のエイリアス OCILob::export"
    ],
    "ocilogoff": [
        "ocilogoff",
        "function.ocilogoff.php",
        "oci_close のエイリアス"
    ],
    "ocilogon": [
        "ocilogon",
        "function.ocilogon.php",
        "oci_connect のエイリアス"
    ],
    "ocinewcollection": [
        "oci_new_collection",
        "function.oci-new-collection.php",
        "新しいコレクションオブジェクトを割り当てる"
    ],
    "ocinewcursor": [
        "oci_new_cursor",
        "function.oci-new-cursor.php",
        "新規カーソル (ステートメントハンドル) を割り当て、それを返す"
    ],
    "ocinewdescriptor": [
        "oci_new_descriptor",
        "function.oci-new-descriptor.php",
        "空の新規 LOB あるいは FILE ディスクリプタを初期化する"
    ],
    "ocinlogon": [
        "ocinlogon",
        "function.ocinlogon.php",
        "oci_new_connect のエイリアス"
    ],
    "ocinumcols": [
        "ocinumcols",
        "function.ocinumcols.php",
        "oci_num_fields のエイリアス"
    ],
    "ociparse": [
        "oci_parse",
        "function.oci-parse.php",
        "実行のために Oracle の文をパースする"
    ],
    "ociplogon": [
        "ociplogon",
        "function.ociplogon.php",
        "oci_pconnect のエイリアス"
    ],
    "ociresult": [
        "oci_result",
        "function.oci-result.php",
        "フェッチした行からフィールドの値を取得する"
    ],
    "ocirollback": [
        "oci_rollback",
        "function.oci-rollback.php",
        "未解決のデータベーストランザクションをロールバックする"
    ],
    "ocirowcount": [
        "ocirowcount",
        "function.ocirowcount.php",
        "oci_num_rows のエイリアス"
    ],
    "ocisavelob": [
        "ocisavelob",
        "function.ocisavelob.php",
        "OCI-Lob::save のエイリアス"
    ],
    "ocisavelobfile": [
        "ocisavelobfile",
        "function.ocisavelobfile.php",
        "OCI-Lob::import のエイリアス"
    ],
    "ociserverversion": [
        "oci_server_version",
        "function.oci-server-version.php",
        "Oracle データベースのバージョンを返す"
    ],
    "ocisetprefetch": [
        "oci_set_prefetch",
        "function.oci-set-prefetch.php",
        "クエリがプリフェッチする行数を設定する"
    ],
    "ocistatementtype": [
        "oci_statement_type",
        "function.oci-statement-type.php",
        "ステートメントの種類を返す"
    ],
    "ociwritelobtofile": [
        "ociwritelobtofile",
        "function.ociwritelobtofile.php",
        "OCI-Lob::export のエイリアス"
    ],
    "ociwritetemporarylob": [
        "ociwritetemporarylob",
        "function.ociwritetemporarylob.php",
        "OCI-Lob::writeTemporary のエイリアス"
    ],
    "ocibindarraybyname": [
        "oci_bind_array_by_name",
        "function.oci-bind-array-by-name.php",
        "PHP の配列を Oracle PL/SQL の配列に名前でバインドする"
    ],
    "ociclientversion": [
        "oci_client_version",
        "function.oci-client-version.php",
        "Oracle クライアント・ライブラリのバージョンを返す"
    ],
    "ociclose": [
        "oci_close",
        "function.oci-close.php",
        "Oracleとの接続を閉じる"
    ],
    "ociconnect": [
        "oci_connect",
        "function.oci-connect.php",
        "Oracle データベースに接続する"
    ],
    "ocifetchall": [
        "oci_fetch_all",
        "function.oci-fetch-all.php",
        "クエリからの複数の行を二次元配列に取得する"
    ],
    "ocifetcharray": [
        "oci_fetch_array",
        "function.oci-fetch-array.php",
        "クエリの次の行を連想配列あるいは数値添字配列で返す"
    ],
    "ocifetchassoc": [
        "oci_fetch_assoc",
        "function.oci-fetch-assoc.php",
        "クエリの次の行を連想配列で返す"
    ],
    "ocifetchobject": [
        "oci_fetch_object",
        "function.oci-fetch-object.php",
        "クエリの次の行をオブジェクトとして返す"
    ],
    "ocifetchrow": [
        "oci_fetch_row",
        "function.oci-fetch-row.php",
        "クエリの次の行を配列で返す"
    ],
    "ocifieldisnull": [
        "oci_field_is_null",
        "function.oci-field-is-null.php",
        "フェッチしたフィールドが NULL であるかどうかを確認する"
    ],
    "ocifieldname": [
        "oci_field_name",
        "function.oci-field-name.php",
        "文からのフィールド名を返す"
    ],
    "ocifieldprecision": [
        "oci_field_precision",
        "function.oci-field-precision.php",
        "フィールドの精度を問い合わせる"
    ],
    "ocifieldscale": [
        "oci_field_scale",
        "function.oci-field-scale.php",
        "フィールドの桁数を問い合わせる"
    ],
    "ocifieldsize": [
        "oci_field_size",
        "function.oci-field-size.php",
        "フィールドサイズを返す"
    ],
    "ocifieldtype": [
        "oci_field_type",
        "function.oci-field-type.php",
        "フィールドのデータ型の名前を返す"
    ],
    "ocifieldtyperaw": [
        "oci_field_type_raw",
        "function.oci-field-type-raw.php",
        "Oracle におけるフィールドの型を問い合わせる"
    ],
    "ocifreedescriptor": [
        "oci_free_descriptor",
        "function.oci-free-descriptor.php",
        "ディスクリプタを解放する"
    ],
    "ocigetimplicitresultset": [
        "oci_get_implicit_resultset",
        "function.oci-get-implicit-resultset.php",
        "Oracle Database の暗黙の結果セットを持つ親ステートメント・リソースから次の子ステートメント・リソースを返す"
    ],
    "ocilobcopy": [
        "oci_lob_copy",
        "function.oci-lob-copy.php",
        "ラージオブジェクトをコピーする"
    ],
    "ocilobisequal": [
        "oci_lob_is_equal",
        "function.oci-lob-is-equal.php",
        "2 つの LOB/FILE ロケータの等価性を比較する"
    ],
    "ocinewconnect": [
        "oci_new_connect",
        "function.oci-new-connect.php",
        "一意な接続を使って Oracle サーバーへ接続する"
    ],
    "ocinumfields": [
        "oci_num_fields",
        "function.oci-num-fields.php",
        "ある文における結果のカラム数を返す"
    ],
    "ocinumrows": [
        "oci_num_rows",
        "function.oci-num-rows.php",
        "文の実行で作用された行数を取得する"
    ],
    "ocipasswordchange": [
        "oci_password_change",
        "function.oci-password-change.php",
        "Oracle ユーザーのパスワードを変更する"
    ],
    "ocipconnect": [
        "oci_pconnect",
        "function.oci-pconnect.php",
        "持続的接続を使用してOracle データベースに接続する"
    ],
    "ociregistertafcallback": [
        "oci_register_taf_callback",
        "function.oci-register-taf-callback.php",
        "Register a user-defined callback function for Oracle Database TAF"
    ],
    "ocisetaction": [
        "oci_set_action",
        "function.oci-set-action.php",
        "アクション名を設定します"
    ],
    "ocisetcalltimeout": [
        "oci_set_call_timeout",
        "function.oci-set-call-timout.php",
        "Sets a millisecond timeout for database calls"
    ],
    "ocisetclientidentifier": [
        "oci_set_client_identifier",
        "function.oci-set-client-identifier.php",
        "クライアント識別子を設定します"
    ],
    "ocisetclientinfo": [
        "oci_set_client_info",
        "function.oci-set-client-info.php",
        "クライアント情報を設定する"
    ],
    "ocisetdboperation": [
        "oci_set_db_operation",
        "function.oci-set-db-operation.php",
        "Sets the database operation"
    ],
    "ocisetedition": [
        "oci_set_edition",
        "function.oci-set-edition.php",
        "データベース・エディション を設定します"
    ],
    "ocisetmodulename": [
        "oci_set_module_name",
        "function.oci-set-module-name.php",
        "モジュール名を設定します"
    ],
    "ociunregistertafcallback": [
        "oci_unregister_taf_callback",
        "function.oci-unregister-taf-callback.php",
        "Unregister a user-defined callback function for Oracle Database TAF"
    ],
    "octdec": [
        "octdec",
        "function.octdec.php",
        "8 進数を 10 進数に変換する"
    ],
    "odbcautocommit": [
        "odbc_autocommit",
        "function.odbc-autocommit.php",
        "自動コミットの動作をオンまたはオフにする"
    ],
    "odbcbinmode": [
        "odbc_binmode",
        "function.odbc-binmode.php",
        "バイナリカラムデータを処理する"
    ],
    "odbcclose": [
        "odbc_close",
        "function.odbc-close.php",
        "ODBC 接続を閉じる"
    ],
    "odbccloseall": [
        "odbc_close_all",
        "function.odbc-close-all.php",
        "全ての ODBC 接続を閉じる"
    ],
    "odbccolumnprivileges": [
        "odbc_columnprivileges",
        "function.odbc-columnprivileges.php",
        "指定したテーブルに関するカラムおよび付随する権限のリストを取得する"
    ],
    "odbccolumns": [
        "odbc_columns",
        "function.odbc-columns.php",
        "指定したテーブルにあるカラム名のリストを取得する"
    ],
    "odbccommit": [
        "odbc_commit",
        "function.odbc-commit.php",
        "ODBC トランザクションをコミットする"
    ],
    "odbcconnect": [
        "odbc_connect",
        "function.odbc-connect.php",
        "データソースに接続する"
    ],
    "odbccursor": [
        "odbc_cursor",
        "function.odbc-cursor.php",
        "カーソル名を得る"
    ],
    "odbcdatasource": [
        "odbc_data_source",
        "function.odbc-data-source.php",
        "利用可能なDSNについての情報を返す"
    ],
    "odbcdo": [
        "odbc_do",
        "function.odbc-do.php",
        "odbc_exec のエイリアス"
    ],
    "odbcerror": [
        "odbc_error",
        "function.odbc-error.php",
        "直近のエラーコードを得る"
    ],
    "odbcerrormsg": [
        "odbc_errormsg",
        "function.odbc-errormsg.php",
        "直近のエラーメッセージを得る"
    ],
    "odbcexec": [
        "odbc_exec",
        "function.odbc-exec.php",
        "SQL文を直接実行する"
    ],
    "odbcexecute": [
        "odbc_execute",
        "function.odbc-execute.php",
        "プリペアドステートメントを実行する"
    ],
    "odbcfetcharray": [
        "odbc_fetch_array",
        "function.odbc-fetch-array.php",
        "連想配列として結果の行を取得する"
    ],
    "odbcfetchinto": [
        "odbc_fetch_into",
        "function.odbc-fetch-into.php",
        "一行ぶんの結果を配列に取り込む"
    ],
    "odbcfetchobject": [
        "odbc_fetch_object",
        "function.odbc-fetch-object.php",
        "オブジェクトとして結果の行を取得する"
    ],
    "odbcfetchrow": [
        "odbc_fetch_row",
        "function.odbc-fetch-row.php",
        "行を取り込む"
    ],
    "odbcfieldlen": [
        "odbc_field_len",
        "function.odbc-field-len.php",
        "フィールドの長さ (精度) を得る"
    ],
    "odbcfieldname": [
        "odbc_field_name",
        "function.odbc-field-name.php",
        "カラム名を得る"
    ],
    "odbcfieldnum": [
        "odbc_field_num",
        "function.odbc-field-num.php",
        "カラム番号を返す"
    ],
    "odbcfieldprecision": [
        "odbc_field_precision",
        "function.odbc-field-precision.php",
        "odbc_field_len のエイリアス"
    ],
    "odbcfieldscale": [
        "odbc_field_scale",
        "function.odbc-field-scale.php",
        "フィールドの精度を得る"
    ],
    "odbcfieldtype": [
        "odbc_field_type",
        "function.odbc-field-type.php",
        "フィールドのデータ型を返す"
    ],
    "odbcforeignkeys": [
        "odbc_foreignkeys",
        "function.odbc-foreignkeys.php",
        "外部キーのリストを取得する"
    ],
    "odbcfreeresult": [
        "odbc_free_result",
        "function.odbc-free-result.php",
        "結果を保持するリソースを開放する"
    ],
    "odbcgettypeinfo": [
        "odbc_gettypeinfo",
        "function.odbc-gettypeinfo.php",
        "データソースがサポートするデータ型についての情報を取得する"
    ],
    "odbclongreadlen": [
        "odbc_longreadlen",
        "function.odbc-longreadlen.php",
        "LONG カラムを処理する"
    ],
    "odbcnextresult": [
        "odbc_next_result",
        "function.odbc-next-result.php",
        "複数の結果が利用可能などうか確認する"
    ],
    "odbcnumfields": [
        "odbc_num_fields",
        "function.odbc-num-fields.php",
        "結果のカラム数を返す"
    ],
    "odbcnumrows": [
        "odbc_num_rows",
        "function.odbc-num-rows.php",
        "結果における行数を返す"
    ],
    "odbcpconnect": [
        "odbc_pconnect",
        "function.odbc-pconnect.php",
        "持続的なデータベース接続を開く"
    ],
    "odbcprepare": [
        "odbc_prepare",
        "function.odbc-prepare.php",
        "実行用に文を準備する"
    ],
    "odbcprimarykeys": [
        "odbc_primarykeys",
        "function.odbc-primarykeys.php",
        "テーブルの主キーを取得する"
    ],
    "odbcprocedurecolumns": [
        "odbc_procedurecolumns",
        "function.odbc-procedurecolumns.php",
        "プロシージャへのパラメータに関する情報を取得する"
    ],
    "odbcprocedures": [
        "odbc_procedures",
        "function.odbc-procedures.php",
        "指定したデータソースに保存されているプロシージャのリストを取得する"
    ],
    "odbcresult": [
        "odbc_result",
        "function.odbc-result.php",
        "結果データを得る"
    ],
    "odbcresultall": [
        "odbc_result_all",
        "function.odbc-result-all.php",
        "HTML テーブルとして結果を出力する"
    ],
    "odbcrollback": [
        "odbc_rollback",
        "function.odbc-rollback.php",
        "トランザクションをロールバックする"
    ],
    "odbcsetoption": [
        "odbc_setoption",
        "function.odbc-setoption.php",
        "ODBC の設定を変更する"
    ],
    "odbcspecialcolumns": [
        "odbc_specialcolumns",
        "function.odbc-specialcolumns.php",
        "特殊カラムを取得する"
    ],
    "odbcstatistics": [
        "odbc_statistics",
        "function.odbc-statistics.php",
        "テーブルに関する統計情報を取得する"
    ],
    "odbctableprivileges": [
        "odbc_tableprivileges",
        "function.odbc-tableprivileges.php",
        "各テーブルのリストおよび関連する権限のリストを取得する"
    ],
    "odbctables": [
        "odbc_tables",
        "function.odbc-tables.php",
        "指定したデータソースに保存されたテーブルの名前のリストを取得する"
    ],
    "ogg": [
        "ogg://",
        "wrappers.audio.php",
        "オーディオストリーム"
    ],
    "opcachecompilefile": [
        "opcache_compile_file",
        "function.opcache-compile-file.php",
        "PHP スクリプトを、実行せずにコンパイルしてキャッシュする"
    ],
    "opcachegetconfiguration": [
        "opcache_get_configuration",
        "function.opcache-get-configuration.php",
        "キャッシュについての構成情報を取得"
    ],
    "opcachegetstatus": [
        "opcache_get_status",
        "function.opcache-get-status.php",
        "キャッシュについてのステータス情報を取得"
    ],
    "opcacheinvalidate": [
        "opcache_invalidate",
        "function.opcache-invalidate.php",
        "キャッシュされたスクリプトを無効にする"
    ],
    "opcacheisscriptcached": [
        "opcache_is_script_cached",
        "function.opcache-is-script-cached.php",
        "スクリプトが OPCache にキャッシュされているかどうかを伝えます。"
    ],
    "opcachereset": [
        "opcache_reset",
        "function.opcache-reset.php",
        "opcode のキャッシュ内容をリセットする"
    ],
    "openalbuffercreate": [
        "openal_buffer_create",
        "function.openal-buffer-create.php",
        "OpenAL バッファを生成する"
    ],
    "openalbufferdata": [
        "openal_buffer_data",
        "function.openal-buffer-data.php",
        "バッファのデータを読み込む"
    ],
    "openalbufferdestroy": [
        "openal_buffer_destroy",
        "function.openal-buffer-destroy.php",
        "OpenAL バッファを削除する"
    ],
    "openalbufferget": [
        "openal_buffer_get",
        "function.openal-buffer-get.php",
        "OpenAL バッファのプロパティを取得する"
    ],
    "openalbufferloadwav": [
        "openal_buffer_loadwav",
        "function.openal-buffer-loadwav.php",
        ".wav ファイルをバッファに読み込む"
    ],
    "openalcontextcreate": [
        "openal_context_create",
        "function.openal-context-create.php",
        "音声処理コンテキストを作成する"
    ],
    "openalcontextcurrent": [
        "openal_context_current",
        "function.openal-context-current.php",
        "指定したコンテキストを現在のコンテキストにする"
    ],
    "openalcontextdestroy": [
        "openal_context_destroy",
        "function.openal-context-destroy.php",
        "コンテキストを削除する"
    ],
    "openalcontextprocess": [
        "openal_context_process",
        "function.openal-context-process.php",
        "指定したコンテキストを処理する"
    ],
    "openalcontextsuspend": [
        "openal_context_suspend",
        "function.openal-context-suspend.php",
        "指定したコンテキストをサスペンドする"
    ],
    "openaldeviceclose": [
        "openal_device_close",
        "function.openal-device-close.php",
        "OpenAL デバイスを閉じる"
    ],
    "openaldeviceopen": [
        "openal_device_open",
        "function.openal-device-open.php",
        "OpenAL 音声レイヤを初期化する"
    ],
    "openallistenerget": [
        "openal_listener_get",
        "function.openal-listener-get.php",
        "リスナーのプロパティを取得する"
    ],
    "openallistenerset": [
        "openal_listener_set",
        "function.openal-listener-set.php",
        "リスナーのプロパティを設定する"
    ],
    "openalsourcecreate": [
        "openal_source_create",
        "function.openal-source-create.php",
        "ソースリソースを生成する"
    ],
    "openalsourcedestroy": [
        "openal_source_destroy",
        "function.openal-source-destroy.php",
        "ソースリソースを削除する"
    ],
    "openalsourceget": [
        "openal_source_get",
        "function.openal-source-get.php",
        "OpenAL ソースのプロパティを取得する"
    ],
    "openalsourcepause": [
        "openal_source_pause",
        "function.openal-source-pause.php",
        "ソースを一時停止する"
    ],
    "openalsourceplay": [
        "openal_source_play",
        "function.openal-source-play.php",
        "ソースの再生を開始する"
    ],
    "openalsourcerewind": [
        "openal_source_rewind",
        "function.openal-source-rewind.php",
        "ソースを巻き戻す"
    ],
    "openalsourceset": [
        "openal_source_set",
        "function.openal-source-set.php",
        "ソースのプロパティを設定する"
    ],
    "openalsourcestop": [
        "openal_source_stop",
        "function.openal-source-stop.php",
        "ソースの再生を停止する"
    ],
    "openalstream": [
        "openal_stream",
        "function.openal-stream.php",
        "ソースのストリーム再生を開始する"
    ],
    "opendir": [
        "opendir",
        "function.opendir.php",
        "ディレクトリハンドルをオープンする"
    ],
    "openlog": [
        "openlog",
        "function.openlog.php",
        "システムのロガーへの接続をオープンする"
    ],
    "opensslcipherivlength": [
        "openssl_cipher_iv_length",
        "function.openssl-cipher-iv-length.php",
        "暗号 iv の長さを取得"
    ],
    "opensslcsrexport": [
        "openssl_csr_export",
        "function.openssl-csr-export.php",
        "CSR を文字列としてエクスポートする"
    ],
    "opensslcsrexporttofile": [
        "openssl_csr_export_to_file",
        "function.openssl-csr-export-to-file.php",
        "CSR をファイルにエクスポートする"
    ],
    "opensslcsrgetpublickey": [
        "openssl_csr_get_public_key",
        "function.openssl-csr-get-public-key.php",
        "CSR の公開鍵を返す"
    ],
    "opensslcsrgetsubject": [
        "openssl_csr_get_subject",
        "function.openssl-csr-get-subject.php",
        "CSR の subject を返す"
    ],
    "opensslcsrnew": [
        "openssl_csr_new",
        "function.openssl-csr-new.php",
        "CSR を作成する"
    ],
    "opensslcsrsign": [
        "openssl_csr_sign",
        "function.openssl-csr-sign.php",
        "CSRに他の証明書（あるいは自分自身）で署名して証明書を作成する"
    ],
    "openssldecrypt": [
        "openssl_decrypt",
        "function.openssl-decrypt.php",
        "データを復号する"
    ],
    "openssldhcomputekey": [
        "openssl_dh_compute_key",
        "function.openssl-dh-compute-key.php",
        "ローカルのDH秘密鍵とリモート側のDH公開鍵を使い、共有シークレットを計算する"
    ],
    "openssldigest": [
        "openssl_digest",
        "function.openssl-digest.php",
        "ダイジェストを計算する"
    ],
    "opensslencrypt": [
        "openssl_encrypt",
        "function.openssl-encrypt.php",
        "データを暗号化する"
    ],
    "opensslerrorstring": [
        "openssl_error_string",
        "function.openssl-error-string.php",
        "OpenSSL エラーメッセージを返す"
    ],
    "opensslfreekey": [
        "openssl_free_key",
        "function.openssl-free-key.php",
        "キーリソースを開放する"
    ],
    "opensslgetcertlocations": [
        "openssl_get_cert_locations",
        "function.openssl-get-cert-locations.php",
        "有効な証明書の格納場所を検索する"
    ],
    "opensslgetciphermethods": [
        "openssl_get_cipher_methods",
        "function.openssl-get-cipher-methods.php",
        "利用可能な暗号メソッドを取得"
    ],
    "opensslgetcurvenames": [
        "openssl_get_curve_names",
        "function.openssl-get-curve-names.php",
        "ECC で利用可能な楕円曲線の名前を取得する"
    ],
    "opensslgetmdmethods": [
        "openssl_get_md_methods",
        "function.openssl-get-md-methods.php",
        "利用可能なダイジェスト・メソッドを取得"
    ],
    "opensslgetprivatekey": [
        "openssl_get_privatekey",
        "function.openssl-get-privatekey.php",
        "openssl_pkey_get_private のエイリアス"
    ],
    "opensslgetpublickey": [
        "openssl_get_publickey",
        "function.openssl-get-publickey.php",
        "openssl_pkey_get_public のエイリアス"
    ],
    "opensslopen": [
        "openssl_open",
        "function.openssl-open.php",
        "シール(暗号化)されたデータをオープン(復号)する"
    ],
    "opensslpbkdf2": [
        "openssl_pbkdf2",
        "function.openssl-pbkdf2.php",
        "PKCS5 v2 の PBKDF2 文字列を生成する"
    ],
    "opensslpkcs7decrypt": [
        "openssl_pkcs7_decrypt",
        "function.openssl-pkcs7-decrypt.php",
        "S/MIME 暗号化されたメッセージを復号する"
    ],
    "opensslpkcs7encrypt": [
        "openssl_pkcs7_encrypt",
        "function.openssl-pkcs7-encrypt.php",
        "S/MIME メッセージを暗号化する"
    ],
    "opensslpkcs7read": [
        "openssl_pkcs7_read",
        "function.openssl-pkcs7-read.php",
        "PKCS7 ファイルを PEM証明書 の配列にエクスポートする"
    ],
    "opensslpkcs7sign": [
        "openssl_pkcs7_sign",
        "function.openssl-pkcs7-sign.php",
        "S/MIME メッセージに署名する"
    ],
    "opensslpkcs7verify": [
        "openssl_pkcs7_verify",
        "function.openssl-pkcs7-verify.php",
        "S/MIME で署名されたメッセージの署名を検証する"
    ],
    "opensslpkcs12export": [
        "openssl_pkcs12_export",
        "function.openssl-pkcs12-export.php",
        "PKCS#12 互換の証明書保存ファイルを変数にエクスポートする"
    ],
    "opensslpkcs12exporttofile": [
        "openssl_pkcs12_export_to_file",
        "function.openssl-pkcs12-export-to-file.php",
        "PKCS#12 互換の証明書保存ファイルをエクスポートする"
    ],
    "opensslpkcs12read": [
        "openssl_pkcs12_read",
        "function.openssl-pkcs12-read.php",
        "PKCS#12 認証ストアをパースして配列形式にする"
    ],
    "opensslpkeyexport": [
        "openssl_pkey_export",
        "function.openssl-pkey-export.php",
        "エクスポート可能な形式で、キーを文字列に取得する"
    ],
    "opensslpkeyexporttofile": [
        "openssl_pkey_export_to_file",
        "function.openssl-pkey-export-to-file.php",
        "エクスポート可能な形式で、キーをファイルに取得する"
    ],
    "opensslpkeyfree": [
        "openssl_pkey_free",
        "function.openssl-pkey-free.php",
        "秘密鍵を開放する"
    ],
    "opensslpkeygetdetails": [
        "openssl_pkey_get_details",
        "function.openssl-pkey-get-details.php",
        "キーの詳細の配列を返す"
    ],
    "opensslpkeygetprivate": [
        "openssl_pkey_get_private",
        "function.openssl-pkey-get-private.php",
        "秘密鍵を取得する"
    ],
    "opensslpkeygetpublic": [
        "openssl_pkey_get_public",
        "function.openssl-pkey-get-public.php",
        "証明書から公開鍵を抽出し、使用できるようにする"
    ],
    "opensslpkeynew": [
        "openssl_pkey_new",
        "function.openssl-pkey-new.php",
        "新規に秘密鍵を生成する"
    ],
    "opensslprivatedecrypt": [
        "openssl_private_decrypt",
        "function.openssl-private-decrypt.php",
        "秘密鍵でデータを復号する"
    ],
    "opensslprivateencrypt": [
        "openssl_private_encrypt",
        "function.openssl-private-encrypt.php",
        "秘密鍵でデータを暗号化する"
    ],
    "opensslpublicdecrypt": [
        "openssl_public_decrypt",
        "function.openssl-public-decrypt.php",
        "公開鍵でデータを復号する"
    ],
    "opensslpublicencrypt": [
        "openssl_public_encrypt",
        "function.openssl-public-encrypt.php",
        "公開鍵でデータを暗号化する"
    ],
    "opensslrandompseudobytes": [
        "openssl_random_pseudo_bytes",
        "function.openssl-random-pseudo-bytes.php",
        "疑似ランダムなバイト文字列を生成する"
    ],
    "opensslseal": [
        "openssl_seal",
        "function.openssl-seal.php",
        "データをシール(暗号化)する"
    ],
    "opensslsign": [
        "openssl_sign",
        "function.openssl-sign.php",
        "署名を生成する"
    ],
    "opensslspkiexport": [
        "openssl_spki_export",
        "function.openssl-spki-export.php",
        "署名済みの公開鍵とチャレンジから、有効なPEMフォーマットの公開鍵をエクスポートする"
    ],
    "opensslspkiexportchallenge": [
        "openssl_spki_export_challenge",
        "function.openssl-spki-export-challenge.php",
        "署名済みの公開鍵とチャレンジに関連するチャレンジをエクスポートする"
    ],
    "opensslspkinew": [
        "openssl_spki_new",
        "function.openssl-spki-new.php",
        "署名された公開鍵とチャレンジを新規に作成する"
    ],
    "opensslspkiverify": [
        "openssl_spki_verify",
        "function.openssl-spki-verify.php",
        "署名済みの公開鍵とチャレンジを検証する"
    ],
    "opensslverify": [
        "openssl_verify",
        "function.openssl-verify.php",
        "署名を検証する"
    ],
    "opensslx509checkpurpose": [
        "openssl_x509_checkpurpose",
        "function.openssl-x509-checkpurpose.php",
        "証明書が特定の目的に使用可能かどうか確認する"
    ],
    "opensslx509checkprivatekey": [
        "openssl_x509_check_private_key",
        "function.openssl-x509-check-private-key.php",
        "秘密鍵が証明書に対応するかを確認する"
    ],
    "opensslx509export": [
        "openssl_x509_export",
        "function.openssl-x509-export.php",
        "証明書を文字列としてエクスポートする"
    ],
    "opensslx509exporttofile": [
        "openssl_x509_export_to_file",
        "function.openssl-x509-export-to-file.php",
        "証明書をファイルにエクスポートする"
    ],
    "opensslx509fingerprint": [
        "openssl_x509_fingerprint",
        "function.openssl-x509-fingerprint.php",
        "与えられた X.509 証明書のフィンガープリントあるいはダイジェストを計算する"
    ],
    "opensslx509free": [
        "openssl_x509_free",
        "function.openssl-x509-free.php",
        "証明書リソースを開放する"
    ],
    "opensslx509parse": [
        "openssl_x509_parse",
        "function.openssl-x509-parse.php",
        "X509 証明書をパースし、配列として情報を返す"
    ],
    "opensslx509read": [
        "openssl_x509_read",
        "function.openssl-x509-read.php",
        "X.509 証明書をパースし、リソース ID を返す"
    ],
    "opensslx509verify": [
        "openssl_x509_verify",
        "function.openssl-x509-verify.php",
        "x509証明書のデジタル署名を公開鍵で検証する"
    ],
    "ord": [
        "ord",
        "function.ord.php",
        "文字列の先頭バイトを、0 から 255 までの値に変換する"
    ],
    "OuterIteratorgetInnerIterator": [
        "OuterIterator::getInnerIterator",
        "outeriterator.getinneriterator.php",
        "現在のエントリの内部イテレータを返す"
    ],
    "outputaddrewritevar": [
        "output_add_rewrite_var",
        "function.output-add-rewrite-var.php",
        "URL リライタの値を追加する"
    ],
    "outputresetrewritevars": [
        "output_reset_rewrite_vars",
        "function.output-reset-rewrite-vars.php",
        "URL リライタの値をリセットする"
    ],
    "pack": [
        "pack",
        "function.pack.php",
        "データをバイナリ文字列にパックする"
    ],
    "parallelbootstrap": [
        "parallel\\bootstrap",
        "parallel.bootstrap.php",
        "Bootstrapping"
    ],
    "parallelChannelclose": [
        "parallel\\Channel::close",
        "parallel-channel.close.php",
        "Closing"
    ],
    "parallelChannelmake": [
        "parallel\\Channel::make",
        "parallel-channel.make.php",
        "Access"
    ],
    "parallelChannelopen": [
        "parallel\\Channel::open",
        "parallel-channel.open.php",
        "Access"
    ],
    "parallelChannelrecv": [
        "parallel\\Channel::recv",
        "parallel-channel.recv.php",
        "Sharing"
    ],
    "parallelChannelsend": [
        "parallel\\Channel::send",
        "parallel-channel.send.php",
        "Sharing"
    ],
    "parallelChannelconstruct": [
        "parallel\\Channel::__construct",
        "parallel-channel.construct.php",
        "Channel Construction"
    ],
    "parallelEventsaddChannel": [
        "parallel\\Events::addChannel",
        "parallel-events.addchannel.php",
        "Targets"
    ],
    "parallelEventsaddFuture": [
        "parallel\\Events::addFuture",
        "parallel-events.addfuture.php",
        "Targets"
    ],
    "parallelEventspoll": [
        "parallel\\Events::poll",
        "parallel-events.poll.php",
        "Polling"
    ],
    "parallelEventsremove": [
        "parallel\\Events::remove",
        "parallel-events.remove.php",
        "Targets"
    ],
    "parallelEventssetBlocking": [
        "parallel\\Events::setBlocking",
        "parallel-events.setblocking.php",
        "Behaviour"
    ],
    "parallelEventssetInput": [
        "parallel\\Events::setInput",
        "parallel-events.setinput.php",
        "Input"
    ],
    "parallelEventssetTimeout": [
        "parallel\\Events::setTimeout",
        "parallel-events.settimeout.php",
        "Behaviour"
    ],
    "parallelEventsInputadd": [
        "parallel\\Events\\Input::add",
        "parallel-events-input.add.php",
        "Inputs"
    ],
    "parallelEventsInputclear": [
        "parallel\\Events\\Input::clear",
        "parallel-events-input.clear.php",
        "Inputs"
    ],
    "parallelEventsInputremove": [
        "parallel\\Events\\Input::remove",
        "parallel-events-input.remove.php",
        "Inputs"
    ],
    "parallelFuturecancel": [
        "parallel\\Future::cancel",
        "parallel-future.cancel.php",
        "Cancellation"
    ],
    "parallelFuturecancelled": [
        "parallel\\Future::cancelled",
        "parallel-future.cancelled.php",
        "State Detection"
    ],
    "parallelFuturedone": [
        "parallel\\Future::done",
        "parallel-future.done.php",
        "State Detection"
    ],
    "parallelFuturevalue": [
        "parallel\\Future::value",
        "parallel-future.value.php",
        "Resolution"
    ],
    "parallelrun": [
        "parallel\\run",
        "parallel.run.php",
        "Execution"
    ],
    "parallelRuntimeclose": [
        "parallel\\Runtime::close",
        "parallel-runtime.close.php",
        "Runtime Graceful Join"
    ],
    "parallelRuntimekill": [
        "parallel\\Runtime::kill",
        "parallel-runtime.kill.php",
        "Runtime Join"
    ],
    "parallelRuntimerun": [
        "parallel\\Runtime::run",
        "parallel-runtime.run.php",
        "Execution"
    ],
    "parallelRuntimeconstruct": [
        "parallel\\Runtime::__construct",
        "parallel-runtime.construct.php",
        "Runtime Construction"
    ],
    "parallelSyncget": [
        "parallel\\Sync::get",
        "parallel-sync.get.php",
        "Access"
    ],
    "parallelSyncnotify": [
        "parallel\\Sync::notify",
        "parallel-sync.notify.php",
        "Synchronization"
    ],
    "parallelSyncset": [
        "parallel\\Sync::set",
        "parallel-sync.set.php",
        "Access"
    ],
    "parallelSyncwait": [
        "parallel\\Sync::wait",
        "parallel-sync.wait.php",
        "Synchronization"
    ],
    "parallelSyncconstruct": [
        "parallel\\Sync::__construct",
        "parallel-sync.construct.php",
        "Construction"
    ],
    "parallelSyncinvoke": [
        "parallel\\Sync::__invoke",
        "parallel-sync.invoke.php",
        "Synchronization"
    ],
    "ParentIteratoraccept": [
        "ParentIterator::accept",
        "parentiterator.accept.php",
        "受け入れ可能かどうかを調べる"
    ],
    "ParentIteratorgetChildren": [
        "ParentIterator::getChildren",
        "parentiterator.getchildren.php",
        "ParentIterator に含まれる内部イテレータの子を返す"
    ],
    "ParentIteratorhasChildren": [
        "ParentIterator::hasChildren",
        "parentiterator.haschildren.php",
        "内部イテレータの現在の要素が子を持つかどうかをチェックする"
    ],
    "ParentIteratornext": [
        "ParentIterator::next",
        "parentiterator.next.php",
        "イテレータを前に移動する"
    ],
    "ParentIteratorrewind": [
        "ParentIterator::rewind",
        "parentiterator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "ParentIteratorconstruct": [
        "ParentIterator::__construct",
        "parentiterator.construct.php",
        "ParentIterator を作成する"
    ],
    "ParleLexeradvance": [
        "Parle\\Lexer::advance",
        "parle-lexer.advance.php",
        "Process next lexer rule"
    ],
    "ParleLexerbuild": [
        "Parle\\Lexer::build",
        "parle-lexer.build.php",
        "Finalize the lexer rule set"
    ],
    "ParleLexercallout": [
        "Parle\\Lexer::callout",
        "parle-lexer.callout.php",
        "Define token callback"
    ],
    "ParleLexerconsume": [
        "Parle\\Lexer::consume",
        "parle-lexer.consume.php",
        "Pass the data for processing"
    ],
    "ParleLexerdump": [
        "Parle\\Lexer::dump",
        "parle-lexer.dump.php",
        "Dump the state machine"
    ],
    "ParleLexergetToken": [
        "Parle\\Lexer::getToken",
        "parle-lexer.gettoken.php",
        "Retrieve the current token"
    ],
    "ParleLexerinsertMacro": [
        "Parle\\Lexer::insertMacro",
        "parle-lexer.insertmacro.php",
        "Insert regex macro"
    ],
    "ParleLexerpush": [
        "Parle\\Lexer::push",
        "parle-lexer.push.php",
        "Add a lexer rule"
    ],
    "ParleLexerreset": [
        "Parle\\Lexer::reset",
        "parle-lexer.reset.php",
        "Reset lexer"
    ],
    "ParleParseradvance": [
        "Parle\\Parser::advance",
        "parle-parser.advance.php",
        "Process next parser rule"
    ],
    "ParleParserbuild": [
        "Parle\\Parser::build",
        "parle-parser.build.php",
        "Finalize the grammar rules"
    ],
    "ParleParserconsume": [
        "Parle\\Parser::consume",
        "parle-parser.consume.php",
        "Consume the data for processing"
    ],
    "ParleParserdump": [
        "Parle\\Parser::dump",
        "parle-parser.dump.php",
        "Dump the grammar"
    ],
    "ParleParsererrorInfo": [
        "Parle\\Parser::errorInfo",
        "parle-parser.errorinfo.php",
        "Retrieve the error information"
    ],
    "ParleParserleft": [
        "Parle\\Parser::left",
        "parle-parser.left.php",
        "Declare a token with left-associativity"
    ],
    "ParleParsernonassoc": [
        "Parle\\Parser::nonassoc",
        "parle-parser.nonassoc.php",
        "Declare a token with no associativity"
    ],
    "ParleParserprecedence": [
        "Parle\\Parser::precedence",
        "parle-parser.precedence.php",
        "Declare a precedence rule"
    ],
    "ParleParserpush": [
        "Parle\\Parser::push",
        "parle-parser.push.php",
        "Add a grammar rule"
    ],
    "ParleParserreset": [
        "Parle\\Parser::reset",
        "parle-parser.reset.php",
        "Reset parser state"
    ],
    "ParleParserright": [
        "Parle\\Parser::right",
        "parle-parser.right.php",
        "Declare a token with right-associativity"
    ],
    "ParleParsersigil": [
        "Parle\\Parser::sigil",
        "parle-parser.sigil.php",
        "Retrieve a matching part of a rule"
    ],
    "ParleParsertoken": [
        "Parle\\Parser::token",
        "parle-parser.token.php",
        "Declare a token"
    ],
    "ParleParsertokenId": [
        "Parle\\Parser::tokenId",
        "parle-parser.tokenid.php",
        "Get token id"
    ],
    "ParleParsertrace": [
        "Parle\\Parser::trace",
        "parle-parser.trace.php",
        "Trace the parser operation"
    ],
    "ParleParservalidate": [
        "Parle\\Parser::validate",
        "parle-parser.validate.php",
        "Validate input"
    ],
    "ParleRLexeradvance": [
        "Parle\\RLexer::advance",
        "parle-rlexer.advance.php",
        "Process next lexer rule"
    ],
    "ParleRLexerbuild": [
        "Parle\\RLexer::build",
        "parle-rlexer.build.php",
        "Finalize the lexer rule set"
    ],
    "ParleRLexercallout": [
        "Parle\\RLexer::callout",
        "parle-rlexer.callout.php",
        "Define token callback"
    ],
    "ParleRLexerconsume": [
        "Parle\\RLexer::consume",
        "parle-rlexer.consume.php",
        "Pass the data for processing"
    ],
    "ParleRLexerdump": [
        "Parle\\RLexer::dump",
        "parle-rlexer.dump.php",
        "Dump the state machine"
    ],
    "ParleRLexergetToken": [
        "Parle\\RLexer::getToken",
        "parle-rlexer.gettoken.php",
        "Retrieve the current token"
    ],
    "ParleRLexerinsertMacro": [
        "Parle\\RLexer::insertMacro",
        "parle-rlexer.insertmacro.php",
        "Insert regex macro"
    ],
    "ParleRLexerpush": [
        "Parle\\RLexer::push",
        "parle-rlexer.push.php",
        "Add a lexer rule"
    ],
    "ParleRLexerpushState": [
        "Parle\\RLexer::pushState",
        "parle-rlexer.pushstate.php",
        "Push a new start state"
    ],
    "ParleRLexerreset": [
        "Parle\\RLexer::reset",
        "parle-rlexer.reset.php",
        "Reset lexer"
    ],
    "ParleRParseradvance": [
        "Parle\\RParser::advance",
        "parle-rparser.advance.php",
        "Process next parser rule"
    ],
    "ParleRParserbuild": [
        "Parle\\RParser::build",
        "parle-rparser.build.php",
        "Finalize the grammar rules"
    ],
    "ParleRParserconsume": [
        "Parle\\RParser::consume",
        "parle-rparser.consume.php",
        "Consume the data for processing"
    ],
    "ParleRParserdump": [
        "Parle\\RParser::dump",
        "parle-rparser.dump.php",
        "Dump the grammar"
    ],
    "ParleRParsererrorInfo": [
        "Parle\\RParser::errorInfo",
        "parle-rparser.errorinfo.php",
        "Retrieve the error information"
    ],
    "ParleRParserleft": [
        "Parle\\RParser::left",
        "parle-rparser.left.php",
        "Declare a token with left-associativity"
    ],
    "ParleRParsernonassoc": [
        "Parle\\RParser::nonassoc",
        "parle-rparser.nonassoc.php",
        "Declare a token with no associativity"
    ],
    "ParleRParserprecedence": [
        "Parle\\RParser::precedence",
        "parle-rparser.precedence.php",
        "Declare a precedence rule"
    ],
    "ParleRParserpush": [
        "Parle\\RParser::push",
        "parle-rparser.push.php",
        "Add a grammar rule"
    ],
    "ParleRParserreset": [
        "Parle\\RParser::reset",
        "parle-rparser.reset.php",
        "Reset parser state"
    ],
    "ParleRParserright": [
        "Parle\\RParser::right",
        "parle-rparser.right.php",
        "Declare a token with right-associativity"
    ],
    "ParleRParsersigil": [
        "Parle\\RParser::sigil",
        "parle-rparser.sigil.php",
        "Retrieve a matching part of a rule"
    ],
    "ParleRParsertoken": [
        "Parle\\RParser::token",
        "parle-rparser.token.php",
        "Declare a token"
    ],
    "ParleRParsertokenId": [
        "Parle\\RParser::tokenId",
        "parle-rparser.tokenid.php",
        "Get token id"
    ],
    "ParleRParsertrace": [
        "Parle\\RParser::trace",
        "parle-rparser.trace.php",
        "Trace the parser operation"
    ],
    "ParleRParservalidate": [
        "Parle\\RParser::validate",
        "parle-rparser.validate.php",
        "Validate input"
    ],
    "ParleStackpop": [
        "Parle\\Stack::pop",
        "parle-stack.pop.php",
        "Pop an item from the stack"
    ],
    "ParleStackpush": [
        "Parle\\Stack::push",
        "parle-stack.push.php",
        "Push an item into the stack"
    ],
    "parseinifile": [
        "parse_ini_file",
        "function.parse-ini-file.php",
        "設定ファイルをパースする"
    ],
    "parseinistring": [
        "parse_ini_string",
        "function.parse-ini-string.php",
        "設定文字列をパースする"
    ],
    "parsestr": [
        "parse_str",
        "function.parse-str.php",
        "文字列を処理し、変数に代入する"
    ],
    "parseurl": [
        "parse_url",
        "function.parse-url.php",
        "URL を解釈し、その構成要素を返す"
    ],
    "passthru": [
        "passthru",
        "function.passthru.php",
        "外部プログラムを実行し、未整形の出力を表示する"
    ],
    "passwordalgos": [
        "password_algos",
        "function.password-algos.php",
        "Get available password hashing algorithm IDs"
    ],
    "passwordgetinfo": [
        "password_get_info",
        "function.password-get-info.php",
        "指定したハッシュに関する情報を返す"
    ],
    "passwordhash": [
        "password_hash",
        "function.password-hash.php",
        "パスワードハッシュを作る"
    ],
    "passwordneedsrehash": [
        "password_needs_rehash",
        "function.password-needs-rehash.php",
        "指定したハッシュがオプションにマッチするかどうかを調べる"
    ],
    "passwordverify": [
        "password_verify",
        "function.password-verify.php",
        "パスワードがハッシュにマッチするかどうかを調べる"
    ],
    "pathinfo": [
        "pathinfo",
        "function.pathinfo.php",
        "ファイルパスに関する情報を返す"
    ],
    "pclose": [
        "pclose",
        "function.pclose.php",
        "プロセスのファイルポインタをクローズする"
    ],
    "pcntlalarm": [
        "pcntl_alarm",
        "function.pcntl-alarm.php",
        "シグナルを送信するアラームを設定する"
    ],
    "pcntlasyncsignals": [
        "pcntl_async_signals",
        "function.pcntl-async-signals.php",
        "非同期のシグナルハンドリングを有効/無効にするか、古い設定を返す"
    ],
    "pcntlerrno": [
        "pcntl_errno",
        "function.pcntl-errno.php",
        "pcntl_get_last_error のエイリアス"
    ],
    "pcntlexec": [
        "pcntl_exec",
        "function.pcntl-exec.php",
        "現在のプロセス空間で指定したプログラムを実行する"
    ],
    "pcntlfork": [
        "pcntl_fork",
        "function.pcntl-fork.php",
        "現在実行中のプロセスをフォークする"
    ],
    "pcntlgetpriority": [
        "pcntl_getpriority",
        "function.pcntl-getpriority.php",
        "プロセスの優先度を取得する"
    ],
    "pcntlgetlasterror": [
        "pcntl_get_last_error",
        "function.pcntl-get-last-error.php",
        "直近の pcntl 関数が失敗したときのエラー番号を取得する"
    ],
    "pcntlsetpriority": [
        "pcntl_setpriority",
        "function.pcntl-setpriority.php",
        "プロセスの優先度を変更する"
    ],
    "pcntlsignal": [
        "pcntl_signal",
        "function.pcntl-signal.php",
        "シグナルハンドラを設定する"
    ],
    "pcntlsignaldispatch": [
        "pcntl_signal_dispatch",
        "function.pcntl-signal-dispatch.php",
        "ペンディングシグナル用のハンドラをコールする"
    ],
    "pcntlsignalgethandler": [
        "pcntl_signal_get_handler",
        "function.pcntl-signal-get-handler.php",
        "指定されたシグナルの現在のハンドラを取得する"
    ],
    "pcntlsigprocmask": [
        "pcntl_sigprocmask",
        "function.pcntl-sigprocmask.php",
        "ブロックされたシグナルを設定あるいは取得する"
    ],
    "pcntlsigtimedwait": [
        "pcntl_sigtimedwait",
        "function.pcntl-sigtimedwait.php",
        "タイムアウトつきでシグナルを待つ"
    ],
    "pcntlsigwaitinfo": [
        "pcntl_sigwaitinfo",
        "function.pcntl-sigwaitinfo.php",
        "シグナルを待つ"
    ],
    "pcntlstrerror": [
        "pcntl_strerror",
        "function.pcntl-strerror.php",
        "指定した errno に対応するシステムのエラーメッセージを取得する"
    ],
    "pcntlwait": [
        "pcntl_wait",
        "function.pcntl-wait.php",
        "待つかフォークした子プロセスのステータスを返す"
    ],
    "pcntlwaitpid": [
        "pcntl_waitpid",
        "function.pcntl-waitpid.php",
        "待つかフォークした子プロセスのステータスを返す"
    ],
    "pcntlwexitstatus": [
        "pcntl_wexitstatus",
        "function.pcntl-wexitstatus.php",
        "終了した子プロセスのリターンコードを返す"
    ],
    "pcntlwifexited": [
        "pcntl_wifexited",
        "function.pcntl-wifexited.php",
        "ステータスコードが正常終了を表しているかどうかを調べる"
    ],
    "pcntlwifsignaled": [
        "pcntl_wifsignaled",
        "function.pcntl-wifsignaled.php",
        "ステータスコードがシグナルによる終了を表しているかどうかを調べる"
    ],
    "pcntlwifstopped": [
        "pcntl_wifstopped",
        "function.pcntl-wifstopped.php",
        "子プロセスが現在停止しているかどうかを調べる"
    ],
    "pcntlwstopsig": [
        "pcntl_wstopsig",
        "function.pcntl-wstopsig.php",
        "子プロセスを停止させたシグナルを返す"
    ],
    "pcntlwtermsig": [
        "pcntl_wtermsig",
        "function.pcntl-wtermsig.php",
        "子プロセスを終了させたシグナルを返す"
    ],
    "PDObeginTransaction": [
        "PDO::beginTransaction",
        "pdo.begintransaction.php",
        "トランザクションを開始する"
    ],
    "PDOcommit": [
        "PDO::commit",
        "pdo.commit.php",
        "トランザクションをコミットする"
    ],
    "PDOcubridschema": [
        "PDO::cubrid_schema",
        "pdo.cubrid-schema.php",
        "指定したスキーマ情報を取得する"
    ],
    "PDOerrorCode": [
        "PDO::errorCode",
        "pdo.errorcode.php",
        "データベースハンドラにおける直近の操作に関連する SQLSTATE を取得する"
    ],
    "PDOerrorInfo": [
        "PDO::errorInfo",
        "pdo.errorinfo.php",
        "データベースハンドラにおける直近の操作に関連する拡張エラー情報を取得する"
    ],
    "PDOexec": [
        "PDO::exec",
        "pdo.exec.php",
        "SQL ステートメントを実行し、作用した行数を返す"
    ],
    "PDOgetAttribute": [
        "PDO::getAttribute",
        "pdo.getattribute.php",
        "データベース接続の属性を取得する"
    ],
    "PDOgetAvailableDrivers": [
        "PDO::getAvailableDrivers",
        "pdo.getavailabledrivers.php",
        "利用可能な PDO ドライバの配列を返す"
    ],
    "PDOinTransaction": [
        "PDO::inTransaction",
        "pdo.intransaction.php",
        "トランザクション内かどうかを調べる"
    ],
    "PDOlastInsertId": [
        "PDO::lastInsertId",
        "pdo.lastinsertid.php",
        "最後に挿入された行の ID あるいはシーケンスの値を返す"
    ],
    "PDOpgsqlCopyFromArray": [
        "PDO::pgsqlCopyFromArray",
        "pdo.pgsqlcopyfromarray.php",
        "PHP の配列から、データをテーブルにコピーする"
    ],
    "PDOpgsqlCopyFromFile": [
        "PDO::pgsqlCopyFromFile",
        "pdo.pgsqlcopyfromfile.php",
        "ファイルからデータをテーブルにコピーする"
    ],
    "PDOpgsqlCopyToArray": [
        "PDO::pgsqlCopyToArray",
        "pdo.pgsqlcopytoarray.php",
        "データベーステーブルからのデータをPHPの配列にコピーする"
    ],
    "PDOpgsqlCopyToFile": [
        "PDO::pgsqlCopyToFile",
        "pdo.pgsqlcopytofile.php",
        "テーブルからのデータをファイルにコピーする"
    ],
    "PDOpgsqlGetNotify": [
        "PDO::pgsqlGetNotify",
        "pdo.pgsqlgetnotify.php",
        "非同期に通知を取得する"
    ],
    "PDOpgsqlGetPid": [
        "PDO::pgsqlGetPid",
        "pdo.pgsqlgetpid.php",
        "サーバのPIDを取得する"
    ],
    "PDOpgsqlLOBCreate": [
        "PDO::pgsqlLOBCreate",
        "pdo.pgsqllobcreate.php",
        "新しいラージオブジェクトを作成する"
    ],
    "PDOpgsqlLOBOpen": [
        "PDO::pgsqlLOBOpen",
        "pdo.pgsqllobopen.php",
        "既存のラージオブジェクトのストリームをオープンする"
    ],
    "PDOpgsqlLOBUnlink": [
        "PDO::pgsqlLOBUnlink",
        "pdo.pgsqllobunlink.php",
        "ラージオブジェクトを削除する"
    ],
    "PDOprepare": [
        "PDO::prepare",
        "pdo.prepare.php",
        "文を実行する準備を行い、文オブジェクトを返す"
    ],
    "PDOquery": [
        "PDO::query",
        "pdo.query.php",
        "SQL ステートメントを実行し、結果セットを PDOStatement オブジェクトとして返す"
    ],
    "PDOquote": [
        "PDO::quote",
        "pdo.quote.php",
        "クエリ用の文字列をクオートする"
    ],
    "PDOrollBack": [
        "PDO::rollBack",
        "pdo.rollback.php",
        "トランザクションをロールバックする"
    ],
    "PDOsetAttribute": [
        "PDO::setAttribute",
        "pdo.setattribute.php",
        "属性を設定する"
    ],
    "PDOsqliteCreateAggregate": [
        "PDO::sqliteCreateAggregate",
        "pdo.sqlitecreateaggregate.php",
        "SQL 文で使用する集約ユーザー定義関数 (UDF) を登録する"
    ],
    "PDOsqliteCreateCollation": [
        "PDO::sqliteCreateCollation",
        "pdo.sqlitecreatecollation.php",
        "SQL文で collate 関数として使うユーザー定義関数を登録する"
    ],
    "PDOsqliteCreateFunction": [
        "PDO::sqliteCreateFunction",
        "pdo.sqlitecreatefunction.php",
        "SQL 文で使用するユーザー定義関数 (UDF) を登録する"
    ],
    "PDOconstruct": [
        "PDO::__construct",
        "pdo.construct.php",
        "データベースへの接続を表す PDO インスタンスを生成する"
    ],
    "PDOStatementbindColumn": [
        "PDOStatement::bindColumn",
        "pdostatement.bindcolumn.php",
        "カラムを PHP 変数にバインドする"
    ],
    "PDOStatementbindParam": [
        "PDOStatement::bindParam",
        "pdostatement.bindparam.php",
        "指定された変数名にパラメータをバインドする"
    ],
    "PDOStatementbindValue": [
        "PDOStatement::bindValue",
        "pdostatement.bindvalue.php",
        "値をパラメータにバインドする"
    ],
    "PDOStatementcloseCursor": [
        "PDOStatement::closeCursor",
        "pdostatement.closecursor.php",
        "カーソルを閉じてステートメントを再実行できるようにする"
    ],
    "PDOStatementcolumnCount": [
        "PDOStatement::columnCount",
        "pdostatement.columncount.php",
        "結果セット中のカラム数を返す"
    ],
    "PDOStatementdebugDumpParams": [
        "PDOStatement::debugDumpParams",
        "pdostatement.debugdumpparams.php",
        "SQL プリペアドコマンドを出力する"
    ],
    "PDOStatementerrorCode": [
        "PDOStatement::errorCode",
        "pdostatement.errorcode.php",
        "文ハンドラにおける直近の操作に関連する SQLSTATE を取得する"
    ],
    "PDOStatementerrorInfo": [
        "PDOStatement::errorInfo",
        "pdostatement.errorinfo.php",
        "文ハンドラにおける直近の操作に関連する拡張エラー情報を取得する"
    ],
    "PDOStatementexecute": [
        "PDOStatement::execute",
        "pdostatement.execute.php",
        "プリペアドステートメントを実行する"
    ],
    "PDOStatementfetch": [
        "PDOStatement::fetch",
        "pdostatement.fetch.php",
        "結果セットから次の行を取得する"
    ],
    "PDOStatementfetchAll": [
        "PDOStatement::fetchAll",
        "pdostatement.fetchall.php",
        "全ての結果行を含む配列を返す"
    ],
    "PDOStatementfetchColumn": [
        "PDOStatement::fetchColumn",
        "pdostatement.fetchcolumn.php",
        "結果セットの次行から単一カラムを返す"
    ],
    "PDOStatementfetchObject": [
        "PDOStatement::fetchObject",
        "pdostatement.fetchobject.php",
        "次の行を取得し、それをオブジェクトとして返す"
    ],
    "PDOStatementgetAttribute": [
        "PDOStatement::getAttribute",
        "pdostatement.getattribute.php",
        "文の属性を取得する"
    ],
    "PDOStatementgetColumnMeta": [
        "PDOStatement::getColumnMeta",
        "pdostatement.getcolumnmeta.php",
        "結果セットのカラムに対するメタデータを返す"
    ],
    "PDOStatementnextRowset": [
        "PDOStatement::nextRowset",
        "pdostatement.nextrowset.php",
        "複数の行セットを返す文ハンドラで次の行セットに移動する"
    ],
    "PDOStatementrowCount": [
        "PDOStatement::rowCount",
        "pdostatement.rowcount.php",
        "直近の SQL ステートメントによって作用した行数を返す"
    ],
    "PDOStatementsetAttribute": [
        "PDOStatement::setAttribute",
        "pdostatement.setattribute.php",
        "文の属性を設定する"
    ],
    "PDOStatementsetFetchMode": [
        "PDOStatement::setFetchMode",
        "pdostatement.setfetchmode.php",
        "この文に対するデフォルトのフェッチモードを設定する"
    ],
    "PDOCUBRIDDSN": [
        "PDO_CUBRID DSN",
        "ref.pdo-cubrid.connection.php",
        "CUBRID データベースへの接続"
    ],
    "PDODBLIBDSN": [
        "PDO_DBLIB DSN",
        "ref.pdo-dblib.connection.php",
        "Microsoft SQL Server および Sybase データベースに接続する"
    ],
    "PDOFIREBIRDDSN": [
        "PDO_FIREBIRD DSN",
        "ref.pdo-firebird.connection.php",
        "Firebird データベースに接続する"
    ],
    "PDOIBMDSN": [
        "PDO_IBM DSN",
        "ref.pdo-ibm.connection.php",
        "IBM データベースへの接続"
    ],
    "PDOINFORMIXDSN": [
        "PDO_INFORMIX DSN",
        "ref.pdo-informix.connection.php",
        "Informix データベースに接続する"
    ],
    "PDOMYSQLDSN": [
        "PDO_MYSQL DSN",
        "ref.pdo-mysql.connection.php",
        "MySQL データベースに接続する"
    ],
    "PDOOCIDSN": [
        "PDO_OCI DSN",
        "ref.pdo-oci.connection.php",
        "Oracle データベースに接続する"
    ],
    "PDOODBCDSN": [
        "PDO_ODBC DSN",
        "ref.pdo-odbc.connection.php",
        "ODBC あるいは DB2 データベースに接続する"
    ],
    "PDOPGSQLDSN": [
        "PDO_PGSQL DSN",
        "ref.pdo-pgsql.connection.php",
        "PostgreSQL データベースに接続する"
    ],
    "PDOSQLITEDSN": [
        "PDO_SQLITE DSN",
        "ref.pdo-sqlite.connection.php",
        "SQLite データベースに接続する"
    ],
    "PDOSQLSRVDSN": [
        "PDO_SQLSRV DSN",
        "ref.pdo-sqlsrv.connection.php",
        "MS SQL Server および SQL Azure データベースに接続する"
    ],
    "pfsockopen": [
        "pfsockopen",
        "function.pfsockopen.php",
        "持続的な Internet または Unix ドメインソケット接続をオープンする"
    ],
    "pgaffectedrows": [
        "pg_affected_rows",
        "function.pg-affected-rows.php",
        "変更されたレコード(タプル)の数を返す"
    ],
    "pgcancelquery": [
        "pg_cancel_query",
        "function.pg-cancel-query.php",
        "非同期クエリを取り消す"
    ],
    "pgclientencoding": [
        "pg_client_encoding",
        "function.pg-client-encoding.php",
        "クライアントのエンコーディングを取得する"
    ],
    "pgclose": [
        "pg_close",
        "function.pg-close.php",
        "PostgreSQL 接続をクローズする"
    ],
    "pgconnect": [
        "pg_connect",
        "function.pg-connect.php",
        "PostgreSQL 接続をオープンする"
    ],
    "pgconnectionbusy": [
        "pg_connection_busy",
        "function.pg-connection-busy.php",
        "接続がビジーかどうか調べる"
    ],
    "pgconnectionreset": [
        "pg_connection_reset",
        "function.pg-connection-reset.php",
        "接続をリセット(再接続)する"
    ],
    "pgconnectionstatus": [
        "pg_connection_status",
        "function.pg-connection-status.php",
        "接続ステータスを取得する"
    ],
    "pgconnectpoll": [
        "pg_connect_poll",
        "function.pg-connect-poll.php",
        "進行中の非同期接続のステータスをポーリングする"
    ],
    "pgconsumeinput": [
        "pg_consume_input",
        "function.pg-consume-input.php",
        "接続の入力を読み取る"
    ],
    "pgconvert": [
        "pg_convert",
        "function.pg-convert.php",
        "連想配列の値を、SQL 文として実行可能な形式に変換する"
    ],
    "pgcopyfrom": [
        "pg_copy_from",
        "function.pg-copy-from.php",
        "配列からテーブルに挿入する"
    ],
    "pgcopyto": [
        "pg_copy_to",
        "function.pg-copy-to.php",
        "配列にテーブルをコピーする"
    ],
    "pgdbname": [
        "pg_dbname",
        "function.pg-dbname.php",
        "データベース名を取得する"
    ],
    "pgdelete": [
        "pg_delete",
        "function.pg-delete.php",
        "レコードを削除する"
    ],
    "pgendcopy": [
        "pg_end_copy",
        "function.pg-end-copy.php",
        "PostgreSQL バックエンドと同期する"
    ],
    "pgescapebytea": [
        "pg_escape_bytea",
        "function.pg-escape-bytea.php",
        "bytea フィールドに挿入するために文字列をエスケープする"
    ],
    "pgescapeidentifier": [
        "pg_escape_identifier",
        "function.pg-escape-identifier.php",
        "テキスト型フィールドに挿入するために、識別子をエスケープする"
    ],
    "pgescapeliteral": [
        "pg_escape_literal",
        "function.pg-escape-literal.php",
        "テキスト型フィールドに挿入するために、リテラルをエスケープする"
    ],
    "pgescapestring": [
        "pg_escape_string",
        "function.pg-escape-string.php",
        "クエリに使う文字列をエスケープする"
    ],
    "pgfetchall": [
        "pg_fetch_all",
        "function.pg-fetch-all.php",
        "取得されたすべての行を配列として取得する"
    ],
    "pgfetchallcolumns": [
        "pg_fetch_all_columns",
        "function.pg-fetch-all-columns.php",
        "指定したカラムの全ての行を配列として取得する"
    ],
    "pgfetcharray": [
        "pg_fetch_array",
        "function.pg-fetch-array.php",
        "行を配列として取得する"
    ],
    "pgfetchassoc": [
        "pg_fetch_assoc",
        "function.pg-fetch-assoc.php",
        "行を連想配列として取得する"
    ],
    "pgfetchobject": [
        "pg_fetch_object",
        "function.pg-fetch-object.php",
        "行をオブジェクトとして得る"
    ],
    "pgfetchresult": [
        "pg_fetch_result",
        "function.pg-fetch-result.php",
        "結果リソースから値を返す"
    ],
    "pgfetchrow": [
        "pg_fetch_row",
        "function.pg-fetch-row.php",
        "数値添字の配列として行を得る"
    ],
    "pgfieldisnull": [
        "pg_field_is_null",
        "function.pg-field-is-null.php",
        "フィールドが SQL の NULL かどうか調べる"
    ],
    "pgfieldname": [
        "pg_field_name",
        "function.pg-field-name.php",
        "フィールドの名前を返す"
    ],
    "pgfieldnum": [
        "pg_field_num",
        "function.pg-field-num.php",
        "指定されたフィールドのフィールド番号を返す"
    ],
    "pgfieldprtlen": [
        "pg_field_prtlen",
        "function.pg-field-prtlen.php",
        "表示される長さを返す"
    ],
    "pgfieldsize": [
        "pg_field_size",
        "function.pg-field-size.php",
        "指定したフィールドの内部記憶領域におけるサイズを返す"
    ],
    "pgfieldtable": [
        "pg_field_table",
        "function.pg-field-table.php",
        "tables フィールドの名前あるいは oid を返す"
    ],
    "pgfieldtype": [
        "pg_field_type",
        "function.pg-field-type.php",
        "フィールド番号に対応する型名を返す"
    ],
    "pgfieldtypeoid": [
        "pg_field_type_oid",
        "function.pg-field-type-oid.php",
        "フィールド番号に対応する型 ID（OID）を返す"
    ],
    "pgflush": [
        "pg_flush",
        "function.pg-flush.php",
        "送信を待っているクエリデータをフラッシュする"
    ],
    "pgfreeresult": [
        "pg_free_result",
        "function.pg-free-result.php",
        "メモリを開放する"
    ],
    "pggetnotify": [
        "pg_get_notify",
        "function.pg-get-notify.php",
        "SQL NOTIFY メッセージを取得する"
    ],
    "pggetpid": [
        "pg_get_pid",
        "function.pg-get-pid.php",
        "バックエンドのプロセス ID を得る"
    ],
    "pggetresult": [
        "pg_get_result",
        "function.pg-get-result.php",
        "非同期クエリの結果を取得する"
    ],
    "pghost": [
        "pg_host",
        "function.pg-host.php",
        "接続に関連するホスト名を返す"
    ],
    "pginsert": [
        "pg_insert",
        "function.pg-insert.php",
        "テーブルに配列を挿入する"
    ],
    "pglasterror": [
        "pg_last_error",
        "function.pg-last-error.php",
        "特定の接続から直近のエラーメッセージ文字列を取得する"
    ],
    "pglastnotice": [
        "pg_last_notice",
        "function.pg-last-notice.php",
        "PostgreSQL サーバーからの直近の通知メッセージを返す"
    ],
    "pglastoid": [
        "pg_last_oid",
        "function.pg-last-oid.php",
        "直近の行のオブジェクト ID を返す"
    ],
    "pgloclose": [
        "pg_lo_close",
        "function.pg-lo-close.php",
        "ラージオブジェクトをクローズする"
    ],
    "pglocreate": [
        "pg_lo_create",
        "function.pg-lo-create.php",
        "ラージオブジェクトを生成する"
    ],
    "pgloexport": [
        "pg_lo_export",
        "function.pg-lo-export.php",
        "ラージオブジェクトをファイルにエクスポートする"
    ],
    "pgloimport": [
        "pg_lo_import",
        "function.pg-lo-import.php",
        "ファイルからラージオブジェクトをインポートする"
    ],
    "pgloopen": [
        "pg_lo_open",
        "function.pg-lo-open.php",
        "ラージオブジェクトをオープンする"
    ],
    "pgloread": [
        "pg_lo_read",
        "function.pg-lo-read.php",
        "ラージオブジェクトを読み込む"
    ],
    "pgloreadall": [
        "pg_lo_read_all",
        "function.pg-lo-read-all.php",
        "ラージオブジェクト全体を読み込みブラウザに直接送信する"
    ],
    "pgloseek": [
        "pg_lo_seek",
        "function.pg-lo-seek.php",
        "ラージオブジェクトの位置をシークする"
    ],
    "pglotell": [
        "pg_lo_tell",
        "function.pg-lo-tell.php",
        "ラージオブジェクトのカレントのシーク位置を返す"
    ],
    "pglotruncate": [
        "pg_lo_truncate",
        "function.pg-lo-truncate.php",
        "ラージオブジェクトを切り詰める"
    ],
    "pglounlink": [
        "pg_lo_unlink",
        "function.pg-lo-unlink.php",
        "ラージオブジェクトを削除する"
    ],
    "pglowrite": [
        "pg_lo_write",
        "function.pg-lo-write.php",
        "ラージオブジェクトを書く"
    ],
    "pgmetadata": [
        "pg_meta_data",
        "function.pg-meta-data.php",
        "テーブルからメタデータを取得する"
    ],
    "pgnumfields": [
        "pg_num_fields",
        "function.pg-num-fields.php",
        "フィールド数を返す"
    ],
    "pgnumrows": [
        "pg_num_rows",
        "function.pg-num-rows.php",
        "行数を返す"
    ],
    "pgoptions": [
        "pg_options",
        "function.pg-options.php",
        "接続に関連するオプションを取得する"
    ],
    "pgparameterstatus": [
        "pg_parameter_status",
        "function.pg-parameter-status.php",
        "サーバーのパラメータ設定を検索する"
    ],
    "pgpconnect": [
        "pg_pconnect",
        "function.pg-pconnect.php",
        "持続的な PostgreSQL 接続をオープンする"
    ],
    "pgping": [
        "pg_ping",
        "function.pg-ping.php",
        "データベース接続を調べる"
    ],
    "pgport": [
        "pg_port",
        "function.pg-port.php",
        "接続に関連するポート番号を返す"
    ],
    "pgputline": [
        "pg_put_line",
        "function.pg-put-line.php",
        "NULL で終わる文字列を PostgreSQL バックエンドに送信する"
    ],
    "pgquery": [
        "pg_query",
        "function.pg-query.php",
        "クエリを実行する"
    ],
    "pgqueryparams": [
        "pg_query_params",
        "function.pg-query-params.php",
        "SQL コマンドとパラメータを分割してサーバーへ送信し、その結果を待つ"
    ],
    "pgresulterror": [
        "pg_result_error",
        "function.pg-result-error.php",
        "結果に関連するエラーメッセージを取得する"
    ],
    "pgresulterrorfield": [
        "pg_result_error_field",
        "function.pg-result-error-field.php",
        "エラー報告の各フィールドを返す"
    ],
    "pgresultseek": [
        "pg_result_seek",
        "function.pg-result-seek.php",
        "結果リソースの内部行オフセットを設定する"
    ],
    "pgresultstatus": [
        "pg_result_status",
        "function.pg-result-status.php",
        "クエリ結果のステータスを取得する"
    ],
    "pgselect": [
        "pg_select",
        "function.pg-select.php",
        "レコードを選択する"
    ],
    "pgsendquery": [
        "pg_send_query",
        "function.pg-send-query.php",
        "非同期クエリを送信する"
    ],
    "pgsendqueryparams": [
        "pg_send_query_params",
        "function.pg-send-query-params.php",
        "コマンドとパラメータを分割してサーバーに送信し、その結果を待たない"
    ],
    "pgsetclientencoding": [
        "pg_set_client_encoding",
        "function.pg-set-client-encoding.php",
        "クライアントのエンコーディングを設定する"
    ],
    "pgsocket": [
        "pg_socket",
        "function.pg-socket.php",
        "PostgreSQL 接続の下層にある、読み取り専用のソケットのハンドルを取得する"
    ],
    "pgtrace": [
        "pg_trace",
        "function.pg-trace.php",
        "PostgreSQL 接続のトレースを有効にする"
    ],
    "pgtransactionstatus": [
        "pg_transaction_status",
        "function.pg-transaction-status.php",
        "サーバー上で実行中のトランザクションの状態を返す"
    ],
    "pgtty": [
        "pg_tty",
        "function.pg-tty.php",
        "接続に関する TTY 名を返す"
    ],
    "pgunescapebytea": [
        "pg_unescape_bytea",
        "function.pg-unescape-bytea.php",
        "bytea 型のバイナリをアンエスケープする"
    ],
    "pguntrace": [
        "pg_untrace",
        "function.pg-untrace.php",
        "PostgreSQL 接続のトレースを無効にする"
    ],
    "pgupdate": [
        "pg_update",
        "function.pg-update.php",
        "テーブルを更新する"
    ],
    "pgversion": [
        "pg_version",
        "function.pg-version.php",
        "クライアント・プロトコル・サーバーのバージョンを配列で返す"
    ],
    "phar": [
        "phar://",
        "wrappers.phar.php",
        "PHP アーカイブ"
    ],
    "PharaddEmptyDir": [
        "Phar::addEmptyDir",
        "phar.addemptydir.php",
        "空のディレクトリを phar アーカイブに追加する"
    ],
    "PharaddFile": [
        "Phar::addFile",
        "phar.addfile.php",
        "ファイルシステム上のファイルを phar アーカイブに追加する"
    ],
    "PharaddFromString": [
        "Phar::addFromString",
        "phar.addfromstring.php",
        "文字列から、ファイルを phar アーカイブに追加する"
    ],
    "PharapiVersion": [
        "Phar::apiVersion",
        "phar.apiversion.php",
        "API のバージョンを返す"
    ],
    "PharbuildFromDirectory": [
        "Phar::buildFromDirectory",
        "phar.buildfromdirectory.php",
        "ディレクトリ内のファイルから phar を作成する"
    ],
    "PharbuildFromIterator": [
        "Phar::buildFromIterator",
        "phar.buildfromiterator.php",
        "イテレータから phar アーカイブを作成する"
    ],
    "PharcanCompress": [
        "Phar::canCompress",
        "phar.cancompress.php",
        "phar 拡張モジュールが zlib あるいは bzip2 による圧縮をサポートしているかどうかを返す"
    ],
    "PharcanWrite": [
        "Phar::canWrite",
        "phar.canwrite.php",
        "phar 拡張モジュールが phar の書き込みや作成をサポートしているかどうかを返す"
    ],
    "Pharcompress": [
        "Phar::compress",
        "phar.compress.php",
        "Phar アーカイブ全体を Gzip あるいは Bzip2 で圧縮する"
    ],
    "PharcompressFiles": [
        "Phar::compressFiles",
        "phar.compressfiles.php",
        "現在の Phar アーカイブ内のすべてのファイルを圧縮する"
    ],
    "PharconvertToData": [
        "Phar::convertToData",
        "phar.converttodata.php",
        "phar アーカイブを実行可能でない tar あるいは zip ファイルに変換する"
    ],
    "PharconvertToExecutable": [
        "Phar::convertToExecutable",
        "phar.converttoexecutable.php",
        "phar アーカイブを実行可能な別の phar アーカイブ形式に変換する"
    ],
    "Pharcopy": [
        "Phar::copy",
        "phar.copy.php",
        "phar アーカイブ内のファイルを、phar 内で別の新しいファイルとしてコピーする"
    ],
    "Pharcount": [
        "Phar::count",
        "phar.count.php",
        "Phar アーカイブ内のエントリ (ファイル) の数を返す"
    ],
    "PharcreateDefaultStub": [
        "Phar::createDefaultStub",
        "phar.createdefaultstub.php",
        "phar ファイルフォーマット用のスタブを作成する"
    ],
    "Phardecompress": [
        "Phar::decompress",
        "phar.decompress.php",
        "Phar アーカイブ全体の圧縮を解除する"
    ],
    "PhardecompressFiles": [
        "Phar::decompressFiles",
        "phar.decompressfiles.php",
        "現在の Phar アーカイブ内のすべてのファイルの圧縮を解除する"
    ],
    "Phardelete": [
        "Phar::delete",
        "phar.delete.php",
        "phar アーカイブ内のファイルを削除する"
    ],
    "PhardelMetadata": [
        "Phar::delMetadata",
        "phar.delmetadata.php",
        "phar のグローバルメタデータを削除する"
    ],
    "PharextractTo": [
        "Phar::extractTo",
        "phar.extractto.php",
        "phar アーカイブの内容をディレクトリに展開する"
    ],
    "PhargetAlias": [
        "Phar::getAlias",
        "phar.getalias.php",
        "Phar のエイリアスを取得する"
    ],
    "PhargetMetadata": [
        "Phar::getMetadata",
        "phar.getmetadata.php",
        "phar アーカイブのメタデータを返す"
    ],
    "PhargetModified": [
        "Phar::getModified",
        "phar.getmodified.php",
        "phar が変更されているかどうかを返す"
    ],
    "PhargetPath": [
        "Phar::getPath",
        "phar.getpath.php",
        "Pharアーカイブのディスク上の実際のパスを取得する"
    ],
    "PhargetSignature": [
        "Phar::getSignature",
        "phar.getsignature.php",
        "Phar アーカイブの MD5/SHA1/SHA256/SHA512/OpenSSL シグネチャを返す"
    ],
    "PhargetStub": [
        "Phar::getStub",
        "phar.getstub.php",
        "Phar アーカイブの PHP ローダーあるいは起動スタブを返す"
    ],
    "PhargetSupportedCompression": [
        "Phar::getSupportedCompression",
        "phar.getsupportedcompression.php",
        "サポートする圧縮アルゴリズムの配列を返す"
    ],
    "PhargetSupportedSignatures": [
        "Phar::getSupportedSignatures",
        "phar.getsupportedsignatures.php",
        "サポートするシグネチャ型の配列を返す"
    ],
    "PhargetVersion": [
        "Phar::getVersion",
        "phar.getversion.php",
        "Phar アーカイブのバージョン情報を返す"
    ],
    "PharhasMetadata": [
        "Phar::hasMetadata",
        "phar.hasmetadata.php",
        "ファイルがグローバルなメタデータを持つかどうかを返す"
    ],
    "PharinterceptFileFuncs": [
        "Phar::interceptFileFuncs",
        "phar.interceptfilefuncs.php",
        "fopen、file_get_contents、opendir などの stat 関連の関数をすべて phar に横取りさせる"
    ],
    "PharisBuffering": [
        "Phar::isBuffering",
        "phar.isbuffering.php",
        "Phar の書き込み操作がバッファリングされるか、あるいは直接ディスクに書き込まれるかを調べる"
    ],
    "PharisCompressed": [
        "Phar::isCompressed",
        "phar.iscompressed.php",
        "phar アーカイブ全体が (.tar.gz/tar.bz などで) 圧縮されている場合に Phar::GZ あるいは PHAR::BZ2 を返す"
    ],
    "PharisFileFormat": [
        "Phar::isFileFormat",
        "phar.isfileformat.php",
        "phar アーカイブが、パラメータで指定した tar/phar/zip のいずれかの形式である場合に true を返す"
    ],
    "PharisValidPharFilename": [
        "Phar::isValidPharFilename",
        "phar.isvalidpharfilename.php",
        "指定したファイル名が正しい形式の phar ファイルかどうかを返す"
    ],
    "PharisWritable": [
        "Phar::isWritable",
        "phar.iswritable.php",
        "phar アーカイブが変更可能な場合に true を返す"
    ],
    "PharloadPhar": [
        "Phar::loadPhar",
        "phar.loadphar.php",
        "任意の phar アーカイブを、エイリアスを指定して読み込む"
    ],
    "PharmapPhar": [
        "Phar::mapPhar",
        "phar.mapphar.php",
        "現在実行されている (phar 形式の) ファイルを読み込み、その内容を登録する"
    ],
    "Pharmount": [
        "Phar::mount",
        "phar.mount.php",
        "外部のパスあるいはファイルを phar アーカイブ内に仮想的にマウントする"
    ],
    "PharmungServer": [
        "Phar::mungServer",
        "phar.mungserver.php",
        "最大 4 つまでの $_SERVER 変数を実行時に変更させる"
    ],
    "PharoffsetExists": [
        "Phar::offsetExists",
        "phar.offsetexists.php",
        "ファイルが phar 内に存在するかどうかを調べる"
    ],
    "PharoffsetGet": [
        "Phar::offsetGet",
        "phar.offsetget.php",
        "指定したファイルの PharFileInfo オブジェクトを取得する"
    ],
    "PharoffsetSet": [
        "Phar::offsetSet",
        "phar.offsetset.php",
        "内部ファイルに、外部ファイルの内容を設定する"
    ],
    "PharoffsetUnset": [
        "Phar::offsetUnset",
        "phar.offsetunset.php",
        "ファイルを phar から削除する"
    ],
    "Pharrunning": [
        "Phar::running",
        "phar.running.php",
        "現在実行中の Phar アーカイブのフルパスあるいは完全な phar URL を返す"
    ],
    "PharsetAlias": [
        "Phar::setAlias",
        "phar.setalias.php",
        "Phar アーカイブのエイリアスを設定する"
    ],
    "PharsetDefaultStub": [
        "Phar::setDefaultStub",
        "phar.setdefaultstub.php",
        "Phar アーカイブの PHP ローダー (起動スタブ) をデフォルトのローダーに設定する"
    ],
    "PharsetMetadata": [
        "Phar::setMetadata",
        "phardata.setmetadata.php",
        "phar アーカイブのメタデータを設定する"
    ],
    "PharsetSignatureAlgorithm": [
        "Phar::setSignatureAlgorithm",
        "phardata.setsignaturealgorithm.php",
        "phar のシグネチャのアルゴリズムを設定する"
    ],
    "PharsetStub": [
        "Phar::setStub",
        "phar.setstub.php",
        "Phar アーカイブの PHP ローダ (あるいは起動スタブ) を設定する"
    ],
    "PharstartBuffering": [
        "Phar::startBuffering",
        "phar.startbuffering.php",
        "Phar の書き込み操作のバッファリングを開始するが、ディスク上の Phar オブジェクトは変更しない"
    ],
    "PharstopBuffering": [
        "Phar::stopBuffering",
        "phar.stopbuffering.php",
        "Phar アーカイブへの書き込みリクエストのバッファリングを終了し、変更内容をディスクに書き込む"
    ],
    "PharunlinkArchive": [
        "Phar::unlinkArchive",
        "phar.unlinkarchive.php",
        "phar アーカイブをディスクとメモリから完全に削除する"
    ],
    "PharwebPhar": [
        "Phar::webPhar",
        "phar.webphar.php",
        "ウェブベースの phar で使用するフロントコントローラ"
    ],
    "Pharconstruct": [
        "Phar::__construct",
        "phar.construct.php",
        "Phar アーカイブオブジェクトを作成する"
    ],
    "PharDataaddEmptyDir": [
        "PharData::addEmptyDir",
        "phardata.addemptydir.php",
        "空のディレクトリを tar/zip アーカイブに追加する"
    ],
    "PharDataaddFile": [
        "PharData::addFile",
        "phardata.addfile.php",
        "ファイルシステム上のファイルを tar/zip アーカイブに追加する"
    ],
    "PharDataaddFromString": [
        "PharData::addFromString",
        "phardata.addfromstring.php",
        "ファイルシステム上のファイルを tar/zip アーカイブに追加する"
    ],
    "PharDatabuildFromDirectory": [
        "PharData::buildFromDirectory",
        "phardata.buildfromdirectory.php",
        "ディレクトリ内のファイルから tar/zip アーカイブを作成する"
    ],
    "PharDatabuildFromIterator": [
        "PharData::buildFromIterator",
        "phardata.buildfromiterator.php",
        "イテレータから tar あるいは zip アーカイブを作成する"
    ],
    "PharDatacompress": [
        "PharData::compress",
        "phardata.compress.php",
        "tar/zip アーカイブ全体を Gzip あるいは Bzip2 で圧縮する"
    ],
    "PharDatacompressFiles": [
        "PharData::compressFiles",
        "phardata.compressfiles.php",
        "現在の tar/zip アーカイブ内のすべてのファイルを圧縮する"
    ],
    "PharDataconvertToData": [
        "PharData::convertToData",
        "phardata.converttodata.php",
        "phar アーカイブを実行可能でない tar あるいは zip ファイルに変換する"
    ],
    "PharDataconvertToExecutable": [
        "PharData::convertToExecutable",
        "phardata.converttoexecutable.php",
        "実行可能でない tar/zip アーカイブを実行可能な phar アーカイブ形式に変換する"
    ],
    "PharDatacopy": [
        "PharData::copy",
        "phardata.copy.php",
        "phar アーカイブ内のファイルを、phar 内で別の新しいファイルとしてコピーする"
    ],
    "PharDatadecompress": [
        "PharData::decompress",
        "phardata.decompress.php",
        "Phar アーカイブ全体の圧縮を解除する"
    ],
    "PharDatadecompressFiles": [
        "PharData::decompressFiles",
        "phardata.decompressfiles.php",
        "現在の zip アーカイブ内のすべてのファイルの圧縮を解除する"
    ],
    "PharDatadelete": [
        "PharData::delete",
        "phardata.delete.php",
        "tar/zip アーカイブ内のファイルを削除する"
    ],
    "PharDatadelMetadata": [
        "PharData::delMetadata",
        "phardata.delmetadata.php",
        "zip アーカイブのグローバルメタデータを削除する"
    ],
    "PharDataextractTo": [
        "PharData::extractTo",
        "phardata.extractto.php",
        "tar/zip アーカイブの内容をディレクトリに展開する"
    ],
    "PharDataisWritable": [
        "PharData::isWritable",
        "phardata.iswritable.php",
        "tar/zip アーカイブが変更可能な場合に true を返す"
    ],
    "PharDataoffsetSet": [
        "PharData::offsetSet",
        "phardata.offsetset.php",
        "tar/zip の内部のファイルに、外部ファイルあるいは文字列の内容を設定する"
    ],
    "PharDataoffsetUnset": [
        "PharData::offsetUnset",
        "phardata.offsetunset.php",
        "ファイルを tar/zip アーカイブから削除する"
    ],
    "PharDatasetAlias": [
        "PharData::setAlias",
        "phardata.setalias.php",
        "ダミー関数 (Phar::setAlias は PharData では使用不能)"
    ],
    "PharDatasetDefaultStub": [
        "PharData::setDefaultStub",
        "phardata.setdefaultstub.php",
        "ダミー関数 (Phar::setDefaultStub は PharData では無効)"
    ],
    "PharDatasetStub": [
        "PharData::setStub",
        "phardata.setstub.php",
        "ダミー関数 (Phar::setStub は PharData では使用不能)"
    ],
    "PharDataconstruct": [
        "PharData::__construct",
        "phardata.construct.php",
        "実行可能でない tar あるいは zip アーカイブオブジェクトを作成する"
    ],
    "PharFileInfochmod": [
        "PharFileInfo::chmod",
        "pharfileinfo.chmod.php",
        "ファイル固有のパーミッションビットを設定する"
    ],
    "PharFileInfocompress": [
        "PharFileInfo::compress",
        "pharfileinfo.compress.php",
        "現在の Phar エントリを zlib あるいは bzip2 のいずれかで圧縮する"
    ],
    "PharFileInfodecompress": [
        "PharFileInfo::decompress",
        "pharfileinfo.decompress.php",
        "phar 内の現在の Phar エントリの圧縮を解除する"
    ],
    "PharFileInfodelMetadata": [
        "PharFileInfo::delMetadata",
        "pharfileinfo.delmetadata.php",
        "エントリのメタデータを削除する"
    ],
    "PharFileInfogetCompressedSize": [
        "PharFileInfo::getCompressedSize",
        "pharfileinfo.getcompressedsize.php",
        "Phar アーカイブ内での実際のファイルの大きさ (圧縮された状態) を返す"
    ],
    "PharFileInfogetContent": [
        "PharFileInfo::getContent",
        "pharfileinfo.getcontent.php",
        "エントリの完全なファイルの内容を取得する"
    ],
    "PharFileInfogetCRC32": [
        "PharFileInfo::getCRC32",
        "pharfileinfo.getcrc32.php",
        "CRC32 コードを返すか、CRC がチェックできない場合に例外をスローする"
    ],
    "PharFileInfogetMetadata": [
        "PharFileInfo::getMetadata",
        "pharfileinfo.getmetadata.php",
        "ファイルとともに保存されている、ファイル固有のメタデータを返す"
    ],
    "PharFileInfogetPharFlags": [
        "PharFileInfo::getPharFlags",
        "pharfileinfo.getpharflags.php",
        "Phar ファイルエントリのフラグを返す"
    ],
    "PharFileInfohasMetadata": [
        "PharFileInfo::hasMetadata",
        "pharfileinfo.hasmetadata.php",
        "エントリのメタデータを返す"
    ],
    "PharFileInfoisCompressed": [
        "PharFileInfo::isCompressed",
        "pharfileinfo.iscompressed.php",
        "エントリが圧縮されているかどうかを調べる"
    ],
    "PharFileInfoisCRCChecked": [
        "PharFileInfo::isCRCChecked",
        "pharfileinfo.iscrcchecked.php",
        "ファイルエントリの CRC が検証されているかどうかを調べる"
    ],
    "PharFileInfosetMetadata": [
        "PharFileInfo::setMetadata",
        "pharfileinfo.setmetadata.php",
        "ファイルとともに保存する、ファイル固有のメタデータを設定する"
    ],
    "PharFileInfoconstruct": [
        "PharFileInfo::__construct",
        "pharfileinfo.construct.php",
        "Phar エントリオブジェクトを作成する"
    ],
    "Phar": [
        "Phar コンテキストオプション",
        "context.phar.php",
        "Phar コンテキストオプション一覧"
    ],
    "php": [
        "php://",
        "wrappers.php.php",
        "さまざまな入出力ストリームへのアクセス"
    ],
    "phpcredits": [
        "phpcredits",
        "function.phpcredits.php",
        "PHP に関するクレジットを出力する"
    ],
    "phpdbgbreakfile": [
        "phpdbg_break_file",
        "function.phpdbg-break-file.php",
        "Inserts a breakpoint at a line in a file"
    ],
    "phpdbgbreakfunction": [
        "phpdbg_break_function",
        "function.phpdbg-break-function.php",
        "Inserts a breakpoint at entry to a function"
    ],
    "phpdbgbreakmethod": [
        "phpdbg_break_method",
        "function.phpdbg-break-method.php",
        "Inserts a breakpoint at entry to a method"
    ],
    "phpdbgbreaknext": [
        "phpdbg_break_next",
        "function.phpdbg-break-next.php",
        "Inserts a breakpoint at the next opcode"
    ],
    "phpdbgclear": [
        "phpdbg_clear",
        "function.phpdbg-clear.php",
        "Clears all breakpoints"
    ],
    "phpdbgcolor": [
        "phpdbg_color",
        "function.phpdbg-color.php",
        "Sets the color of certain elements"
    ],
    "phpdbgendoplog": [
        "phpdbg_end_oplog",
        "function.phpdbg-end-oplog.php",
        "説明"
    ],
    "phpdbgexec": [
        "phpdbg_exec",
        "function.phpdbg-exec.php",
        "Attempts to set the execution context"
    ],
    "phpdbggetexecutable": [
        "phpdbg_get_executable",
        "function.phpdbg-get-executable.php",
        "説明"
    ],
    "phpdbgprompt": [
        "phpdbg_prompt",
        "function.phpdbg-prompt.php",
        "Sets the command prompt"
    ],
    "phpdbgstartoplog": [
        "phpdbg_start_oplog",
        "function.phpdbg-start-oplog.php",
        "説明"
    ],
    "phpinfo": [
        "phpinfo",
        "function.phpinfo.php",
        "PHP の設定情報を出力する"
    ],
    "phpversion": [
        "phpversion",
        "function.phpversion.php",
        "現在の PHP バージョンを取得する"
    ],
    "phpiniloadedfile": [
        "php_ini_loaded_file",
        "function.php-ini-loaded-file.php",
        "読み込まれた php.ini ファイルのパスを取得する"
    ],
    "phpiniscannedfiles": [
        "php_ini_scanned_files",
        "function.php-ini-scanned-files.php",
        "追加の ini ディレクトリにある .ini ファイルのリストを取得する"
    ],
    "phpsapiname": [
        "php_sapi_name",
        "function.php-sapi-name.php",
        "ウェブサーバーと PHP の間のインターフェイスの型を返す"
    ],
    "phpstripwhitespace": [
        "php_strip_whitespace",
        "function.php-strip-whitespace.php",
        "コメントと空白文字を取り除いたソースを返す"
    ],
    "phpuname": [
        "php_uname",
        "function.php-uname.php",
        "PHP が稼動しているオペレーティングシステムに関する情報を返す"
    ],
    "phpuserfilterfilter": [
        "php_user_filter::filter",
        "php-user-filter.filter.php",
        "フィルタを適用するときにコールされる"
    ],
    "phpuserfilteronClose": [
        "php_user_filter::onClose",
        "php-user-filter.onclose.php",
        "フィルタを閉じるときにコールされる"
    ],
    "phpuserfilteronCreate": [
        "php_user_filter::onCreate",
        "php-user-filter.oncreate.php",
        "フィルタを作成するときにコールされる"
    ],
    "phtAtomicIntegerdec": [
        "pht\\AtomicInteger::dec",
        "pht-atomicinteger.dec.php",
        "Decrements the atomic integer's value by one"
    ],
    "phtAtomicIntegerget": [
        "pht\\AtomicInteger::get",
        "pht-atomicinteger.get.php",
        "Gets the atomic integer's value"
    ],
    "phtAtomicIntegerinc": [
        "pht\\AtomicInteger::inc",
        "pht-atomicinteger.inc.php",
        "Increments the atomic integer's value by one"
    ],
    "phtAtomicIntegerlock": [
        "pht\\AtomicInteger::lock",
        "pht-atomicinteger.lock.php",
        "Acquires the atomic integer's mutex lock"
    ],
    "phtAtomicIntegerset": [
        "pht\\AtomicInteger::set",
        "pht-atomicinteger.set.php",
        "Sets the atomic integer's value"
    ],
    "phtAtomicIntegerunlock": [
        "pht\\AtomicInteger::unlock",
        "pht-atomicinteger.unlock.php",
        "Releases the atomic integer's mutex lock"
    ],
    "phtAtomicIntegerconstruct": [
        "pht\\AtomicInteger::__construct",
        "pht-atomicinteger.construct.php",
        "AtomicInteger creation"
    ],
    "phtHashTablelock": [
        "pht\\HashTable::lock",
        "pht-hashtable.lock.php",
        "Acquires the hash table's mutex lock"
    ],
    "phtHashTablesize": [
        "pht\\HashTable::size",
        "pht-hashtable.size.php",
        "Gets the size of the hash table"
    ],
    "phtHashTableunlock": [
        "pht\\HashTable::unlock",
        "pht-hashtable.unlock.php",
        "Releases the hash table's mutex lock"
    ],
    "phtQueuefront": [
        "pht\\Queue::front",
        "pht-queue.front.php",
        "Returns the first value from a queue"
    ],
    "phtQueuelock": [
        "pht\\Queue::lock",
        "pht-queue.lock.php",
        "Acquires the queue's mutex lock"
    ],
    "phtQueuepop": [
        "pht\\Queue::pop",
        "pht-queue.pop.php",
        "Pops a value off of the front of a queue"
    ],
    "phtQueuepush": [
        "pht\\Queue::push",
        "pht-queue.push.php",
        "Pushes a value to the end of a queue"
    ],
    "phtQueuesize": [
        "pht\\Queue::size",
        "pht-queue.size.php",
        "Gets the size of the queue"
    ],
    "phtQueueunlock": [
        "pht\\Queue::unlock",
        "pht-queue.unlock.php",
        "Releases the queue's mutex lock"
    ],
    "phtRunnablerun": [
        "pht\\Runnable::run",
        "pht-runnable.run.php",
        "The entry point of a threaded class"
    ],
    "phtThreadaddClassTask": [
        "pht\\Thread::addClassTask",
        "pht-thread.addClassTask.php",
        "Class threading"
    ],
    "phtThreadaddFileTask": [
        "pht\\Thread::addFileTask",
        "pht-thread.addFileTask.php",
        "File threading"
    ],
    "phtThreadaddFunctionTask": [
        "pht\\Thread::addFunctionTask",
        "pht-thread.addFunctionTask.php",
        "Function threading"
    ],
    "phtThreadjoin": [
        "pht\\Thread::join",
        "pht-thread.join.php",
        "Joins a thread"
    ],
    "phtThreadstart": [
        "pht\\Thread::start",
        "pht-thread.start.php",
        "Starts the new thread"
    ],
    "phtThreadtaskCount": [
        "pht\\Thread::taskCount",
        "pht-thread.taskCount.php",
        "Gets a thread's task count"
    ],
    "phtThreadedlock": [
        "pht\\Threaded::lock",
        "pht-threaded.lock.php",
        "Acquires the mutex lock"
    ],
    "phtThreadedunlock": [
        "pht\\Threaded::unlock",
        "pht-threaded.unlock.php",
        "Releases the mutex lock"
    ],
    "phtVectordeleteAt": [
        "pht\\Vector::deleteAt",
        "pht-vector.deleteAt.php",
        "Deletes a value in the vector"
    ],
    "phtVectorinsertAt": [
        "pht\\Vector::insertAt",
        "pht-vector.insertAt.php",
        "Inserts a value into the vector"
    ],
    "phtVectorlock": [
        "pht\\Vector::lock",
        "pht-vector.lock.php",
        "Acquires the vector's mutex lock"
    ],
    "phtVectorpop": [
        "pht\\Vector::pop",
        "pht-vector.pop.php",
        "Pops a value to the vector"
    ],
    "phtVectorpush": [
        "pht\\Vector::push",
        "pht-vector.push.php",
        "Pushes a value to the vector"
    ],
    "phtVectorresize": [
        "pht\\Vector::resize",
        "pht-vector.resize.php",
        "Resizes a vector"
    ],
    "phtVectorshift": [
        "pht\\Vector::shift",
        "pht-vector.shift.php",
        "Shifts a value from the vector"
    ],
    "phtVectorsize": [
        "pht\\Vector::size",
        "pht-vector.size.php",
        "Gets the size of the vector"
    ],
    "phtVectorunlock": [
        "pht\\Vector::unlock",
        "pht-vector.unlock.php",
        "Releases the vector's mutex lock"
    ],
    "phtVectorunshift": [
        "pht\\Vector::unshift",
        "pht-vector.unshift.php",
        "Unshifts a value to the vector front"
    ],
    "phtVectorupdateAt": [
        "pht\\Vector::updateAt",
        "pht-vector.updateAt.php",
        "Updates a value in the vector"
    ],
    "phtVectorconstruct": [
        "pht\\Vector::__construct",
        "pht-vector.construct.php",
        "Vector creation"
    ],
    "pi": [
        "pi",
        "function.pi.php",
        "円周率の値を得る"
    ],
    "png2wbmp": [
        "png2wbmp",
        "function.png2wbmp.php",
        "PNG画像をWBMP画像に変換する"
    ],
    "Poolcollect": [
        "Pool::collect",
        "pool.collect.php",
        "Collect references to completed tasks"
    ],
    "Poolresize": [
        "Pool::resize",
        "pool.resize.php",
        "Resize the Pool"
    ],
    "Poolshutdown": [
        "Pool::shutdown",
        "pool.shutdown.php",
        "Shutdown all workers"
    ],
    "Poolsubmit": [
        "Pool::submit",
        "pool.submit.php",
        "Submits an object for execution"
    ],
    "PoolsubmitTo": [
        "Pool::submitTo",
        "pool.submitTo.php",
        "Submits a task to a specific worker for execution"
    ],
    "Poolconstruct": [
        "Pool::__construct",
        "pool.construct.php",
        "Creates a new Pool of Workers"
    ],
    "popen": [
        "popen",
        "function.popen.php",
        "プロセスへのファイルポインタをオープンする"
    ],
    "pos": [
        "pos",
        "function.pos.php",
        "current のエイリアス"
    ],
    "posixaccess": [
        "posix_access",
        "function.posix-access.php",
        "ファイルのアクセス権限を判断する"
    ],
    "posixctermid": [
        "posix_ctermid",
        "function.posix-ctermid.php",
        "制御する端末のパス名を得る"
    ],
    "posixerrno": [
        "posix_errno",
        "function.posix-errno.php",
        "posix_get_last_error のエイリアス"
    ],
    "posixgetcwd": [
        "posix_getcwd",
        "function.posix-getcwd.php",
        "現在のディレクトリのパス名"
    ],
    "posixgetegid": [
        "posix_getegid",
        "function.posix-getegid.php",
        "現在のプロセスの有効なグループ ID を返す"
    ],
    "posixgeteuid": [
        "posix_geteuid",
        "function.posix-geteuid.php",
        "現在のプロセスの有効なユーザー ID を返す"
    ],
    "posixgetgid": [
        "posix_getgid",
        "function.posix-getgid.php",
        "現在のプロセスの実際のグループ ID を返す"
    ],
    "posixgetgrgid": [
        "posix_getgrgid",
        "function.posix-getgrgid.php",
        "指定したグループ ID を有するグループに関する情報を返す"
    ],
    "posixgetgrnam": [
        "posix_getgrnam",
        "function.posix-getgrnam.php",
        "指定した名前のグループに関する情報を返す"
    ],
    "posixgetgroups": [
        "posix_getgroups",
        "function.posix-getgroups.php",
        "現在のプロセスのグループセットを返す"
    ],
    "posixgetlogin": [
        "posix_getlogin",
        "function.posix-getlogin.php",
        "ログイン名を返す"
    ],
    "posixgetpgid": [
        "posix_getpgid",
        "function.posix-getpgid.php",
        "ジョブ制御のプロセスグループ ID を得る"
    ],
    "posixgetpgrp": [
        "posix_getpgrp",
        "function.posix-getpgrp.php",
        "現在のプロセスのグループ ID を返す"
    ],
    "posixgetpid": [
        "posix_getpid",
        "function.posix-getpid.php",
        "現在のプロセス ID を返す"
    ],
    "posixgetppid": [
        "posix_getppid",
        "function.posix-getppid.php",
        "親プロセスの ID を返す"
    ],
    "posixgetpwnam": [
        "posix_getpwnam",
        "function.posix-getpwnam.php",
        "指定した名前のユーザーに関する情報を返す"
    ],
    "posixgetpwuid": [
        "posix_getpwuid",
        "function.posix-getpwuid.php",
        "指定 ID のユーザーに関する情報を返す"
    ],
    "posixgetrlimit": [
        "posix_getrlimit",
        "function.posix-getrlimit.php",
        "システムリソース制限に関する情報を返す"
    ],
    "posixgetsid": [
        "posix_getsid",
        "function.posix-getsid.php",
        "プロセスの現在の sid を得る"
    ],
    "posixgetuid": [
        "posix_getuid",
        "function.posix-getuid.php",
        "現在のプロセスの実際のユーザー ID を返す"
    ],
    "posixgetlasterror": [
        "posix_get_last_error",
        "function.posix-get-last-error.php",
        "直近で失敗した posix 関数が設定したエラー番号を取得する"
    ],
    "posixinitgroups": [
        "posix_initgroups",
        "function.posix-initgroups.php",
        "グループアクセスリストを求める"
    ],
    "posixisatty": [
        "posix_isatty",
        "function.posix-isatty.php",
        "ファイル記述子が対話型端末であるかどうかを定義する"
    ],
    "posixkill": [
        "posix_kill",
        "function.posix-kill.php",
        "プロセスにシグナルを送信する"
    ],
    "posixmkfifo": [
        "posix_mkfifo",
        "function.posix-mkfifo.php",
        "fifo スペシャルファイル(名前付きパイプ)を作成する"
    ],
    "posixmknod": [
        "posix_mknod",
        "function.posix-mknod.php",
        "スペシャルファイルあるいは通常のファイルを作成する (POSIX.1)"
    ],
    "posixsetegid": [
        "posix_setegid",
        "function.posix-setegid.php",
        "現在のプロセスの実効 GID を設定する"
    ],
    "posixseteuid": [
        "posix_seteuid",
        "function.posix-seteuid.php",
        "現在のプロセスの実効 UID を設定する"
    ],
    "posixsetgid": [
        "posix_setgid",
        "function.posix-setgid.php",
        "現在のプロセスの GID を設定する"
    ],
    "posixsetpgid": [
        "posix_setpgid",
        "function.posix-setpgid.php",
        "ジョブ制御のプロセスグループ ID を設定する"
    ],
    "posixsetrlimit": [
        "posix_setrlimit",
        "function.posix-setrlimit.php",
        "システムリソース制限を設定"
    ],
    "posixsetsid": [
        "posix_setsid",
        "function.posix-setsid.php",
        "現在のプロセスをセッションリーダーにする"
    ],
    "posixsetuid": [
        "posix_setuid",
        "function.posix-setuid.php",
        "現在のプロセスの UID を設定する"
    ],
    "posixstrerror": [
        "posix_strerror",
        "function.posix-strerror.php",
        "指定したエラー番号に対応するシステムのエラーメッセージを取得する"
    ],
    "posixtimes": [
        "posix_times",
        "function.posix-times.php",
        "プロセス時間を得る"
    ],
    "posixttyname": [
        "posix_ttyname",
        "function.posix-ttyname.php",
        "端末のデバイス名を調べる"
    ],
    "posixuname": [
        "posix_uname",
        "function.posix-uname.php",
        "システム名を得る"
    ],
    "pow": [
        "pow",
        "function.pow.php",
        "指数表現"
    ],
    "pregfilter": [
        "preg_filter",
        "function.preg-filter.php",
        "正規表現による検索と置換を行う"
    ],
    "preggrep": [
        "preg_grep",
        "function.preg-grep.php",
        "パターンにマッチする配列の要素を返す"
    ],
    "preglasterror": [
        "preg_last_error",
        "function.preg-last-error.php",
        "直近の PCRE 正規表現処理のエラーコードを返す"
    ],
    "preglasterrormsg": [
        "preg_last_error_msg",
        "function.preg-last-error-msg.php",
        "最後に実行した PCRE 正規表現に関するエラーメッセージを返す"
    ],
    "pregmatch": [
        "preg_match",
        "function.preg-match.php",
        "正規表現によるマッチングを行う"
    ],
    "pregmatchall": [
        "preg_match_all",
        "function.preg-match-all.php",
        "繰り返し正規表現検索を行う"
    ],
    "pregquote": [
        "preg_quote",
        "function.preg-quote.php",
        "正規表現文字をクオートする"
    ],
    "pregreplace": [
        "preg_replace",
        "function.preg-replace.php",
        "正規表現検索および置換を行う"
    ],
    "pregreplacecallback": [
        "preg_replace_callback",
        "function.preg-replace-callback.php",
        "正規表現検索を行い、コールバック関数を使用して置換を行う"
    ],
    "pregreplacecallbackarray": [
        "preg_replace_callback_array",
        "function.preg-replace-callback-array.php",
        "正規表現検索を行い、コールバック関数を使用して置換を行う"
    ],
    "pregsplit": [
        "preg_split",
        "function.preg-split.php",
        "正規表現で文字列を分割する"
    ],
    "prev": [
        "prev",
        "function.prev.php",
        "内部の配列ポインタをひとつ前に戻す"
    ],
    "print": [
        "print",
        "function.print.php",
        "文字列を出力する"
    ],
    "printf": [
        "printf",
        "function.printf.php",
        "フォーマット済みの文字列を出力する"
    ],
    "printr": [
        "print_r",
        "function.print-r.php",
        "指定した変数に関する情報を解りやすく出力する"
    ],
    "procnice": [
        "proc_nice",
        "function.proc-nice.php",
        "現在のプロセスの優先度を変更する"
    ],
    "procopen": [
        "proc_open",
        "function.proc-open.php",
        "コマンドを実行し、入出力用にファイルポインタを開く"
    ],
    "procterminate": [
        "proc_terminate",
        "function.proc-terminate.php",
        "proc_open でオープンされたプロセスを強制終了する"
    ],
    "propertyexists": [
        "property_exists",
        "function.property-exists.php",
        "オブジェクトもしくはクラスにプロパティが存在するかどうかを調べる"
    ],
    "pspelladdtopersonal": [
        "pspell_add_to_personal",
        "function.pspell-add-to-personal.php",
        "ユーザーの単語リストに単語を追加する"
    ],
    "pspelladdtosession": [
        "pspell_add_to_session",
        "function.pspell-add-to-session.php",
        "現在のセッションの単語リストに単語を追加する"
    ],
    "pspellcheck": [
        "pspell_check",
        "function.pspell-check.php",
        "単語をチェックする"
    ],
    "pspellclearsession": [
        "pspell_clear_session",
        "function.pspell-clear-session.php",
        "現在のセッションをクリアする"
    ],
    "pspellconfigcreate": [
        "pspell_config_create",
        "function.pspell-config-create.php",
        "辞書をオープンする際に使用する設定を作成する"
    ],
    "pspellconfigdatadir": [
        "pspell_config_data_dir",
        "function.pspell-config-data-dir.php",
        "Location of language data files"
    ],
    "pspellconfigdictdir": [
        "pspell_config_dict_dir",
        "function.pspell-config-dict-dir.php",
        "メイン単語リストの場所"
    ],
    "pspellconfigignore": [
        "pspell_config_ignore",
        "function.pspell-config-ignore.php",
        "長さが N 文字未満の単語を無視する"
    ],
    "pspellconfigmode": [
        "pspell_config_mode",
        "function.pspell-config-mode.php",
        "返される提案の数のモードを変更する"
    ],
    "pspellconfigpersonal": [
        "pspell_config_personal",
        "function.pspell-config-personal.php",
        "個人の単語リストを保持するファイルを設定する"
    ],
    "pspellconfigrepl": [
        "pspell_config_repl",
        "function.pspell-config-repl.php",
        "置換候補を保持するファイルを設定する"
    ],
    "pspellconfigruntogether": [
        "pspell_config_runtogether",
        "function.pspell-config-runtogether.php",
        "複合語を有効な単語の組み合わせとして考慮する"
    ],
    "pspellconfigsaverepl": [
        "pspell_config_save_repl",
        "function.pspell-config-save-repl.php",
        "単語リストと共に置換リストを保存するかどうかを定義する"
    ],
    "pspellnew": [
        "pspell_new",
        "function.pspell-new.php",
        "新規辞書をロードする"
    ],
    "pspellnewconfig": [
        "pspell_new_config",
        "function.pspell-new-config.php",
        "指定した設定に基づき新規辞書をロードする"
    ],
    "pspellnewpersonal": [
        "pspell_new_personal",
        "function.pspell-new-personal.php",
        "個人の単語リストを有する新規辞書をロードする"
    ],
    "pspellsavewordlist": [
        "pspell_save_wordlist",
        "function.pspell-save-wordlist.php",
        "個人の単語リストをファイルに保存する"
    ],
    "pspellstorereplacement": [
        "pspell_store_replacement",
        "function.pspell-store-replacement.php",
        "単語を置換する組を保存する"
    ],
    "pspellsuggest": [
        "pspell_suggest",
        "function.pspell-suggest.php",
        "単語のスペルについて修正候補を示す"
    ],
    "psaddbookmark": [
        "ps_add_bookmark",
        "function.ps-add-bookmark.php",
        "現在のページにブックマークを追加する"
    ],
    "psaddlaunchlink": [
        "ps_add_launchlink",
        "function.ps-add-launchlink.php",
        "ファイルを実行するためのリンクを追加する"
    ],
    "psaddlocallink": [
        "ps_add_locallink",
        "function.ps-add-locallink.php",
        "同一ドキュメント内のページへのリンクを追加する"
    ],
    "psaddnote": [
        "ps_add_note",
        "function.ps-add-note.php",
        "現在のページに注釈を追加する"
    ],
    "psaddpdflink": [
        "ps_add_pdflink",
        "function.ps-add-pdflink.php",
        "別の PDF ドキュメントのページへのリンクを追加する"
    ],
    "psaddweblink": [
        "ps_add_weblink",
        "function.ps-add-weblink.php",
        "Web 上の場所へのリンクを追加する"
    ],
    "psarc": [
        "ps_arc",
        "function.ps-arc.php",
        "反時計回りに円弧を描く"
    ],
    "psarcn": [
        "ps_arcn",
        "function.ps-arcn.php",
        "時計回りに円弧を描く"
    ],
    "psbeginpage": [
        "ps_begin_page",
        "function.ps-begin-page.php",
        "新しいページを開始する"
    ],
    "psbeginpattern": [
        "ps_begin_pattern",
        "function.ps-begin-pattern.php",
        "新しいパターンを開始する"
    ],
    "psbegintemplate": [
        "ps_begin_template",
        "function.ps-begin-template.php",
        "新しいテンプレートを開始する"
    ],
    "pscircle": [
        "ps_circle",
        "function.ps-circle.php",
        "円を描く"
    ],
    "psclip": [
        "ps_clip",
        "function.ps-clip.php",
        "現在のパスを描画範囲として指定する"
    ],
    "psclose": [
        "ps_close",
        "function.ps-close.php",
        "PostScript ドキュメントを閉じる"
    ],
    "psclosepath": [
        "ps_closepath",
        "function.ps-closepath.php",
        "パスを閉じる"
    ],
    "psclosepathstroke": [
        "ps_closepath_stroke",
        "function.ps-closepath-stroke.php",
        "パスを閉じ、描画する"
    ],
    "pscloseimage": [
        "ps_close_image",
        "function.ps-close-image.php",
        "画像を閉じ、メモリを開放する"
    ],
    "pscontinuetext": [
        "ps_continue_text",
        "function.ps-continue-text.php",
        "次の行にテキストを続ける"
    ],
    "pscurveto": [
        "ps_curveto",
        "function.ps-curveto.php",
        "曲線を描く"
    ],
    "psdelete": [
        "ps_delete",
        "function.ps-delete.php",
        "PostScript ドキュメントの全リソースを削除する"
    ],
    "psendpage": [
        "ps_end_page",
        "function.ps-end-page.php",
        "ページを終了する"
    ],
    "psendpattern": [
        "ps_end_pattern",
        "function.ps-end-pattern.php",
        "パターンを終了する"
    ],
    "psendtemplate": [
        "ps_end_template",
        "function.ps-end-template.php",
        "テンプレートを終了する"
    ],
    "psfill": [
        "ps_fill",
        "function.ps-fill.php",
        "現在のパスを塗りつぶす"
    ],
    "psfillstroke": [
        "ps_fill_stroke",
        "function.ps-fill-stroke.php",
        "現在のパスを塗りつぶし、線を引く"
    ],
    "psfindfont": [
        "ps_findfont",
        "function.ps-findfont.php",
        "フォントを読み込む"
    ],
    "psgetbuffer": [
        "ps_get_buffer",
        "function.ps-get-buffer.php",
        "生成された PS データを含むバッファの内容を取得する"
    ],
    "psgetparameter": [
        "ps_get_parameter",
        "function.ps-get-parameter.php",
        "パラメータを取得する"
    ],
    "psgetvalue": [
        "ps_get_value",
        "function.ps-get-value.php",
        "値を取得する"
    ],
    "pshyphenate": [
        "ps_hyphenate",
        "function.ps-hyphenate.php",
        "単語をハイフネーションする"
    ],
    "psincludefile": [
        "ps_include_file",
        "function.ps-include-file.php",
        "外部ファイルを生の PostScript コードとして読み込む"
    ],
    "pslineto": [
        "ps_lineto",
        "function.ps-lineto.php",
        "直線を描く"
    ],
    "psmakespotcolor": [
        "ps_makespotcolor",
        "function.ps-makespotcolor.php",
        "スポット色を作成する"
    ],
    "psmoveto": [
        "ps_moveto",
        "function.ps-moveto.php",
        "現在位置を設定する"
    ],
    "psnew": [
        "ps_new",
        "function.ps-new.php",
        "新しい PostScript ドキュメントオブジェクトを作成する"
    ],
    "psopenfile": [
        "ps_open_file",
        "function.ps-open-file.php",
        "出力用のファイルを開く"
    ],
    "psopenimage": [
        "ps_open_image",
        "function.ps-open-image.php",
        "後で配置するために画像を読み込む"
    ],
    "psopenimagefile": [
        "ps_open_image_file",
        "function.ps-open-image-file.php",
        "ファイルから画像を開く"
    ],
    "psopenmemoryimage": [
        "ps_open_memory_image",
        "function.ps-open-memory-image.php",
        "GD 画像を受け取り、PS ドキュメントにはめ込む画像を返す"
    ],
    "psplaceimage": [
        "ps_place_image",
        "function.ps-place-image.php",
        "画像をページに配置する"
    ],
    "psrect": [
        "ps_rect",
        "function.ps-rect.php",
        "矩形を描く"
    ],
    "psrestore": [
        "ps_restore",
        "function.ps-restore.php",
        "以前に保存されたコンテキストを復元する"
    ],
    "psrotate": [
        "ps_rotate",
        "function.ps-rotate.php",
        "回転の程度を設定する"
    ],
    "pssave": [
        "ps_save",
        "function.ps-save.php",
        "現在のコンテキストを保存する"
    ],
    "psscale": [
        "ps_scale",
        "function.ps-scale.php",
        "縮尺を設定する"
    ],
    "pssetcolor": [
        "ps_setcolor",
        "function.ps-setcolor.php",
        "色を設定する"
    ],
    "pssetdash": [
        "ps_setdash",
        "function.ps-setdash.php",
        "破線の形状を設定する"
    ],
    "pssetflat": [
        "ps_setflat",
        "function.ps-setflat.php",
        "平面度を設定する"
    ],
    "pssetfont": [
        "ps_setfont",
        "function.ps-setfont.php",
        "以降の出力で用いるフォントを設定する"
    ],
    "pssetgray": [
        "ps_setgray",
        "function.ps-setgray.php",
        "グレー値を設定する"
    ],
    "pssetlinecap": [
        "ps_setlinecap",
        "function.ps-setlinecap.php",
        "線端の形状を設定する"
    ],
    "pssetlinejoin": [
        "ps_setlinejoin",
        "function.ps-setlinejoin.php",
        "線の連結方法を設定する"
    ],
    "pssetlinewidth": [
        "ps_setlinewidth",
        "function.ps-setlinewidth.php",
        "線幅を設定する"
    ],
    "pssetmiterlimit": [
        "ps_setmiterlimit",
        "function.ps-setmiterlimit.php",
        "miter limit 値を設定する"
    ],
    "pssetoverprintmode": [
        "ps_setoverprintmode",
        "function.ps-setoverprintmode.php",
        "overprint モードを設定する"
    ],
    "pssetpolydash": [
        "ps_setpolydash",
        "function.ps-setpolydash.php",
        "破線の形状を設定する"
    ],
    "pssetbordercolor": [
        "ps_set_border_color",
        "function.ps-set-border-color.php",
        "注記の枠線の色を設定する"
    ],
    "pssetborderdash": [
        "ps_set_border_dash",
        "function.ps-set-border-dash.php",
        "注記の枠線の、破線の状態を設定する"
    ],
    "pssetborderstyle": [
        "ps_set_border_style",
        "function.ps-set-border-style.php",
        "注記の枠線の形式を設定する"
    ],
    "pssetinfo": [
        "ps_set_info",
        "function.ps-set-info.php",
        "ドキュメントの情報を設定する"
    ],
    "pssetparameter": [
        "ps_set_parameter",
        "function.ps-set-parameter.php",
        "パラメータを設定する"
    ],
    "pssettextpos": [
        "ps_set_text_pos",
        "function.ps-set-text-pos.php",
        "テキストの出力位置を設定する"
    ],
    "pssetvalue": [
        "ps_set_value",
        "function.ps-set-value.php",
        "値を設定する"
    ],
    "psshading": [
        "ps_shading",
        "function.ps-shading.php",
        "以降の出力で用いるシェーディングを作成する"
    ],
    "psshadingpattern": [
        "ps_shading_pattern",
        "function.ps-shading-pattern.php",
        "シェーディング用のパターンを作成する"
    ],
    "psshfill": [
        "ps_shfill",
        "function.ps-shfill.php",
        "範囲をシェーディングで塗りつぶす"
    ],
    "psshow": [
        "ps_show",
        "function.ps-show.php",
        "テキストを出力する"
    ],
    "psshow2": [
        "ps_show2",
        "function.ps-show2.php",
        "テキストを現在の位置に出力する"
    ],
    "psshowboxed": [
        "ps_show_boxed",
        "function.ps-show-boxed.php",
        "テキストをボックス内に出力する"
    ],
    "psshowxy": [
        "ps_show_xy",
        "function.ps-show-xy.php",
        "指定された位置にテキストを出力する"
    ],
    "psshowxy2": [
        "ps_show_xy2",
        "function.ps-show-xy2.php",
        "テキストを指定した位置に出力する"
    ],
    "psstringwidth": [
        "ps_stringwidth",
        "function.ps-stringwidth.php",
        "文字列の幅を取得する"
    ],
    "psstringgeometry": [
        "ps_string_geometry",
        "function.ps-string-geometry.php",
        "文字列のジオメトリを取得する"
    ],
    "psstroke": [
        "ps_stroke",
        "function.ps-stroke.php",
        "現在のパスを描画する"
    ],
    "pssymbol": [
        "ps_symbol",
        "function.ps-symbol.php",
        "グリフを出力する"
    ],
    "pssymbolname": [
        "ps_symbol_name",
        "function.ps-symbol-name.php",
        "グリフ名を取得する"
    ],
    "pssymbolwidth": [
        "ps_symbol_width",
        "function.ps-symbol-width.php",
        "グリフの幅を取得する"
    ],
    "pstranslate": [
        "ps_translate",
        "function.ps-translate.php",
        "座標変換を設定する"
    ],
    "putenv": [
        "putenv",
        "function.putenv.php",
        "環境変数の値を設定する"
    ],
    "pxclose": [
        "px_close",
        "function.px-close.php",
        "paradox データベースを閉じる"
    ],
    "pxcreatefp": [
        "px_create_fp",
        "function.px-create-fp.php",
        "新しい paradox データベースを作成する"
    ],
    "pxdate2string": [
        "px_date2string",
        "function.px-date2string.php",
        "日付を文字列に変換する"
    ],
    "pxdelete": [
        "px_delete",
        "function.px-delete.php",
        "paradox データベースのリソースを削除する"
    ],
    "pxdeleterecord": [
        "px_delete_record",
        "function.px-delete-record.php",
        "paradox データベースからレコードを削除する"
    ],
    "pxgetfield": [
        "px_get_field",
        "function.px-get-field.php",
        "単一のフィールドの仕様を返す"
    ],
    "pxgetinfo": [
        "px_get_info",
        "function.px-get-info.php",
        "paradox ファイルに関する多くの情報を返す"
    ],
    "pxgetparameter": [
        "px_get_parameter",
        "function.px-get-parameter.php",
        "パラメータを取得する"
    ],
    "pxgetrecord": [
        "px_get_record",
        "function.px-get-record.php",
        "paradox データベースのレコードを返す"
    ],
    "pxgetschema": [
        "px_get_schema",
        "function.px-get-schema.php",
        "データベーススキーマを返す"
    ],
    "pxgetvalue": [
        "px_get_value",
        "function.px-get-value.php",
        "値を取得する"
    ],
    "pxinsertrecord": [
        "px_insert_record",
        "function.px-insert-record.php",
        "paradox データベースにレコードを挿入する"
    ],
    "pxnew": [
        "px_new",
        "function.px-new.php",
        "新しい paradox オブジェクトを作成する"
    ],
    "pxnumfields": [
        "px_numfields",
        "function.px-numfields.php",
        "データベース内のフィールドの数を返す"
    ],
    "pxnumrecords": [
        "px_numrecords",
        "function.px-numrecords.php",
        "データベース内のレコードの数を返す"
    ],
    "pxopenfp": [
        "px_open_fp",
        "function.px-open-fp.php",
        "paradox データベースをオープンする"
    ],
    "pxputrecord": [
        "px_put_record",
        "function.px-put-record.php",
        "paradox データベースにレコードを保存する"
    ],
    "pxretrieverecord": [
        "px_retrieve_record",
        "function.px-retrieve-record.php",
        "paradox データベースのレコードを返す"
    ],
    "pxsetblobfile": [
        "px_set_blob_file",
        "function.px-set-blob-file.php",
        "blob を読み込むファイル名を設定する"
    ],
    "pxsetparameter": [
        "px_set_parameter",
        "function.px-set-parameter.php",
        "パラメータを設定する"
    ],
    "pxsettablename": [
        "px_set_tablename",
        "function.px-set-tablename.php",
        "テーブルの名前を設定する (非推奨)"
    ],
    "pxsettargetencoding": [
        "px_set_targetencoding",
        "function.px-set-targetencoding.php",
        "文字フィールドのエンコーディングを設定する (非推奨)"
    ],
    "pxsetvalue": [
        "px_set_value",
        "function.px-set-value.php",
        "値を設定する"
    ],
    "pxtimestamp2string": [
        "px_timestamp2string",
        "function.px-timestamp2string.php",
        "タイムスタンプを文字列に変換する"
    ],
    "pxupdaterecord": [
        "px_update_record",
        "function.px-update-record.php",
        "paradox データベースのレコードを更新する"
    ],
    "QuickHashIntHashadd": [
        "QuickHashIntHash::add",
        "quickhashinthash.add.php",
        "新たなエントリをハッシュに追加する"
    ],
    "QuickHashIntHashdelete": [
        "QuickHashIntHash::delete",
        "quickhashinthash.delete.php",
        "エントリをハッシュから削除する"
    ],
    "QuickHashIntHashexists": [
        "QuickHashIntHash::exists",
        "quickhashinthash.exists.php",
        "キーがハッシュに存在するかどうかを調べる"
    ],
    "QuickHashIntHashget": [
        "QuickHashIntHash::get",
        "quickhashinthash.get.php",
        "キーを指定してハッシュから値を取得する"
    ],
    "QuickHashIntHashgetSize": [
        "QuickHashIntHash::getSize",
        "quickhashinthash.getsize.php",
        "ハッシュの要素数を返す"
    ],
    "QuickHashIntHashloadFromFile": [
        "QuickHashIntHash::loadFromFile",
        "quickhashinthash.loadfromfile.php",
        "ファイルからハッシュを作るファクトリーメソッド"
    ],
    "QuickHashIntHashloadFromString": [
        "QuickHashIntHash::loadFromString",
        "quickhashinthash.loadfromstring.php",
        "文字列からハッシュを作るファクトリーメソッド"
    ],
    "QuickHashIntHashsaveToFile": [
        "QuickHashIntHash::saveToFile",
        "quickhashinthash.savetofile.php",
        "メモリ上のハッシュをディスクに保存する"
    ],
    "QuickHashIntHashsaveToString": [
        "QuickHashIntHash::saveToString",
        "quickhashinthash.savetostring.php",
        "シリアライズしたハッシュを返す"
    ],
    "QuickHashIntHashset": [
        "QuickHashIntHash::set",
        "quickhashinthash.set.php",
        "ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加) する"
    ],
    "QuickHashIntHashupdate": [
        "QuickHashIntHash::update",
        "quickhashinthash.update.php",
        "ハッシュのエントリを新しい値で更新する"
    ],
    "QuickHashIntHashconstruct": [
        "QuickHashIntHash::__construct",
        "quickhashinthash.construct.php",
        "新しい QuickHashIntHash オブジェクトを作る"
    ],
    "QuickHashIntSetadd": [
        "QuickHashIntSet::add",
        "quickhashintset.add.php",
        "新たなエントリをセットに追加する"
    ],
    "QuickHashIntSetdelete": [
        "QuickHashIntSet::delete",
        "quickhashintset.delete.php",
        "エントリをセットから削除する"
    ],
    "QuickHashIntSetexists": [
        "QuickHashIntSet::exists",
        "quickhashintset.exists.php",
        "キーがセットに存在するかどうかを調べる"
    ],
    "QuickHashIntSetgetSize": [
        "QuickHashIntSet::getSize",
        "quickhashintset.getsize.php",
        "セットの要素数を返す"
    ],
    "QuickHashIntSetloadFromFile": [
        "QuickHashIntSet::loadFromFile",
        "quickhashintset.loadfromfile.php",
        "ファイルからセットを作るファクトリーメソッド"
    ],
    "QuickHashIntSetloadFromString": [
        "QuickHashIntSet::loadFromString",
        "quickhashintset.loadfromstring.php",
        "文字列からセットを作るファクトリーメソッド"
    ],
    "QuickHashIntSetsaveToFile": [
        "QuickHashIntSet::saveToFile",
        "quickhashintset.savetofile.php",
        "メモリ上のセットをディスクに保存する"
    ],
    "QuickHashIntSetsaveToString": [
        "QuickHashIntSet::saveToString",
        "quickhashintset.savetostring.php",
        "シリアライズしたセットを返す"
    ],
    "QuickHashIntSetconstruct": [
        "QuickHashIntSet::__construct",
        "quickhashintset.construct.php",
        "新しい QuickHashIntSet オブジェクトを作る"
    ],
    "QuickHashIntStringHashadd": [
        "QuickHashIntStringHash::add",
        "quickhashintstringhash.add.php",
        "新たなエントリをハッシュに追加する"
    ],
    "QuickHashIntStringHashdelete": [
        "QuickHashIntStringHash::delete",
        "quickhashintstringhash.delete.php",
        "エントリをハッシュから削除する"
    ],
    "QuickHashIntStringHashexists": [
        "QuickHashIntStringHash::exists",
        "quickhashintstringhash.exists.php",
        "キーがハッシュに存在するかどうかを調べる"
    ],
    "QuickHashIntStringHashget": [
        "QuickHashIntStringHash::get",
        "quickhashintstringhash.get.php",
        "キーを指定してハッシュから値を取得する"
    ],
    "QuickHashIntStringHashgetSize": [
        "QuickHashIntStringHash::getSize",
        "quickhashintstringhash.getsize.php",
        "ハッシュの要素数を返す"
    ],
    "QuickHashIntStringHashloadFromFile": [
        "QuickHashIntStringHash::loadFromFile",
        "quickhashintstringhash.loadfromfile.php",
        "ファイルからハッシュを作るファクトリーメソッド"
    ],
    "QuickHashIntStringHashloadFromString": [
        "QuickHashIntStringHash::loadFromString",
        "quickhashintstringhash.loadfromstring.php",
        "文字列からハッシュを作るファクトリーメソッド"
    ],
    "QuickHashIntStringHashsaveToFile": [
        "QuickHashIntStringHash::saveToFile",
        "quickhashintstringhash.savetofile.php",
        "メモリ上のハッシュをディスクに保存する"
    ],
    "QuickHashIntStringHashsaveToString": [
        "QuickHashIntStringHash::saveToString",
        "quickhashintstringhash.savetostring.php",
        "シリアライズしたハッシュを返す"
    ],
    "QuickHashIntStringHashset": [
        "QuickHashIntStringHash::set",
        "quickhashintstringhash.set.php",
        "ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加) する"
    ],
    "QuickHashIntStringHashupdate": [
        "QuickHashIntStringHash::update",
        "quickhashintstringhash.update.php",
        "ハッシュのエントリを新しい値で更新する"
    ],
    "QuickHashIntStringHashconstruct": [
        "QuickHashIntStringHash::__construct",
        "quickhashintstringhash.construct.php",
        "新しい QuickHashIntStringHash オブジェクトを作る"
    ],
    "QuickHashStringIntHashadd": [
        "QuickHashStringIntHash::add",
        "quickhashstringinthash.add.php",
        "新たなエントリをハッシュに追加する"
    ],
    "QuickHashStringIntHashdelete": [
        "QuickHashStringIntHash::delete",
        "quickhashstringinthash.delete.php",
        "エントリをハッシュから削除する"
    ],
    "QuickHashStringIntHashexists": [
        "QuickHashStringIntHash::exists",
        "quickhashstringinthash.exists.php",
        "キーがハッシュに存在するかどうかを調べる"
    ],
    "QuickHashStringIntHashget": [
        "QuickHashStringIntHash::get",
        "quickhashstringinthash.get.php",
        "キーを指定してハッシュから値を取得する"
    ],
    "QuickHashStringIntHashgetSize": [
        "QuickHashStringIntHash::getSize",
        "quickhashstringinthash.getsize.php",
        "ハッシュの要素数を返す"
    ],
    "QuickHashStringIntHashloadFromFile": [
        "QuickHashStringIntHash::loadFromFile",
        "quickhashstringinthash.loadfromfile.php",
        "ファイルからハッシュを作るファクトリーメソッド"
    ],
    "QuickHashStringIntHashloadFromString": [
        "QuickHashStringIntHash::loadFromString",
        "quickhashstringinthash.loadfromstring.php",
        "文字列からハッシュを作るファクトリーメソッド"
    ],
    "QuickHashStringIntHashsaveToFile": [
        "QuickHashStringIntHash::saveToFile",
        "quickhashstringinthash.savetofile.php",
        "メモリ上のハッシュをディスクに保存する"
    ],
    "QuickHashStringIntHashsaveToString": [
        "QuickHashStringIntHash::saveToString",
        "quickhashstringinthash.savetostring.php",
        "シリアライズしたハッシュを返す"
    ],
    "QuickHashStringIntHashset": [
        "QuickHashStringIntHash::set",
        "quickhashstringinthash.set.php",
        "ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加) する"
    ],
    "QuickHashStringIntHashupdate": [
        "QuickHashStringIntHash::update",
        "quickhashstringinthash.update.php",
        "ハッシュのエントリを新しい値で更新する"
    ],
    "QuickHashStringIntHashconstruct": [
        "QuickHashStringIntHash::__construct",
        "quickhashstringinthash.construct.php",
        "新しい QuickHashStringIntHash オブジェクトを作る"
    ],
    "quotedprintabledecode": [
        "quoted_printable_decode",
        "function.quoted-printable-decode.php",
        "quoted-printable 文字列を 8 ビット文字列に変換する"
    ],
    "quotedprintableencode": [
        "quoted_printable_encode",
        "function.quoted-printable-encode.php",
        "8 ビット文字列を quoted-printable 文字列に変換する"
    ],
    "quotemeta": [
        "quotemeta",
        "function.quotemeta.php",
        "メタ文字をクォートする"
    ],
    "rad2deg": [
        "rad2deg",
        "function.rad2deg.php",
        "ラジアン単位の数値を度単位に変換する"
    ],
    "radiusacctopen": [
        "radius_acct_open",
        "function.radius-acct-open.php",
        "課金用の Radius ハンドルを作成する"
    ],
    "radiusaddserver": [
        "radius_add_server",
        "function.radius-add-server.php",
        "サーバーを追加する"
    ],
    "radiusauthopen": [
        "radius_auth_open",
        "function.radius-auth-open.php",
        "認証用の Radius ハンドルを作成する"
    ],
    "radiusclose": [
        "radius_close",
        "function.radius-close.php",
        "すべてのリソースを開放する"
    ],
    "radiusconfig": [
        "radius_config",
        "function.radius-config.php",
        "指定した設定ファイルをライブラリに読み込ませる"
    ],
    "radiuscreaterequest": [
        "radius_create_request",
        "function.radius-create-request.php",
        "課金あるいは認証のリクエストを作成する"
    ],
    "radiuscvtaddr": [
        "radius_cvt_addr",
        "function.radius-cvt-addr.php",
        "生データを IP アドレスに変換する"
    ],
    "radiuscvtint": [
        "radius_cvt_int",
        "function.radius-cvt-int.php",
        "生データを整数に変換する"
    ],
    "radiuscvtstring": [
        "radius_cvt_string",
        "function.radius-cvt-string.php",
        "生データを文字列に変換する"
    ],
    "radiusdemangle": [
        "radius_demangle",
        "function.radius-demangle.php",
        "データを復元する"
    ],
    "radiusdemanglemppekey": [
        "radius_demangle_mppe_key",
        "function.radius-demangle-mppe-key.php",
        "変形されたデータから mppe キーを得る"
    ],
    "radiusgetattr": [
        "radius_get_attr",
        "function.radius-get-attr.php",
        "属性を取得する"
    ],
    "radiusgettaggedattrdata": [
        "radius_get_tagged_attr_data",
        "function.radius-get-tagged-attr-data.php",
        "Extracts the data from a tagged attribute"
    ],
    "radiusgettaggedattrtag": [
        "radius_get_tagged_attr_tag",
        "function.radius-get-tagged-attr-tag.php",
        "Extracts the tag from a tagged attribute"
    ],
    "radiusgetvendorattr": [
        "radius_get_vendor_attr",
        "function.radius-get-vendor-attr.php",
        "ベンダ固有の属性を取得する"
    ],
    "radiusputaddr": [
        "radius_put_addr",
        "function.radius-put-addr.php",
        "IP アドレス属性を設定する"
    ],
    "radiusputattr": [
        "radius_put_attr",
        "function.radius-put-attr.php",
        "バイナリ属性を設定する"
    ],
    "radiusputint": [
        "radius_put_int",
        "function.radius-put-int.php",
        "整数属性を設定する"
    ],
    "radiusputstring": [
        "radius_put_string",
        "function.radius-put-string.php",
        "文字列属性を設定する"
    ],
    "radiusputvendoraddr": [
        "radius_put_vendor_addr",
        "function.radius-put-vendor-addr.php",
        "ベンダー固有の IP アドレス属性を設定する"
    ],
    "radiusputvendorattr": [
        "radius_put_vendor_attr",
        "function.radius-put-vendor-attr.php",
        "ベンダー固有のバイナリ属性を設定する"
    ],
    "radiusputvendorint": [
        "radius_put_vendor_int",
        "function.radius-put-vendor-int.php",
        "ベンダー固有の整数属性を設定する"
    ],
    "radiusputvendorstring": [
        "radius_put_vendor_string",
        "function.radius-put-vendor-string.php",
        "ベンダー固有の文字列属性を設定する"
    ],
    "radiusrequestauthenticator": [
        "radius_request_authenticator",
        "function.radius-request-authenticator.php",
        "リクエスト認証子を返す"
    ],
    "radiussaltencryptattr": [
        "radius_salt_encrypt_attr",
        "function.radius-salt-encrypt-attr.php",
        "Salt-encrypts a value"
    ],
    "radiussendrequest": [
        "radius_send_request",
        "function.radius-send-request.php",
        "リクエストを送信し、応答を待つ"
    ],
    "radiusserversecret": [
        "radius_server_secret",
        "function.radius-server-secret.php",
        "共有秘密鍵を返す"
    ],
    "radiusstrerror": [
        "radius_strerror",
        "function.radius-strerror.php",
        "エラーメッセージを返す"
    ],
    "rand": [
        "rand",
        "function.rand.php",
        "乱数を生成する"
    ],
    "randombytes": [
        "random_bytes",
        "function.random-bytes.php",
        "暗号論的に安全な、疑似ランダムなバイト列を生成する"
    ],
    "randomint": [
        "random_int",
        "function.random-int.php",
        "暗号論的に安全な疑似乱数を生成する"
    ],
    "range": [
        "range",
        "function.range.php",
        "ある範囲の整数を有する配列を作成する"
    ],
    "rar": [
        "rar://",
        "wrappers.rar.php",
        "RAR"
    ],
    "RarArchiveclose": [
        "RarArchive::close",
        "rararchive.close.php",
        "Rar アーカイブをクローズし、全リソースを開放する"
    ],
    "RarArchivegetComment": [
        "RarArchive::getComment",
        "rararchive.getcomment.php",
        "RAR アーカイブのコメントテキストを取得する"
    ],
    "RarArchivegetEntries": [
        "RarArchive::getEntries",
        "rararchive.getentries.php",
        "RAR アーカイブからエントリの全一覧を取得する"
    ],
    "RarArchivegetEntry": [
        "RarArchive::getEntry",
        "rararchive.getentry.php",
        "Rar アーカイブからエントリオブジェクトを取得する"
    ],
    "RarArchiveisBroken": [
        "RarArchive::isBroken",
        "rararchive.isbroken.php",
        "アーカイブが壊れている (未完成である) かどうかを調べる"
    ],
    "RarArchiveisSolid": [
        "RarArchive::isSolid",
        "rararchive.issolid.php",
        "RAR アーカイブがソリッドであるかどうかを調べる"
    ],
    "RarArchiveopen": [
        "RarArchive::open",
        "rararchive.open.php",
        "Rar アーカイブをオープンする"
    ],
    "RarArchivesetAllowBroken": [
        "RarArchive::setAllowBroken",
        "rararchive.setallowbroken.php",
        "壊れたアーカイブのオープンを許可するかどうかを設定する"
    ],
    "RarArchivetoString": [
        "RarArchive::__toString",
        "rararchive.tostring.php",
        "テキスト形式で取得する"
    ],
    "RarEntryextract": [
        "RarEntry::extract",
        "rarentry.extract.php",
        "アーカイブのエントリを展開する"
    ],
    "RarEntrygetAttr": [
        "RarEntry::getAttr",
        "rarentry.getattr.php",
        "エントリの属性を取得する"
    ],
    "RarEntrygetCrc": [
        "RarEntry::getCrc",
        "rarentry.getcrc.php",
        "エントリの CRC を取得する"
    ],
    "RarEntrygetFileTime": [
        "RarEntry::getFileTime",
        "rarentry.getfiletime.php",
        "エントリの最終更新時刻を取得する"
    ],
    "RarEntrygetHostOs": [
        "RarEntry::getHostOs",
        "rarentry.gethostos.php",
        "エントリのホスト OS を取得する"
    ],
    "RarEntrygetMethod": [
        "RarEntry::getMethod",
        "rarentry.getmethod.php",
        "エントリの圧縮方法を取得する"
    ],
    "RarEntrygetName": [
        "RarEntry::getName",
        "rarentry.getname.php",
        "エントリの名前を取得する"
    ],
    "RarEntrygetPackedSize": [
        "RarEntry::getPackedSize",
        "rarentry.getpackedsize.php",
        "圧縮後のエントリのサイズを取得する"
    ],
    "RarEntrygetStream": [
        "RarEntry::getStream",
        "rarentry.getstream.php",
        "このエントリのファイルハンドラを取得する"
    ],
    "RarEntrygetUnpackedSize": [
        "RarEntry::getUnpackedSize",
        "rarentry.getunpackedsize.php",
        "展開後のエントリのサイズを取得する"
    ],
    "RarEntrygetVersion": [
        "RarEntry::getVersion",
        "rarentry.getversion.php",
        "このエントリを展開するのに必要な RAR プログラムの最低バージョンを取得する"
    ],
    "RarEntryisDirectory": [
        "RarEntry::isDirectory",
        "rarentry.isdirectory.php",
        "このエントリがディレクトリであるかどうかを調べる"
    ],
    "RarEntryisEncrypted": [
        "RarEntry::isEncrypted",
        "rarentry.isencrypted.php",
        "このエントリが暗号化されているかどうかを調べる"
    ],
    "RarEntrytoString": [
        "RarEntry::__toString",
        "rarentry.tostring.php",
        "エントリのテキスト表現を取得する"
    ],
    "RarExceptionisUsingExceptions": [
        "RarException::isUsingExceptions",
        "rarexception.isusingexceptions.php",
        "例外によるエラー処理を使っているかどうかを調べる"
    ],
    "RarExceptionsetUsingExceptions": [
        "RarException::setUsingExceptions",
        "rarexception.setusingexceptions.php",
        "例外によるエラー処理の有効化および無効化を行う"
    ],
    "rarwrappercachestats": [
        "rar_wrapper_cache_stats",
        "function.rar-wrapper-cache-stats.php",
        "URL ラッパーのキャッシュのヒット数"
    ],
    "rawurldecode": [
        "rawurldecode",
        "function.rawurldecode.php",
        "URL エンコードされた文字列をデコードする"
    ],
    "rawurlencode": [
        "rawurlencode",
        "function.rawurlencode.php",
        "RFC 3986 に基づき URL エンコードを行う"
    ],
    "readdir": [
        "readdir",
        "function.readdir.php",
        "ディレクトリハンドルからエントリを読み込む"
    ],
    "readfile": [
        "readfile",
        "function.readfile.php",
        "ファイルを出力する"
    ],
    "readgzfile": [
        "readgzfile",
        "function.readgzfile.php",
        "gz ファイルを出力する"
    ],
    "readline": [
        "readline",
        "function.readline.php",
        "一行読み込む"
    ],
    "readlineaddhistory": [
        "readline_add_history",
        "function.readline-add-history.php",
        "ヒストリに 1 行追加する"
    ],
    "readlinecallbackhandlerremove": [
        "readline_callback_handler_remove",
        "function.readline-callback-handler-remove.php",
        "インストールされたハンドラを削除し、端末の設定をもとに戻す"
    ],
    "readlinecallbackreadchar": [
        "readline_callback_read_char",
        "function.readline-callback-read-char.php",
        "文字を読み込み、改行を受け取ると readline コールバックインターフェイスに通知する"
    ],
    "readlineclearhistory": [
        "readline_clear_history",
        "function.readline-clear-history.php",
        "ヒストリをクリアする"
    ],
    "readlinecompletionfunction": [
        "readline_completion_function",
        "function.readline-completion-function.php",
        "補完関数を登録する"
    ],
    "readlineinfo": [
        "readline_info",
        "function.readline-info.php",
        "種々の readline の内部変数を取得/設定する"
    ],
    "readlinelisthistory": [
        "readline_list_history",
        "function.readline-list-history.php",
        "ヒストリを一覧表示する"
    ],
    "readlineonnewline": [
        "readline_on_new_line",
        "function.readline-on-new-line.php",
        "カーソルが新しい行に移動したことを readline に通知する"
    ],
    "readlinereadhistory": [
        "readline_read_history",
        "function.readline-read-history.php",
        "ヒストリを読み込む"
    ],
    "readlineredisplay": [
        "readline_redisplay",
        "function.readline-redisplay.php",
        "画面を再描画する"
    ],
    "readlinewritehistory": [
        "readline_write_history",
        "function.readline-write-history.php",
        "ヒストリを書きこむ"
    ],
    "readlink": [
        "readlink",
        "function.readlink.php",
        "シンボリックリンク先を返す"
    ],
    "readexifdata": [
        "read_exif_data",
        "function.read-exif-data.php",
        "のエイリアス exif_read_data"
    ],
    "realpath": [
        "realpath",
        "function.realpath.php",
        "正規化された絶対パス名を返す"
    ],
    "realpathcacheget": [
        "realpath_cache_get",
        "function.realpath-cache-get.php",
        "realpath キャッシュ・エントリーを取得"
    ],
    "realpathcachesize": [
        "realpath_cache_size",
        "function.realpath-cache-size.php",
        "realpath キャッシュサイズを取得"
    ],
    "recode": [
        "recode",
        "function.recode.php",
        "recode_string のエイリアス"
    ],
    "recodefile": [
        "recode_file",
        "function.recode-file.php",
        "コード変換指令に基づきファイルからファイルにコード変換する"
    ],
    "recodestring": [
        "recode_string",
        "function.recode-string.php",
        "コード変換指令に基づき文字列のコードを変換する"
    ],
    "RecursiveArrayIteratorgetChildren": [
        "RecursiveArrayIterator::getChildren",
        "recursivearrayiterator.getchildren.php",
        "現在のエントリが配列あるいはオブジェクトである場合に、そのイテレータを返す"
    ],
    "RecursiveArrayIteratorhasChildren": [
        "RecursiveArrayIterator::hasChildren",
        "recursivearrayiterator.haschildren.php",
        "現在のエントリが配列あるいはオブジェクトであるかどうかを返す"
    ],
    "RecursiveCachingIteratorgetChildren": [
        "RecursiveCachingIterator::getChildren",
        "recursivecachingiterator.getchildren.php",
        "内部イテレータの子を RecursiveCachingIterator として返す"
    ],
    "RecursiveCachingIteratorhasChildren": [
        "RecursiveCachingIterator::hasChildren",
        "recursivecachingiterator.haschildren.php",
        "内部イテレータの現在の要素が子を持つかどうかチェックする"
    ],
    "RecursiveCachingIteratorconstruct": [
        "RecursiveCachingIterator::__construct",
        "recursivecachingiterator.construct.php",
        "コンストラクタ"
    ],
    "RecursiveCallbackFilterIteratorgetChildren": [
        "RecursiveCallbackFilterIterator::getChildren",
        "recursivecallbackfilteriterator.getchildren.php",
        "RecursiveCallbackFilterIterator に含まれる内部イテレータの子を返す"
    ],
    "RecursiveCallbackFilterIteratorhasChildren": [
        "RecursiveCallbackFilterIterator::hasChildren",
        "recursivecallbackfilteriterator.haschildren.php",
        "内部イテレータの現在の要素が子を持つかどうかを調べる"
    ],
    "RecursiveCallbackFilterIteratorconstruct": [
        "RecursiveCallbackFilterIterator::__construct",
        "recursivecallbackfilteriterator.construct.php",
        "RecursiveIterator から RecursiveCallbackFilterIterator を作成する"
    ],
    "RecursiveDirectoryIteratorgetChildren": [
        "RecursiveDirectoryIterator::getChildren",
        "recursivedirectoryiterator.getchildren.php",
        "ディレクトリであれば、現在のエントリに対するイテレータを返す"
    ],
    "RecursiveDirectoryIteratorgetSubPath": [
        "RecursiveDirectoryIterator::getSubPath",
        "recursivedirectoryiterator.getsubpath.php",
        "サブパスを取得する"
    ],
    "RecursiveDirectoryIteratorgetSubPathname": [
        "RecursiveDirectoryIterator::getSubPathname",
        "recursivedirectoryiterator.getsubpathname.php",
        "サブパスと名前を取得する"
    ],
    "RecursiveDirectoryIteratorhasChildren": [
        "RecursiveDirectoryIterator::hasChildren",
        "recursivedirectoryiterator.haschildren.php",
        "現在のエントリがディレクトリかつ '.' もしくは '..' でないかどうかを返す"
    ],
    "RecursiveDirectoryIteratorkey": [
        "RecursiveDirectoryIterator::key",
        "recursivedirectoryiterator.key.php",
        "現在のディレクトリエントリのパスとファイル名を返す"
    ],
    "RecursiveDirectoryIteratornext": [
        "RecursiveDirectoryIterator::next",
        "recursivedirectoryiterator.next.php",
        "次のエントリに移動する"
    ],
    "RecursiveDirectoryIteratorrewind": [
        "RecursiveDirectoryIterator::rewind",
        "recursivedirectoryiterator.rewind.php",
        "ディレクトリを最初に巻き戻す"
    ],
    "RecursiveDirectoryIteratorconstruct": [
        "RecursiveDirectoryIterator::__construct",
        "recursivedirectoryiterator.construct.php",
        "RecursiveDirectoryIterator を作成する"
    ],
    "RecursiveFilterIteratorgetChildren": [
        "RecursiveFilterIterator::getChildren",
        "recursivefilteriterator.getchildren.php",
        "RecursiveFilterIterator に含まれる内部イテレータの子を返す"
    ],
    "RecursiveFilterIteratorhasChildren": [
        "RecursiveFilterIterator::hasChildren",
        "recursivefilteriterator.haschildren.php",
        "内部イテレータの現在の要素が子を持つかどうかを調べる"
    ],
    "RecursiveFilterIteratorconstruct": [
        "RecursiveFilterIterator::__construct",
        "recursivefilteriterator.construct.php",
        "RecursiveIterator から RecursiveFilterIterator を作成する"
    ],
    "RecursiveIteratorgetChildren": [
        "RecursiveIterator::getChildren",
        "recursiveiterator.getchildren.php",
        "現在のエントリのイテレータを返す"
    ],
    "RecursiveIteratorhasChildren": [
        "RecursiveIterator::hasChildren",
        "recursiveiterator.haschildren.php",
        "現在のエントリのイテレータを作れるかどうかを返す"
    ],
    "RecursiveIteratorIteratorbeginChildren": [
        "RecursiveIteratorIterator::beginChildren",
        "recursiveiteratoriterator.beginchildren.php",
        "子を開始する"
    ],
    "RecursiveIteratorIteratorbeginIteration": [
        "RecursiveIteratorIterator::beginIteration",
        "recursiveiteratoriterator.beginiteration.php",
        "反復処理を開始する"
    ],
    "RecursiveIteratorIteratorcallGetChildren": [
        "RecursiveIteratorIterator::callGetChildren",
        "recursiveiteratoriterator.callgetchildren.php",
        "子を取得する"
    ],
    "RecursiveIteratorIteratorcallHasChildren": [
        "RecursiveIteratorIterator::callHasChildren",
        "recursiveiteratoriterator.callhaschildren.php",
        "子を持つかどうかを調べる"
    ],
    "RecursiveIteratorIteratorcurrent": [
        "RecursiveIteratorIterator::current",
        "recursiveiteratoriterator.current.php",
        "現在の要素の値にアクセスする"
    ],
    "RecursiveIteratorIteratorendChildren": [
        "RecursiveIteratorIterator::endChildren",
        "recursiveiteratoriterator.endchildren.php",
        "子を終了する"
    ],
    "RecursiveIteratorIteratorendIteration": [
        "RecursiveIteratorIterator::endIteration",
        "recursiveiteratoriterator.enditeration.php",
        "反復処理を終了する"
    ],
    "RecursiveIteratorIteratorgetDepth": [
        "RecursiveIteratorIterator::getDepth",
        "recursiveiteratoriterator.getdepth.php",
        "再帰的なイテレーションにおける現在の深さを取得する"
    ],
    "RecursiveIteratorIteratorgetInnerIterator": [
        "RecursiveIteratorIterator::getInnerIterator",
        "recursiveiteratoriterator.getinneriterator.php",
        "内部イテレータを取得する"
    ],
    "RecursiveIteratorIteratorgetMaxDepth": [
        "RecursiveIteratorIterator::getMaxDepth",
        "recursiveiteratoriterator.getmaxdepth.php",
        "最大の深さを取得する"
    ],
    "RecursiveIteratorIteratorgetSubIterator": [
        "RecursiveIteratorIterator::getSubIterator",
        "recursiveiteratoriterator.getsubiterator.php",
        "現在の有効なサブイテレータを取得する"
    ],
    "RecursiveIteratorIteratorkey": [
        "RecursiveIteratorIterator::key",
        "recursiveiteratoriterator.key.php",
        "現在のキーにアクセスする"
    ],
    "RecursiveIteratorIteratornext": [
        "RecursiveIteratorIterator::next",
        "recursiveiteratoriterator.next.php",
        "次の要素に移動する"
    ],
    "RecursiveIteratorIteratornextElement": [
        "RecursiveIteratorIterator::nextElement",
        "recursiveiteratoriterator.nextelement.php",
        "次の要素"
    ],
    "RecursiveIteratorIteratorrewind": [
        "RecursiveIteratorIterator::rewind",
        "recursiveiteratoriterator.rewind.php",
        "トップレベルの内部イテレータの先頭要素にイテレータを巻き戻す"
    ],
    "RecursiveIteratorIteratorsetMaxDepth": [
        "RecursiveIteratorIterator::setMaxDepth",
        "recursiveiteratoriterator.setmaxdepth.php",
        "最大の深さを設定する"
    ],
    "RecursiveIteratorIteratorvalid": [
        "RecursiveIteratorIterator::valid",
        "recursiveiteratoriterator.valid.php",
        "現在の位置が有効かどうかをチェックする"
    ],
    "RecursiveIteratorIteratorconstruct": [
        "RecursiveIteratorIterator::__construct",
        "recursiveiteratoriterator.construct.php",
        "RecursiveIteratorIterator を作成する"
    ],
    "RecursiveRegexIteratorgetChildren": [
        "RecursiveRegexIterator::getChildren",
        "recursiveregexiterator.getchildren.php",
        "現在のエントリのイテレータを返す"
    ],
    "RecursiveRegexIteratorhasChildren": [
        "RecursiveRegexIterator::hasChildren",
        "recursiveregexiterator.haschildren.php",
        "現在のエントリのイテレータが取得可能かどうかを返す"
    ],
    "RecursiveRegexIteratorconstruct": [
        "RecursiveRegexIterator::__construct",
        "recursiveregexiterator.construct.php",
        "新しい RecursiveRegexIterator を作成する"
    ],
    "RecursiveTreeIteratorbeginChildren": [
        "RecursiveTreeIterator::beginChildren",
        "recursivetreeiterator.beginchildren.php",
        "子を開始する"
    ],
    "RecursiveTreeIteratorbeginIteration": [
        "RecursiveTreeIterator::beginIteration",
        "recursivetreeiterator.beginiteration.php",
        "反復処理を開始する"
    ],
    "RecursiveTreeIteratorcallGetChildren": [
        "RecursiveTreeIterator::callGetChildren",
        "recursivetreeiterator.callgetchildren.php",
        "子を取得する"
    ],
    "RecursiveTreeIteratorcallHasChildren": [
        "RecursiveTreeIterator::callHasChildren",
        "recursivetreeiterator.callhaschildren.php",
        "子を持っているかどうかを調べる"
    ],
    "RecursiveTreeIteratorcurrent": [
        "RecursiveTreeIterator::current",
        "recursivetreeiterator.current.php",
        "現在の要素を取得する"
    ],
    "RecursiveTreeIteratorendChildren": [
        "RecursiveTreeIterator::endChildren",
        "recursivetreeiterator.endchildren.php",
        "子を終了する"
    ],
    "RecursiveTreeIteratorendIteration": [
        "RecursiveTreeIterator::endIteration",
        "recursivetreeiterator.enditeration.php",
        "反復処理を終了する"
    ],
    "RecursiveTreeIteratorgetEntry": [
        "RecursiveTreeIterator::getEntry",
        "recursivetreeiterator.getentry.php",
        "現在のエントリを取得する"
    ],
    "RecursiveTreeIteratorgetPostfix": [
        "RecursiveTreeIterator::getPostfix",
        "recursivetreeiterator.getpostfix.php",
        "接尾辞を取得する"
    ],
    "RecursiveTreeIteratorgetPrefix": [
        "RecursiveTreeIterator::getPrefix",
        "recursivetreeiterator.getprefix.php",
        "接頭辞を取得する"
    ],
    "RecursiveTreeIteratorkey": [
        "RecursiveTreeIterator::key",
        "recursivetreeiterator.key.php",
        "現在の要素のキーを取得する"
    ],
    "RecursiveTreeIteratornext": [
        "RecursiveTreeIterator::next",
        "recursivetreeiterator.next.php",
        "次の要素に移動する"
    ],
    "RecursiveTreeIteratornextElement": [
        "RecursiveTreeIterator::nextElement",
        "recursivetreeiterator.nextelement.php",
        "次の要素"
    ],
    "RecursiveTreeIteratorrewind": [
        "RecursiveTreeIterator::rewind",
        "recursivetreeiterator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "RecursiveTreeIteratorsetPostfix": [
        "RecursiveTreeIterator::setPostfix",
        "recursivetreeiterator.setpostfix.php",
        "postfix を設定する"
    ],
    "RecursiveTreeIteratorsetPrefixPart": [
        "RecursiveTreeIterator::setPrefixPart",
        "recursivetreeiterator.setprefixpart.php",
        "接頭辞の部分を設定する"
    ],
    "RecursiveTreeIteratorvalid": [
        "RecursiveTreeIterator::valid",
        "recursivetreeiterator.valid.php",
        "有効性を調べる"
    ],
    "RecursiveTreeIteratorconstruct": [
        "RecursiveTreeIterator::__construct",
        "recursivetreeiterator.construct.php",
        "RecursiveTreeIterator を作成する"
    ],
    "Reflectionexport": [
        "Reflection::export",
        "reflection.export.php",
        "エクスポートする"
    ],
    "ReflectiongetModifierNames": [
        "Reflection::getModifierNames",
        "reflection.getmodifiernames.php",
        "修飾子の名前を取得する"
    ],
    "ReflectionClassexport": [
        "ReflectionClass::export",
        "reflectionclass.export.php",
        "クラスをエクスポートする"
    ],
    "ReflectionClassgetConstant": [
        "ReflectionClass::getConstant",
        "reflectionclass.getconstant.php",
        "定義されている定数を取得する"
    ],
    "ReflectionClassgetConstants": [
        "ReflectionClass::getConstants",
        "reflectionclass.getconstants.php",
        "定数を取得する"
    ],
    "ReflectionClassgetConstructor": [
        "ReflectionClass::getConstructor",
        "reflectionclass.getconstructor.php",
        "クラスのコンストラクタを取得する"
    ],
    "ReflectionClassgetDefaultProperties": [
        "ReflectionClass::getDefaultProperties",
        "reflectionclass.getdefaultproperties.php",
        "デフォルトプロパティを取得する"
    ],
    "ReflectionClassgetDocComment": [
        "ReflectionClass::getDocComment",
        "reflectionclass.getdoccomment.php",
        "ドキュメントコメントを取得する"
    ],
    "ReflectionClassgetEndLine": [
        "ReflectionClass::getEndLine",
        "reflectionclass.getendline.php",
        "終了行を取得する"
    ],
    "ReflectionClassgetExtension": [
        "ReflectionClass::getExtension",
        "reflectionclass.getextension.php",
        "クラスを定義する拡張モジュールを表す ReflectionExtension オブジェクトを取得する"
    ],
    "ReflectionClassgetExtensionName": [
        "ReflectionClass::getExtensionName",
        "reflectionclass.getextensionname.php",
        "クラスを定義する拡張モジュールの名前を取得する"
    ],
    "ReflectionClassgetFileName": [
        "ReflectionClass::getFileName",
        "reflectionclass.getfilename.php",
        "クラスが定義されているファイルのファイル名を取得する"
    ],
    "ReflectionClassgetInterfaceNames": [
        "ReflectionClass::getInterfaceNames",
        "reflectionclass.getinterfacenames.php",
        "インターフェイスの名前を取得する"
    ],
    "ReflectionClassgetInterfaces": [
        "ReflectionClass::getInterfaces",
        "reflectionclass.getinterfaces.php",
        "インターフェイスを取得する"
    ],
    "ReflectionClassgetMethod": [
        "ReflectionClass::getMethod",
        "reflectionclass.getmethod.php",
        "クラスメソッドの ReflectionMethod を取得する"
    ],
    "ReflectionClassgetMethods": [
        "ReflectionClass::getMethods",
        "reflectionclass.getmethods.php",
        "メソッドの配列を取得する"
    ],
    "ReflectionClassgetModifiers": [
        "ReflectionClass::getModifiers",
        "reflectionclass.getmodifiers.php",
        "クラス修飾子を取得する"
    ],
    "ReflectionClassgetName": [
        "ReflectionClass::getName",
        "reflectionclass.getname.php",
        "クラスの名前を取得する"
    ],
    "ReflectionClassgetNamespaceName": [
        "ReflectionClass::getNamespaceName",
        "reflectionclass.getnamespacename.php",
        "名前空間の名前を取得する"
    ],
    "ReflectionClassgetParentClass": [
        "ReflectionClass::getParentClass",
        "reflectionclass.getparentclass.php",
        "親クラスを取得する"
    ],
    "ReflectionClassgetProperties": [
        "ReflectionClass::getProperties",
        "reflectionclass.getproperties.php",
        "プロパティを取得する"
    ],
    "ReflectionClassgetProperty": [
        "ReflectionClass::getProperty",
        "reflectionclass.getproperty.php",
        "クラスのプロパティを表す ReflectionProperty を取得する"
    ],
    "ReflectionClassgetReflectionConstant": [
        "ReflectionClass::getReflectionConstant",
        "reflectionclass.getreflectionconstant.php",
        "クラス定数の ReflectionClassConstant を取得する"
    ],
    "ReflectionClassgetReflectionConstants": [
        "ReflectionClass::getReflectionConstants",
        "reflectionclass.getreflectionconstants.php",
        "クラス定数を取得する"
    ],
    "ReflectionClassgetShortName": [
        "ReflectionClass::getShortName",
        "reflectionclass.getshortname.php",
        "短い名前を取得する"
    ],
    "ReflectionClassgetStartLine": [
        "ReflectionClass::getStartLine",
        "reflectionclass.getstartline.php",
        "開始行を取得する"
    ],
    "ReflectionClassgetStaticProperties": [
        "ReflectionClass::getStaticProperties",
        "reflectionclass.getstaticproperties.php",
        "静的なプロパティを取得する"
    ],
    "ReflectionClassgetStaticPropertyValue": [
        "ReflectionClass::getStaticPropertyValue",
        "reflectionclass.getstaticpropertyvalue.php",
        "静的なプロパティの値を取得する"
    ],
    "ReflectionClassgetTraitAliases": [
        "ReflectionClass::getTraitAliases",
        "reflectionclass.gettraitaliases.php",
        "トレイトのエイリアスの配列を返す"
    ],
    "ReflectionClassgetTraitNames": [
        "ReflectionClass::getTraitNames",
        "reflectionclass.gettraitnames.php",
        "このクラスが使うトレイトの名前の配列を返す"
    ],
    "ReflectionClassgetTraits": [
        "ReflectionClass::getTraits",
        "reflectionclass.gettraits.php",
        "このクラスが使うトレイトの配列を返す"
    ],
    "ReflectionClasshasConstant": [
        "ReflectionClass::hasConstant",
        "reflectionclass.hasconstant.php",
        "定数が定義されているかどうかを調べる"
    ],
    "ReflectionClasshasMethod": [
        "ReflectionClass::hasMethod",
        "reflectionclass.hasmethod.php",
        "メソッドが定義されているかどうかを調べる"
    ],
    "ReflectionClasshasProperty": [
        "ReflectionClass::hasProperty",
        "reflectionclass.hasproperty.php",
        "プロパティが定義されているかどうかを調べる"
    ],
    "ReflectionClassimplementsInterface": [
        "ReflectionClass::implementsInterface",
        "reflectionclass.implementsinterface.php",
        "インターフェイスの実装を調べる"
    ],
    "ReflectionClassinNamespace": [
        "ReflectionClass::inNamespace",
        "reflectionclass.innamespace.php",
        "名前空間内にあるかどうかを調べる"
    ],
    "ReflectionClassisAbstract": [
        "ReflectionClass::isAbstract",
        "reflectionclass.isabstract.php",
        "抽象クラスであるかどうかを調べる"
    ],
    "ReflectionClassisAnonymous": [
        "ReflectionClass::isAnonymous",
        "reflectionclass.isanonymous.php",
        "クラスが無名クラスかを調べる"
    ],
    "ReflectionClassisCloneable": [
        "ReflectionClass::isCloneable",
        "reflectionclass.iscloneable.php",
        "このクラスがクローン可能かどうかを返す"
    ],
    "ReflectionClassisFinal": [
        "ReflectionClass::isFinal",
        "reflectionclass.isfinal.php",
        "final クラスであるかどうかを調べる"
    ],
    "ReflectionClassisInstance": [
        "ReflectionClass::isInstance",
        "reflectionclass.isinstance.php",
        "クラスのインスタンスであるかどうかを調べる"
    ],
    "ReflectionClassisInstantiable": [
        "ReflectionClass::isInstantiable",
        "reflectionclass.isinstantiable.php",
        "クラスのインスタンス化が可能であるかどうかを調べる"
    ],
    "ReflectionClassisInterface": [
        "ReflectionClass::isInterface",
        "reflectionclass.isinterface.php",
        "このクラスがインターフェイスであるかどうかを調べる"
    ],
    "ReflectionClassisInternal": [
        "ReflectionClass::isInternal",
        "reflectionclass.isinternal.php",
        "拡張モジュールあるいはコアで定義された内部クラスであるかどうかを調べる"
    ],
    "ReflectionClassisIterable": [
        "ReflectionClass::isIterable",
        "reflectionclass.isiterable.php",
        "このクラスがイテレーション可能かを調べる"
    ],
    "ReflectionClassisIterateable": [
        "ReflectionClass::isIterateable",
        "reflectionclass.isiterateable.php",
        "のエイリアス ReflectionClass::isIterable"
    ],
    "ReflectionClassisSubclassOf": [
        "ReflectionClass::isSubclassOf",
        "reflectionclass.issubclassof.php",
        "サブクラスであるかどうかを調べる"
    ],
    "ReflectionClassisTrait": [
        "ReflectionClass::isTrait",
        "reflectionclass.istrait.php",
        "トレイトであるかどうかを返す"
    ],
    "ReflectionClassisUserDefined": [
        "ReflectionClass::isUserDefined",
        "reflectionclass.isuserdefined.php",
        "ユーザー定義であるかどうかを調べる"
    ],
    "ReflectionClassnewInstance": [
        "ReflectionClass::newInstance",
        "reflectionclass.newinstance.php",
        "指定した引数でクラスの新しいインスタンスを作成する"
    ],
    "ReflectionClassnewInstanceArgs": [
        "ReflectionClass::newInstanceArgs",
        "reflectionclass.newinstanceargs.php",
        "指定した引数でクラスの新しいインスタンスを作成する"
    ],
    "ReflectionClassnewInstanceWithoutConstructor": [
        "ReflectionClass::newInstanceWithoutConstructor",
        "reflectionclass.newinstancewithoutconstructor.php",
        "コンストラクタを起動せずに新しいクラスのインスタンスを作成する"
    ],
    "ReflectionClasssetStaticPropertyValue": [
        "ReflectionClass::setStaticPropertyValue",
        "reflectionclass.setstaticpropertyvalue.php",
        "静的なプロパティの値を設定する"
    ],
    "ReflectionClassconstruct": [
        "ReflectionClass::__construct",
        "reflectionclass.construct.php",
        "ReflectionClass を作成する"
    ],
    "ReflectionClasstoString": [
        "ReflectionClass::__toString",
        "reflectionclass.tostring.php",
        "ReflectionClass オブジェクトの文字列表現を返す"
    ],
    "ReflectionClassConstantexport": [
        "ReflectionClassConstant::export",
        "reflectionclassconstant.export.php",
        "リフレクションをエクスポートする"
    ],
    "ReflectionClassConstantgetDeclaringClass": [
        "ReflectionClassConstant::getDeclaringClass",
        "reflectionclassconstant.getdeclaringclass.php",
        "定数を宣言しているクラスを取得する"
    ],
    "ReflectionClassConstantgetDocComment": [
        "ReflectionClassConstant::getDocComment",
        "reflectionclassconstant.getdoccomment.php",
        "クラス定数のドキュメントコメントを取得する"
    ],
    "ReflectionClassConstantgetModifiers": [
        "ReflectionClassConstant::getModifiers",
        "reflectionclassconstant.getmodifiers.php",
        "クラス定数の修飾子を取得する"
    ],
    "ReflectionClassConstantgetName": [
        "ReflectionClassConstant::getName",
        "reflectionclassconstant.getname.php",
        "定数名を取得する"
    ],
    "ReflectionClassConstantgetValue": [
        "ReflectionClassConstant::getValue",
        "reflectionclassconstant.getvalue.php",
        "値を取得する"
    ],
    "ReflectionClassConstantisPrivate": [
        "ReflectionClassConstant::isPrivate",
        "reflectionclassconstant.isprivate.php",
        "クラス定数がprivateかを調べる"
    ],
    "ReflectionClassConstantisProtected": [
        "ReflectionClassConstant::isProtected",
        "reflectionclassconstant.isprotected.php",
        "クラス定数が protected かを調べる"
    ],
    "ReflectionClassConstantisPublic": [
        "ReflectionClassConstant::isPublic",
        "reflectionclassconstant.ispublic.php",
        "クラス定数が public かを調べる"
    ],
    "ReflectionClassConstantconstruct": [
        "ReflectionClassConstant::__construct",
        "reflectionclassconstant.construct.php",
        "ReflectionClassConstant を構築する"
    ],
    "ReflectionClassConstanttoString": [
        "ReflectionClassConstant::__toString",
        "reflectionclassconstant.tostring.php",
        "ReflectionClassConstant オブジェクトの文字列表現を返す"
    ],
    "ReflectionExtensionexport": [
        "ReflectionExtension::export",
        "reflectionextension.export.php",
        "エクスポートする"
    ],
    "ReflectionExtensiongetClasses": [
        "ReflectionExtension::getClasses",
        "reflectionextension.getclasses.php",
        "クラスを取得する"
    ],
    "ReflectionExtensiongetClassNames": [
        "ReflectionExtension::getClassNames",
        "reflectionextension.getclassnames.php",
        "クラス名を取得する"
    ],
    "ReflectionExtensiongetConstants": [
        "ReflectionExtension::getConstants",
        "reflectionextension.getconstants.php",
        "定数を取得する"
    ],
    "ReflectionExtensiongetDependencies": [
        "ReflectionExtension::getDependencies",
        "reflectionextension.getdependencies.php",
        "依存性を取得する"
    ],
    "ReflectionExtensiongetFunctions": [
        "ReflectionExtension::getFunctions",
        "reflectionextension.getfunctions.php",
        "拡張モジュールの関数を取得する"
    ],
    "ReflectionExtensiongetINIEntries": [
        "ReflectionExtension::getINIEntries",
        "reflectionextension.getinientries.php",
        "拡張モジュールの ini エントリを取得する"
    ],
    "ReflectionExtensiongetName": [
        "ReflectionExtension::getName",
        "reflectionextension.getname.php",
        "拡張モジュール名を取得する"
    ],
    "ReflectionExtensiongetVersion": [
        "ReflectionExtension::getVersion",
        "reflectionextension.getversion.php",
        "拡張モジュールのバージョンを取得する"
    ],
    "ReflectionExtensioninfo": [
        "ReflectionExtension::info",
        "reflectionextension.info.php",
        "拡張モジュールの情報を表示する"
    ],
    "ReflectionExtensionisPersistent": [
        "ReflectionExtension::isPersistent",
        "reflectionextension.ispersistent.php",
        "この拡張モジュールが永続性のあるものかどうかを返す"
    ],
    "ReflectionExtensionisTemporary": [
        "ReflectionExtension::isTemporary",
        "reflectionextension.istemporary.php",
        "この拡張モジュールが一時的なものかどうかを返す"
    ],
    "ReflectionExtensionclone": [
        "ReflectionExtension::__clone",
        "reflectionextension.clone.php",
        "クローンする"
    ],
    "ReflectionExtensionconstruct": [
        "ReflectionExtension::__construct",
        "reflectionextension.construct.php",
        "ReflectionExtension を作成する"
    ],
    "ReflectionExtensiontoString": [
        "ReflectionExtension::__toString",
        "reflectionextension.tostring.php",
        "文字列に変換する"
    ],
    "ReflectionFunctionexport": [
        "ReflectionFunction::export",
        "reflectionfunction.export.php",
        "関数をエクスポートする"
    ],
    "ReflectionFunctiongetClosure": [
        "ReflectionFunction::getClosure",
        "reflectionfunction.getclosure.php",
        "この関数に動的に作成されたクロージャを返す"
    ],
    "ReflectionFunctioninvoke": [
        "ReflectionFunction::invoke",
        "reflectionfunction.invoke.php",
        "関数を起動する"
    ],
    "ReflectionFunctioninvokeArgs": [
        "ReflectionFunction::invokeArgs",
        "reflectionfunction.invokeargs.php",
        "引数を指定して関数を起動する"
    ],
    "ReflectionFunctionisDisabled": [
        "ReflectionFunction::isDisabled",
        "reflectionfunction.isdisabled.php",
        "関数が無効になっているかどうかを調べる"
    ],
    "ReflectionFunctionconstruct": [
        "ReflectionFunction::__construct",
        "reflectionfunction.construct.php",
        "ReflectionFunction オブジェクトを作成する"
    ],
    "ReflectionFunctiontoString": [
        "ReflectionFunction::__toString",
        "reflectionfunction.tostring.php",
        "文字列に変換する"
    ],
    "ReflectionFunctionAbstractgetClosureScopeClass": [
        "ReflectionFunctionAbstract::getClosureScopeClass",
        "reflectionfunctionabstract.getclosurescopeclass.php",
        "クロージャに関連づけられたスコープを返す"
    ],
    "ReflectionFunctionAbstractgetClosureThis": [
        "ReflectionFunctionAbstract::getClosureThis",
        "reflectionfunctionabstract.getclosurethis.php",
        "クロージャにバインドした this ポインタを返す"
    ],
    "ReflectionFunctionAbstractgetDocComment": [
        "ReflectionFunctionAbstract::getDocComment",
        "reflectionfunctionabstract.getdoccomment.php",
        "ドキュメントコメントを取得する"
    ],
    "ReflectionFunctionAbstractgetEndLine": [
        "ReflectionFunctionAbstract::getEndLine",
        "reflectionfunctionabstract.getendline.php",
        "終了行番号を取得する"
    ],
    "ReflectionFunctionAbstractgetExtension": [
        "ReflectionFunctionAbstract::getExtension",
        "reflectionfunctionabstract.getextension.php",
        "拡張モジュールの情報を取得する"
    ],
    "ReflectionFunctionAbstractgetExtensionName": [
        "ReflectionFunctionAbstract::getExtensionName",
        "reflectionfunctionabstract.getextensionname.php",
        "拡張モジュールの名前を取得する"
    ],
    "ReflectionFunctionAbstractgetFileName": [
        "ReflectionFunctionAbstract::getFileName",
        "reflectionfunctionabstract.getfilename.php",
        "ファイル名を取得する"
    ],
    "ReflectionFunctionAbstractgetName": [
        "ReflectionFunctionAbstract::getName",
        "reflectionfunctionabstract.getname.php",
        "関数名を取得する"
    ],
    "ReflectionFunctionAbstractgetNamespaceName": [
        "ReflectionFunctionAbstract::getNamespaceName",
        "reflectionfunctionabstract.getnamespacename.php",
        "名前空間名を取得する"
    ],
    "ReflectionFunctionAbstractgetNumberOfParameters": [
        "ReflectionFunctionAbstract::getNumberOfParameters",
        "reflectionfunctionabstract.getnumberofparameters.php",
        "パラメータ数を取得する"
    ],
    "ReflectionFunctionAbstractgetNumberOfRequiredParameters": [
        "ReflectionFunctionAbstract::getNumberOfRequiredParameters",
        "reflectionfunctionabstract.getnumberofrequiredparameters.php",
        "必須パラメータの数を取得する"
    ],
    "ReflectionFunctionAbstractgetParameters": [
        "ReflectionFunctionAbstract::getParameters",
        "reflectionfunctionabstract.getparameters.php",
        "パラメータを取得する"
    ],
    "ReflectionFunctionAbstractgetReturnType": [
        "ReflectionFunctionAbstract::getReturnType",
        "reflectionfunctionabstract.getreturntype.php",
        "指定された関数の戻り値の型を取得する"
    ],
    "ReflectionFunctionAbstractgetShortName": [
        "ReflectionFunctionAbstract::getShortName",
        "reflectionfunctionabstract.getshortname.php",
        "関数の短い名前を取得する"
    ],
    "ReflectionFunctionAbstractgetStartLine": [
        "ReflectionFunctionAbstract::getStartLine",
        "reflectionfunctionabstract.getstartline.php",
        "開始行番号を取得する"
    ],
    "ReflectionFunctionAbstractgetStaticVariables": [
        "ReflectionFunctionAbstract::getStaticVariables",
        "reflectionfunctionabstract.getstaticvariables.php",
        "静的変数を取得する"
    ],
    "ReflectionFunctionAbstracthasReturnType": [
        "ReflectionFunctionAbstract::hasReturnType",
        "reflectionfunctionabstract.hasreturntype.php",
        "関数が戻り値の型を指定しているかを調べる"
    ],
    "ReflectionFunctionAbstractinNamespace": [
        "ReflectionFunctionAbstract::inNamespace",
        "reflectionfunctionabstract.innamespace.php",
        "関数が名前空間内にあるかどうかを調べる"
    ],
    "ReflectionFunctionAbstractisClosure": [
        "ReflectionFunctionAbstract::isClosure",
        "reflectionfunctionabstract.isclosure.php",
        "クロージャであるかどうかを調べる"
    ],
    "ReflectionFunctionAbstractisDeprecated": [
        "ReflectionFunctionAbstract::isDeprecated",
        "reflectionfunctionabstract.isdeprecated.php",
        "非推奨であるかどうかを調べる"
    ],
    "ReflectionFunctionAbstractisGenerator": [
        "ReflectionFunctionAbstract::isGenerator",
        "reflectionfunctionabstract.isgenerator.php",
        "この関数がジェネレータかどうかを返す"
    ],
    "ReflectionFunctionAbstractisInternal": [
        "ReflectionFunctionAbstract::isInternal",
        "reflectionfunctionabstract.isinternal.php",
        "内部関数かどうかを調べる"
    ],
    "ReflectionFunctionAbstractisUserDefined": [
        "ReflectionFunctionAbstract::isUserDefined",
        "reflectionfunctionabstract.isuserdefined.php",
        "ユーザー定義関数であるかどうかを調べる"
    ],
    "ReflectionFunctionAbstractisVariadic": [
        "ReflectionFunctionAbstract::isVariadic",
        "reflectionfunctionabstract.isvariadic.php",
        "この関数の引数が可変長かを調べる"
    ],
    "ReflectionFunctionAbstractreturnsReference": [
        "ReflectionFunctionAbstract::returnsReference",
        "reflectionfunctionabstract.returnsreference.php",
        "参照返しかどうかを調べる"
    ],
    "ReflectionFunctionAbstractclone": [
        "ReflectionFunctionAbstract::__clone",
        "reflectionfunctionabstract.clone.php",
        "関数のクローンを作成する"
    ],
    "ReflectionFunctionAbstracttoString": [
        "ReflectionFunctionAbstract::__toString",
        "reflectionfunctionabstract.tostring.php",
        "文字列に変換する"
    ],
    "ReflectionGeneratorgetExecutingFile": [
        "ReflectionGenerator::getExecutingFile",
        "reflectiongenerator.getexecutingfile.php",
        "現在実行中のジェネレータのファイル名を取得する"
    ],
    "ReflectionGeneratorgetExecutingGenerator": [
        "ReflectionGenerator::getExecutingGenerator",
        "reflectiongenerator.getexecutinggenerator.php",
        "実行中の Generator オブジェクトを取得する"
    ],
    "ReflectionGeneratorgetExecutingLine": [
        "ReflectionGenerator::getExecutingLine",
        "reflectiongenerator.getexecutingline.php",
        "現在実行中のジェネレータの行を取得する"
    ],
    "ReflectionGeneratorgetFunction": [
        "ReflectionGenerator::getFunction",
        "reflectiongenerator.getfunction.php",
        "ジェネレータの関数名を取得する"
    ],
    "ReflectionGeneratorgetThis": [
        "ReflectionGenerator::getThis",
        "reflectiongenerator.getthis.php",
        "ジェネレータの $this の値を取得する"
    ],
    "ReflectionGeneratorgetTrace": [
        "ReflectionGenerator::getTrace",
        "reflectiongenerator.gettrace.php",
        "実行中のジェネレータのトレースを取得する"
    ],
    "ReflectionGeneratorconstruct": [
        "ReflectionGenerator::__construct",
        "reflectiongenerator.construct.php",
        "ReflectionGenerator オブジェクトを構築する"
    ],
    "ReflectionMethodexport": [
        "ReflectionMethod::export",
        "reflectionmethod.export.php",
        "メソッドをエクスポートする"
    ],
    "ReflectionMethodgetClosure": [
        "ReflectionMethod::getClosure",
        "reflectionmethod.getclosure.php",
        "このメソッドに動的に作成されたクロージャを返す"
    ],
    "ReflectionMethodgetDeclaringClass": [
        "ReflectionMethod::getDeclaringClass",
        "reflectionmethod.getdeclaringclass.php",
        "メソッドが宣言されているクラスを取得する"
    ],
    "ReflectionMethodgetModifiers": [
        "ReflectionMethod::getModifiers",
        "reflectionmethod.getmodifiers.php",
        "メソッドの修飾子を取得する"
    ],
    "ReflectionMethodgetPrototype": [
        "ReflectionMethod::getPrototype",
        "reflectionmethod.getprototype.php",
        "メソッドのプロトタイプを (存在すれば) 取得する"
    ],
    "ReflectionMethodinvoke": [
        "ReflectionMethod::invoke",
        "reflectionmethod.invoke.php",
        "実行する"
    ],
    "ReflectionMethodinvokeArgs": [
        "ReflectionMethod::invokeArgs",
        "reflectionmethod.invokeargs.php",
        "実行する"
    ],
    "ReflectionMethodisAbstract": [
        "ReflectionMethod::isAbstract",
        "reflectionmethod.isabstract.php",
        "抽象メソッドであるかどうかを調べる"
    ],
    "ReflectionMethodisConstructor": [
        "ReflectionMethod::isConstructor",
        "reflectionmethod.isconstructor.php",
        "コンストラクタであるかどうかを調べる"
    ],
    "ReflectionMethodisDestructor": [
        "ReflectionMethod::isDestructor",
        "reflectionmethod.isdestructor.php",
        "デストラクタであるかどうかを調べる"
    ],
    "ReflectionMethodisFinal": [
        "ReflectionMethod::isFinal",
        "reflectionmethod.isfinal.php",
        "final メソッドであるかどうかを調べる"
    ],
    "ReflectionMethodisPrivate": [
        "ReflectionMethod::isPrivate",
        "reflectionmethod.isprivate.php",
        "private メソッドであるかどうかを調べる"
    ],
    "ReflectionMethodisProtected": [
        "ReflectionMethod::isProtected",
        "reflectionmethod.isprotected.php",
        "protected メソッドであるかどうかを調べる"
    ],
    "ReflectionMethodisPublic": [
        "ReflectionMethod::isPublic",
        "reflectionmethod.ispublic.php",
        "public メソッドであるかどうかを調べる"
    ],
    "ReflectionMethodisStatic": [
        "ReflectionMethod::isStatic",
        "reflectionmethod.isstatic.php",
        "静的メソッドであるかどうかを調べる"
    ],
    "ReflectionMethodsetAccessible": [
        "ReflectionMethod::setAccessible",
        "reflectionmethod.setaccessible.php",
        "メソッドのアクセス範囲を設定する"
    ],
    "ReflectionMethodconstruct": [
        "ReflectionMethod::__construct",
        "reflectionmethod.construct.php",
        "ReflectionMethod を作成する"
    ],
    "ReflectionMethodtoString": [
        "ReflectionMethod::__toString",
        "reflectionmethod.tostring.php",
        "ReflectionMethod オブジェクトの文字列表現を返す"
    ],
    "ReflectionNamedTypegetName": [
        "ReflectionNamedType::getName",
        "reflectionnamedtype.getname.php",
        "タイプヒントのテキストを取得する"
    ],
    "ReflectionObjectexport": [
        "ReflectionObject::export",
        "reflectionobject.export.php",
        "エクスポートする"
    ],
    "ReflectionObjectconstruct": [
        "ReflectionObject::__construct",
        "reflectionobject.construct.php",
        "ReflectionObject を作成する"
    ],
    "ReflectionParameterallowsNull": [
        "ReflectionParameter::allowsNull",
        "reflectionparameter.allowsnull.php",
        "null を許可するかどうかを調べる"
    ],
    "ReflectionParametercanBePassedByValue": [
        "ReflectionParameter::canBePassedByValue",
        "reflectionparameter.canbepassedbyvalue.php",
        "このパラメータが値渡し可能かどうかを返す"
    ],
    "ReflectionParameterexport": [
        "ReflectionParameter::export",
        "reflectionparameter.export.php",
        "エクスポートする"
    ],
    "ReflectionParametergetClass": [
        "ReflectionParameter::getClass",
        "reflectionparameter.getclass.php",
        "タイプヒントつきのクラスを取得する"
    ],
    "ReflectionParametergetDeclaringClass": [
        "ReflectionParameter::getDeclaringClass",
        "reflectionparameter.getdeclaringclass.php",
        "宣言しているクラスを取得する"
    ],
    "ReflectionParametergetDeclaringFunction": [
        "ReflectionParameter::getDeclaringFunction",
        "reflectionparameter.getdeclaringfunction.php",
        "宣言している関数を取得する"
    ],
    "ReflectionParametergetDefaultValue": [
        "ReflectionParameter::getDefaultValue",
        "reflectionparameter.getdefaultvalue.php",
        "パラメータのデフォルト値を取得する"
    ],
    "ReflectionParametergetDefaultValueConstantName": [
        "ReflectionParameter::getDefaultValueConstantName",
        "reflectionparameter.getdefaultvalueconstantname.php",
        "デフォルト値が定数あるいは null の場合に、その定数名を返す"
    ],
    "ReflectionParametergetName": [
        "ReflectionParameter::getName",
        "reflectionparameter.getname.php",
        "パラメータ名を取得する"
    ],
    "ReflectionParametergetPosition": [
        "ReflectionParameter::getPosition",
        "reflectionparameter.getposition.php",
        "パラメータの位置を取得する"
    ],
    "ReflectionParametergetType": [
        "ReflectionParameter::getType",
        "reflectionparameter.gettype.php",
        "引数の型を取得する"
    ],
    "ReflectionParameterhasType": [
        "ReflectionParameter::hasType",
        "reflectionparameter.hastype.php",
        "引数が型を持つかを調べる"
    ],
    "ReflectionParameterisArray": [
        "ReflectionParameter::isArray",
        "reflectionparameter.isarray.php",
        "配列を受け取るパラメータであるかどうかを調べる"
    ],
    "ReflectionParameterisCallable": [
        "ReflectionParameter::isCallable",
        "reflectionparameter.iscallable.php",
        "パラメータが callable かどうかを返す"
    ],
    "ReflectionParameterisDefaultValueAvailable": [
        "ReflectionParameter::isDefaultValueAvailable",
        "reflectionparameter.isdefaultvalueavailable.php",
        "デフォルト値が存在するかどうかを調べる"
    ],
    "ReflectionParameterisDefaultValueConstant": [
        "ReflectionParameter::isDefaultValueConstant",
        "reflectionparameter.isdefaultvalueconstant.php",
        "このパラメータのデフォルト値が定数かどうかを返す"
    ],
    "ReflectionParameterisOptional": [
        "ReflectionParameter::isOptional",
        "reflectionparameter.isoptional.php",
        "省略可能であるかどうかを調べる"
    ],
    "ReflectionParameterisPassedByReference": [
        "ReflectionParameter::isPassedByReference",
        "reflectionparameter.ispassedbyreference.php",
        "参照渡しかどうかを調べる"
    ],
    "ReflectionParameterisVariadic": [
        "ReflectionParameter::isVariadic",
        "reflectionparameter.isvariadic.php",
        "引数が可変長の個数であるかをチェックする"
    ],
    "ReflectionParameterclone": [
        "ReflectionParameter::__clone",
        "reflectionparameter.clone.php",
        "クローンする"
    ],
    "ReflectionParameterconstruct": [
        "ReflectionParameter::__construct",
        "reflectionparameter.construct.php",
        "コンストラクタ"
    ],
    "ReflectionParametertoString": [
        "ReflectionParameter::__toString",
        "reflectionparameter.tostring.php",
        "文字列に変換する"
    ],
    "ReflectionPropertyexport": [
        "ReflectionProperty::export",
        "reflectionproperty.export.php",
        "エクスポートする"
    ],
    "ReflectionPropertygetDeclaringClass": [
        "ReflectionProperty::getDeclaringClass",
        "reflectionproperty.getdeclaringclass.php",
        "宣言しているクラスを取得する"
    ],
    "ReflectionPropertygetDefaultValue": [
        "ReflectionProperty::getDefaultValue",
        "reflectionproperty.getdefaultvalue.php",
        "プロパティで宣言されたデフォルト値を返す"
    ],
    "ReflectionPropertygetDocComment": [
        "ReflectionProperty::getDocComment",
        "reflectionproperty.getdoccomment.php",
        "プロパティのドキュメントコメントを取得する"
    ],
    "ReflectionPropertygetModifiers": [
        "ReflectionProperty::getModifiers",
        "reflectionproperty.getmodifiers.php",
        "プロパティの修飾子を取得する"
    ],
    "ReflectionPropertygetName": [
        "ReflectionProperty::getName",
        "reflectionproperty.getname.php",
        "プロパティ名を取得する"
    ],
    "ReflectionPropertygetType": [
        "ReflectionProperty::getType",
        "reflectionproperty.gettype.php",
        "プロパティの型を取得する"
    ],
    "ReflectionPropertygetValue": [
        "ReflectionProperty::getValue",
        "reflectionproperty.getvalue.php",
        "値を取得する"
    ],
    "ReflectionPropertyhasDefaultValue": [
        "ReflectionProperty::hasDefaultValue",
        "reflectionproperty.hasdefaultvalue.php",
        "デフォルト値が宣言されているかをチェックする"
    ],
    "ReflectionPropertyhasType": [
        "ReflectionProperty::hasType",
        "reflectionproperty.hastype.php",
        "プロパティが型を持つかをチェックする"
    ],
    "ReflectionPropertyisDefault": [
        "ReflectionProperty::isDefault",
        "reflectionproperty.isdefault.php",
        "デフォルトプロパティであるかどうかを調べる"
    ],
    "ReflectionPropertyisInitialized": [
        "ReflectionProperty::isInitialized",
        "reflectionproperty.isinitialized.php",
        "プロパティが初期化されているかをチェックする"
    ],
    "ReflectionPropertyisPrivate": [
        "ReflectionProperty::isPrivate",
        "reflectionproperty.isprivate.php",
        "private プロパティであるかどうかを調べる"
    ],
    "ReflectionPropertyisProtected": [
        "ReflectionProperty::isProtected",
        "reflectionproperty.isprotected.php",
        "protected プロパティであるかどうかを調べる"
    ],
    "ReflectionPropertyisPublic": [
        "ReflectionProperty::isPublic",
        "reflectionproperty.ispublic.php",
        "public プロパティであるかどうかを調べる"
    ],
    "ReflectionPropertyisStatic": [
        "ReflectionProperty::isStatic",
        "reflectionproperty.isstatic.php",
        "静的プロパティであるかどうかを調べる"
    ],
    "ReflectionPropertysetAccessible": [
        "ReflectionProperty::setAccessible",
        "reflectionproperty.setaccessible.php",
        "プロパティのアクセス範囲を設定する"
    ],
    "ReflectionPropertysetValue": [
        "ReflectionProperty::setValue",
        "reflectionproperty.setvalue.php",
        "プロパティの値を設定する"
    ],
    "ReflectionPropertyclone": [
        "ReflectionProperty::__clone",
        "reflectionproperty.clone.php",
        "クローンする"
    ],
    "ReflectionPropertyconstruct": [
        "ReflectionProperty::__construct",
        "reflectionproperty.construct.php",
        "ReflectionProperty オブジェクトを作成する"
    ],
    "ReflectionPropertytoString": [
        "ReflectionProperty::__toString",
        "reflectionproperty.tostring.php",
        "文字列に変換する"
    ],
    "ReflectionReferencefromArrayElement": [
        "ReflectionReference::fromArrayElement",
        "reflectionreference.fromarrayelement.php",
        "配列の要素から、ReflectionReference を生成する"
    ],
    "ReflectionReferencegetId": [
        "ReflectionReference::getId",
        "reflectionreference.getid.php",
        "リファレンスのユニークなIDを取得する"
    ],
    "ReflectionTypeallowsNull": [
        "ReflectionType::allowsNull",
        "reflectiontype.allowsnull.php",
        "null が許されるかをチェックする"
    ],
    "ReflectionTypeisBuiltin": [
        "ReflectionType::isBuiltin",
        "reflectiontype.isbuiltin.php",
        "ビルトインの型かどうかをチェックする"
    ],
    "ReflectionTypetoString": [
        "ReflectionType::__toString",
        "reflectiontype.tostring.php",
        "文字列に変換する"
    ],
    "ReflectionZendExtensionexport": [
        "ReflectionZendExtension::export",
        "reflectionzendextension.export.php",
        "エクスポート"
    ],
    "ReflectionZendExtensiongetAuthor": [
        "ReflectionZendExtension::getAuthor",
        "reflectionzendextension.getauthor.php",
        "作者を取得する"
    ],
    "ReflectionZendExtensiongetCopyright": [
        "ReflectionZendExtension::getCopyright",
        "reflectionzendextension.getcopyright.php",
        "著作権情報を取得する"
    ],
    "ReflectionZendExtensiongetName": [
        "ReflectionZendExtension::getName",
        "reflectionzendextension.getname.php",
        "名前を取得する"
    ],
    "ReflectionZendExtensiongetURL": [
        "ReflectionZendExtension::getURL",
        "reflectionzendextension.geturl.php",
        "URL を取得する"
    ],
    "ReflectionZendExtensiongetVersion": [
        "ReflectionZendExtension::getVersion",
        "reflectionzendextension.getversion.php",
        "バージョンを取得する"
    ],
    "ReflectionZendExtensionclone": [
        "ReflectionZendExtension::__clone",
        "reflectionzendextension.clone.php",
        "Clone のハンドラ"
    ],
    "ReflectionZendExtensionconstruct": [
        "ReflectionZendExtension::__construct",
        "reflectionzendextension.construct.php",
        "コンストラクタ"
    ],
    "ReflectionZendExtensiontoString": [
        "ReflectionZendExtension::__toString",
        "reflectionzendextension.tostring.php",
        "文字列変換のハンドラ"
    ],
    "Reflectorexport": [
        "Reflector::export",
        "reflector.export.php",
        "エクスポートする"
    ],
    "ReflectortoString": [
        "Reflector::__toString",
        "reflector.tostring.php",
        "文字列に変換する"
    ],
    "RegexIteratoraccept": [
        "RegexIterator::accept",
        "regexiterator.accept.php",
        "受け入れ状況を取得する"
    ],
    "RegexIteratorgetFlags": [
        "RegexIterator::getFlags",
        "regexiterator.getflags.php",
        "フラグを取得する"
    ],
    "RegexIteratorgetMode": [
        "RegexIterator::getMode",
        "regexiterator.getmode.php",
        "操作モードを返す"
    ],
    "RegexIteratorgetPregFlags": [
        "RegexIterator::getPregFlags",
        "regexiterator.getpregflags.php",
        "正規表現フラグを返す"
    ],
    "RegexIteratorgetRegex": [
        "RegexIterator::getRegex",
        "regexiterator.getregex.php",
        "現在の正規表現を返す"
    ],
    "RegexIteratorsetFlags": [
        "RegexIterator::setFlags",
        "regexiterator.setflags.php",
        "フラグを設定する"
    ],
    "RegexIteratorsetMode": [
        "RegexIterator::setMode",
        "regexiterator.setmode.php",
        "操作モードを設定する"
    ],
    "RegexIteratorsetPregFlags": [
        "RegexIterator::setPregFlags",
        "regexiterator.setpregflags.php",
        "正規表現フラグを設定する"
    ],
    "RegexIteratorconstruct": [
        "RegexIterator::__construct",
        "regexiterator.construct.php",
        "新しい RegexIterator を作成する"
    ],
    "registershutdownfunction": [
        "register_shutdown_function",
        "function.register-shutdown-function.php",
        "シャットダウン時に実行する関数を登録する"
    ],
    "registertickfunction": [
        "register_tick_function",
        "function.register-tick-function.php",
        "各 tick で実行する関数を登録する"
    ],
    "rename": [
        "rename",
        "function.rename.php",
        "ファイルをリネームする"
    ],
    "reset": [
        "reset",
        "function.reset.php",
        "配列の内部ポインタを先頭の要素にセットする"
    ],
    "ResourceBundlecount": [
        "ResourceBundle::count",
        "resourcebundle.count.php",
        "バンドル内の要素数を取得する"
    ],
    "ResourceBundlecreate": [
        "ResourceBundle::create",
        "resourcebundle.create.php",
        "リソースバンドルを作成する"
    ],
    "ResourceBundleget": [
        "ResourceBundle::get",
        "resourcebundle.get.php",
        "バンドルからデータを取得する"
    ],
    "ResourceBundlegetErrorCode": [
        "ResourceBundle::getErrorCode",
        "resourcebundle.geterrorcode.php",
        "バンドルの直近のエラーコードを取得する"
    ],
    "ResourceBundlegetErrorMessage": [
        "ResourceBundle::getErrorMessage",
        "resourcebundle.geterrormessage.php",
        "バンドルの直近のエラーメッセージを取得する"
    ],
    "ResourceBundlegetLocales": [
        "ResourceBundle::getLocales",
        "resourcebundle.locales.php",
        "サポートするロケールを取得する"
    ],
    "restoreerrorhandler": [
        "restore_error_handler",
        "function.restore-error-handler.php",
        "以前のエラーハンドラ関数を回復する"
    ],
    "restoreexceptionhandler": [
        "restore_exception_handler",
        "function.restore-exception-handler.php",
        "以前の例外ハンドラ関数を回復する"
    ],
    "restoreincludepath": [
        "restore_include_path",
        "function.restore-include-path.php",
        "include_path 設定オプションの値を元に戻す"
    ],
    "ResultgetAffectedItemsCount": [
        "Result::getAffectedItemsCount",
        "mysql-xdevapi-result.getaffecteditemscount.php",
        "影響を受けた行数を得る"
    ],
    "ResultgetAutoIncrementValue": [
        "Result::getAutoIncrementValue",
        "mysql-xdevapi-result.getautoincrementvalue.php",
        "自動インクリメントされた値を取得する"
    ],
    "ResultgetGeneratedIds": [
        "Result::getGeneratedIds",
        "mysql-xdevapi-result.getgeneratedids.php",
        "生成された id を取得する"
    ],
    "ResultgetWarnings": [
        "Result::getWarnings",
        "mysql-xdevapi-result.getwarnings.php",
        "直近の操作から発生した警告を取得する"
    ],
    "ResultgetWarningsCount": [
        "Result::getWarningsCount",
        "mysql-xdevapi-result.getwarningscount.php",
        "直近の操作から生じた警告の数を取得する"
    ],
    "Resultconstruct": [
        "Result::__construct",
        "mysql-xdevapi-result.construct.php",
        "Result のコンストラクタ"
    ],
    "rewind": [
        "rewind",
        "function.rewind.php",
        "ファイルポインタの位置を先頭に戻す"
    ],
    "rewinddir": [
        "rewinddir",
        "function.rewinddir.php",
        "ディレクトリハンドルを元に戻す"
    ],
    "rmdir": [
        "rmdir",
        "function.rmdir.php",
        "ディレクトリを削除する"
    ],
    "round": [
        "round",
        "function.round.php",
        "浮動小数点数を丸める"
    ],
    "RowResultfetchAll": [
        "RowResult::fetchAll",
        "mysql-xdevapi-rowresult.fetchall.php",
        "結果セットから全ての行を取得する"
    ],
    "RowResultfetchOne": [
        "RowResult::fetchOne",
        "mysql-xdevapi-rowresult.fetchone.php",
        "結果セットから行を取得する"
    ],
    "RowResultgetColumnNames": [
        "RowResult::getColumnNames",
        "mysql-xdevapi-rowresult.getcolumnnames.php",
        "全てのカラム名を取得する"
    ],
    "RowResultgetColumns": [
        "RowResult::getColumns",
        "mysql-xdevapi-rowresult.getcolumns.php",
        "カラムのメタデータを取得する"
    ],
    "RowResultgetColumnsCount": [
        "RowResult::getColumnsCount",
        "mysql-xdevapi-rowresult.getcolumncount.php",
        "カラムの数を取得する"
    ],
    "RowResultgetWarnings": [
        "RowResult::getWarnings",
        "mysql-xdevapi-rowresult.getwarnings.php",
        "直近の操作から生じた警告を取得する"
    ],
    "RowResultgetWarningsCount": [
        "RowResult::getWarningsCount",
        "mysql-xdevapi-rowresult.getwarningscount.php",
        "直近の操作から生じた警告の数を取得する"
    ],
    "RowResultconstruct": [
        "RowResult::__construct",
        "mysql-xdevapi-rowresult.construct.php",
        "RowResult のコンストラクタ"
    ],
    "rpmaddtag": [
        "rpmaddtag",
        "function.rpmaddtag.php",
        "Add tag retrieved in query"
    ],
    "rpmdbinfo": [
        "rpmdbinfo",
        "function.rpmdbinfo.php",
        "Get information from installed RPM"
    ],
    "rpmdbsearch": [
        "rpmdbsearch",
        "function.rpmdbsearch.php",
        "Search RPM packages"
    ],
    "rpminfo": [
        "rpminfo",
        "function.rpminfo.php",
        "Get information from a RPM file"
    ],
    "rpmvercmp": [
        "rpmvercmp",
        "function.rpmvercmp.php",
        "RPM version comparison"
    ],
    "RRDCreatoraddArchive": [
        "RRDCreator::addArchive",
        "rrdcreator.addarchive.php",
        "Adds RRA - archive of data values for each data source"
    ],
    "RRDCreatoraddDataSource": [
        "RRDCreator::addDataSource",
        "rrdcreator.adddatasource.php",
        "Adds data source definition for RRD database"
    ],
    "RRDCreatorsave": [
        "RRDCreator::save",
        "rrdcreator.save.php",
        "Saves the RRD database to a file"
    ],
    "RRDCreatorconstruct": [
        "RRDCreator::__construct",
        "rrdcreator.construct.php",
        "Creates new RRDCreator instance"
    ],
    "rrdcdisconnect": [
        "rrdc_disconnect",
        "function.rrdc-disconnect.php",
        "Close any outstanding connection to rrd caching daemon"
    ],
    "RRDGraphsave": [
        "RRDGraph::save",
        "rrdgraph.save.php",
        "Saves the result of query into image"
    ],
    "RRDGraphsetOptions": [
        "RRDGraph::setOptions",
        "rrdgraph.setoptions.php",
        "Sets the options for rrd graph export"
    ],
    "RRDGraphconstruct": [
        "RRDGraph::__construct",
        "rrdgraph.construct.php",
        "Creates new RRDGraph instance"
    ],
    "RRDUpdaterupdate": [
        "RRDUpdater::update",
        "rrdupdater.update.php",
        "Update the RRD database file"
    ],
    "RRDUpdaterconstruct": [
        "RRDUpdater::__construct",
        "rrdupdater.construct.php",
        "Creates new RRDUpdater instance"
    ],
    "rrdcreate": [
        "rrd_create",
        "function.rrd-create.php",
        "Creates rrd database file"
    ],
    "rrderror": [
        "rrd_error",
        "function.rrd-error.php",
        "Gets latest error message"
    ],
    "rrdfetch": [
        "rrd_fetch",
        "function.rrd-fetch.php",
        "Fetch the data for graph as array"
    ],
    "rrdfirst": [
        "rrd_first",
        "function.rrd-first.php",
        "Gets the timestamp of the first sample from rrd file"
    ],
    "rrdgraph": [
        "rrd_graph",
        "function.rrd-graph.php",
        "Creates image from a data"
    ],
    "rrdinfo": [
        "rrd_info",
        "function.rrd-info.php",
        "Gets information about rrd file"
    ],
    "rrdlast": [
        "rrd_last",
        "function.rrd-last.php",
        "Gets unix timestamp of the last sample"
    ],
    "rrdlastupdate": [
        "rrd_lastupdate",
        "function.rrd-lastupdate.php",
        "Gets information about last updated data"
    ],
    "rrdrestore": [
        "rrd_restore",
        "function.rrd-restore.php",
        "Restores the RRD file from XML dump"
    ],
    "rrdtune": [
        "rrd_tune",
        "function.rrd-tune.php",
        "Tunes some RRD database file header options"
    ],
    "rrdupdate": [
        "rrd_update",
        "function.rrd-update.php",
        "Updates the RRD database"
    ],
    "rrdversion": [
        "rrd_version",
        "function.rrd-version.php",
        "Gets information about underlying rrdtool library"
    ],
    "rrdxport": [
        "rrd_xport",
        "function.rrd-xport.php",
        "Exports the information about RRD database"
    ],
    "rsort": [
        "rsort",
        "function.rsort.php",
        "配列を逆順にソートする"
    ],
    "rtrim": [
        "rtrim",
        "function.rtrim.php",
        "文字列の最後から空白 (もしくはその他の文字) を取り除く"
    ],
    "runkit7constantadd": [
        "runkit7_constant_add",
        "function.runkit7-constant-add.php",
        "Similar to define(), but allows defining in class definitions as well"
    ],
    "runkit7constantredefine": [
        "runkit7_constant_redefine",
        "function.runkit7-constant-redefine.php",
        "Redefine an already defined constant"
    ],
    "runkit7constantremove": [
        "runkit7_constant_remove",
        "function.runkit7-constant-remove.php",
        "Remove/Delete an already defined constant"
    ],
    "runkit7functionadd": [
        "runkit7_function_add",
        "function.runkit7-function-add.php",
        "Add a new function, similar to create_function"
    ],
    "runkit7functioncopy": [
        "runkit7_function_copy",
        "function.runkit7-function-copy.php",
        "Copy a function to a new function name"
    ],
    "runkit7functionredefine": [
        "runkit7_function_redefine",
        "function.runkit7-function-redefine.php",
        "Replace a function definition with a new implementation"
    ],
    "runkit7functionremove": [
        "runkit7_function_remove",
        "function.runkit7-function-remove.php",
        "Remove a function definition"
    ],
    "runkit7functionrename": [
        "runkit7_function_rename",
        "function.runkit7-function-rename.php",
        "Change a function's name"
    ],
    "runkit7import": [
        "runkit7_import",
        "function.runkit7-import.php",
        "Process a PHP file importing function and class definitions, overwriting where appropriate"
    ],
    "runkit7methodadd": [
        "runkit7_method_add",
        "function.runkit7-method-add.php",
        "Dynamically adds a new method to a given class"
    ],
    "runkit7methodcopy": [
        "runkit7_method_copy",
        "function.runkit7-method-copy.php",
        "Copies a method from class to another"
    ],
    "runkit7methodredefine": [
        "runkit7_method_redefine",
        "function.runkit7-method-redefine.php",
        "Dynamically changes the code of the given method"
    ],
    "runkit7methodremove": [
        "runkit7_method_remove",
        "function.runkit7-method-remove.php",
        "Dynamically removes the given method"
    ],
    "runkit7methodrename": [
        "runkit7_method_rename",
        "function.runkit7-method-rename.php",
        "Dynamically changes the name of the given method"
    ],
    "runkit7objectid": [
        "runkit7_object_id",
        "function.runkit7-object-id.php",
        "Return the integer object handle for given object"
    ],
    "runkit7superglobals": [
        "runkit7_superglobals",
        "function.runkit7-superglobals.php",
        "Return numerically indexed array of registered superglobals"
    ],
    "runkit7zvalinspect": [
        "runkit7_zval_inspect",
        "function.runkit7-zval-inspect.php",
        "Returns information about the passed in value with data types, reference counts, etc"
    ],
    "sapiwindowscpconv": [
        "sapi_windows_cp_conv",
        "function.sapi-windows-cp-conv.php",
        "文字列のコードページを別のものに変換する"
    ],
    "sapiwindowscpget": [
        "sapi_windows_cp_get",
        "function.sapi-windows-cp-get.php",
        "現在のコードページを取得する"
    ],
    "sapiwindowscpisutf8": [
        "sapi_windows_cp_is_utf8",
        "function.sapi-windows-cp-is-utf8.php",
        "コードページがUTF-8と互換性があるかを返す"
    ],
    "sapiwindowscpset": [
        "sapi_windows_cp_set",
        "function.sapi-windows-cp-set.php",
        "現在のプロセスのコードページを設定する"
    ],
    "sapiwindowsgeneratectrlevent": [
        "sapi_windows_generate_ctrl_event",
        "function.sapi-windows-generate-ctrl-event.php",
        "CTRLイベント を別プロセスに送信する"
    ],
    "sapiwindowssetctrlhandler": [
        "sapi_windows_set_ctrl_handler",
        "function.sapi-windows-set-ctrl-handler.php",
        "CTRLイベント のハンドラを設定したり削除したりする"
    ],
    "sapiwindowsvt100support": [
        "sapi_windows_vt100_support",
        "function.sapi-windows-vt100-support.php",
        "Windows コンソールの出力バッファに関連付けられたストリームのVT100サポート状況を取得/設定する"
    ],
    "scandir": [
        "scandir",
        "function.scandir.php",
        "指定されたパスのファイルとディレクトリのリストを取得する"
    ],
    "SchemacreateCollection": [
        "Schema::createCollection",
        "mysql-xdevapi-schema.createcollection.php",
        "スキーマにコレクションを追加する"
    ],
    "SchemadropCollection": [
        "Schema::dropCollection",
        "mysql-xdevapi-schema.dropcollection.php",
        "スキーマからコレクションを削除する"
    ],
    "SchemaexistsInDatabase": [
        "Schema::existsInDatabase",
        "mysql-xdevapi-schema.existsindatabase.php",
        "データベースに存在するかをチェックする"
    ],
    "SchemagetCollection": [
        "Schema::getCollection",
        "mysql-xdevapi-schema.getcollection.php",
        "スキーマからコレクションを取得する"
    ],
    "SchemagetCollectionAsTable": [
        "Schema::getCollectionAsTable",
        "mysql-xdevapi-schema.getcollectionastable.php",
        "コレクションをテーブルオブジェクトとして取得する"
    ],
    "SchemagetCollections": [
        "Schema::getCollections",
        "mysql-xdevapi-schema.getcollections.php",
        "スキーマに属する全てのコレクションを取得する"
    ],
    "SchemagetName": [
        "Schema::getName",
        "mysql-xdevapi-schema.getname.php",
        "スキーマの名前を取得する"
    ],
    "SchemagetSession": [
        "Schema::getSession",
        "mysql-xdevapi-schema.getsession.php",
        "スキーマのセッションを取得する"
    ],
    "SchemagetTable": [
        "Schema::getTable",
        "mysql-xdevapi-schema.gettable.php",
        "スキーマのテーブルを取得する"
    ],
    "SchemagetTables": [
        "Schema::getTables",
        "mysql-xdevapi-schema.gettables.php",
        "スキーマのテーブルを取得する"
    ],
    "Schemaconstruct": [
        "Schema::__construct",
        "mysql-xdevapi-schema.construct.php",
        "Schema のコンストラクタ"
    ],
    "SchemaObjectgetSchema": [
        "SchemaObject::getSchema",
        "mysql-xdevapi-schemaobject.getschema.php",
        "スキーマオブジェクトを得る"
    ],
    "scoutapmgetcalls": [
        "scoutapm_get_calls",
        "function.scoutapm-get-calls.php",
        "収集する処理が呼ばれた情報の一覧を返す"
    ],
    "scoutapmlistinstrumentedfunctions": [
        "scoutapm_list_instrumented_functions",
        "function.scoutapm-list-instrumented-functions.php",
        "scoutapm がデータを収集する関数の一覧"
    ],
    "SDODASChangeSummarybeginLogging": [
        "SDO_DAS_ChangeSummary::beginLogging",
        "sdo-das-changesummary.beginlogging.php",
        "変更内容の記録を開始する"
    ],
    "SDODASChangeSummaryendLogging": [
        "SDO_DAS_ChangeSummary::endLogging",
        "sdo-das-changesummary.endlogging.php",
        "変更内容の記録を終了する"
    ],
    "SDODASChangeSummarygetChangedDataObjects": [
        "SDO_DAS_ChangeSummary::getChangedDataObjects",
        "sdo-das-changesummary.getchangeddataobjects.php",
        "変更内容から、変更されたデータオブジェクトを取得する"
    ],
    "SDODASChangeSummarygetChangeType": [
        "SDO_DAS_ChangeSummary::getChangeType",
        "sdo-das-changesummary.getchangetype.php",
        "SDO_DataObject への変更の型を取得する"
    ],
    "SDODASChangeSummarygetOldContainer": [
        "SDO_DAS_ChangeSummary::getOldContainer",
        "sdo-das-changesummary.getoldcontainer.php",
        "削除された SDO_DataObject の削除前のコンテナを取得する"
    ],
    "SDODASChangeSummarygetOldValues": [
        "SDO_DAS_ChangeSummary::getOldValues",
        "sdo-das-changesummary.getoldvalues.php",
        "変更された SDO_DataObject の変更前の値を取得する"
    ],
    "SDODASChangeSummaryisLogging": [
        "SDO_DAS_ChangeSummary::isLogging",
        "sdo-das-changesummary.islogging.php",
        "変更内容が記録されるようになっているかどうかを調べる"
    ],
    "SDODASDataFactoryaddPropertyToType": [
        "SDO_DAS_DataFactory::addPropertyToType",
        "sdo-das-datafactory.addpropertytotype.php",
        "型にプロパティを追加する"
    ],
    "SDODASDataFactoryaddType": [
        "SDO_DAS_DataFactory::addType",
        "sdo-das-datafactory.addtype.php",
        "モデルに新しい型を追加する"
    ],
    "SDODASDataFactorygetDataFactory": [
        "SDO_DAS_DataFactory::getDataFactory",
        "sdo-das-datafactory.getdatafactory.php",
        "データファクトリのインスタンスを取得する"
    ],
    "SDODASDataObjectgetChangeSummary": [
        "SDO_DAS_DataObject::getChangeSummary",
        "sdo-das-dataobject.getchangesummary.php",
        "データオブジェクトの変更内容を取得する"
    ],
    "SDODASRelationalapplyChanges": [
        "SDO_DAS_Relational::applyChanges",
        "sdo-das-relational.applychanges.php",
        "Applies the changes made to a data graph back to the database"
    ],
    "SDODASRelationalconstruct": [
        "SDO_DAS_Relational::__construct",
        "sdo-das-relational.construct.php",
        "リレーショナルデータアクセスサービスのインスタンスを作成する"
    ],
    "SDODASSettinggetListIndex": [
        "SDO_DAS_Setting::getListIndex",
        "sdo-das-setting.getlistindex.php",
        "複数の値を持つプロパティのインデックスを取得する"
    ],
    "SDODASSettinggetPropertyIndex": [
        "SDO_DAS_Setting::getPropertyIndex",
        "sdo-das-setting.getpropertyindex.php",
        "変更されたプロパティのプロパティインデックスを取得する"
    ],
    "SDODASSettinggetPropertyName": [
        "SDO_DAS_Setting::getPropertyName",
        "sdo-das-setting.getpropertyname.php",
        "変更されたプロパティのプロパティ名を取得する"
    ],
    "SDODASSettinggetValue": [
        "SDO_DAS_Setting::getValue",
        "sdo-das-setting.getvalue.php",
        "変更されたプロパティの変更前の値を取得する"
    ],
    "SDODASSettingisSet": [
        "SDO_DAS_Setting::isSet",
        "sdo-das-setting.isset.php",
        "変更前にプロパティが設定されていたかどうかを調べる"
    ],
    "SDODASXMLaddTypes": [
        "SDO_DAS_XML::addTypes",
        "sdo-das-xml.addtypes.php",
        "2 番目以降のスキーマファイルを SDO_DAS_XML オブジェクトに読み込む"
    ],
    "SDODASXMLcreate": [
        "SDO_DAS_XML::create",
        "sdo-das-xml.create.php",
        "スキーマファイルを指定して SDO_DAS_XML オブジェクトを作成する"
    ],
    "SDODASXMLcreateDataObject": [
        "SDO_DAS_XML::createDataObject",
        "sdo-das-xml.createdataobject.php",
        "名前空間 URI および型名を指定して SDO_DataObject を作成する"
    ],
    "SDODASXMLcreateDocument": [
        "SDO_DAS_XML::createDocument",
        "sdo-das-xml.createdocument.php",
        "Creates an XML Document object from scratch, without the need to load a document from a file or string"
    ],
    "SDODASXMLsaveFile": [
        "SDO_DAS_XML::saveFile",
        "sdo-das-xml.savefile.php",
        "SDO_DAS_XML_Document オブジェクトをファイルに保存する"
    ],
    "SDODASXMLsaveString": [
        "SDO_DAS_XML::saveString",
        "sdo-das-xml.savestring.php",
        "SDO_DAS_XML_Document オブジェクトを文字列に保存する"
    ],
    "SDODASXMLDocumentgetRootDataObject": [
        "SDO_DAS_XML_Document::getRootDataObject",
        "sdo-das-xml-document.getrootdataobject.php",
        "ルート SDO_DataObject を返す"
    ],
    "SDODASXMLDocumentgetRootElementName": [
        "SDO_DAS_XML_Document::getRootElementName",
        "sdo-das-xml-document.getrootelementname.php",
        "ルート要素の名前を返す"
    ],
    "SDODASXMLDocumentgetRootElementURI": [
        "SDO_DAS_XML_Document::getRootElementURI",
        "sdo-das-xml-document.getrootelementuri.php",
        "ルート要素の URI 文字列を返す"
    ],
    "SDODASXMLDocumentsetEncoding": [
        "SDO_DAS_XML_Document::setEncoding",
        "sdo-das-xml-document.setencoding.php",
        "エンコーディングを文字列で設定する"
    ],
    "SDODASXMLDocumentsetXMLDeclaration": [
        "SDO_DAS_XML_Document::setXMLDeclaration",
        "sdo-das-xml-document.setxmldeclaration.php",
        "xml 宣言を設定する"
    ],
    "SDODASXMLDocumentsetXMLVersion": [
        "SDO_DAS_XML_Document::setXMLVersion",
        "sdo-das-xml-document.setxmlversion.php",
        "xml バージョンを文字列で設定する"
    ],
    "SDODataFactorycreate": [
        "SDO_DataFactory::create",
        "sdo-datafactory.create.php",
        "SDO_DataObject を作成する"
    ],
    "SDODataObjectclear": [
        "SDO_DataObject::clear",
        "sdo-dataobject.clear.php",
        "SDO_DataObject のプロパティを消去する"
    ],
    "SDODataObjectcreateDataObject": [
        "SDO_DataObject::createDataObject",
        "sdo-dataobject.createdataobject.php",
        "新しい子 SDO_DataObject を作成する"
    ],
    "SDODataObjectgetContainer": [
        "SDO_DataObject::getContainer",
        "sdo-dataobject.getcontainer.php",
        "データオブジェクトのコンテナを取得する"
    ],
    "SDODataObjectgetSequence": [
        "SDO_DataObject::getSequence",
        "sdo-dataobject.getsequence.php",
        "データオブジェクトのシーケンスを取得する"
    ],
    "SDODataObjectgetTypeName": [
        "SDO_DataObject::getTypeName",
        "sdo-dataobject.gettypename.php",
        "Return the name of the type for a data object"
    ],
    "SDODataObjectgetTypeNamespaceURI": [
        "SDO_DataObject::getTypeNamespaceURI",
        "sdo-dataobject.gettypenamespaceuri.php",
        "Return the namespace URI of the type for a data object"
    ],
    "SDOExceptiongetCause": [
        "SDO_Exception::getCause",
        "sdo-exception.getcause.php",
        "Get the cause of the exception"
    ],
    "SDOListinsert": [
        "SDO_List::insert",
        "sdo-list.insert.php",
        "リストに挿入する"
    ],
    "SDOModelPropertygetContainingType": [
        "SDO_Model_Property::getContainingType",
        "sdo-model-property.getcontainingtype.php",
        "このプロパティを含む SDO_Model_Type を取得する"
    ],
    "SDOModelPropertygetDefault": [
        "SDO_Model_Property::getDefault",
        "sdo-model-property.getdefault.php",
        "プロパティのデフォルト値を取得する"
    ],
    "SDOModelPropertygetName": [
        "SDO_Model_Property::getName",
        "sdo-model-property.getname.php",
        "SDO_Model_Property の名前を取得する"
    ],
    "SDOModelPropertygetType": [
        "SDO_Model_Property::getType",
        "sdo-model-property.gettype.php",
        "プロパティの SDO_Model_Type を取得する"
    ],
    "SDOModelPropertyisContainment": [
        "SDO_Model_Property::isContainment",
        "sdo-model-property.iscontainment.php",
        "プロパティが包含関係を定義しているかどうかを調べる"
    ],
    "SDOModelPropertyisMany": [
        "SDO_Model_Property::isMany",
        "sdo-model-property.ismany.php",
        "プロパティが複数の値を持つかどうかを調べる"
    ],
    "SDOModelReflectionDataObjectexport": [
        "SDO_Model_ReflectionDataObject::export",
        "sdo-model-reflectiondataobject.export.php",
        "Get a string describing the SDO_DataObject"
    ],
    "SDOModelReflectionDataObjectgetContainmentProperty": [
        "SDO_Model_ReflectionDataObject::getContainmentProperty",
        "sdo-model-reflectiondataobject.getcontainmentproperty.php",
        "データオブジェクトとの包含関係を定義しているプロパティを取得する"
    ],
    "SDOModelReflectionDataObjectgetInstanceProperties": [
        "SDO_Model_ReflectionDataObject::getInstanceProperties",
        "sdo-model-reflectiondataobject.getinstanceproperties.php",
        "SDO_DataObject のインスタンスプロパティを取得する"
    ],
    "SDOModelReflectionDataObjectgetType": [
        "SDO_Model_ReflectionDataObject::getType",
        "sdo-model-reflectiondataobject.gettype.php",
        "SDO_DataObject の SDO_Model_Type を取得する"
    ],
    "SDOModelReflectionDataObjectconstruct": [
        "SDO_Model_ReflectionDataObject::__construct",
        "sdo-model-reflectiondataobject.construct.php",
        "SDO_Model_ReflectionDataObject を作成する"
    ],
    "SDOModelTypegetBaseType": [
        "SDO_Model_Type::getBaseType",
        "sdo-model-type.getbasetype.php",
        "この型の基底型を取得する"
    ],
    "SDOModelTypegetName": [
        "SDO_Model_Type::getName",
        "sdo-model-type.getname.php",
        "型の名前を取得する"
    ],
    "SDOModelTypegetNamespaceURI": [
        "SDO_Model_Type::getNamespaceURI",
        "sdo-model-type.getnamespaceuri.php",
        "型の名前空間 URI を取得する"
    ],
    "SDOModelTypegetProperties": [
        "SDO_Model_Type::getProperties",
        "sdo-model-type.getproperties.php",
        "型で定義されている SDO_Model_Property オブジェクトを取得する"
    ],
    "SDOModelTypegetProperty": [
        "SDO_Model_Type::getProperty",
        "sdo-model-type.getproperty.php",
        "型の SDO_Model_Property を取得する"
    ],
    "SDOModelTypeisAbstractType": [
        "SDO_Model_Type::isAbstractType",
        "sdo-model-type.isabstracttype.php",
        "この SDO_Model_Type が抽象データ型であるかどうかを調べる"
    ],
    "SDOModelTypeisDataType": [
        "SDO_Model_Type::isDataType",
        "sdo-model-type.isdatatype.php",
        "この SDO_Model_Type がプリミティブなデータ型であるかどうかを調べる"
    ],
    "SDOModelTypeisInstance": [
        "SDO_Model_Type::isInstance",
        "sdo-model-type.isinstance.php",
        "SDO_DataObject が、この SDO_Model_Type のインスタンスであるかどうかを調べる"
    ],
    "SDOModelTypeisOpenType": [
        "SDO_Model_Type::isOpenType",
        "sdo-model-type.isopentype.php",
        "この型がオープン型であるかどうかを調べる"
    ],
    "SDOModelTypeisSequencedType": [
        "SDO_Model_Type::isSequencedType",
        "sdo-model-type.issequencedtype.php",
        "この型がシーケンス型であるかどうかを調べる"
    ],
    "SDOSequencegetProperty": [
        "SDO_Sequence::getProperty",
        "sdo-sequence.getproperty.php",
        "Return the property for the specified sequence index"
    ],
    "SDOSequenceinsert": [
        "SDO_Sequence::insert",
        "sdo-sequence.insert.php",
        "シーケンスに挿入する"
    ],
    "SDOSequencemove": [
        "SDO_Sequence::move",
        "sdo-sequence.move.php",
        "シーケンス上の指定した位置に項目を移動する"
    ],
    "SeasLogalert": [
        "SeasLog::alert",
        "seaslog.alert.php",
        "Record alert log information"
    ],
    "SeasLoganalyzerCount": [
        "SeasLog::analyzerCount",
        "seaslog.analyzercount.php",
        "Get log count by level, log_path and key_word"
    ],
    "SeasLoganalyzerDetail": [
        "SeasLog::analyzerDetail",
        "seaslog.analyzerdetail.php",
        "Get log detail by level, log_path, key_word, start, limit, order"
    ],
    "SeasLogcloseLoggerStream": [
        "SeasLog::closeLoggerStream",
        "seaslog.closeloggerstream.php",
        "Manually release stream flow from logger"
    ],
    "SeasLogcritical": [
        "SeasLog::critical",
        "seaslog.critical.php",
        "Record critical log information"
    ],
    "SeasLogdebug": [
        "SeasLog::debug",
        "seaslog.debug.php",
        "Record debug log information"
    ],
    "SeasLogemergency": [
        "SeasLog::emergency",
        "seaslog.emergency.php",
        "Record emergency log information"
    ],
    "SeasLogerror": [
        "SeasLog::error",
        "seaslog.error.php",
        "Record error log information"
    ],
    "SeasLogflushBuffer": [
        "SeasLog::flushBuffer",
        "seaslog.flushbuffer.php",
        "Flush logs buffer, dump to appender file, or send to remote api with tcp/udp"
    ],
    "SeasLoggetBasePath": [
        "SeasLog::getBasePath",
        "seaslog.getbasepath.php",
        "Get SeasLog base path."
    ],
    "SeasLoggetBuffer": [
        "SeasLog::getBuffer",
        "seaslog.getbuffer.php",
        "Get the logs buffer in memory as array"
    ],
    "SeasLoggetBufferEnabled": [
        "SeasLog::getBufferEnabled",
        "seaslog.getbufferenabled.php",
        "Determin if buffer enabled"
    ],
    "SeasLoggetDatetimeFormat": [
        "SeasLog::getDatetimeFormat",
        "seaslog.getdatetimeformat.php",
        "Get SeasLog datetime format style"
    ],
    "SeasLoggetLastLogger": [
        "SeasLog::getLastLogger",
        "seaslog.getlastlogger.php",
        "Get SeasLog last logger path"
    ],
    "SeasLoggetRequestID": [
        "SeasLog::getRequestID",
        "seaslog.getrequestid.php",
        "Get SeasLog request_id differentiated requests"
    ],
    "SeasLoggetRequestVariable": [
        "SeasLog::getRequestVariable",
        "seaslog.getrequestvariable.php",
        "Get SeasLog request variable"
    ],
    "SeasLoginfo": [
        "SeasLog::info",
        "seaslog.info.php",
        "Record info log information"
    ],
    "SeasLoglog": [
        "SeasLog::log",
        "seaslog.log.php",
        "The Common Record Log Function"
    ],
    "SeasLognotice": [
        "SeasLog::notice",
        "seaslog.notice.php",
        "Record notice log information"
    ],
    "SeasLogsetBasePath": [
        "SeasLog::setBasePath",
        "seaslog.setbasepath.php",
        "Set SeasLog base path"
    ],
    "SeasLogsetDatetimeFormat": [
        "SeasLog::setDatetimeFormat",
        "seaslog.setdatetimeformat.php",
        "Set SeasLog datetime format style"
    ],
    "SeasLogsetLogger": [
        "SeasLog::setLogger",
        "seaslog.setlogger.php",
        "Set SeasLog logger name"
    ],
    "SeasLogsetRequestID": [
        "SeasLog::setRequestID",
        "seaslog.setrequestid.php",
        "Set SeasLog request_id differentiated requests"
    ],
    "SeasLogsetRequestVariable": [
        "SeasLog::setRequestVariable",
        "seaslog.setrequestvariable.php",
        "Manually set SeasLog request variable"
    ],
    "SeasLogwarning": [
        "SeasLog::warning",
        "seaslog.warning.php",
        "Record warning log information"
    ],
    "SeasLogconstruct": [
        "SeasLog::__construct",
        "seaslog.construct.php",
        "Description"
    ],
    "SeasLogdestruct": [
        "SeasLog::__destruct",
        "seaslog.destruct.php",
        "Description"
    ],
    "seasloggetauthor": [
        "seaslog_get_author",
        "function.seaslog-get-author.php",
        "Get SeasLog author."
    ],
    "seasloggetversion": [
        "seaslog_get_version",
        "function.seaslog-get-version.php",
        "Get SeasLog version."
    ],
    "SeekableIteratorseek": [
        "SeekableIterator::seek",
        "seekableiterator.seek.php",
        "位置を移動する"
    ],
    "semacquire": [
        "sem_acquire",
        "function.sem-acquire.php",
        "セマフォを得る"
    ],
    "semget": [
        "sem_get",
        "function.sem-get.php",
        "セマフォ ID を得る"
    ],
    "semrelease": [
        "sem_release",
        "function.sem-release.php",
        "セマフォを解放する"
    ],
    "semremove": [
        "sem_remove",
        "function.sem-remove.php",
        "セマフォを削除する"
    ],
    "Serializableserialize": [
        "Serializable::serialize",
        "serializable.serialize.php",
        "オブジェクトの文字列表現"
    ],
    "Serializableunserialize": [
        "Serializable::unserialize",
        "serializable.unserialize.php",
        "オブジェクトを作成する"
    ],
    "serialize": [
        "serialize",
        "function.serialize.php",
        "値の保存可能な表現を生成する"
    ],
    "Sessionclose": [
        "Session::close",
        "mysql-xdevapi-session.close.php",
        "セッションを閉じる"
    ],
    "SessioncreateSchema": [
        "Session::createSchema",
        "mysql-xdevapi-session.createschema.php",
        "新しいスキーマを作成する"
    ],
    "SessiondropSchema": [
        "Session::dropSchema",
        "mysql-xdevapi-session.dropschema.php",
        "スキーマを削除します"
    ],
    "SessiongenerateUUID": [
        "Session::generateUUID",
        "mysql-xdevapi-session.generateuuid.php",
        "新しいUUIDを取得する"
    ],
    "SessiongetDefaultSchema": [
        "Session::getDefaultSchema",
        "mysql-xdevapi-session.getdefaultschema.php",
        "デフォルトのスキーマ名を取得する"
    ],
    "SessiongetSchema": [
        "Session::getSchema",
        "mysql-xdevapi-session.getschema.php",
        "新しいスキーマオブジェクトを取得する"
    ],
    "SessiongetSchemas": [
        "Session::getSchemas",
        "mysql-xdevapi-session.getschemas.php",
        "スキーマを取得する"
    ],
    "SessiongetServerVersion": [
        "Session::getServerVersion",
        "mysql-xdevapi-session.getserverversion.php",
        "サーバのバージョンを取得する"
    ],
    "SessionlistClients": [
        "Session::listClients",
        "mysql-xdevapi-session.listclients.php",
        "クライアントの一覧を取得する"
    ],
    "SessionquoteName": [
        "Session::quoteName",
        "mysql-xdevapi-session.quotename.php",
        "クォートを追加する"
    ],
    "SessionreleaseSavepoint": [
        "Session::releaseSavepoint",
        "mysql-xdevapi-session.releasesavepoint.php",
        "設定されたセーブポイントをリリースする"
    ],
    "Sessionrollback": [
        "Session::rollback",
        "mysql-xdevapi-session.rollback.php",
        "トランザクションをロールバックする"
    ],
    "SessionrollbackTo": [
        "Session::rollbackTo",
        "mysql-xdevapi-session.rollbackto.php",
        "セーブポイントまでトランザクションをロールバックする"
    ],
    "SessionsetSavepoint": [
        "Session::setSavepoint",
        "mysql-xdevapi-session.setsavepoint.php",
        "セーブポイントを作成する"
    ],
    "Sessionsql": [
        "Session::sql",
        "mysql-xdevapi-session.sql.php",
        "SQLクエリを実行する"
    ],
    "SessionstartTransaction": [
        "Session::startTransaction",
        "mysql-xdevapi-session.starttransaction.php",
        "トランザクションを開始する"
    ],
    "Sessionconstruct": [
        "Session::__construct",
        "mysql-xdevapi-session.construct.php",
        "Session のコンストラクタ"
    ],
    "SessionHandlerclose": [
        "SessionHandler::close",
        "sessionhandler.close.php",
        "セッションを閉じる"
    ],
    "SessionHandlercreatesid": [
        "SessionHandler::create_sid",
        "sessionhandler.create-sid.php",
        "新規セッション ID を返す"
    ],
    "SessionHandlerdestroy": [
        "SessionHandler::destroy",
        "sessionhandler.destroy.php",
        "セッションを破棄する"
    ],
    "SessionHandlergc": [
        "SessionHandler::gc",
        "sessionhandler.gc.php",
        "古いセッションを削除する"
    ],
    "SessionHandleropen": [
        "SessionHandler::open",
        "sessionhandler.open.php",
        "セッションを開始する"
    ],
    "SessionHandlerread": [
        "SessionHandler::read",
        "sessionhandler.read.php",
        "セッションのデータを読み込む"
    ],
    "SessionHandlerwrite": [
        "SessionHandler::write",
        "sessionhandler.write.php",
        "セッションのデータを書き込む"
    ],
    "SessionHandlerInterfaceclose": [
        "SessionHandlerInterface::close",
        "sessionhandlerinterface.close.php",
        "セッションを閉じる"
    ],
    "SessionHandlerInterfacedestroy": [
        "SessionHandlerInterface::destroy",
        "sessionhandlerinterface.destroy.php",
        "セッションを破棄する"
    ],
    "SessionHandlerInterfacegc": [
        "SessionHandlerInterface::gc",
        "sessionhandlerinterface.gc.php",
        "古いセッションを削除する"
    ],
    "SessionHandlerInterfaceopen": [
        "SessionHandlerInterface::open",
        "sessionhandlerinterface.open.php",
        "セッションを開始する"
    ],
    "SessionHandlerInterfaceread": [
        "SessionHandlerInterface::read",
        "sessionhandlerinterface.read.php",
        "セッションのデータを読み込む"
    ],
    "SessionHandlerInterfacewrite": [
        "SessionHandlerInterface::write",
        "sessionhandlerinterface.write.php",
        "セッションのデータを書き込む"
    ],
    "SessionIdInterfacecreatesid": [
        "SessionIdInterface::create_sid",
        "sessionidinterface.create-sid.php",
        "セッションIDを作成する"
    ],
    "SessionUpdateTimestampHandlerInterfaceupdateTimestamp": [
        "SessionUpdateTimestampHandlerInterface::updateTimestamp",
        "sessionupdatetimestamphandlerinterface.updatetimestamp.php",
        "タイムスタンプを更新する"
    ],
    "SessionUpdateTimestampHandlerInterfacevalidateId": [
        "SessionUpdateTimestampHandlerInterface::validateId",
        "sessionupdatetimestamphandlerinterface.validateid.php",
        "セッションIDを検証する"
    ],
    "sessionabort": [
        "session_abort",
        "function.session-abort.php",
        "session 配列の変更を破棄してセッションを終了します"
    ],
    "sessioncacheexpire": [
        "session_cache_expire",
        "function.session-cache-expire.php",
        "現在のキャッシュの有効期限を取得/設定する"
    ],
    "sessioncachelimiter": [
        "session_cache_limiter",
        "function.session-cache-limiter.php",
        "現在のキャッシュリミッタを取得または設定する"
    ],
    "sessioncommit": [
        "session_commit",
        "function.session-commit.php",
        "session_write_close のエイリアス"
    ],
    "sessioncreateid": [
        "session_create_id",
        "function.session-create-id.php",
        "新しいセッションIDを作成する"
    ],
    "sessiondecode": [
        "session_decode",
        "function.session-decode.php",
        "セッションエンコードされた文字列からセッションデータをデコードする"
    ],
    "sessiondestroy": [
        "session_destroy",
        "function.session-destroy.php",
        "セッションに登録されたデータを全て破棄する"
    ],
    "sessionencode": [
        "session_encode",
        "function.session-encode.php",
        "現在のセッションデータを、セッションエンコードされた文字列に変換する"
    ],
    "sessiongc": [
        "session_gc",
        "function.session-gc.php",
        "セッションデータのガベージコレクションを実行する"
    ],
    "sessiongetcookieparams": [
        "session_get_cookie_params",
        "function.session-get-cookie-params.php",
        "セッションクッキーのパラメータを得る"
    ],
    "sessionid": [
        "session_id",
        "function.session-id.php",
        "現在のセッション ID を取得または設定する"
    ],
    "sessionisregistered": [
        "session_is_registered",
        "function.session-is-registered.php",
        "変数がセッションに登録されているかどうかを調べる"
    ],
    "sessionmodulename": [
        "session_module_name",
        "function.session-module-name.php",
        "現在のセッションモジュールを取得または設定する"
    ],
    "sessionname": [
        "session_name",
        "function.session-name.php",
        "現在のセッション名を取得または設定する"
    ],
    "sessionregenerateid": [
        "session_regenerate_id",
        "function.session-regenerate-id.php",
        "現在のセッションIDを新しく生成したものと置き換える"
    ],
    "sessionregister": [
        "session_register",
        "function.session-register.php",
        "現在のセッションに1つ以上の変数を登録する"
    ],
    "sessionregistershutdown": [
        "session_register_shutdown",
        "function.session-register-shutdown.php",
        "セッションのシャットダウン関数"
    ],
    "sessionreset": [
        "session_reset",
        "function.session-reset.php",
        "session 配列を元の値で再初期化します"
    ],
    "sessionsavepath": [
        "session_save_path",
        "function.session-save-path.php",
        "現在のセッションデータ保存パスを取得または設定する"
    ],
    "sessionsetcookieparams": [
        "session_set_cookie_params",
        "function.session-set-cookie-params.php",
        "セッションクッキーパラメータを設定する"
    ],
    "sessionsetsavehandler": [
        "session_set_save_handler",
        "function.session-set-save-handler.php",
        "ユーザー定義のセッション保存関数を設定する"
    ],
    "sessionstart": [
        "session_start",
        "function.session-start.php",
        "新しいセッションを開始、あるいは既存のセッションを再開する"
    ],
    "sessionstatus": [
        "session_status",
        "function.session-status.php",
        "現在のセッションの状態を返す"
    ],
    "sessionunregister": [
        "session_unregister",
        "function.session-unregister.php",
        "現在のセッションから変数の登録を削除する"
    ],
    "sessionunset": [
        "session_unset",
        "function.session-unset.php",
        "全てのセッション変数を開放する"
    ],
    "sessionwriteclose": [
        "session_write_close",
        "function.session-write-close.php",
        "セッションデータを書き込んでセッションを終了する"
    ],
    "setcookie": [
        "setcookie",
        "function.setcookie.php",
        "クッキーを送信する"
    ],
    "setlocale": [
        "setlocale",
        "function.setlocale.php",
        "ロケール情報を設定する"
    ],
    "setproctitle": [
        "setproctitle",
        "function.setproctitle.php",
        "プロセスのタイトルを設定"
    ],
    "setrawcookie": [
        "setrawcookie",
        "function.setrawcookie.php",
        "値を URL エンコードせずにクッキーを送信する"
    ],
    "setthreadtitle": [
        "setthreadtitle",
        "function.setthreadtitle.php",
        "スレッドのタイトルを設定"
    ],
    "settype": [
        "settype",
        "function.settype.php",
        "変数の型をセットする"
    ],
    "seterrorhandler": [
        "set_error_handler",
        "function.set-error-handler.php",
        "ユーザー定義のエラーハンドラ関数を設定する"
    ],
    "setexceptionhandler": [
        "set_exception_handler",
        "function.set-exception-handler.php",
        "ユーザー定義の例外ハンドラ関数を設定する"
    ],
    "setfilebuffer": [
        "set_file_buffer",
        "function.set-file-buffer.php",
        "stream_set_write_buffer のエイリアス"
    ],
    "setincludepath": [
        "set_include_path",
        "function.set-include-path.php",
        "include_path 設定オプションをセットする"
    ],
    "settimelimit": [
        "set_time_limit",
        "function.set-time-limit.php",
        "実行時間の最大値を制限する"
    ],
    "sha1": [
        "sha1",
        "function.sha1.php",
        "文字列の sha1 ハッシュを計算する"
    ],
    "sha1file": [
        "sha1_file",
        "function.sha1-file.php",
        "ファイルの sha1 ハッシュを計算する"
    ],
    "shellexec": [
        "shell_exec",
        "function.shell-exec.php",
        "シェルによりコマンドを実行し、文字列として出力全体を返す"
    ],
    "shmopclose": [
        "shmop_close",
        "function.shmop-close.php",
        "共有メモリブロックを閉じる"
    ],
    "shmopdelete": [
        "shmop_delete",
        "function.shmop-delete.php",
        "共有メモリブロックを削除する"
    ],
    "shmopopen": [
        "shmop_open",
        "function.shmop-open.php",
        "共有メモリブロックを作成またはオープンする"
    ],
    "shmopread": [
        "shmop_read",
        "function.shmop-read.php",
        "共有メモリブロックからデータを読み取る"
    ],
    "shmopsize": [
        "shmop_size",
        "function.shmop-size.php",
        "共有メモリブロックの大きさを取得する"
    ],
    "shmopwrite": [
        "shmop_write",
        "function.shmop-write.php",
        "共有メモリブロックにデータを書き込む"
    ],
    "shmattach": [
        "shm_attach",
        "function.shm-attach.php",
        "共有メモリセグメントを作成またはオープンする"
    ],
    "shmdetach": [
        "shm_detach",
        "function.shm-detach.php",
        "共有メモリセグメントへの接続を閉じる"
    ],
    "shmgetvar": [
        "shm_get_var",
        "function.shm-get-var.php",
        "共有メモリから変数を返す"
    ],
    "shmhasvar": [
        "shm_has_var",
        "function.shm-has-var.php",
        "特定のエントリが存在するかどうかを調べる"
    ],
    "shmputvar": [
        "shm_put_var",
        "function.shm-put-var.php",
        "共有メモリの変数を挿入または更新する"
    ],
    "shmremove": [
        "shm_remove",
        "function.shm-remove.php",
        "Unix システムから共有メモリを削除する"
    ],
    "shmremovevar": [
        "shm_remove_var",
        "function.shm-remove-var.php",
        "共有メモリから変数を削除する"
    ],
    "showsource": [
        "show_source",
        "function.show-source.php",
        "highlight_file のエイリアス"
    ],
    "shuffle": [
        "shuffle",
        "function.shuffle.php",
        "配列をシャッフルする"
    ],
    "similartext": [
        "similar_text",
        "function.similar-text.php",
        "二つの文字列の間の類似性を計算する"
    ],
    "SimpleXMLElementaddAttribute": [
        "SimpleXMLElement::addAttribute",
        "simplexmlelement.addattribute.php",
        "SimpleXML 要素に属性を追加する"
    ],
    "SimpleXMLElementaddChild": [
        "SimpleXMLElement::addChild",
        "simplexmlelement.addchild.php",
        "XML ノードに子要素を追加する"
    ],
    "SimpleXMLElementasXML": [
        "SimpleXMLElement::asXML",
        "simplexmlelement.asxml.php",
        "SimpleXML 要素に基づき整形式の XML 文字列を返す"
    ],
    "SimpleXMLElementattributes": [
        "SimpleXMLElement::attributes",
        "simplexmlelement.attributes.php",
        "要素の属性を定義する"
    ],
    "SimpleXMLElementchildren": [
        "SimpleXMLElement::children",
        "simplexmlelement.children.php",
        "指定したノードの子ノードを見付ける"
    ],
    "SimpleXMLElementcount": [
        "SimpleXMLElement::count",
        "simplexmlelement.count.php",
        "子要素を数える"
    ],
    "SimpleXMLElementgetDocNamespaces": [
        "SimpleXMLElement::getDocNamespaces",
        "simplexmlelement.getdocnamespaces.php",
        "ドキュメントで宣言されている名前空間を返す"
    ],
    "SimpleXMLElementgetName": [
        "SimpleXMLElement::getName",
        "simplexmlelement.getname.php",
        "XML 要素の名前を取得する"
    ],
    "SimpleXMLElementgetNamespaces": [
        "SimpleXMLElement::getNamespaces",
        "simplexmlelement.getnamespaces.php",
        "ドキュメントで使用している名前空間を返す"
    ],
    "SimpleXMLElementregisterXPathNamespace": [
        "SimpleXMLElement::registerXPathNamespace",
        "simplexmlelement.registerxpathnamespace.php",
        "次の XPath クエリ用の prefix/ns コンテキストを作成する"
    ],
    "SimpleXMLElementsaveXML": [
        "SimpleXMLElement::saveXML",
        "simplexmlelement.savexml.php",
        "SimpleXMLElement::asXML のエイリアス"
    ],
    "SimpleXMLElementxpath": [
        "SimpleXMLElement::xpath",
        "simplexmlelement.xpath.php",
        "XML データに Xpath クエリを実行する"
    ],
    "SimpleXMLElementconstruct": [
        "SimpleXMLElement::__construct",
        "simplexmlelement.construct.php",
        "新しい SimpleXMLElement オブジェクトを作成する"
    ],
    "SimpleXMLElementtoString": [
        "SimpleXMLElement::__toString",
        "simplexmlelement.tostring.php",
        "文字列で要素の内容を返す"
    ],
    "SimpleXMLIteratorcurrent": [
        "SimpleXMLIterator::current",
        "simplexmliterator.current.php",
        "現在の SimpleXML エントリを返す"
    ],
    "SimpleXMLIteratorgetChildren": [
        "SimpleXMLIterator::getChildren",
        "simplexmliterator.getchildren.php",
        "現在の要素の子要素を返す"
    ],
    "SimpleXMLIteratorhasChildren": [
        "SimpleXMLIterator::hasChildren",
        "simplexmliterator.haschildren.php",
        "現在の要素が子要素を持つかどうかを調べる"
    ],
    "SimpleXMLIteratorkey": [
        "SimpleXMLIterator::key",
        "simplexmliterator.key.php",
        "現在のキーを返す"
    ],
    "SimpleXMLIteratornext": [
        "SimpleXMLIterator::next",
        "simplexmliterator.next.php",
        "次の要素に移動する"
    ],
    "SimpleXMLIteratorrewind": [
        "SimpleXMLIterator::rewind",
        "simplexmliterator.rewind.php",
        "最初の要素に巻き戻す"
    ],
    "SimpleXMLIteratorvalid": [
        "SimpleXMLIterator::valid",
        "simplexmliterator.valid.php",
        "現在の要素が有効かどうかを調べる"
    ],
    "simplexmlimportdom": [
        "simplexml_import_dom",
        "function.simplexml-import-dom.php",
        "DOM ノードから SimpleXMLElement オブジェクトを取得する"
    ],
    "simplexmlloadfile": [
        "simplexml_load_file",
        "function.simplexml-load-file.php",
        "XMLファイルをパースし、オブジェクトに代入する"
    ],
    "simplexmlloadstring": [
        "simplexml_load_string",
        "function.simplexml-load-string.php",
        "XML 文字列をオブジェクトに代入する"
    ],
    "sin": [
        "sin",
        "function.sin.php",
        "正弦（サイン）"
    ],
    "sinh": [
        "sinh",
        "function.sinh.php",
        "双曲線正弦（ハイパボリックサイン）"
    ],
    "sizeof": [
        "sizeof",
        "function.sizeof.php",
        "count のエイリアス"
    ],
    "sleep": [
        "sleep",
        "function.sleep.php",
        "実行を遅延させる"
    ],
    "snmp2get": [
        "snmp2_get",
        "function.snmp2-get.php",
        "SNMP オブジェクトを取得する"
    ],
    "snmp2getnext": [
        "snmp2_getnext",
        "function.snmp2-getnext.php",
        "指定したオブジェクト ID に続く SNMP オブジェクトを取得する"
    ],
    "snmp2realwalk": [
        "snmp2_real_walk",
        "function.snmp2-real-walk.php",
        "指定したすべてのオブジェクトとそのオブジェクト ID を返す"
    ],
    "snmp2set": [
        "snmp2_set",
        "function.snmp2-set.php",
        "SNMP オブジェクトの値を設定する"
    ],
    "snmp2walk": [
        "snmp2_walk",
        "function.snmp2-walk.php",
        "すべての SNMP オブジェクトをエージェントから取得する"
    ],
    "snmp3get": [
        "snmp3_get",
        "function.snmp3-get.php",
        "SNMP オブジェクトを取得する"
    ],
    "snmp3getnext": [
        "snmp3_getnext",
        "function.snmp3-getnext.php",
        "指定したオブジェクト ID に続く SNMP オブジェクトを取得する"
    ],
    "snmp3realwalk": [
        "snmp3_real_walk",
        "function.snmp3-real-walk.php",
        "指定したすべてのオブジェクトとそのオブジェクト ID を返す"
    ],
    "snmp3set": [
        "snmp3_set",
        "function.snmp3-set.php",
        "SNMP オブジェクトの値を設定する"
    ],
    "snmp3walk": [
        "snmp3_walk",
        "function.snmp3-walk.php",
        "すべての SNMP オブジェクトをエージェントから取得する"
    ],
    "SNMPclose": [
        "SNMP::close",
        "snmp.close.php",
        "SNMP セッションを閉じる"
    ],
    "SNMPget": [
        "SNMP::get",
        "snmp.get.php",
        "SNMP オブジェクトを取得する"
    ],
    "SNMPgetErrno": [
        "SNMP::getErrno",
        "snmp.geterrno.php",
        "直近のエラーコードを取得する"
    ],
    "SNMPgetError": [
        "SNMP::getError",
        "snmp.geterror.php",
        "直近のエラーメッセージを取得する"
    ],
    "SNMPgetnext": [
        "SNMP::getnext",
        "snmp.getnext.php",
        "指定したオブジェクト ID に続く SNMP オブジェクトを取得する"
    ],
    "SNMPset": [
        "SNMP::set",
        "snmp.set.php",
        "SNMP オブジェクトの値を設定する"
    ],
    "SNMPsetSecurity": [
        "SNMP::setSecurity",
        "snmp.setsecurity.php",
        "セキュリティ関連の SNMPv3 セッションパラメータを設定する"
    ],
    "SNMPwalk": [
        "SNMP::walk",
        "snmp.walk.php",
        "SNMP オブジェクトのサブツリーを取得する"
    ],
    "SNMPconstruct": [
        "SNMP::__construct",
        "snmp.construct.php",
        "リモート SNMP エージェントへのセッションを表す SNMP インスタンスを作成する"
    ],
    "snmpget": [
        "snmpget",
        "function.snmpget.php",
        "SNMP オブジェクトを取得する"
    ],
    "snmpgetnext": [
        "snmpgetnext",
        "function.snmpgetnext.php",
        "指定したオブジェクト ID に続く SNMP オブジェクトを取得する"
    ],
    "snmpset": [
        "snmpset",
        "function.snmpset.php",
        "SNMP オブジェクトの値を設定する"
    ],
    "snmpwalk": [
        "snmpwalk",
        "function.snmpwalk.php",
        "エージェントから全ての SNMP オブジェクトを取得する"
    ],
    "snmpwalkoid": [
        "snmpwalkoid",
        "function.snmpwalkoid.php",
        "ネットワークエンティティに関する情報ツリーを検索する"
    ],
    "snmpgetquickprint": [
        "snmp_get_quick_print",
        "function.snmp-get-quick-print.php",
        "UCD ライブラリの quick_print の現在の設定値を取得する"
    ],
    "snmpgetvalueretrieval": [
        "snmp_get_valueretrieval",
        "function.snmp-get-valueretrieval.php",
        "SNMP の値が返される方法を返す"
    ],
    "snmpreadmib": [
        "snmp_read_mib",
        "function.snmp-read-mib.php",
        "アクティブな MIB ツリーの中に MIB ファイルを読み込んでパースする"
    ],
    "snmpsetenumprint": [
        "snmp_set_enum_print",
        "function.snmp-set-enum-print.php",
        "すべての enum を、実際の整数値ではなく enum 値とともに返す"
    ],
    "snmpsetoidnumericprint": [
        "snmp_set_oid_numeric_print",
        "function.snmp-set-oid-numeric-print.php",
        "OID の出力フォーマットを設定する"
    ],
    "snmpsetoidoutputformat": [
        "snmp_set_oid_output_format",
        "function.snmp-set-oid-output-format.php",
        "OID の出力形式を設定する"
    ],
    "snmpsetquickprint": [
        "snmp_set_quick_print",
        "function.snmp-set-quick-print.php",
        "UCB SNMP ライブラリで quick_print の値を設定する"
    ],
    "snmpsetvalueretrieval": [
        "snmp_set_valueretrieval",
        "function.snmp-set-valueretrieval.php",
        "SNMP の値が返される方法を設定する"
    ],
    "SoapClientSoapClient": [
        "SoapClient::SoapClient",
        "soapclient.soapclient.php",
        "SoapClient コンストラクタ"
    ],
    "SoapClientcall": [
        "SoapClient::__call",
        "soapclient.call.php",
        "SOAP 関数をコールする (非推奨)"
    ],
    "SoapClientconstruct": [
        "SoapClient::__construct",
        "soapclient.construct.php",
        "SoapClient constructor"
    ],
    "SoapClientdoRequest": [
        "SoapClient::__doRequest",
        "soapclient.dorequest.php",
        "SOAP リクエストを実行する"
    ],
    "SoapClientgetCookies": [
        "SoapClient::__getCookies",
        "soapclient.getcookies.php",
        "Get list of cookies"
    ],
    "SoapClientgetFunctions": [
        "SoapClient::__getFunctions",
        "soapclient.getfunctions.php",
        "SOAP 関数の一覧を返す"
    ],
    "SoapClientgetLastRequest": [
        "SoapClient::__getLastRequest",
        "soapclient.getlastrequest.php",
        "直近の SOAP リクエストを返す"
    ],
    "SoapClientgetLastRequestHeaders": [
        "SoapClient::__getLastRequestHeaders",
        "soapclient.getlastrequestheaders.php",
        "直近の SOAP リクエストヘッダを返す"
    ],
    "SoapClientgetLastResponse": [
        "SoapClient::__getLastResponse",
        "soapclient.getlastresponse.php",
        "直近の SOAP レスポンスを返す"
    ],
    "SoapClientgetLastResponseHeaders": [
        "SoapClient::__getLastResponseHeaders",
        "soapclient.getlastresponseheaders.php",
        "直近の SOAP レスポンスヘッダを返す"
    ],
    "SoapClientgetTypes": [
        "SoapClient::__getTypes",
        "soapclient.gettypes.php",
        "SOAP 型の一覧を返す"
    ],
    "SoapClientsetCookie": [
        "SoapClient::__setCookie",
        "soapclient.setcookie.php",
        "SOAP リクエストと共に送信されるクッキーを設定する"
    ],
    "SoapClientsetLocation": [
        "SoapClient::__setLocation",
        "soapclient.setlocation.php",
        "使用するウェブサービスの場所を設定する"
    ],
    "SoapClientsetSoapHeaders": [
        "SoapClient::__setSoapHeaders",
        "soapclient.setsoapheaders.php",
        "以降のコール用の SOAP ヘッダを設定する"
    ],
    "SoapClientsoapCall": [
        "SoapClient::__soapCall",
        "soapclient.soapcall.php",
        "SOAP 関数をコールする"
    ],
    "SoapFaultSoapFault": [
        "SoapFault::SoapFault",
        "soapfault.soapfault.php",
        "SoapFault コンストラクタ"
    ],
    "SoapFaultconstruct": [
        "SoapFault::__construct",
        "soapfault.construct.php",
        "SoapFault コンストラクタ"
    ],
    "SoapFaulttoString": [
        "SoapFault::__toString",
        "soapfault.tostring.php",
        "SoapFault の文字列表現を取得する"
    ],
    "SoapHeaderSoapHeader": [
        "SoapHeader::SoapHeader",
        "soapheader.soapheader.php",
        "SoapHeader コンストラクタ"
    ],
    "SoapHeaderconstruct": [
        "SoapHeader::__construct",
        "soapheader.construct.php",
        "SoapHeader コンストラクタ"
    ],
    "SoapParamSoapParam": [
        "SoapParam::SoapParam",
        "soapparam.soapparam.php",
        "SoapParam コンストラクタ"
    ],
    "SoapParamconstruct": [
        "SoapParam::__construct",
        "soapparam.construct.php",
        "SoapParam コンストラクタ"
    ],
    "SoapServeraddFunction": [
        "SoapServer::addFunction",
        "soapserver.addfunction.php",
        "SOAP リクエストによって処理される単一もしくはいくつかの関数を追加する"
    ],
    "SoapServeraddSoapHeader": [
        "SoapServer::addSoapHeader",
        "soapserver.addsoapheader.php",
        "SOAP ヘッダをレスポンスに追加する"
    ],
    "SoapServerfault": [
        "SoapServer::fault",
        "soapserver.fault.php",
        "エラーを示す SoapServer フォールト を発行する"
    ],
    "SoapServergetFunctions": [
        "SoapServer::getFunctions",
        "soapserver.getfunctions.php",
        "定義されている関数の一覧を返す"
    ],
    "SoapServerhandle": [
        "SoapServer::handle",
        "soapserver.handle.php",
        "SOAP リクエストを処理する"
    ],
    "SoapServersetClass": [
        "SoapServer::setClass",
        "soapserver.setclass.php",
        "SOAP リクエストを処理するクラスを設定する"
    ],
    "SoapServersetObject": [
        "SoapServer::setObject",
        "soapserver.setobject.php",
        "SOAP リクエストの処理に使用するオブジェクトを設定する"
    ],
    "SoapServersetPersistence": [
        "SoapServer::setPersistence",
        "soapserver.setpersistence.php",
        "SoapServer の持続モードを設定する"
    ],
    "SoapServerSoapServer": [
        "SoapServer::SoapServer",
        "soapserver.soapserver.php",
        "SoapServer コンストラクタ"
    ],
    "SoapServerconstruct": [
        "SoapServer::__construct",
        "soapserver.construct.php",
        "SoapServer コンストラクタ"
    ],
    "SoapVarSoapVar": [
        "SoapVar::SoapVar",
        "soapvar.soapvar.php",
        "SoapVar コンストラクタ"
    ],
    "SoapVarconstruct": [
        "SoapVar::__construct",
        "soapvar.construct.php",
        "SoapVar コンストラクタ"
    ],
    "socketaccept": [
        "socket_accept",
        "function.socket-accept.php",
        "ソケットへの接続を許可する"
    ],
    "socketaddrinfobind": [
        "socket_addrinfo_bind",
        "function.socket-addrinfo-bind.php",
        "与えられた addrinfo から、ソケットを作成してバインドする"
    ],
    "socketaddrinfoconnect": [
        "socket_addrinfo_connect",
        "function.socket-addrinfo-connect.php",
        "与えられた addrinfo から、ソケットを作って接続する"
    ],
    "socketaddrinfoexplain": [
        "socket_addrinfo_explain",
        "function.socket-addrinfo-explain.php",
        "addrinfo に関する情報を取得する"
    ],
    "socketaddrinfolookup": [
        "socket_addrinfo_lookup",
        "function.socket-addrinfo-lookup.php",
        "与えられたホスト名に関する getaddrinfo の内容を配列で取得する"
    ],
    "socketbind": [
        "socket_bind",
        "function.socket-bind.php",
        "ソケットに名前をバインドする"
    ],
    "socketclearerror": [
        "socket_clear_error",
        "function.socket-clear-error.php",
        "ソケットのエラーまたは直近のエラーコードをクリアする"
    ],
    "socketclose": [
        "socket_close",
        "function.socket-close.php",
        "ソケットリソースを閉じる"
    ],
    "socketcmsgspace": [
        "socket_cmsg_space",
        "function.socket-cmsg-space.php",
        "メッセージバッファサイズを計算する"
    ],
    "socketconnect": [
        "socket_connect",
        "function.socket-connect.php",
        "ソケット上の接続を初期化する"
    ],
    "socketcreate": [
        "socket_create",
        "function.socket-create.php",
        "ソケット（通信時の終端）を作成する"
    ],
    "socketcreatelisten": [
        "socket_create_listen",
        "function.socket-create-listen.php",
        "接続を受けつけるためにポートにソケットをオープンする"
    ],
    "socketcreatepair": [
        "socket_create_pair",
        "function.socket-create-pair.php",
        "区別できないソケットの組を作成し、配列に保存する"
    ],
    "socketexportstream": [
        "socket_export_stream",
        "function.socket-export-stream.php",
        "ソケットをカプセル化したストリームに、ソケット拡張リソースをエクスポートする"
    ],
    "socketgetopt": [
        "socket_getopt",
        "function.socket-getopt.php",
        "socket_get_option のエイリアス"
    ],
    "socketgetpeername": [
        "socket_getpeername",
        "function.socket-getpeername.php",
        "指定したソケットのリモート側に問い合わせ、その型に応じてホスト/ポート、あるいは Unix ファイルシステムのパスを返す"
    ],
    "socketgetsockname": [
        "socket_getsockname",
        "function.socket-getsockname.php",
        "指定したソケットのローカル側に問い合わせ、その型に応じてホスト/ポート、あるいは Unix ファイルシステムのパスを返す"
    ],
    "socketgetoption": [
        "socket_get_option",
        "function.socket-get-option.php",
        "ソケットのオプションを取得する"
    ],
    "socketgetstatus": [
        "socket_get_status",
        "function.socket-get-status.php",
        "stream_get_meta_data のエイリアス"
    ],
    "socketimportstream": [
        "socket_import_stream",
        "function.socket-import-stream.php",
        "ストリームをインポートする"
    ],
    "socketlasterror": [
        "socket_last_error",
        "function.socket-last-error.php",
        "ソケットの直近のエラーを返す"
    ],
    "socketlisten": [
        "socket_listen",
        "function.socket-listen.php",
        "ソケット上で接続待ち(listen)する"
    ],
    "socketread": [
        "socket_read",
        "function.socket-read.php",
        "ソケットから最大バイト長まで読みこむ"
    ],
    "socketrecv": [
        "socket_recv",
        "function.socket-recv.php",
        "接続したソケットからデータを受信する"
    ],
    "socketrecvfrom": [
        "socket_recvfrom",
        "function.socket-recvfrom.php",
        "接続しているかどうかによらず、ソケットからデータを受信する"
    ],
    "socketrecvmsg": [
        "socket_recvmsg",
        "function.socket-recvmsg.php",
        "メッセージを読む"
    ],
    "socketselect": [
        "socket_select",
        "function.socket-select.php",
        "与えられたソケットの配列に対し、指定した有効時間で select() システムコールを実行する"
    ],
    "socketsend": [
        "socket_send",
        "function.socket-send.php",
        "接続したソケットにデータを送信する"
    ],
    "socketsendmsg": [
        "socket_sendmsg",
        "function.socket-sendmsg.php",
        "メッセージを送信する"
    ],
    "socketsendto": [
        "socket_sendto",
        "function.socket-sendto.php",
        "接続しているかどうかによらずソケットにメッセージを送信する"
    ],
    "socketsetopt": [
        "socket_setopt",
        "function.socket-setopt.php",
        "socket_set_option のエイリアス"
    ],
    "socketsetblock": [
        "socket_set_block",
        "function.socket-set-block.php",
        "ソケットリソースをブロックモードに設定する"
    ],
    "socketsetblocking": [
        "socket_set_blocking",
        "function.socket-set-blocking.php",
        "stream_set_blocking のエイリアス"
    ],
    "socketsetnonblock": [
        "socket_set_nonblock",
        "function.socket-set-nonblock.php",
        "ソケットリソースを非ブロックモードに設定する"
    ],
    "socketsetoption": [
        "socket_set_option",
        "function.socket-set-option.php",
        "ソケットのオプションを設定する"
    ],
    "socketsettimeout": [
        "socket_set_timeout",
        "function.socket-set-timeout.php",
        "stream_set_timeout のエイリアス"
    ],
    "socketshutdown": [
        "socket_shutdown",
        "function.socket-shutdown.php",
        "受信、送信、または送受信用のソケットをシャットダウンする"
    ],
    "socketstrerror": [
        "socket_strerror",
        "function.socket-strerror.php",
        "ソケットエラーの内容を文字列として返す"
    ],
    "socketwrite": [
        "socket_write",
        "function.socket-write.php",
        "ソケットに書き込む"
    ],
    "socketwsaprotocolinfoexport": [
        "socket_wsaprotocol_info_export",
        "function.socket-wsaprotocol-info-export.php",
        "WSAPROTOCOL_INFO 構造体をエクスポートする"
    ],
    "socketwsaprotocolinfoimport": [
        "socket_wsaprotocol_info_import",
        "function.socket-wsaprotocol-info-import.php",
        "別のプロセスからソケットをインポートする"
    ],
    "socketwsaprotocolinforelease": [
        "socket_wsaprotocol_info_release",
        "function.socket-wsaprotocol-info-release.php",
        "エクスポートした WSAPROTOCOL_INF 構造体を解放する"
    ],
    "sodiumadd": [
        "sodium_add",
        "function.sodium-add.php",
        "Add large numbers"
    ],
    "sodiumbase642bin": [
        "sodium_base642bin",
        "function.sodium-base642bin.php",
        "Description"
    ],
    "sodiumbin2base64": [
        "sodium_bin2base64",
        "function.sodium-bin2base64.php",
        "Description"
    ],
    "sodiumbin2hex": [
        "sodium_bin2hex",
        "function.sodium-bin2hex.php",
        "Encode to hexadecimal"
    ],
    "sodiumcompare": [
        "sodium_compare",
        "function.sodium-compare.php",
        "Compare large numbers"
    ],
    "sodiumcryptoaeadaes256gcmdecrypt": [
        "sodium_crypto_aead_aes256gcm_decrypt",
        "function.sodium-crypto-aead-aes256gcm-decrypt.php",
        "Decrypt in combined mode with precalculation"
    ],
    "sodiumcryptoaeadaes256gcmencrypt": [
        "sodium_crypto_aead_aes256gcm_encrypt",
        "function.sodium-crypto-aead-aes256gcm-encrypt.php",
        "Encrypt in combined mode with precalculation"
    ],
    "sodiumcryptoaeadaes256gcmisavailable": [
        "sodium_crypto_aead_aes256gcm_is_available",
        "function.sodium-crypto-aead-aes256gcm-is-available.php",
        "Check if hardware supports AES256-GCM"
    ],
    "sodiumcryptoaeadaes256gcmkeygen": [
        "sodium_crypto_aead_aes256gcm_keygen",
        "function.sodium-crypto-aead-aes256gcm-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptoaeadchacha20poly1305decrypt": [
        "sodium_crypto_aead_chacha20poly1305_decrypt",
        "function.sodium-crypto-aead-chacha20poly1305-decrypt.php",
        "Verify that the ciphertext includes a valid tag"
    ],
    "sodiumcryptoaeadchacha20poly1305encrypt": [
        "sodium_crypto_aead_chacha20poly1305_encrypt",
        "function.sodium-crypto-aead-chacha20poly1305-encrypt.php",
        "Encrypt a message"
    ],
    "sodiumcryptoaeadchacha20poly1305ietfdecrypt": [
        "sodium_crypto_aead_chacha20poly1305_ietf_decrypt",
        "function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt.php",
        "Verify that the ciphertext includes a valid tag"
    ],
    "sodiumcryptoaeadchacha20poly1305ietfencrypt": [
        "sodium_crypto_aead_chacha20poly1305_ietf_encrypt",
        "function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt.php",
        "Encrypt a message"
    ],
    "sodiumcryptoaeadchacha20poly1305ietfkeygen": [
        "sodium_crypto_aead_chacha20poly1305_ietf_keygen",
        "function.sodium-crypto-aead-chacha20poly1305-ietf-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptoaeadchacha20poly1305keygen": [
        "sodium_crypto_aead_chacha20poly1305_keygen",
        "function.sodium-crypto-aead-chacha20poly1305-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptoaeadxchacha20poly1305ietfdecrypt": [
        "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt",
        "function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt.php",
        "Description"
    ],
    "sodiumcryptoaeadxchacha20poly1305ietfencrypt": [
        "sodium_crypto_aead_xchacha20poly1305_ietf_encrypt",
        "function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt.php",
        "Description"
    ],
    "sodiumcryptoaeadxchacha20poly1305ietfkeygen": [
        "sodium_crypto_aead_xchacha20poly1305_ietf_keygen",
        "function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen.php",
        "Description"
    ],
    "sodiumcryptoauth": [
        "sodium_crypto_auth",
        "function.sodium-crypto-auth.php",
        "Compute a tag for the message"
    ],
    "sodiumcryptoauthkeygen": [
        "sodium_crypto_auth_keygen",
        "function.sodium-crypto-auth-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptoauthverify": [
        "sodium_crypto_auth_verify",
        "function.sodium-crypto-auth-verify.php",
        "Verifies that the tag is valid for the message"
    ],
    "sodiumcryptobox": [
        "sodium_crypto_box",
        "function.sodium-crypto-box.php",
        "Encrypt a message"
    ],
    "sodiumcryptoboxkeypair": [
        "sodium_crypto_box_keypair",
        "function.sodium-crypto-box-keypair.php",
        "Randomly generate a secret key and a corresponding public key"
    ],
    "sodiumcryptoboxkeypairfromsecretkeyandpublickey": [
        "sodium_crypto_box_keypair_from_secretkey_and_publickey",
        "function.sodium-crypto-box-keypair-from-secretkey-and-publickey.php",
        "Description"
    ],
    "sodiumcryptoboxopen": [
        "sodium_crypto_box_open",
        "function.sodium-crypto-box-open.php",
        "Verify and decrypt a ciphertext"
    ],
    "sodiumcryptoboxpublickey": [
        "sodium_crypto_box_publickey",
        "function.sodium-crypto-box-publickey.php",
        "Description"
    ],
    "sodiumcryptoboxpublickeyfromsecretkey": [
        "sodium_crypto_box_publickey_from_secretkey",
        "function.sodium-crypto-box-publickey-from-secretkey.php",
        "Description"
    ],
    "sodiumcryptoboxseal": [
        "sodium_crypto_box_seal",
        "function.sodium-crypto-box-seal.php",
        "Encrypt a message"
    ],
    "sodiumcryptoboxsealopen": [
        "sodium_crypto_box_seal_open",
        "function.sodium-crypto-box-seal-open.php",
        "Decrypt the ciphertext"
    ],
    "sodiumcryptoboxsecretkey": [
        "sodium_crypto_box_secretkey",
        "function.sodium-crypto-box-secretkey.php",
        "Description"
    ],
    "sodiumcryptoboxseedkeypair": [
        "sodium_crypto_box_seed_keypair",
        "function.sodium-crypto-box-seed-keypair.php",
        "Deterministically derive the key pair from a single key"
    ],
    "sodiumcryptogenerichash": [
        "sodium_crypto_generichash",
        "function.sodium-crypto-generichash.php",
        "Get a hash of the message"
    ],
    "sodiumcryptogenerichashfinal": [
        "sodium_crypto_generichash_final",
        "function.sodium-crypto-generichash-final.php",
        "Complete the hash"
    ],
    "sodiumcryptogenerichashinit": [
        "sodium_crypto_generichash_init",
        "function.sodium-crypto-generichash-init.php",
        "Initialize a hash"
    ],
    "sodiumcryptogenerichashkeygen": [
        "sodium_crypto_generichash_keygen",
        "function.sodium-crypto-generichash-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptogenerichashupdate": [
        "sodium_crypto_generichash_update",
        "function.sodium-crypto-generichash-update.php",
        "Add message to a hash"
    ],
    "sodiumcryptokdfderivefromkey": [
        "sodium_crypto_kdf_derive_from_key",
        "function.sodium-crypto-kdf-derive-from-key.php",
        "Derive a subkey"
    ],
    "sodiumcryptokdfkeygen": [
        "sodium_crypto_kdf_keygen",
        "function.sodium-crypto-kdf-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptokxclientsessionkeys": [
        "sodium_crypto_kx_client_session_keys",
        "function.sodium-crypto-kx-client-session-keys.php",
        "Description"
    ],
    "sodiumcryptokxkeypair": [
        "sodium_crypto_kx_keypair",
        "function.sodium-crypto-kx-keypair.php",
        "Creates a new sodium keypair"
    ],
    "sodiumcryptokxpublickey": [
        "sodium_crypto_kx_publickey",
        "function.sodium-crypto-kx-publickey.php",
        "Description"
    ],
    "sodiumcryptokxsecretkey": [
        "sodium_crypto_kx_secretkey",
        "function.sodium-crypto-kx-secretkey.php",
        "Description"
    ],
    "sodiumcryptokxseedkeypair": [
        "sodium_crypto_kx_seed_keypair",
        "function.sodium-crypto-kx-seed-keypair.php",
        "Description"
    ],
    "sodiumcryptokxserversessionkeys": [
        "sodium_crypto_kx_server_session_keys",
        "function.sodium-crypto-kx-server-session-keys.php",
        "Description"
    ],
    "sodiumcryptopwhash": [
        "sodium_crypto_pwhash",
        "function.sodium-crypto-pwhash.php",
        "Derive a key from a password"
    ],
    "sodiumcryptopwhashscryptsalsa208sha256": [
        "sodium_crypto_pwhash_scryptsalsa208sha256",
        "function.sodium-crypto-pwhash-scryptsalsa208sha256.php",
        "Derives a key from a password"
    ],
    "sodiumcryptopwhashscryptsalsa208sha256str": [
        "sodium_crypto_pwhash_scryptsalsa208sha256_str",
        "function.sodium-crypto-pwhash-scryptsalsa208sha256-str.php",
        "Get an ASCII encoded hash"
    ],
    "sodiumcryptopwhashscryptsalsa208sha256strverify": [
        "sodium_crypto_pwhash_scryptsalsa208sha256_str_verify",
        "function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify.php",
        "Verify that the password is a valid password verification string"
    ],
    "sodiumcryptopwhashstr": [
        "sodium_crypto_pwhash_str",
        "function.sodium-crypto-pwhash-str.php",
        "Get an ASCII-encoded hash"
    ],
    "sodiumcryptopwhashstrneedsrehash": [
        "sodium_crypto_pwhash_str_needs_rehash",
        "function.sodium-crypto-pwhash-str-needs-rehash.php",
        "Description"
    ],
    "sodiumcryptopwhashstrverify": [
        "sodium_crypto_pwhash_str_verify",
        "function.sodium-crypto-pwhash-str-verify.php",
        "Verifies that a password matches a hash"
    ],
    "sodiumcryptoscalarmult": [
        "sodium_crypto_scalarmult",
        "function.sodium-crypto-scalarmult.php",
        "Compute a shared secret given a user's secret key and another user's public key"
    ],
    "sodiumcryptoscalarmultbase": [
        "sodium_crypto_scalarmult_base",
        "function.sodium-crypto-scalarmult-base.php",
        "のエイリアス sodium_crypto_box_publickey_from_secretkey"
    ],
    "sodiumcryptosecretbox": [
        "sodium_crypto_secretbox",
        "function.sodium-crypto-secretbox.php",
        "Encrypt a message"
    ],
    "sodiumcryptosecretboxkeygen": [
        "sodium_crypto_secretbox_keygen",
        "function.sodium-crypto-secretbox-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptosecretboxopen": [
        "sodium_crypto_secretbox_open",
        "function.sodium-crypto-secretbox-open.php",
        "Verify and decrypt a ciphertext"
    ],
    "sodiumcryptosecretstreamxchacha20poly1305initpull": [
        "sodium_crypto_secretstream_xchacha20poly1305_init_pull",
        "function.sodium-crypto-secretstream-xchacha20poly1305-init-pull.php",
        "Description"
    ],
    "sodiumcryptosecretstreamxchacha20poly1305initpush": [
        "sodium_crypto_secretstream_xchacha20poly1305_init_push",
        "function.sodium-crypto-secretstream-xchacha20poly1305-init-push.php",
        "Description"
    ],
    "sodiumcryptosecretstreamxchacha20poly1305keygen": [
        "sodium_crypto_secretstream_xchacha20poly1305_keygen",
        "function.sodium-crypto-secretstream-xchacha20poly1305-keygen.php",
        "Description"
    ],
    "sodiumcryptosecretstreamxchacha20poly1305pull": [
        "sodium_crypto_secretstream_xchacha20poly1305_pull",
        "function.sodium-crypto-secretstream-xchacha20poly1305-pull.php",
        "Description"
    ],
    "sodiumcryptosecretstreamxchacha20poly1305push": [
        "sodium_crypto_secretstream_xchacha20poly1305_push",
        "function.sodium-crypto-secretstream-xchacha20poly1305-push.php",
        "Description"
    ],
    "sodiumcryptosecretstreamxchacha20poly1305rekey": [
        "sodium_crypto_secretstream_xchacha20poly1305_rekey",
        "function.sodium-crypto-secretstream-xchacha20poly1305-rekey.php",
        "Description"
    ],
    "sodiumcryptoshorthash": [
        "sodium_crypto_shorthash",
        "function.sodium-crypto-shorthash.php",
        "Compute a fixed-size fingerprint for the message"
    ],
    "sodiumcryptoshorthashkeygen": [
        "sodium_crypto_shorthash_keygen",
        "function.sodium-crypto-shorthash-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptosign": [
        "sodium_crypto_sign",
        "function.sodium-crypto-sign.php",
        "Sign a message"
    ],
    "sodiumcryptosigndetached": [
        "sodium_crypto_sign_detached",
        "function.sodium-crypto-sign-detached.php",
        "Sign the message"
    ],
    "sodiumcryptosigned25519pktocurve25519": [
        "sodium_crypto_sign_ed25519_pk_to_curve25519",
        "function.sodium-crypto-sign-ed25519-pk-to-curve25519.php",
        "Convert an Ed25519 public key to a Curve25519 public key"
    ],
    "sodiumcryptosigned25519sktocurve25519": [
        "sodium_crypto_sign_ed25519_sk_to_curve25519",
        "function.sodium-crypto-sign-ed25519-sk-to-curve25519.php",
        "Convert an Ed25519 secret key to a Curve25519 secret key"
    ],
    "sodiumcryptosignkeypair": [
        "sodium_crypto_sign_keypair",
        "function.sodium-crypto-sign-keypair.php",
        "Randomly generate a secret key and a corresponding public key"
    ],
    "sodiumcryptosignkeypairfromsecretkeyandpublickey": [
        "sodium_crypto_sign_keypair_from_secretkey_and_publickey",
        "function.sodium-crypto-sign-keypair-from-secretkey-and-publickey.php",
        "Description"
    ],
    "sodiumcryptosignopen": [
        "sodium_crypto_sign_open",
        "function.sodium-crypto-sign-open.php",
        "Check that the signed message has a valid signature"
    ],
    "sodiumcryptosignpublickey": [
        "sodium_crypto_sign_publickey",
        "function.sodium-crypto-sign-publickey.php",
        "Description"
    ],
    "sodiumcryptosignpublickeyfromsecretkey": [
        "sodium_crypto_sign_publickey_from_secretkey",
        "function.sodium-crypto-sign-publickey-from-secretkey.php",
        "Extract the public key from the secret key"
    ],
    "sodiumcryptosignsecretkey": [
        "sodium_crypto_sign_secretkey",
        "function.sodium-crypto-sign-secretkey.php",
        "Description"
    ],
    "sodiumcryptosignseedkeypair": [
        "sodium_crypto_sign_seed_keypair",
        "function.sodium-crypto-sign-seed-keypair.php",
        "Deterministically derive the key pair from a single key"
    ],
    "sodiumcryptosignverifydetached": [
        "sodium_crypto_sign_verify_detached",
        "function.sodium-crypto-sign-verify-detached.php",
        "Verify signature for the message"
    ],
    "sodiumcryptostream": [
        "sodium_crypto_stream",
        "function.sodium-crypto-stream.php",
        "Generate a deterministic sequence of bytes from a seed"
    ],
    "sodiumcryptostreamkeygen": [
        "sodium_crypto_stream_keygen",
        "function.sodium-crypto-stream-keygen.php",
        "Get random bytes for key"
    ],
    "sodiumcryptostreamxor": [
        "sodium_crypto_stream_xor",
        "function.sodium-crypto-stream-xor.php",
        "Encrypt a message"
    ],
    "sodiumhex2bin": [
        "sodium_hex2bin",
        "function.sodium-hex2bin.php",
        "Decodes a hexadecimally encoded binary string"
    ],
    "sodiumincrement": [
        "sodium_increment",
        "function.sodium-increment.php",
        "Increment large number"
    ],
    "sodiummemcmp": [
        "sodium_memcmp",
        "function.sodium-memcmp.php",
        "Test for equality in constant-time"
    ],
    "sodiummemzero": [
        "sodium_memzero",
        "function.sodium-memzero.php",
        "Overwrite buf with zeros"
    ],
    "sodiumpad": [
        "sodium_pad",
        "function.sodium-pad.php",
        "Add padding data"
    ],
    "sodiumunpad": [
        "sodium_unpad",
        "function.sodium-unpad.php",
        "Remove padding data"
    ],
    "SolrClientaddDocument": [
        "SolrClient::addDocument",
        "solrclient.adddocument.php",
        "Adds a document to the index"
    ],
    "SolrClientaddDocuments": [
        "SolrClient::addDocuments",
        "solrclient.adddocuments.php",
        "Adds a collection of SolrInputDocument instances to the index"
    ],
    "SolrClientcommit": [
        "SolrClient::commit",
        "solrclient.commit.php",
        "Finalizes all add/deletes made to the index"
    ],
    "SolrClientdeleteById": [
        "SolrClient::deleteById",
        "solrclient.deletebyid.php",
        "Delete by Id"
    ],
    "SolrClientdeleteByIds": [
        "SolrClient::deleteByIds",
        "solrclient.deletebyids.php",
        "Deletes by Ids"
    ],
    "SolrClientdeleteByQueries": [
        "SolrClient::deleteByQueries",
        "solrclient.deletebyqueries.php",
        "Removes all documents matching any of the queries"
    ],
    "SolrClientdeleteByQuery": [
        "SolrClient::deleteByQuery",
        "solrclient.deletebyquery.php",
        "Deletes all documents matching the given query"
    ],
    "SolrClientgetById": [
        "SolrClient::getById",
        "solrclient.getbyid.php",
        "Get Document By Id. Utilizes Solr Realtime Get (RTG)"
    ],
    "SolrClientgetByIds": [
        "SolrClient::getByIds",
        "solrclient.getbyids.php",
        "Get Documents by their Ids. Utilizes Solr Realtime Get (RTG)"
    ],
    "SolrClientgetDebug": [
        "SolrClient::getDebug",
        "solrclient.getdebug.php",
        "Returns the debug data for the last connection attempt"
    ],
    "SolrClientgetOptions": [
        "SolrClient::getOptions",
        "solrclient.getoptions.php",
        "Returns the client options set internally"
    ],
    "SolrClientoptimize": [
        "SolrClient::optimize",
        "solrclient.optimize.php",
        "Defragments the index"
    ],
    "SolrClientping": [
        "SolrClient::ping",
        "solrclient.ping.php",
        "Checks if Solr server is still up"
    ],
    "SolrClientquery": [
        "SolrClient::query",
        "solrclient.query.php",
        "Sends a query to the server"
    ],
    "SolrClientrequest": [
        "SolrClient::request",
        "solrclient.request.php",
        "Sends a raw update request"
    ],
    "SolrClientrollback": [
        "SolrClient::rollback",
        "solrclient.rollback.php",
        "Rollbacks all add/deletes made to the index since the last commit"
    ],
    "SolrClientsetResponseWriter": [
        "SolrClient::setResponseWriter",
        "solrclient.setresponsewriter.php",
        "Sets the response writer used to prepare the response from Solr"
    ],
    "SolrClientsetServlet": [
        "SolrClient::setServlet",
        "solrclient.setservlet.php",
        "Changes the specified servlet type to a new value"
    ],
    "SolrClientsystem": [
        "SolrClient::system",
        "solrclient.system.php",
        "Retrieve Solr Server information"
    ],
    "SolrClientthreads": [
        "SolrClient::threads",
        "solrclient.threads.php",
        "スレッドの状態をチェック"
    ],
    "SolrClientconstruct": [
        "SolrClient::__construct",
        "solrclient.construct.php",
        "Constructor for the SolrClient object"
    ],
    "SolrClientdestruct": [
        "SolrClient::__destruct",
        "solrclient.destruct.php",
        "SolrClient に対するデストラクタ"
    ],
    "SolrClientExceptiongetInternalInfo": [
        "SolrClientException::getInternalInfo",
        "solrclientexception.getinternalinfo.php",
        "例外がスローされた際の内部情報を返す"
    ],
    "SolrCollapseFunctiongetField": [
        "SolrCollapseFunction::getField",
        "solrcollapsefunction.getfield.php",
        "Returns the field that is being collapsed on"
    ],
    "SolrCollapseFunctiongetHint": [
        "SolrCollapseFunction::getHint",
        "solrcollapsefunction.gethint.php",
        "Returns collapse hint"
    ],
    "SolrCollapseFunctiongetMax": [
        "SolrCollapseFunction::getMax",
        "solrcollapsefunction.getmax.php",
        "Returns max parameter"
    ],
    "SolrCollapseFunctiongetMin": [
        "SolrCollapseFunction::getMin",
        "solrcollapsefunction.getmin.php",
        "Returns min parameter"
    ],
    "SolrCollapseFunctiongetNullPolicy": [
        "SolrCollapseFunction::getNullPolicy",
        "solrcollapsefunction.getnullpolicy.php",
        "Returns null policy"
    ],
    "SolrCollapseFunctiongetSize": [
        "SolrCollapseFunction::getSize",
        "solrcollapsefunction.getsize.php",
        "Returns size parameter"
    ],
    "SolrCollapseFunctionsetField": [
        "SolrCollapseFunction::setField",
        "solrcollapsefunction.setfield.php",
        "Sets the field to collapse on"
    ],
    "SolrCollapseFunctionsetHint": [
        "SolrCollapseFunction::setHint",
        "solrcollapsefunction.sethint.php",
        "Sets collapse hint"
    ],
    "SolrCollapseFunctionsetMax": [
        "SolrCollapseFunction::setMax",
        "solrcollapsefunction.setmax.php",
        "Selects the group heads by the max value of a numeric field or function query"
    ],
    "SolrCollapseFunctionsetMin": [
        "SolrCollapseFunction::setMin",
        "solrcollapsefunction.setmin.php",
        "Sets the initial size of the collapse data structures when collapsing on a numeric field only"
    ],
    "SolrCollapseFunctionsetNullPolicy": [
        "SolrCollapseFunction::setNullPolicy",
        "solrcollapsefunction.setnullpolicy.php",
        "Sets the NULL Policy"
    ],
    "SolrCollapseFunctionsetSize": [
        "SolrCollapseFunction::setSize",
        "solrcollapsefunction.setsize.php",
        "Sets the initial size of the collapse data structures when collapsing on a numeric field only"
    ],
    "SolrCollapseFunctionconstruct": [
        "SolrCollapseFunction::__construct",
        "solrcollapsefunction.construct.php",
        "Constructor"
    ],
    "SolrCollapseFunctiontoString": [
        "SolrCollapseFunction::__toString",
        "solrcollapsefunction.tostring.php",
        "Returns a string representing the constructed collapse function"
    ],
    "SolrDisMaxQueryaddBigramPhraseField": [
        "SolrDisMaxQuery::addBigramPhraseField",
        "solrdismaxquery.addbigramphrasefield.php",
        "Adds a Phrase Bigram Field (pf2 parameter)"
    ],
    "SolrDisMaxQueryaddBoostQuery": [
        "SolrDisMaxQuery::addBoostQuery",
        "solrdismaxquery.addboostquery.php",
        "Adds a boost query field with value and optional boost (bq parameter)"
    ],
    "SolrDisMaxQueryaddPhraseField": [
        "SolrDisMaxQuery::addPhraseField",
        "solrdismaxquery.addphrasefield.php",
        "Adds a Phrase Field (pf parameter)"
    ],
    "SolrDisMaxQueryaddQueryField": [
        "SolrDisMaxQuery::addQueryField",
        "solrdismaxquery.addqueryfield.php",
        "Add a query field with optional boost (qf parameter)"
    ],
    "SolrDisMaxQueryaddTrigramPhraseField": [
        "SolrDisMaxQuery::addTrigramPhraseField",
        "solrdismaxquery.addtrigramphrasefield.php",
        "Adds a Trigram Phrase Field (pf3 parameter)"
    ],
    "SolrDisMaxQueryaddUserField": [
        "SolrDisMaxQuery::addUserField",
        "solrdismaxquery.adduserfield.php",
        "Adds a field to User Fields Parameter (uf)"
    ],
    "SolrDisMaxQueryremoveBigramPhraseField": [
        "SolrDisMaxQuery::removeBigramPhraseField",
        "solrdismaxquery.removebigramphrasefield.php",
        "Removes phrase bigram field (pf2 parameter)"
    ],
    "SolrDisMaxQueryremoveBoostQuery": [
        "SolrDisMaxQuery::removeBoostQuery",
        "solrdismaxquery.removeboostquery.php",
        "Removes a boost query partial by field name (bq)"
    ],
    "SolrDisMaxQueryremovePhraseField": [
        "SolrDisMaxQuery::removePhraseField",
        "solrdismaxquery.removephrasefield.php",
        "Removes a Phrase Field (pf parameter)"
    ],
    "SolrDisMaxQueryremoveQueryField": [
        "SolrDisMaxQuery::removeQueryField",
        "solrdismaxquery.removequeryfield.php",
        "Removes a Query Field (qf parameter)"
    ],
    "SolrDisMaxQueryremoveTrigramPhraseField": [
        "SolrDisMaxQuery::removeTrigramPhraseField",
        "solrdismaxquery.removetrigramphrasefield.php",
        "Removes a Trigram Phrase Field (pf3 parameter)"
    ],
    "SolrDisMaxQueryremoveUserField": [
        "SolrDisMaxQuery::removeUserField",
        "solrdismaxquery.removeuserfield.php",
        "Removes a field from The User Fields Parameter (uf)"
    ],
    "SolrDisMaxQuerysetBigramPhraseFields": [
        "SolrDisMaxQuery::setBigramPhraseFields",
        "solrdismaxquery.setbigramphrasefields.php",
        "Sets Bigram Phrase Fields and their boosts (and slops) using pf2 parameter"
    ],
    "SolrDisMaxQuerysetBigramPhraseSlop": [
        "SolrDisMaxQuery::setBigramPhraseSlop",
        "solrdismaxquery.setbigramphraseslop.php",
        "Sets Bigram Phrase Slop (ps2 parameter)"
    ],
    "SolrDisMaxQuerysetBoostFunction": [
        "SolrDisMaxQuery::setBoostFunction",
        "solrdismaxquery.setboostfunction.php",
        "Sets a Boost Function (bf parameter)"
    ],
    "SolrDisMaxQuerysetBoostQuery": [
        "SolrDisMaxQuery::setBoostQuery",
        "solrdismaxquery.setboostquery.php",
        "Directly Sets Boost Query Parameter (bq)"
    ],
    "SolrDisMaxQuerysetMinimumMatch": [
        "SolrDisMaxQuery::setMinimumMatch",
        "solrdismaxquery.setminimummatch.php",
        "Set Minimum &quot;Should&quot; Match (mm)"
    ],
    "SolrDisMaxQuerysetPhraseFields": [
        "SolrDisMaxQuery::setPhraseFields",
        "solrdismaxquery.setphrasefields.php",
        "Sets  Phrase Fields and their boosts (and slops) using pf2 parameter"
    ],
    "SolrDisMaxQuerysetPhraseSlop": [
        "SolrDisMaxQuery::setPhraseSlop",
        "solrdismaxquery.setphraseslop.php",
        "Sets the default slop on phrase queries (ps parameter)"
    ],
    "SolrDisMaxQuerysetQueryAlt": [
        "SolrDisMaxQuery::setQueryAlt",
        "solrdismaxquery.setqueryalt.php",
        "Set Query Alternate (q.alt parameter)"
    ],
    "SolrDisMaxQuerysetQueryPhraseSlop": [
        "SolrDisMaxQuery::setQueryPhraseSlop",
        "solrdismaxquery.setqueryphraseslop.php",
        "Specifies the amount of slop permitted on phrase queries explicitly included in the user's query string (qf parameter)"
    ],
    "SolrDisMaxQuerysetTieBreaker": [
        "SolrDisMaxQuery::setTieBreaker",
        "solrdismaxquery.settiebreaker.php",
        "Sets Tie Breaker parameter (tie parameter)"
    ],
    "SolrDisMaxQuerysetTrigramPhraseFields": [
        "SolrDisMaxQuery::setTrigramPhraseFields",
        "solrdismaxquery.settrigramphrasefields.php",
        "Directly Sets Trigram Phrase Fields (pf3 parameter)"
    ],
    "SolrDisMaxQuerysetTrigramPhraseSlop": [
        "SolrDisMaxQuery::setTrigramPhraseSlop",
        "solrdismaxquery.settrigramphraseslop.php",
        "Sets Trigram Phrase Slop (ps3 parameter)"
    ],
    "SolrDisMaxQuerysetUserFields": [
        "SolrDisMaxQuery::setUserFields",
        "solrdismaxquery.setuserfields.php",
        "Sets User Fields parameter (uf)"
    ],
    "SolrDisMaxQueryuseDisMaxQueryParser": [
        "SolrDisMaxQuery::useDisMaxQueryParser",
        "solrdismaxquery.usedismaxqueryparser.php",
        "Switch QueryParser to be DisMax Query Parser"
    ],
    "SolrDisMaxQueryuseEDisMaxQueryParser": [
        "SolrDisMaxQuery::useEDisMaxQueryParser",
        "solrdismaxquery.useedismaxqueryparser.php",
        "Switch QueryParser to be EDisMax"
    ],
    "SolrDisMaxQueryconstruct": [
        "SolrDisMaxQuery::__construct",
        "solrdismaxquery.construct.php",
        "Class Constructor"
    ],
    "SolrDocumentaddField": [
        "SolrDocument::addField",
        "solrdocument.addfield.php",
        "文書にフィールドを追加"
    ],
    "SolrDocumentclear": [
        "SolrDocument::clear",
        "solrdocument.clear.php",
        "Drops all the fields in the document"
    ],
    "SolrDocumentcurrent": [
        "SolrDocument::current",
        "solrdocument.current.php",
        "現行のフィールドを取得"
    ],
    "SolrDocumentdeleteField": [
        "SolrDocument::deleteField",
        "solrdocument.deletefield.php",
        "文書からフィールドを除去"
    ],
    "SolrDocumentfieldExists": [
        "SolrDocument::fieldExists",
        "solrdocument.fieldexists.php",
        "Checks if a field exists in the document"
    ],
    "SolrDocumentgetChildDocuments": [
        "SolrDocument::getChildDocuments",
        "solrdocument.getchilddocuments.php",
        "Returns an array of child documents (SolrDocument)"
    ],
    "SolrDocumentgetChildDocumentsCount": [
        "SolrDocument::getChildDocumentsCount",
        "solrdocument.getchilddocumentscount.php",
        "Returns the number of child documents"
    ],
    "SolrDocumentgetField": [
        "SolrDocument::getField",
        "solrdocument.getfield.php",
        "名前でフィールドを取得"
    ],
    "SolrDocumentgetFieldCount": [
        "SolrDocument::getFieldCount",
        "solrdocument.getfieldcount.php",
        "この文書内のフィールド数を返す"
    ],
    "SolrDocumentgetFieldNames": [
        "SolrDocument::getFieldNames",
        "solrdocument.getfieldnames.php",
        "文書内のフィールド名の配列を返す"
    ],
    "SolrDocumentgetInputDocument": [
        "SolrDocument::getInputDocument",
        "solrdocument.getinputdocument.php",
        "Returns a SolrInputDocument equivalent of the object"
    ],
    "SolrDocumenthasChildDocuments": [
        "SolrDocument::hasChildDocuments",
        "solrdocument.haschilddocuments.php",
        "Checks whether the document has any child documents"
    ],
    "SolrDocumentkey": [
        "SolrDocument::key",
        "solrdocument.key.php",
        "現行のキーを返す"
    ],
    "SolrDocumentmerge": [
        "SolrDocument::merge",
        "solrdocument.merge.php",
        "Merges source to the current SolrDocument"
    ],
    "SolrDocumentnext": [
        "SolrDocument::next",
        "solrdocument.next.php",
        "内部ポインタを次のフィールドに移動"
    ],
    "SolrDocumentoffsetExists": [
        "SolrDocument::offsetExists",
        "solrdocument.offsetexists.php",
        "特定のフィールドが存在するかどうかチェック"
    ],
    "SolrDocumentoffsetGet": [
        "SolrDocument::offsetGet",
        "solrdocument.offsetget.php",
        "フィールドを取得"
    ],
    "SolrDocumentoffsetSet": [
        "SolrDocument::offsetSet",
        "solrdocument.offsetset.php",
        "文書にフィールドを追加"
    ],
    "SolrDocumentoffsetUnset": [
        "SolrDocument::offsetUnset",
        "solrdocument.offsetunset.php",
        "フィールドを除去"
    ],
    "SolrDocumentreset": [
        "SolrDocument::reset",
        "solrdocument.reset.php",
        "SolrDocument::clear()へのエイリアス"
    ],
    "SolrDocumentrewind": [
        "SolrDocument::rewind",
        "solrdocument.rewind.php",
        "内部ポインタを先頭にリセット"
    ],
    "SolrDocumentserialize": [
        "SolrDocument::serialize",
        "solrdocument.serialize.php",
        "カスタムのシリアライズで使われます"
    ],
    "SolrDocumentsort": [
        "SolrDocument::sort",
        "solrdocument.sort.php",
        "Sorts the fields in the document"
    ],
    "SolrDocumenttoArray": [
        "SolrDocument::toArray",
        "solrdocument.toarray.php",
        "文書の配列表現を返す"
    ],
    "SolrDocumentunserialize": [
        "SolrDocument::unserialize",
        "solrdocument.unserialize.php",
        "Custom serialization of SolrDocument objects"
    ],
    "SolrDocumentvalid": [
        "SolrDocument::valid",
        "solrdocument.valid.php",
        "Checks if the current position internally is still valid"
    ],
    "SolrDocumentclone": [
        "SolrDocument::__clone",
        "solrdocument.clone.php",
        "SolrDocument オブジェクトのコピーを作成"
    ],
    "SolrDocumentconstruct": [
        "SolrDocument::__construct",
        "solrdocument.construct.php",
        "コンストラクタ"
    ],
    "SolrDocumentdestruct": [
        "SolrDocument::__destruct",
        "solrdocument.destruct.php",
        "デストラクタ"
    ],
    "SolrDocumentget": [
        "SolrDocument::__get",
        "solrdocument.get.php",
        "プロパティとしてフィールドにアクセス"
    ],
    "SolrDocumentisset": [
        "SolrDocument::__isset",
        "solrdocument.isset.php",
        "フィールドが存在するかチェック"
    ],
    "SolrDocumentset": [
        "SolrDocument::__set",
        "solrdocument.set.php",
        "Adds another field to the document"
    ],
    "SolrDocumentunset": [
        "SolrDocument::__unset",
        "solrdocument.unset.php",
        "文書からフィールドを除去"
    ],
    "SolrDocumentFieldconstruct": [
        "SolrDocumentField::__construct",
        "solrdocumentfield.construct.php",
        "コンストラクタ"
    ],
    "SolrDocumentFielddestruct": [
        "SolrDocumentField::__destruct",
        "solrdocumentfield.destruct.php",
        "デストラクタ"
    ],
    "SolrExceptiongetInternalInfo": [
        "SolrException::getInternalInfo",
        "solrexception.getinternalinfo.php",
        "例外がスローされた際の内部情報を返す"
    ],
    "SolrGenericResponseconstruct": [
        "SolrGenericResponse::__construct",
        "solrgenericresponse.construct.php",
        "コンストラクタ"
    ],
    "SolrGenericResponsedestruct": [
        "SolrGenericResponse::__destruct",
        "solrgenericresponse.destruct.php",
        "デストラクタ"
    ],
    "SolrIllegalArgumentExceptiongetInternalInfo": [
        "SolrIllegalArgumentException::getInternalInfo",
        "solrillegalargumentexception.getinternalinfo.php",
        "例外がスローされた際の内部情報を返す"
    ],
    "SolrIllegalOperationExceptiongetInternalInfo": [
        "SolrIllegalOperationException::getInternalInfo",
        "solrillegaloperationexception.getinternalinfo.php",
        "例外がスローされた際の内部情報を返す"
    ],
    "SolrInputDocumentaddChildDocument": [
        "SolrInputDocument::addChildDocument",
        "solrinputdocument.addchilddocument.php",
        "Adds a child document for block indexing"
    ],
    "SolrInputDocumentaddChildDocuments": [
        "SolrInputDocument::addChildDocuments",
        "solrinputdocument.addchilddocuments.php",
        "Adds an array of child documents"
    ],
    "SolrInputDocumentaddField": [
        "SolrInputDocument::addField",
        "solrinputdocument.addfield.php",
        "文書にフィールドを追加"
    ],
    "SolrInputDocumentclear": [
        "SolrInputDocument::clear",
        "solrinputdocument.clear.php",
        "入力した文書をリセット"
    ],
    "SolrInputDocumentdeleteField": [
        "SolrInputDocument::deleteField",
        "solrinputdocument.deletefield.php",
        "文書からフィールドを除去"
    ],
    "SolrInputDocumentfieldExists": [
        "SolrInputDocument::fieldExists",
        "solrinputdocument.fieldexists.php",
        "フィールドが存在するかチェック"
    ],
    "SolrInputDocumentgetBoost": [
        "SolrInputDocument::getBoost",
        "solrinputdocument.getboost.php",
        "文書に対する現行の boost 値を取得"
    ],
    "SolrInputDocumentgetChildDocuments": [
        "SolrInputDocument::getChildDocuments",
        "solrinputdocument.getchilddocuments.php",
        "Returns an array of child documents (SolrInputDocument)"
    ],
    "SolrInputDocumentgetChildDocumentsCount": [
        "SolrInputDocument::getChildDocumentsCount",
        "solrinputdocument.getchilddocumentscount.php",
        "Returns the number of child documents"
    ],
    "SolrInputDocumentgetField": [
        "SolrInputDocument::getField",
        "solrinputdocument.getfield.php",
        "名前でフィールドを取得"
    ],
    "SolrInputDocumentgetFieldBoost": [
        "SolrInputDocument::getFieldBoost",
        "solrinputdocument.getfieldboost.php",
        "特定のフィールドに対する boost 値を取得"
    ],
    "SolrInputDocumentgetFieldCount": [
        "SolrInputDocument::getFieldCount",
        "solrinputdocument.getfieldcount.php",
        "文書内のフィールド数を返す"
    ],
    "SolrInputDocumentgetFieldNames": [
        "SolrInputDocument::getFieldNames",
        "solrinputdocument.getfieldnames.php",
        "文書内のフィールドを全て含む配列を返す"
    ],
    "SolrInputDocumenthasChildDocuments": [
        "SolrInputDocument::hasChildDocuments",
        "solrinputdocument.haschilddocuments.php",
        "Returns true if the document has any child documents"
    ],
    "SolrInputDocumentmerge": [
        "SolrInputDocument::merge",
        "solrinputdocument.merge.php",
        "Merges one input document into another"
    ],
    "SolrInputDocumentreset": [
        "SolrInputDocument::reset",
        "solrinputdocument.reset.php",
        "これは、SolrInputDocument::clear のエイリアスです"
    ],
    "SolrInputDocumentsetBoost": [
        "SolrInputDocument::setBoost",
        "solrinputdocument.setboost.php",
        "この文書に対する boost 値を設定"
    ],
    "SolrInputDocumentsetFieldBoost": [
        "SolrInputDocument::setFieldBoost",
        "solrinputdocument.setfieldboost.php",
        "フィールドに対するインデキシング時間の boost 値を設定"
    ],
    "SolrInputDocumentsort": [
        "SolrInputDocument::sort",
        "solrinputdocument.sort.php",
        "Sorts the fields within the document"
    ],
    "SolrInputDocumenttoArray": [
        "SolrInputDocument::toArray",
        "solrinputdocument.toarray.php",
        "入力した文書の配列表現を返す"
    ],
    "SolrInputDocumentclone": [
        "SolrInputDocument::__clone",
        "solrinputdocument.clone.php",
        "SolrDocument のコピーを作成"
    ],
    "SolrInputDocumentconstruct": [
        "SolrInputDocument::__construct",
        "solrinputdocument.construct.php",
        "コンストラクタ"
    ],
    "SolrInputDocumentdestruct": [
        "SolrInputDocument::__destruct",
        "solrinputdocument.destruct.php",
        "デストラクタ"
    ],
    "SolrModifiableParamsconstruct": [
        "SolrModifiableParams::__construct",
        "solrmodifiableparams.construct.php",
        "コンストラクタ"
    ],
    "SolrModifiableParamsdestruct": [
        "SolrModifiableParams::__destruct",
        "solrmodifiableparams.destruct.php",
        "デストラクタ"
    ],
    "SolrObjectgetPropertyNames": [
        "SolrObject::getPropertyNames",
        "solrobject.getpropertynames.php",
        "全てのプロパティ名の配列を返す"
    ],
    "SolrObjectoffsetExists": [
        "SolrObject::offsetExists",
        "solrobject.offsetexists.php",
        "プロパティが存在するかチェック"
    ],
    "SolrObjectoffsetGet": [
        "SolrObject::offsetGet",
        "solrobject.offsetget.php",
        "プロパティを取得するために使用される"
    ],
    "SolrObjectoffsetSet": [
        "SolrObject::offsetSet",
        "solrobject.offsetset.php",
        "プロパティに対して値を設定"
    ],
    "SolrObjectoffsetUnset": [
        "SolrObject::offsetUnset",
        "solrobject.offsetunset.php",
        "プロパティに対して値の設定を解除"
    ],
    "SolrObjectconstruct": [
        "SolrObject::__construct",
        "solrobject.construct.php",
        "Solr オブジェクトを生成"
    ],
    "SolrObjectdestruct": [
        "SolrObject::__destruct",
        "solrobject.destruct.php",
        "デストラクタ"
    ],
    "SolrParamsadd": [
        "SolrParams::add",
        "solrparams.add.php",
        "これは、SolrParams::addParam に対するエイリアスです"
    ],
    "SolrParamsaddParam": [
        "SolrParams::addParam",
        "solrparams.addparam.php",
        "オブジェクトにパラメータを追加"
    ],
    "SolrParamsget": [
        "SolrParams::get",
        "solrparams.get.php",
        "これは、SolrParams::getParam に対するエイリアスです。"
    ],
    "SolrParamsgetParam": [
        "SolrParams::getParam",
        "solrparams.getparam.php",
        "パラメータ値を返す"
    ],
    "SolrParamsgetParams": [
        "SolrParams::getParams",
        "solrparams.getparams.php",
        "URL エンコードされていないパラメータの配列を返す"
    ],
    "SolrParamsgetPreparedParams": [
        "SolrParams::getPreparedParams",
        "solrparams.getpreparedparams.php",
        "URL エンコードされたパラメータの配列を返す"
    ],
    "SolrParamsserialize": [
        "SolrParams::serialize",
        "solrparams.serialize.php",
        "カスタムのシリアライズで使われます"
    ],
    "SolrParamsset": [
        "SolrParams::set",
        "solrparams.set.php",
        "SolrParams::setParam のエイリアス"
    ],
    "SolrParamssetParam": [
        "SolrParams::setParam",
        "solrparams.setparam.php",
        "パラメータを指定された値に設定"
    ],
    "SolrParamstoString": [
        "SolrParams::toString",
        "solrparams.tostring.php",
        "オブジェクト内の名前と値のペアのパラメータを全て返します"
    ],
    "SolrParamsunserialize": [
        "SolrParams::unserialize",
        "solrparams.unserialize.php",
        "カスタムのシリアライズで使われます"
    ],
    "SolrPingResponsegetResponse": [
        "SolrPingResponse::getResponse",
        "solrpingresponse.getresponse.php",
        "サーバーからのレスポンスを返す"
    ],
    "SolrPingResponseconstruct": [
        "SolrPingResponse::__construct",
        "solrpingresponse.construct.php",
        "コンストラクタ"
    ],
    "SolrPingResponsedestruct": [
        "SolrPingResponse::__destruct",
        "solrpingresponse.destruct.php",
        "デストラクタ"
    ],
    "SolrQueryaddExpandFilterQuery": [
        "SolrQuery::addExpandFilterQuery",
        "solrquery.addexpandfilterquery.php",
        "Overrides main filter query, determines which documents to include in the main group"
    ],
    "SolrQueryaddExpandSortField": [
        "SolrQuery::addExpandSortField",
        "solrquery.addexpandsortfield.php",
        "Orders the documents within the expanded groups (expand.sort parameter)"
    ],
    "SolrQueryaddFacetDateField": [
        "SolrQuery::addFacetDateField",
        "solrquery.addfacetdatefield.php",
        "Maps to facet.date"
    ],
    "SolrQueryaddFacetDateOther": [
        "SolrQuery::addFacetDateOther",
        "solrquery.addfacetdateother.php",
        "Adds another facet.date.other parameter"
    ],
    "SolrQueryaddFacetField": [
        "SolrQuery::addFacetField",
        "solrquery.addfacetfield.php",
        "Adds another field to the facet"
    ],
    "SolrQueryaddFacetQuery": [
        "SolrQuery::addFacetQuery",
        "solrquery.addfacetquery.php",
        "Adds a facet query"
    ],
    "SolrQueryaddField": [
        "SolrQuery::addField",
        "solrquery.addfield.php",
        "Specifies which fields to return in the result"
    ],
    "SolrQueryaddFilterQuery": [
        "SolrQuery::addFilterQuery",
        "solrquery.addfilterquery.php",
        "Specifies a filter query"
    ],
    "SolrQueryaddGroupField": [
        "SolrQuery::addGroupField",
        "solrquery.addgroupfield.php",
        "Add a field to be used to group results"
    ],
    "SolrQueryaddGroupFunction": [
        "SolrQuery::addGroupFunction",
        "solrquery.addgroupfunction.php",
        "Allows grouping results based on the unique values of a function query (group.func parameter)"
    ],
    "SolrQueryaddGroupQuery": [
        "SolrQuery::addGroupQuery",
        "solrquery.addgroupquery.php",
        "Allows grouping of documents that match the given query"
    ],
    "SolrQueryaddGroupSortField": [
        "SolrQuery::addGroupSortField",
        "solrquery.addgroupsortfield.php",
        "Add a group sort field (group.sort parameter)"
    ],
    "SolrQueryaddHighlightField": [
        "SolrQuery::addHighlightField",
        "solrquery.addhighlightfield.php",
        "Maps to hl.fl"
    ],
    "SolrQueryaddMltField": [
        "SolrQuery::addMltField",
        "solrquery.addmltfield.php",
        "Sets a field to use for similarity"
    ],
    "SolrQueryaddMltQueryField": [
        "SolrQuery::addMltQueryField",
        "solrquery.addmltqueryfield.php",
        "Maps to mlt.qf"
    ],
    "SolrQueryaddSortField": [
        "SolrQuery::addSortField",
        "solrquery.addsortfield.php",
        "Used to control how the results should be sorted"
    ],
    "SolrQueryaddStatsFacet": [
        "SolrQuery::addStatsFacet",
        "solrquery.addstatsfacet.php",
        "Requests a return of sub results for values within the given facet"
    ],
    "SolrQueryaddStatsField": [
        "SolrQuery::addStatsField",
        "solrquery.addstatsfield.php",
        "Maps to stats.field parameter"
    ],
    "SolrQuerycollapse": [
        "SolrQuery::collapse",
        "solrquery.collapse.php",
        "Collapses the result set to a single document per group"
    ],
    "SolrQuerygetExpand": [
        "SolrQuery::getExpand",
        "solrquery.getexpand.php",
        "Returns true if group expanding is enabled"
    ],
    "SolrQuerygetExpandFilterQueries": [
        "SolrQuery::getExpandFilterQueries",
        "solrquery.getexpandfilterqueries.php",
        "Returns the expand filter queries"
    ],
    "SolrQuerygetExpandQuery": [
        "SolrQuery::getExpandQuery",
        "solrquery.getexpandquery.php",
        "Returns the expand query expand.q parameter"
    ],
    "SolrQuerygetExpandRows": [
        "SolrQuery::getExpandRows",
        "solrquery.getexpandrows.php",
        "Returns The number of rows to display in each group (expand.rows)"
    ],
    "SolrQuerygetExpandSortFields": [
        "SolrQuery::getExpandSortFields",
        "solrquery.getexpandsortfields.php",
        "Returns an array of fields"
    ],
    "SolrQuerygetFacet": [
        "SolrQuery::getFacet",
        "solrquery.getfacet.php",
        "Returns the value of the facet parameter"
    ],
    "SolrQuerygetFacetDateEnd": [
        "SolrQuery::getFacetDateEnd",
        "solrquery.getfacetdateend.php",
        "Returns the value for the facet.date.end parameter"
    ],
    "SolrQuerygetFacetDateFields": [
        "SolrQuery::getFacetDateFields",
        "solrquery.getfacetdatefields.php",
        "Returns all the facet.date fields"
    ],
    "SolrQuerygetFacetDateGap": [
        "SolrQuery::getFacetDateGap",
        "solrquery.getfacetdategap.php",
        "Returns the value of the facet.date.gap parameter"
    ],
    "SolrQuerygetFacetDateHardEnd": [
        "SolrQuery::getFacetDateHardEnd",
        "solrquery.getfacetdatehardend.php",
        "Returns the value of the facet.date.hardend parameter"
    ],
    "SolrQuerygetFacetDateOther": [
        "SolrQuery::getFacetDateOther",
        "solrquery.getfacetdateother.php",
        "Returns the value for the facet.date.other parameter"
    ],
    "SolrQuerygetFacetDateStart": [
        "SolrQuery::getFacetDateStart",
        "solrquery.getfacetdatestart.php",
        "Returns the  lower bound for the first date range for all date faceting on this field"
    ],
    "SolrQuerygetFacetFields": [
        "SolrQuery::getFacetFields",
        "solrquery.getfacetfields.php",
        "Returns all the facet fields"
    ],
    "SolrQuerygetFacetLimit": [
        "SolrQuery::getFacetLimit",
        "solrquery.getfacetlimit.php",
        "Returns the maximum number of constraint counts that should be returned for the facet fields"
    ],
    "SolrQuerygetFacetMethod": [
        "SolrQuery::getFacetMethod",
        "solrquery.getfacetmethod.php",
        "Returns the value of the facet.method parameter"
    ],
    "SolrQuerygetFacetMinCount": [
        "SolrQuery::getFacetMinCount",
        "solrquery.getfacetmincount.php",
        "Returns the minimum counts for facet fields should be included in the response"
    ],
    "SolrQuerygetFacetMissing": [
        "SolrQuery::getFacetMissing",
        "solrquery.getfacetmissing.php",
        "Returns the current state of the facet.missing parameter"
    ],
    "SolrQuerygetFacetOffset": [
        "SolrQuery::getFacetOffset",
        "solrquery.getfacetoffset.php",
        "Returns an offset into the list of constraints to be used for pagination"
    ],
    "SolrQuerygetFacetPrefix": [
        "SolrQuery::getFacetPrefix",
        "solrquery.getfacetprefix.php",
        "Returns the facet prefix"
    ],
    "SolrQuerygetFacetQueries": [
        "SolrQuery::getFacetQueries",
        "solrquery.getfacetqueries.php",
        "Returns all the facet queries"
    ],
    "SolrQuerygetFacetSort": [
        "SolrQuery::getFacetSort",
        "solrquery.getfacetsort.php",
        "Returns the facet sort type"
    ],
    "SolrQuerygetFields": [
        "SolrQuery::getFields",
        "solrquery.getfields.php",
        "Returns the list of fields that will be returned in the response"
    ],
    "SolrQuerygetFilterQueries": [
        "SolrQuery::getFilterQueries",
        "solrquery.getfilterqueries.php",
        "Returns an array of filter queries"
    ],
    "SolrQuerygetGroup": [
        "SolrQuery::getGroup",
        "solrquery.getgroup.php",
        "Returns true if grouping is enabled"
    ],
    "SolrQuerygetGroupCachePercent": [
        "SolrQuery::getGroupCachePercent",
        "solrquery.getgroupcachepercent.php",
        "Returns group cache percent value"
    ],
    "SolrQuerygetGroupFacet": [
        "SolrQuery::getGroupFacet",
        "solrquery.getgroupfacet.php",
        "Returns the group.facet parameter value"
    ],
    "SolrQuerygetGroupFields": [
        "SolrQuery::getGroupFields",
        "solrquery.getgroupfields.php",
        "Returns group fields (group.field parameter values)"
    ],
    "SolrQuerygetGroupFormat": [
        "SolrQuery::getGroupFormat",
        "solrquery.getgroupformat.php",
        "Returns the group.format value"
    ],
    "SolrQuerygetGroupFunctions": [
        "SolrQuery::getGroupFunctions",
        "solrquery.getgroupfunctions.php",
        "Returns group functions (group.func parameter values)"
    ],
    "SolrQuerygetGroupLimit": [
        "SolrQuery::getGroupLimit",
        "solrquery.getgrouplimit.php",
        "Returns the group.limit value"
    ],
    "SolrQuerygetGroupMain": [
        "SolrQuery::getGroupMain",
        "solrquery.getgroupmain.php",
        "Returns the group.main value"
    ],
    "SolrQuerygetGroupNGroups": [
        "SolrQuery::getGroupNGroups",
        "solrquery.getgroupngroups.php",
        "Returns the group.ngroups value"
    ],
    "SolrQuerygetGroupOffset": [
        "SolrQuery::getGroupOffset",
        "solrquery.getgroupoffset.php",
        "Returns the group.offset value"
    ],
    "SolrQuerygetGroupQueries": [
        "SolrQuery::getGroupQueries",
        "solrquery.getgroupqueries.php",
        "Returns all the group.query parameter values"
    ],
    "SolrQuerygetGroupSortFields": [
        "SolrQuery::getGroupSortFields",
        "solrquery.getgroupsortfields.php",
        "Returns the group.sort value"
    ],
    "SolrQuerygetGroupTruncate": [
        "SolrQuery::getGroupTruncate",
        "solrquery.getgrouptruncate.php",
        "Returns the group.truncate value"
    ],
    "SolrQuerygetHighlight": [
        "SolrQuery::getHighlight",
        "solrquery.gethighlight.php",
        "Returns the state of the hl parameter"
    ],
    "SolrQuerygetHighlightAlternateField": [
        "SolrQuery::getHighlightAlternateField",
        "solrquery.gethighlightalternatefield.php",
        "Returns the highlight field to use as backup or default"
    ],
    "SolrQuerygetHighlightFields": [
        "SolrQuery::getHighlightFields",
        "solrquery.gethighlightfields.php",
        "Returns all the fields that Solr should generate highlighted snippets for"
    ],
    "SolrQuerygetHighlightFormatter": [
        "SolrQuery::getHighlightFormatter",
        "solrquery.gethighlightformatter.php",
        "Returns the formatter for the highlighted output"
    ],
    "SolrQuerygetHighlightFragmenter": [
        "SolrQuery::getHighlightFragmenter",
        "solrquery.gethighlightfragmenter.php",
        "Returns the text snippet generator for highlighted text"
    ],
    "SolrQuerygetHighlightFragsize": [
        "SolrQuery::getHighlightFragsize",
        "solrquery.gethighlightfragsize.php",
        "Returns the number of characters of fragments to consider for highlighting"
    ],
    "SolrQuerygetHighlightHighlightMultiTerm": [
        "SolrQuery::getHighlightHighlightMultiTerm",
        "solrquery.gethighlighthighlightmultiterm.php",
        "Returns whether or not to enable highlighting for range/wildcard/fuzzy/prefix queries"
    ],
    "SolrQuerygetHighlightMaxAlternateFieldLength": [
        "SolrQuery::getHighlightMaxAlternateFieldLength",
        "solrquery.gethighlightmaxalternatefieldlength.php",
        "Returns the maximum number of characters of the field to return"
    ],
    "SolrQuerygetHighlightMaxAnalyzedChars": [
        "SolrQuery::getHighlightMaxAnalyzedChars",
        "solrquery.gethighlightmaxanalyzedchars.php",
        "Returns the maximum number of characters into a document to look for suitable snippets"
    ],
    "SolrQuerygetHighlightMergeContiguous": [
        "SolrQuery::getHighlightMergeContiguous",
        "solrquery.gethighlightmergecontiguous.php",
        "Returns whether or not the collapse contiguous fragments into a single fragment"
    ],
    "SolrQuerygetHighlightRegexMaxAnalyzedChars": [
        "SolrQuery::getHighlightRegexMaxAnalyzedChars",
        "solrquery.gethighlightregexmaxanalyzedchars.php",
        "Returns the maximum number of characters from a field when using the regex fragmenter"
    ],
    "SolrQuerygetHighlightRegexPattern": [
        "SolrQuery::getHighlightRegexPattern",
        "solrquery.gethighlightregexpattern.php",
        "Returns the regular expression for fragmenting"
    ],
    "SolrQuerygetHighlightRegexSlop": [
        "SolrQuery::getHighlightRegexSlop",
        "solrquery.gethighlightregexslop.php",
        "Returns the deviation factor from the ideal fragment size"
    ],
    "SolrQuerygetHighlightRequireFieldMatch": [
        "SolrQuery::getHighlightRequireFieldMatch",
        "solrquery.gethighlightrequirefieldmatch.php",
        "Returns if a field will only be highlighted if the query matched in this particular field"
    ],
    "SolrQuerygetHighlightSimplePost": [
        "SolrQuery::getHighlightSimplePost",
        "solrquery.gethighlightsimplepost.php",
        "Returns the text which appears after a highlighted term"
    ],
    "SolrQuerygetHighlightSimplePre": [
        "SolrQuery::getHighlightSimplePre",
        "solrquery.gethighlightsimplepre.php",
        "Returns the text which appears before a highlighted term"
    ],
    "SolrQuerygetHighlightSnippets": [
        "SolrQuery::getHighlightSnippets",
        "solrquery.gethighlightsnippets.php",
        "Returns the maximum number of highlighted snippets to generate per field"
    ],
    "SolrQuerygetHighlightUsePhraseHighlighter": [
        "SolrQuery::getHighlightUsePhraseHighlighter",
        "solrquery.gethighlightusephrasehighlighter.php",
        "Returns the state of the hl.usePhraseHighlighter parameter"
    ],
    "SolrQuerygetMlt": [
        "SolrQuery::getMlt",
        "solrquery.getmlt.php",
        "Returns whether or not MoreLikeThis results should be enabled"
    ],
    "SolrQuerygetMltBoost": [
        "SolrQuery::getMltBoost",
        "solrquery.getmltboost.php",
        "Returns whether or not the query will be boosted by the interesting term relevance"
    ],
    "SolrQuerygetMltCount": [
        "SolrQuery::getMltCount",
        "solrquery.getmltcount.php",
        "Returns the number of similar documents to return for each result"
    ],
    "SolrQuerygetMltFields": [
        "SolrQuery::getMltFields",
        "solrquery.getmltfields.php",
        "Returns all the fields to use for similarity"
    ],
    "SolrQuerygetMltMaxNumQueryTerms": [
        "SolrQuery::getMltMaxNumQueryTerms",
        "solrquery.getmltmaxnumqueryterms.php",
        "Returns the maximum number of query terms that will be included in any generated query"
    ],
    "SolrQuerygetMltMaxNumTokens": [
        "SolrQuery::getMltMaxNumTokens",
        "solrquery.getmltmaxnumtokens.php",
        "Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support"
    ],
    "SolrQuerygetMltMaxWordLength": [
        "SolrQuery::getMltMaxWordLength",
        "solrquery.getmltmaxwordlength.php",
        "Returns the maximum word length above which words will be ignored"
    ],
    "SolrQuerygetMltMinDocFrequency": [
        "SolrQuery::getMltMinDocFrequency",
        "solrquery.getmltmindocfrequency.php",
        "Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs"
    ],
    "SolrQuerygetMltMinTermFrequency": [
        "SolrQuery::getMltMinTermFrequency",
        "solrquery.getmltmintermfrequency.php",
        "Returns the frequency below which terms will be ignored in the source document"
    ],
    "SolrQuerygetMltMinWordLength": [
        "SolrQuery::getMltMinWordLength",
        "solrquery.getmltminwordlength.php",
        "Returns the minimum word length below which words will be ignored"
    ],
    "SolrQuerygetMltQueryFields": [
        "SolrQuery::getMltQueryFields",
        "solrquery.getmltqueryfields.php",
        "Returns the query fields and their boosts"
    ],
    "SolrQuerygetQuery": [
        "SolrQuery::getQuery",
        "solrquery.getquery.php",
        "主なクエリーを返す"
    ],
    "SolrQuerygetRows": [
        "SolrQuery::getRows",
        "solrquery.getrows.php",
        "Returns the maximum number of documents"
    ],
    "SolrQuerygetSortFields": [
        "SolrQuery::getSortFields",
        "solrquery.getsortfields.php",
        "Returns all the sort fields"
    ],
    "SolrQuerygetStart": [
        "SolrQuery::getStart",
        "solrquery.getstart.php",
        "Returns the offset in the complete result set"
    ],
    "SolrQuerygetStats": [
        "SolrQuery::getStats",
        "solrquery.getstats.php",
        "Returns whether or not stats is enabled"
    ],
    "SolrQuerygetStatsFacets": [
        "SolrQuery::getStatsFacets",
        "solrquery.getstatsfacets.php",
        "Returns all the stats facets that were set"
    ],
    "SolrQuerygetStatsFields": [
        "SolrQuery::getStatsFields",
        "solrquery.getstatsfields.php",
        "Returns all the statistics fields"
    ],
    "SolrQuerygetTerms": [
        "SolrQuery::getTerms",
        "solrquery.getterms.php",
        "Returns whether or not the TermsComponent is enabled"
    ],
    "SolrQuerygetTermsField": [
        "SolrQuery::getTermsField",
        "solrquery.gettermsfield.php",
        "Returns the field from which the terms are retrieved"
    ],
    "SolrQuerygetTermsIncludeLowerBound": [
        "SolrQuery::getTermsIncludeLowerBound",
        "solrquery.gettermsincludelowerbound.php",
        "Returns whether or not to include the lower bound in the result set"
    ],
    "SolrQuerygetTermsIncludeUpperBound": [
        "SolrQuery::getTermsIncludeUpperBound",
        "solrquery.gettermsincludeupperbound.php",
        "Returns whether or not to include the upper bound term in the result set"
    ],
    "SolrQuerygetTermsLimit": [
        "SolrQuery::getTermsLimit",
        "solrquery.gettermslimit.php",
        "Returns the maximum number of terms Solr should return"
    ],
    "SolrQuerygetTermsLowerBound": [
        "SolrQuery::getTermsLowerBound",
        "solrquery.gettermslowerbound.php",
        "Returns the term to start at"
    ],
    "SolrQuerygetTermsMaxCount": [
        "SolrQuery::getTermsMaxCount",
        "solrquery.gettermsmaxcount.php",
        "Returns the maximum document frequency"
    ],
    "SolrQuerygetTermsMinCount": [
        "SolrQuery::getTermsMinCount",
        "solrquery.gettermsmincount.php",
        "Returns the minimum document frequency to return in order to be included"
    ],
    "SolrQuerygetTermsPrefix": [
        "SolrQuery::getTermsPrefix",
        "solrquery.gettermsprefix.php",
        "Returns the term prefix"
    ],
    "SolrQuerygetTermsReturnRaw": [
        "SolrQuery::getTermsReturnRaw",
        "solrquery.gettermsreturnraw.php",
        "Whether or not to return raw characters"
    ],
    "SolrQuerygetTermsSort": [
        "SolrQuery::getTermsSort",
        "solrquery.gettermssort.php",
        "Returns an integer indicating how terms are sorted"
    ],
    "SolrQuerygetTermsUpperBound": [
        "SolrQuery::getTermsUpperBound",
        "solrquery.gettermsupperbound.php",
        "Returns the term to stop at"
    ],
    "SolrQuerygetTimeAllowed": [
        "SolrQuery::getTimeAllowed",
        "solrquery.gettimeallowed.php",
        "Returns the time in milliseconds allowed for the query to finish"
    ],
    "SolrQueryremoveExpandFilterQuery": [
        "SolrQuery::removeExpandFilterQuery",
        "solrquery.removeexpandfilterquery.php",
        "Removes an expand filter query"
    ],
    "SolrQueryremoveExpandSortField": [
        "SolrQuery::removeExpandSortField",
        "solrquery.removeexpandsortfield.php",
        "Removes an expand sort field from the expand.sort parameter"
    ],
    "SolrQueryremoveFacetDateField": [
        "SolrQuery::removeFacetDateField",
        "solrquery.removefacetdatefield.php",
        "Removes one of the facet date fields"
    ],
    "SolrQueryremoveFacetDateOther": [
        "SolrQuery::removeFacetDateOther",
        "solrquery.removefacetdateother.php",
        "Removes one of the facet.date.other parameters"
    ],
    "SolrQueryremoveFacetField": [
        "SolrQuery::removeFacetField",
        "solrquery.removefacetfield.php",
        "Removes one of the facet.date parameters"
    ],
    "SolrQueryremoveFacetQuery": [
        "SolrQuery::removeFacetQuery",
        "solrquery.removefacetquery.php",
        "Removes one of the facet.query parameters"
    ],
    "SolrQueryremoveField": [
        "SolrQuery::removeField",
        "solrquery.removefield.php",
        "Removes a field from the list of fields"
    ],
    "SolrQueryremoveFilterQuery": [
        "SolrQuery::removeFilterQuery",
        "solrquery.removefilterquery.php",
        "Removes a filter query"
    ],
    "SolrQueryremoveHighlightField": [
        "SolrQuery::removeHighlightField",
        "solrquery.removehighlightfield.php",
        "Removes one of the fields used for highlighting"
    ],
    "SolrQueryremoveMltField": [
        "SolrQuery::removeMltField",
        "solrquery.removemltfield.php",
        "Removes one of the moreLikeThis fields"
    ],
    "SolrQueryremoveMltQueryField": [
        "SolrQuery::removeMltQueryField",
        "solrquery.removemltqueryfield.php",
        "Removes one of the moreLikeThis query fields"
    ],
    "SolrQueryremoveSortField": [
        "SolrQuery::removeSortField",
        "solrquery.removesortfield.php",
        "Removes one of the sort fields"
    ],
    "SolrQueryremoveStatsFacet": [
        "SolrQuery::removeStatsFacet",
        "solrquery.removestatsfacet.php",
        "Removes one of the stats.facet parameters"
    ],
    "SolrQueryremoveStatsField": [
        "SolrQuery::removeStatsField",
        "solrquery.removestatsfield.php",
        "Removes one of the stats.field parameters"
    ],
    "SolrQuerysetEchoHandler": [
        "SolrQuery::setEchoHandler",
        "solrquery.setechohandler.php",
        "Toggles the echoHandler parameter"
    ],
    "SolrQuerysetEchoParams": [
        "SolrQuery::setEchoParams",
        "solrquery.setechoparams.php",
        "Determines what kind of parameters to include in the response"
    ],
    "SolrQuerysetExpand": [
        "SolrQuery::setExpand",
        "solrquery.setexpand.php",
        "Enables/Disables the Expand Component"
    ],
    "SolrQuerysetExpandQuery": [
        "SolrQuery::setExpandQuery",
        "solrquery.setexpandquery.php",
        "Sets the expand.q parameter"
    ],
    "SolrQuerysetExpandRows": [
        "SolrQuery::setExpandRows",
        "solrquery.setexpandrows.php",
        "Sets the number of rows to display in each group (expand.rows). Server Default 5"
    ],
    "SolrQuerysetExplainOther": [
        "SolrQuery::setExplainOther",
        "solrquery.setexplainother.php",
        "Sets the explainOther common query parameter"
    ],
    "SolrQuerysetFacet": [
        "SolrQuery::setFacet",
        "solrquery.setfacet.php",
        "Maps to the facet parameter. Enables or disables facetting"
    ],
    "SolrQuerysetFacetDateEnd": [
        "SolrQuery::setFacetDateEnd",
        "solrquery.setfacetdateend.php",
        "Maps to facet.date.end"
    ],
    "SolrQuerysetFacetDateGap": [
        "SolrQuery::setFacetDateGap",
        "solrquery.setfacetdategap.php",
        "Maps to facet.date.gap"
    ],
    "SolrQuerysetFacetDateHardEnd": [
        "SolrQuery::setFacetDateHardEnd",
        "solrquery.setfacetdatehardend.php",
        "Maps to facet.date.hardend"
    ],
    "SolrQuerysetFacetDateStart": [
        "SolrQuery::setFacetDateStart",
        "solrquery.setfacetdatestart.php",
        "Maps to facet.date.start"
    ],
    "SolrQuerysetFacetEnumCacheMinDefaultFrequency": [
        "SolrQuery::setFacetEnumCacheMinDefaultFrequency",
        "solrquery.setfacetenumcachemindefaultfrequency.php",
        "Sets the minimum document frequency used for determining term count"
    ],
    "SolrQuerysetFacetLimit": [
        "SolrQuery::setFacetLimit",
        "solrquery.setfacetlimit.php",
        "Maps to facet.limit"
    ],
    "SolrQuerysetFacetMethod": [
        "SolrQuery::setFacetMethod",
        "solrquery.setfacetmethod.php",
        "Specifies the type of algorithm to use when faceting a field"
    ],
    "SolrQuerysetFacetMinCount": [
        "SolrQuery::setFacetMinCount",
        "solrquery.setfacetmincount.php",
        "Maps to facet.mincount"
    ],
    "SolrQuerysetFacetMissing": [
        "SolrQuery::setFacetMissing",
        "solrquery.setfacetmissing.php",
        "Maps to facet.missing"
    ],
    "SolrQuerysetFacetOffset": [
        "SolrQuery::setFacetOffset",
        "solrquery.setfacetoffset.php",
        "Sets the offset into the list of constraints to allow for pagination"
    ],
    "SolrQuerysetFacetPrefix": [
        "SolrQuery::setFacetPrefix",
        "solrquery.setfacetprefix.php",
        "Specifies a string prefix with which to limits the terms on which to facet"
    ],
    "SolrQuerysetFacetSort": [
        "SolrQuery::setFacetSort",
        "solrquery.setfacetsort.php",
        "Determines the ordering of the facet field constraints"
    ],
    "SolrQuerysetGroup": [
        "SolrQuery::setGroup",
        "solrquery.setgroup.php",
        "Enable/Disable result grouping (group parameter)"
    ],
    "SolrQuerysetGroupCachePercent": [
        "SolrQuery::setGroupCachePercent",
        "solrquery.setgroupcachepercent.php",
        "Enables caching for result grouping"
    ],
    "SolrQuerysetGroupFacet": [
        "SolrQuery::setGroupFacet",
        "solrquery.setgroupfacet.php",
        "Sets group.facet parameter"
    ],
    "SolrQuerysetGroupFormat": [
        "SolrQuery::setGroupFormat",
        "solrquery.setgroupformat.php",
        "Sets the group format, result structure (group.format parameter)"
    ],
    "SolrQuerysetGroupLimit": [
        "SolrQuery::setGroupLimit",
        "solrquery.setgrouplimit.php",
        "Specifies the number of results to return for each group. The server default value is 1"
    ],
    "SolrQuerysetGroupMain": [
        "SolrQuery::setGroupMain",
        "solrquery.setgroupmain.php",
        "If true, the result of the first field grouping command is used as the main result list in the response, using group.format=simple"
    ],
    "SolrQuerysetGroupNGroups": [
        "SolrQuery::setGroupNGroups",
        "solrquery.setgroupngroups.php",
        "If true, Solr includes the number of groups that have matched the query in the results"
    ],
    "SolrQuerysetGroupOffset": [
        "SolrQuery::setGroupOffset",
        "solrquery.setgroupoffset.php",
        "Sets the group.offset parameter"
    ],
    "SolrQuerysetGroupTruncate": [
        "SolrQuery::setGroupTruncate",
        "solrquery.setgrouptruncate.php",
        "If true, facet counts are based on the most relevant document of each group matching the query"
    ],
    "SolrQuerysetHighlight": [
        "SolrQuery::setHighlight",
        "solrquery.sethighlight.php",
        "Enables or disables highlighting"
    ],
    "SolrQuerysetHighlightAlternateField": [
        "SolrQuery::setHighlightAlternateField",
        "solrquery.sethighlightalternatefield.php",
        "Specifies the backup field to use"
    ],
    "SolrQuerysetHighlightFormatter": [
        "SolrQuery::setHighlightFormatter",
        "solrquery.sethighlightformatter.php",
        "Specify a formatter for the highlight output"
    ],
    "SolrQuerysetHighlightFragmenter": [
        "SolrQuery::setHighlightFragmenter",
        "solrquery.sethighlightfragmenter.php",
        "Sets a text snippet generator for highlighted text"
    ],
    "SolrQuerysetHighlightFragsize": [
        "SolrQuery::setHighlightFragsize",
        "solrquery.sethighlightfragsize.php",
        "The size of fragments to consider for highlighting"
    ],
    "SolrQuerysetHighlightHighlightMultiTerm": [
        "SolrQuery::setHighlightHighlightMultiTerm",
        "solrquery.sethighlighthighlightmultiterm.php",
        "Use SpanScorer to highlight phrase terms"
    ],
    "SolrQuerysetHighlightMaxAlternateFieldLength": [
        "SolrQuery::setHighlightMaxAlternateFieldLength",
        "solrquery.sethighlightmaxalternatefieldlength.php",
        "Sets the maximum number of characters of the field to return"
    ],
    "SolrQuerysetHighlightMaxAnalyzedChars": [
        "SolrQuery::setHighlightMaxAnalyzedChars",
        "solrquery.sethighlightmaxanalyzedchars.php",
        "Specifies the number of characters into a document to look for suitable snippets"
    ],
    "SolrQuerysetHighlightMergeContiguous": [
        "SolrQuery::setHighlightMergeContiguous",
        "solrquery.sethighlightmergecontiguous.php",
        "Whether or not to collapse contiguous fragments into a single fragment"
    ],
    "SolrQuerysetHighlightRegexMaxAnalyzedChars": [
        "SolrQuery::setHighlightRegexMaxAnalyzedChars",
        "solrquery.sethighlightregexmaxanalyzedchars.php",
        "Specify the maximum number of characters to analyze"
    ],
    "SolrQuerysetHighlightRegexPattern": [
        "SolrQuery::setHighlightRegexPattern",
        "solrquery.sethighlightregexpattern.php",
        "Specify the regular expression for fragmenting"
    ],
    "SolrQuerysetHighlightRegexSlop": [
        "SolrQuery::setHighlightRegexSlop",
        "solrquery.sethighlightregexslop.php",
        "Sets the factor by which the regex fragmenter can stray from the ideal fragment size"
    ],
    "SolrQuerysetHighlightRequireFieldMatch": [
        "SolrQuery::setHighlightRequireFieldMatch",
        "solrquery.sethighlightrequirefieldmatch.php",
        "Require field matching during highlighting"
    ],
    "SolrQuerysetHighlightSimplePost": [
        "SolrQuery::setHighlightSimplePost",
        "solrquery.sethighlightsimplepost.php",
        "Sets the text which appears after a highlighted term"
    ],
    "SolrQuerysetHighlightSimplePre": [
        "SolrQuery::setHighlightSimplePre",
        "solrquery.sethighlightsimplepre.php",
        "Sets the text which appears before a highlighted term"
    ],
    "SolrQuerysetHighlightSnippets": [
        "SolrQuery::setHighlightSnippets",
        "solrquery.sethighlightsnippets.php",
        "Sets the maximum number of highlighted snippets to generate per field"
    ],
    "SolrQuerysetHighlightUsePhraseHighlighter": [
        "SolrQuery::setHighlightUsePhraseHighlighter",
        "solrquery.sethighlightusephrasehighlighter.php",
        "Whether to highlight phrase terms only when they appear within the query phrase"
    ],
    "SolrQuerysetMlt": [
        "SolrQuery::setMlt",
        "solrquery.setmlt.php",
        "Enables or disables moreLikeThis"
    ],
    "SolrQuerysetMltBoost": [
        "SolrQuery::setMltBoost",
        "solrquery.setmltboost.php",
        "Set if the query will be boosted by the interesting term relevance"
    ],
    "SolrQuerysetMltCount": [
        "SolrQuery::setMltCount",
        "solrquery.setmltcount.php",
        "Set the number of similar documents to return for each result"
    ],
    "SolrQuerysetMltMaxNumQueryTerms": [
        "SolrQuery::setMltMaxNumQueryTerms",
        "solrquery.setmltmaxnumqueryterms.php",
        "Sets the maximum number of query terms included"
    ],
    "SolrQuerysetMltMaxNumTokens": [
        "SolrQuery::setMltMaxNumTokens",
        "solrquery.setmltmaxnumtokens.php",
        "Specifies the maximum number of tokens to parse"
    ],
    "SolrQuerysetMltMaxWordLength": [
        "SolrQuery::setMltMaxWordLength",
        "solrquery.setmltmaxwordlength.php",
        "Sets the maximum word length"
    ],
    "SolrQuerysetMltMinDocFrequency": [
        "SolrQuery::setMltMinDocFrequency",
        "solrquery.setmltmindocfrequency.php",
        "Sets the mltMinDoc frequency"
    ],
    "SolrQuerysetMltMinTermFrequency": [
        "SolrQuery::setMltMinTermFrequency",
        "solrquery.setmltmintermfrequency.php",
        "Sets the frequency below which terms will be ignored in the source docs"
    ],
    "SolrQuerysetMltMinWordLength": [
        "SolrQuery::setMltMinWordLength",
        "solrquery.setmltminwordlength.php",
        "Sets the minimum word length"
    ],
    "SolrQuerysetOmitHeader": [
        "SolrQuery::setOmitHeader",
        "solrquery.setomitheader.php",
        "Exclude the header from the returned results"
    ],
    "SolrQuerysetQuery": [
        "SolrQuery::setQuery",
        "solrquery.setquery.php",
        "検索クエリーを設定"
    ],
    "SolrQuerysetRows": [
        "SolrQuery::setRows",
        "solrquery.setrows.php",
        "Specifies the maximum number of rows to return in the result"
    ],
    "SolrQuerysetShowDebugInfo": [
        "SolrQuery::setShowDebugInfo",
        "solrquery.setshowdebuginfo.php",
        "Flag to show debug information"
    ],
    "SolrQuerysetStart": [
        "SolrQuery::setStart",
        "solrquery.setstart.php",
        "Specifies the number of rows to skip"
    ],
    "SolrQuerysetStats": [
        "SolrQuery::setStats",
        "solrquery.setstats.php",
        "Enables or disables the Stats component"
    ],
    "SolrQuerysetTerms": [
        "SolrQuery::setTerms",
        "solrquery.setterms.php",
        "Enables or disables the TermsComponent"
    ],
    "SolrQuerysetTermsField": [
        "SolrQuery::setTermsField",
        "solrquery.settermsfield.php",
        "Sets the name of the field to get the Terms from"
    ],
    "SolrQuerysetTermsIncludeLowerBound": [
        "SolrQuery::setTermsIncludeLowerBound",
        "solrquery.settermsincludelowerbound.php",
        "Include the lower bound term in the result set"
    ],
    "SolrQuerysetTermsIncludeUpperBound": [
        "SolrQuery::setTermsIncludeUpperBound",
        "solrquery.settermsincludeupperbound.php",
        "Include the upper bound term in the result set"
    ],
    "SolrQuerysetTermsLimit": [
        "SolrQuery::setTermsLimit",
        "solrquery.settermslimit.php",
        "Sets the maximum number of terms to return"
    ],
    "SolrQuerysetTermsLowerBound": [
        "SolrQuery::setTermsLowerBound",
        "solrquery.settermslowerbound.php",
        "Specifies the Term to start from"
    ],
    "SolrQuerysetTermsMaxCount": [
        "SolrQuery::setTermsMaxCount",
        "solrquery.settermsmaxcount.php",
        "Sets the maximum document frequency"
    ],
    "SolrQuerysetTermsMinCount": [
        "SolrQuery::setTermsMinCount",
        "solrquery.settermsmincount.php",
        "Sets the minimum document frequency"
    ],
    "SolrQuerysetTermsPrefix": [
        "SolrQuery::setTermsPrefix",
        "solrquery.settermsprefix.php",
        "Restrict matches to terms that start with the prefix"
    ],
    "SolrQuerysetTermsReturnRaw": [
        "SolrQuery::setTermsReturnRaw",
        "solrquery.settermsreturnraw.php",
        "Return the raw characters of the indexed term"
    ],
    "SolrQuerysetTermsSort": [
        "SolrQuery::setTermsSort",
        "solrquery.settermssort.php",
        "Specifies how to sort the returned terms"
    ],
    "SolrQuerysetTermsUpperBound": [
        "SolrQuery::setTermsUpperBound",
        "solrquery.settermsupperbound.php",
        "Sets the term to stop at"
    ],
    "SolrQuerysetTimeAllowed": [
        "SolrQuery::setTimeAllowed",
        "solrquery.settimeallowed.php",
        "The time allowed for search to finish"
    ],
    "SolrQueryconstruct": [
        "SolrQuery::__construct",
        "solrquery.construct.php",
        "コンストラクタ"
    ],
    "SolrQuerydestruct": [
        "SolrQuery::__destruct",
        "solrquery.destruct.php",
        "デストラクタ"
    ],
    "SolrQueryResponseconstruct": [
        "SolrQueryResponse::__construct",
        "solrqueryresponse.construct.php",
        "コンストラクタ"
    ],
    "SolrQueryResponsedestruct": [
        "SolrQueryResponse::__destruct",
        "solrqueryresponse.destruct.php",
        "デストラクタ"
    ],
    "SolrResponsegetDigestedResponse": [
        "SolrResponse::getDigestedResponse",
        "solrresponse.getdigestedresponse.php",
        "シリアライズされた PHP データとして XML レスポンスを返す"
    ],
    "SolrResponsegetHttpStatus": [
        "SolrResponse::getHttpStatus",
        "solrresponse.gethttpstatus.php",
        "レスポンスの HTTP ステータスを返す"
    ],
    "SolrResponsegetHttpStatusMessage": [
        "SolrResponse::getHttpStatusMessage",
        "solrresponse.gethttpstatusmessage.php",
        "HTTP ステータスに関する詳細を返す"
    ],
    "SolrResponsegetRawRequest": [
        "SolrResponse::getRawRequest",
        "solrresponse.getrawrequest.php",
        "Solr サーバーに送られた生のリクエストを返す"
    ],
    "SolrResponsegetRawRequestHeaders": [
        "SolrResponse::getRawRequestHeaders",
        "solrresponse.getrawrequestheaders.php",
        "Solr サーバーに送られた生のリクエストヘッダを返す"
    ],
    "SolrResponsegetRawResponse": [
        "SolrResponse::getRawResponse",
        "solrresponse.getrawresponse.php",
        "Solr サーバーからの生のレスポンスを返す"
    ],
    "SolrResponsegetRawResponseHeaders": [
        "SolrResponse::getRawResponseHeaders",
        "solrresponse.getrawresponseheaders.php",
        "Solr サーバーからの生のレスポンスヘッダを返す"
    ],
    "SolrResponsegetRequestUrl": [
        "SolrResponse::getRequestUrl",
        "solrresponse.getrequesturl.php",
        "リクエストが送られた完全な URL を返す"
    ],
    "SolrResponsegetResponse": [
        "SolrResponse::getResponse",
        "solrresponse.getresponse.php",
        "サーバーからの XML レスポンスを表現する SolrObject を返す"
    ],
    "SolrResponsesetParseMode": [
        "SolrResponse::setParseMode",
        "solrresponse.setparsemode.php",
        "パースモードを設定"
    ],
    "SolrResponsesuccess": [
        "SolrResponse::success",
        "solrresponse.success.php",
        "リクエストが成功したか"
    ],
    "SolrServerExceptiongetInternalInfo": [
        "SolrServerException::getInternalInfo",
        "solrserverexception.getinternalinfo.php",
        "例外がスローされた際の内部情報を返す"
    ],
    "SolrUpdateResponseconstruct": [
        "SolrUpdateResponse::__construct",
        "solrupdateresponse.construct.php",
        "コンストラクタ"
    ],
    "SolrUpdateResponsedestruct": [
        "SolrUpdateResponse::__destruct",
        "solrupdateresponse.destruct.php",
        "デストラクタ"
    ],
    "SolrUtilsdigestXmlResponse": [
        "SolrUtils::digestXmlResponse",
        "solrutils.digestxmlresponse.php",
        "Parses an response XML string into a SolrObject"
    ],
    "SolrUtilsescapeQueryChars": [
        "SolrUtils::escapeQueryChars",
        "solrutils.escapequerychars.php",
        "Escapes a lucene query string"
    ],
    "SolrUtilsgetSolrVersion": [
        "SolrUtils::getSolrVersion",
        "solrutils.getsolrversion.php",
        "Solr エクステンションの現行バージョンを返す"
    ],
    "SolrUtilsqueryPhrase": [
        "SolrUtils::queryPhrase",
        "solrutils.queryphrase.php",
        "Prepares a phrase from an unescaped lucene string"
    ],
    "solrgetversion": [
        "solr_get_version",
        "function.solr-get-version.php",
        "Apache Solr エクステンションの現行バージョンを返す"
    ],
    "sort": [
        "sort",
        "function.sort.php",
        "配列をソートする"
    ],
    "soundex": [
        "soundex",
        "function.soundex.php",
        "文字列の soundex キーを計算する"
    ],
    "SphinxClientaddQuery": [
        "SphinxClient::addQuery",
        "sphinxclient.addquery.php",
        "マルチクエリバッチにクエリを追加する"
    ],
    "SphinxClientbuildExcerpts": [
        "SphinxClient::buildExcerpts",
        "sphinxclient.buildexcerpts.php",
        "テキストの抜粋を作成する"
    ],
    "SphinxClientbuildKeywords": [
        "SphinxClient::buildKeywords",
        "sphinxclient.buildkeywords.php",
        "キーワードをクエリから抽出する"
    ],
    "SphinxClientclose": [
        "SphinxClient::close",
        "sphinxclient.close.php",
        "Closes previously opened persistent connection"
    ],
    "SphinxClientescapeString": [
        "SphinxClient::escapeString",
        "sphinxclient.escapestring.php",
        "特殊文字をエスケープする"
    ],
    "SphinxClientgetLastError": [
        "SphinxClient::getLastError",
        "sphinxclient.getlasterror.php",
        "直近のエラーメッセージを取得する"
    ],
    "SphinxClientgetLastWarning": [
        "SphinxClient::getLastWarning",
        "sphinxclient.getlastwarning.php",
        "直近の警告を取得する"
    ],
    "SphinxClientopen": [
        "SphinxClient::open",
        "sphinxclient.open.php",
        "Opens persistent connection to the server"
    ],
    "SphinxClientquery": [
        "SphinxClient::query",
        "sphinxclient.query.php",
        "Execute search query"
    ],
    "SphinxClientresetFilters": [
        "SphinxClient::resetFilters",
        "sphinxclient.resetfilters.php",
        "Clear all filters"
    ],
    "SphinxClientresetGroupBy": [
        "SphinxClient::resetGroupBy",
        "sphinxclient.resetgroupby.php",
        "Clear all group-by settings"
    ],
    "SphinxClientrunQueries": [
        "SphinxClient::runQueries",
        "sphinxclient.runqueries.php",
        "Run a batch of search queries"
    ],
    "SphinxClientsetArrayResult": [
        "SphinxClient::setArrayResult",
        "sphinxclient.setarrayresult.php",
        "Change the format of result set array"
    ],
    "SphinxClientsetConnectTimeout": [
        "SphinxClient::setConnectTimeout",
        "sphinxclient.setconnecttimeout.php",
        "Set connection timeout"
    ],
    "SphinxClientsetFieldWeights": [
        "SphinxClient::setFieldWeights",
        "sphinxclient.setfieldweights.php",
        "Set field weights"
    ],
    "SphinxClientsetFilter": [
        "SphinxClient::setFilter",
        "sphinxclient.setfilter.php",
        "Add new integer values set filter"
    ],
    "SphinxClientsetFilterFloatRange": [
        "SphinxClient::setFilterFloatRange",
        "sphinxclient.setfilterfloatrange.php",
        "Add new float range filter"
    ],
    "SphinxClientsetFilterRange": [
        "SphinxClient::setFilterRange",
        "sphinxclient.setfilterrange.php",
        "Add new integer range filter"
    ],
    "SphinxClientsetGeoAnchor": [
        "SphinxClient::setGeoAnchor",
        "sphinxclient.setgeoanchor.php",
        "Set anchor point for a geosphere distance calculations"
    ],
    "SphinxClientsetGroupBy": [
        "SphinxClient::setGroupBy",
        "sphinxclient.setgroupby.php",
        "Set grouping attribute"
    ],
    "SphinxClientsetGroupDistinct": [
        "SphinxClient::setGroupDistinct",
        "sphinxclient.setgroupdistinct.php",
        "Set attribute name for per-group distinct values count calculations"
    ],
    "SphinxClientsetIDRange": [
        "SphinxClient::setIDRange",
        "sphinxclient.setidrange.php",
        "Set a range of accepted document IDs"
    ],
    "SphinxClientsetIndexWeights": [
        "SphinxClient::setIndexWeights",
        "sphinxclient.setindexweights.php",
        "Set per-index weights"
    ],
    "SphinxClientsetLimits": [
        "SphinxClient::setLimits",
        "sphinxclient.setlimits.php",
        "Set offset and limit of the result set"
    ],
    "SphinxClientsetMatchMode": [
        "SphinxClient::setMatchMode",
        "sphinxclient.setmatchmode.php",
        "Set full-text query matching mode"
    ],
    "SphinxClientsetMaxQueryTime": [
        "SphinxClient::setMaxQueryTime",
        "sphinxclient.setmaxquerytime.php",
        "Set maximum query time"
    ],
    "SphinxClientsetRankingMode": [
        "SphinxClient::setRankingMode",
        "sphinxclient.setrankingmode.php",
        "Set ranking mode"
    ],
    "SphinxClientsetRetries": [
        "SphinxClient::setRetries",
        "sphinxclient.setretries.php",
        "Set retry count and delay"
    ],
    "SphinxClientsetSelect": [
        "SphinxClient::setSelect",
        "sphinxclient.setselect.php",
        "Set select clause"
    ],
    "SphinxClientsetServer": [
        "SphinxClient::setServer",
        "sphinxclient.setserver.php",
        "Set searchd host and port"
    ],
    "SphinxClientsetSortMode": [
        "SphinxClient::setSortMode",
        "sphinxclient.setsortmode.php",
        "Set matches sorting mode"
    ],
    "SphinxClientstatus": [
        "SphinxClient::status",
        "sphinxclient.status.php",
        "Queries searchd status"
    ],
    "SphinxClientupdateAttributes": [
        "SphinxClient::updateAttributes",
        "sphinxclient.updateattributes.php",
        "Update document attributes"
    ],
    "SphinxClientconstruct": [
        "SphinxClient::__construct",
        "sphinxclient.construct.php",
        "新しい SphinxClient オブジェクトを作成する"
    ],
    "SplDoublyLinkedListadd": [
        "SplDoublyLinkedList::add",
        "spldoublylinkedlist.add.php",
        "特定のインデックスに新しい値を 追加/挿入 する"
    ],
    "SplDoublyLinkedListbottom": [
        "SplDoublyLinkedList::bottom",
        "spldoublylinkedlist.bottom.php",
        "双方向リンクリストの最初のノードを取得する"
    ],
    "SplDoublyLinkedListcount": [
        "SplDoublyLinkedList::count",
        "spldoublylinkedlist.count.php",
        "双方向リンクリストの要素数を数える"
    ],
    "SplDoublyLinkedListcurrent": [
        "SplDoublyLinkedList::current",
        "spldoublylinkedlist.current.php",
        "現在の配列の要素を返す"
    ],
    "SplDoublyLinkedListgetIteratorMode": [
        "SplDoublyLinkedList::getIteratorMode",
        "spldoublylinkedlist.getiteratormode.php",
        "反復処理のモードを返す"
    ],
    "SplDoublyLinkedListisEmpty": [
        "SplDoublyLinkedList::isEmpty",
        "spldoublylinkedlist.isempty.php",
        "双方向リンクリストが空かどうかを調べる"
    ],
    "SplDoublyLinkedListkey": [
        "SplDoublyLinkedList::key",
        "spldoublylinkedlist.key.php",
        "現在のノードのインデックスを返す"
    ],
    "SplDoublyLinkedListnext": [
        "SplDoublyLinkedList::next",
        "spldoublylinkedlist.next.php",
        "次のエントリに移動する"
    ],
    "SplDoublyLinkedListoffsetExists": [
        "SplDoublyLinkedList::offsetExists",
        "spldoublylinkedlist.offsetexists.php",
        "指定した $index が存在するかどうかを返す"
    ],
    "SplDoublyLinkedListoffsetGet": [
        "SplDoublyLinkedList::offsetGet",
        "spldoublylinkedlist.offsetget.php",
        "指定した $index の値を返す"
    ],
    "SplDoublyLinkedListoffsetSet": [
        "SplDoublyLinkedList::offsetSet",
        "spldoublylinkedlist.offsetset.php",
        "指定した $index の値を $newval に設定する"
    ],
    "SplDoublyLinkedListoffsetUnset": [
        "SplDoublyLinkedList::offsetUnset",
        "spldoublylinkedlist.offsetunset.php",
        "指定した $index の値を削除する"
    ],
    "SplDoublyLinkedListpop": [
        "SplDoublyLinkedList::pop",
        "spldoublylinkedlist.pop.php",
        "双方向リンクリストの末尾からノードを取り出す"
    ],
    "SplDoublyLinkedListprev": [
        "SplDoublyLinkedList::prev",
        "spldoublylinkedlist.prev.php",
        "前のエントリに移動する"
    ],
    "SplDoublyLinkedListpush": [
        "SplDoublyLinkedList::push",
        "spldoublylinkedlist.push.php",
        "双方向リンクリストの末尾に要素を追加する"
    ],
    "SplDoublyLinkedListrewind": [
        "SplDoublyLinkedList::rewind",
        "spldoublylinkedlist.rewind.php",
        "イテレータを先頭に巻き戻す"
    ],
    "SplDoublyLinkedListserialize": [
        "SplDoublyLinkedList::serialize",
        "spldoublylinkedlist.serialize.php",
        "ストレージをシリアライズする"
    ],
    "SplDoublyLinkedListsetIteratorMode": [
        "SplDoublyLinkedList::setIteratorMode",
        "spldoublylinkedlist.setiteratormode.php",
        "反復処理のモードを設定する"
    ],
    "SplDoublyLinkedListshift": [
        "SplDoublyLinkedList::shift",
        "spldoublylinkedlist.shift.php",
        "双方向リンクリストの先頭からノードを取り出す"
    ],
    "SplDoublyLinkedListtop": [
        "SplDoublyLinkedList::top",
        "spldoublylinkedlist.top.php",
        "双方向リンクリストの最後のノードを取得する"
    ],
    "SplDoublyLinkedListunserialize": [
        "SplDoublyLinkedList::unserialize",
        "spldoublylinkedlist.unserialize.php",
        "ストレージをデシリアライズする"
    ],
    "SplDoublyLinkedListunshift": [
        "SplDoublyLinkedList::unshift",
        "spldoublylinkedlist.unshift.php",
        "双方向リンクリストの先頭に要素を追加する"
    ],
    "SplDoublyLinkedListvalid": [
        "SplDoublyLinkedList::valid",
        "spldoublylinkedlist.valid.php",
        "双方向リンクリストにまだノードがあるかどうかを調べる"
    ],
    "SplDoublyLinkedListconstruct": [
        "SplDoublyLinkedList::__construct",
        "spldoublylinkedlist.construct.php",
        "新しい双方向リンクリストを作成する"
    ],
    "SplEnumgetConstList": [
        "SplEnum::getConstList",
        "splenum.getconstlist.php",
        "すべての定数 (取り得る値) を配列で返す"
    ],
    "SplFileInfogetATime": [
        "SplFileInfo::getATime",
        "splfileinfo.getatime.php",
        "ファイルの最終アクセス時刻を取得する"
    ],
    "SplFileInfogetBasename": [
        "SplFileInfo::getBasename",
        "splfileinfo.getbasename.php",
        "ファイルのベース名を取得する"
    ],
    "SplFileInfogetCTime": [
        "SplFileInfo::getCTime",
        "splfileinfo.getctime.php",
        "inode 変更時刻を取得する"
    ],
    "SplFileInfogetExtension": [
        "SplFileInfo::getExtension",
        "splfileinfo.getextension.php",
        "ファイルの拡張子を取得する"
    ],
    "SplFileInfogetFileInfo": [
        "SplFileInfo::getFileInfo",
        "splfileinfo.getfileinfo.php",
        "ファイルの SplFileInfo オブジェクトを取得する"
    ],
    "SplFileInfogetFilename": [
        "SplFileInfo::getFilename",
        "splfileinfo.getfilename.php",
        "ファイル名を取得する"
    ],
    "SplFileInfogetGroup": [
        "SplFileInfo::getGroup",
        "splfileinfo.getgroup.php",
        "ファイルのグループを取得する"
    ],
    "SplFileInfogetInode": [
        "SplFileInfo::getInode",
        "splfileinfo.getinode.php",
        "ファイルの inode を取得する"
    ],
    "SplFileInfogetLinkTarget": [
        "SplFileInfo::getLinkTarget",
        "splfileinfo.getlinktarget.php",
        "リンク先を取得する"
    ],
    "SplFileInfogetMTime": [
        "SplFileInfo::getMTime",
        "splfileinfo.getmtime.php",
        "最終変更時刻を取得する"
    ],
    "SplFileInfogetOwner": [
        "SplFileInfo::getOwner",
        "splfileinfo.getowner.php",
        "ファイルの所有者を取得する"
    ],
    "SplFileInfogetPath": [
        "SplFileInfo::getPath",
        "splfileinfo.getpath.php",
        "ファイル名を除いたパスを取得する"
    ],
    "SplFileInfogetPathInfo": [
        "SplFileInfo::getPathInfo",
        "splfileinfo.getpathinfo.php",
        "パスの SplFileInfo オブジェクトを取得する"
    ],
    "SplFileInfogetPathname": [
        "SplFileInfo::getPathname",
        "splfileinfo.getpathname.php",
        "ファイルへのパスを取得する"
    ],
    "SplFileInfogetPerms": [
        "SplFileInfo::getPerms",
        "splfileinfo.getperms.php",
        "ファイルのパーミッションを取得する"
    ],
    "SplFileInfogetRealPath": [
        "SplFileInfo::getRealPath",
        "splfileinfo.getrealpath.php",
        "ファイルへの絶対パスを取得する"
    ],
    "SplFileInfogetSize": [
        "SplFileInfo::getSize",
        "splfileinfo.getsize.php",
        "ファイルサイズを取得する"
    ],
    "SplFileInfogetType": [
        "SplFileInfo::getType",
        "splfileinfo.gettype.php",
        "ファイルタイプを取得する"
    ],
    "SplFileInfoisDir": [
        "SplFileInfo::isDir",
        "splfileinfo.isdir.php",
        "ファイルがディレクトリかどうかを調べる"
    ],
    "SplFileInfoisExecutable": [
        "SplFileInfo::isExecutable",
        "splfileinfo.isexecutable.php",
        "ファイルが実行可能かどうかを調べる"
    ],
    "SplFileInfoisFile": [
        "SplFileInfo::isFile",
        "splfileinfo.isfile.php",
        "オブジェクトの参照先が通常のファイルであるかどうかを調べる"
    ],
    "SplFileInfoisLink": [
        "SplFileInfo::isLink",
        "splfileinfo.islink.php",
        "ファイルがリンクであるかどうかを調べる"
    ],
    "SplFileInfoisReadable": [
        "SplFileInfo::isReadable",
        "splfileinfo.isreadable.php",
        "ファイルが読み込み可能か調べる"
    ],
    "SplFileInfoisWritable": [
        "SplFileInfo::isWritable",
        "splfileinfo.iswritable.php",
        "エントリが書き込み可能であるかどうかを調べる"
    ],
    "SplFileInfoopenFile": [
        "SplFileInfo::openFile",
        "splfileinfo.openfile.php",
        "ファイルの SplFileObject オブジェクトを取得する"
    ],
    "SplFileInfosetFileClass": [
        "SplFileInfo::setFileClass",
        "splfileinfo.setfileclass.php",
        "SplFileInfo::openFile で使用するクラスを設定する"
    ],
    "SplFileInfosetInfoClass": [
        "SplFileInfo::setInfoClass",
        "splfileinfo.setinfoclass.php",
        "SplFileInfo::getFileInfo および SplFileInfo::getPathInfo で使用するクラスを設定する"
    ],
    "SplFileInfoconstruct": [
        "SplFileInfo::__construct",
        "splfileinfo.construct.php",
        "新しい SplFileInfo オブジェクトを作成する"
    ],
    "SplFileInfotoString": [
        "SplFileInfo::__toString",
        "splfileinfo.tostring.php",
        "ファイルへのパスを文字列で返す"
    ],
    "SplFileObjectcurrent": [
        "SplFileObject::current",
        "splfileobject.current.php",
        "ファイルの現在の行を取得する"
    ],
    "SplFileObjecteof": [
        "SplFileObject::eof",
        "splfileobject.eof.php",
        "ファイルの終端に到達しているか調べる"
    ],
    "SplFileObjectfflush": [
        "SplFileObject::fflush",
        "splfileobject.fflush.php",
        "出力をファイルにフラッシュする"
    ],
    "SplFileObjectfgetc": [
        "SplFileObject::fgetc",
        "splfileobject.fgetc.php",
        "ファイルから文字を取り出す"
    ],
    "SplFileObjectfgetcsv": [
        "SplFileObject::fgetcsv",
        "splfileobject.fgetcsv.php",
        "ファイルから行を取り出し CSV フィールドとして処理する"
    ],
    "SplFileObjectfgets": [
        "SplFileObject::fgets",
        "splfileobject.fgets.php",
        "ファイルから 1 行取り出す"
    ],
    "SplFileObjectfgetss": [
        "SplFileObject::fgetss",
        "splfileobject.fgetss.php",
        "ファイルから 1 行取り出し HTML タグを取り除く"
    ],
    "SplFileObjectflock": [
        "SplFileObject::flock",
        "splfileobject.flock.php",
        "簡易なファイルロックを行う"
    ],
    "SplFileObjectfpassthru": [
        "SplFileObject::fpassthru",
        "splfileobject.fpassthru.php",
        "ファイルポインタに残っているデータをすべて出力する"
    ],
    "SplFileObjectfputcsv": [
        "SplFileObject::fputcsv",
        "splfileobject.fputcsv.php",
        "フィールドの配列を CSV の行として書き出す"
    ],
    "SplFileObjectfread": [
        "SplFileObject::fread",
        "splfileobject.fread.php",
        "ファイルから読み取る"
    ],
    "SplFileObjectfscanf": [
        "SplFileObject::fscanf",
        "splfileobject.fscanf.php",
        "フォーマットに従ってファイルからの入力をパースする"
    ],
    "SplFileObjectfseek": [
        "SplFileObject::fseek",
        "splfileobject.fseek.php",
        "ファイルポインタを移動させる"
    ],
    "SplFileObjectfstat": [
        "SplFileObject::fstat",
        "splfileobject.fstat.php",
        "ファイルの情報を得る"
    ],
    "SplFileObjectftell": [
        "SplFileObject::ftell",
        "splfileobject.ftell.php",
        "ファイルポインタの現在位置を返す"
    ],
    "SplFileObjectftruncate": [
        "SplFileObject::ftruncate",
        "splfileobject.ftruncate.php",
        "ファイルを指定した長さに丸める"
    ],
    "SplFileObjectfwrite": [
        "SplFileObject::fwrite",
        "splfileobject.fwrite.php",
        "ファイルに書き込む"
    ],
    "SplFileObjectgetChildren": [
        "SplFileObject::getChildren",
        "splfileobject.getchildren.php",
        "用途はなし"
    ],
    "SplFileObjectgetCsvControl": [
        "SplFileObject::getCsvControl",
        "splfileobject.getcsvcontrol.php",
        "CSV の区切り、囲み文字、エスケープ文字を取得する"
    ],
    "SplFileObjectgetCurrentLine": [
        "SplFileObject::getCurrentLine",
        "splfileobject.getcurrentline.php",
        "SplFileObject::fgets のエイリアス"
    ],
    "SplFileObjectgetFlags": [
        "SplFileObject::getFlags",
        "splfileobject.getflags.php",
        "SplFileObject のフラグを取得する"
    ],
    "SplFileObjectgetMaxLineLen": [
        "SplFileObject::getMaxLineLen",
        "splfileobject.getmaxlinelen.php",
        "行の最大バイト数を取得する"
    ],
    "SplFileObjecthasChildren": [
        "SplFileObject::hasChildren",
        "splfileobject.haschildren.php",
        "SplFileObject は子を持ちません"
    ],
    "SplFileObjectkey": [
        "SplFileObject::key",
        "splfileobject.key.php",
        "行番号を取得する"
    ],
    "SplFileObjectnext": [
        "SplFileObject::next",
        "splfileobject.next.php",
        "次の行を読み出す"
    ],
    "SplFileObjectrewind": [
        "SplFileObject::rewind",
        "splfileobject.rewind.php",
        "ファイルポインタを先頭に巻き戻す"
    ],
    "SplFileObjectseek": [
        "SplFileObject::seek",
        "splfileobject.seek.php",
        "ファイルポインタを指定行に移動させる"
    ],
    "SplFileObjectsetCsvControl": [
        "SplFileObject::setCsvControl",
        "splfileobject.setcsvcontrol.php",
        "CSV の区切り文字、囲み文字、エスケープ文字をセットする"
    ],
    "SplFileObjectsetFlags": [
        "SplFileObject::setFlags",
        "splfileobject.setflags.php",
        "SplFileObject のフラグをセットする"
    ],
    "SplFileObjectsetMaxLineLen": [
        "SplFileObject::setMaxLineLen",
        "splfileobject.setmaxlinelen.php",
        "読み込む行の最大バイト数をセットする"
    ],
    "SplFileObjectvalid": [
        "SplFileObject::valid",
        "splfileobject.valid.php",
        "ファイル終端でないかチェックする"
    ],
    "SplFileObjectconstruct": [
        "SplFileObject::__construct",
        "splfileobject.construct.php",
        "新しいファイルオブジェクトを作成する"
    ],
    "SplFileObjecttoString": [
        "SplFileObject::__toString",
        "splfileobject.tostring.php",
        "SplFileObject::fgets のエイリアス"
    ],
    "SplFixedArraycount": [
        "SplFixedArray::count",
        "splfixedarray.count.php",
        "配列のサイズを返す"
    ],
    "SplFixedArraycurrent": [
        "SplFixedArray::current",
        "splfixedarray.current.php",
        "現在の配列の要素を返す"
    ],
    "SplFixedArrayfromArray": [
        "SplFixedArray::fromArray",
        "splfixedarray.fromarray.php",
        "PHP の配列を SplFixedArray インスタンスにインポートする"
    ],
    "SplFixedArraygetSize": [
        "SplFixedArray::getSize",
        "splfixedarray.getsize.php",
        "配列のサイズを取得する"
    ],
    "SplFixedArraykey": [
        "SplFixedArray::key",
        "splfixedarray.key.php",
        "現在の配列の添字を返す"
    ],
    "SplFixedArraynext": [
        "SplFixedArray::next",
        "splfixedarray.next.php",
        "次のエントリに進む"
    ],
    "SplFixedArrayoffsetExists": [
        "SplFixedArray::offsetExists",
        "splfixedarray.offsetexists.php",
        "指定した添字が存在するかどうかを返す"
    ],
    "SplFixedArrayoffsetGet": [
        "SplFixedArray::offsetGet",
        "splfixedarray.offsetget.php",
        "指定した添字の値を返す"
    ],
    "SplFixedArrayoffsetSet": [
        "SplFixedArray::offsetSet",
        "splfixedarray.offsetset.php",
        "指定した添字の新しい値を設定する"
    ],
    "SplFixedArrayoffsetUnset": [
        "SplFixedArray::offsetUnset",
        "splfixedarray.offsetunset.php",
        "指定した添字の値を消去する"
    ],
    "SplFixedArrayrewind": [
        "SplFixedArray::rewind",
        "splfixedarray.rewind.php",
        "イテレータを先頭に巻き戻す"
    ],
    "SplFixedArraysetSize": [
        "SplFixedArray::setSize",
        "splfixedarray.setsize.php",
        "配列のサイズを変更する"
    ],
    "SplFixedArraytoArray": [
        "SplFixedArray::toArray",
        "splfixedarray.toarray.php",
        "固定長配列から PHP の配列を返す"
    ],
    "SplFixedArrayvalid": [
        "SplFixedArray::valid",
        "splfixedarray.valid.php",
        "配列にまだ要素があるかどうかを調べる"
    ],
    "SplFixedArrayconstruct": [
        "SplFixedArray::__construct",
        "splfixedarray.construct.php",
        "新しい固定長配列を作成する"
    ],
    "SplFixedArraywakeup": [
        "SplFixedArray::__wakeup",
        "splfixedarray.wakeup.php",
        "アンシリアライズ後に配列を再初期化する"
    ],
    "SplHeapcompare": [
        "SplHeap::compare",
        "splheap.compare.php",
        "要素を比較し、ヒープ内の適切な位置に置く"
    ],
    "SplHeapcount": [
        "SplHeap::count",
        "splheap.count.php",
        "ヒープ内の要素数を数える"
    ],
    "SplHeapcurrent": [
        "SplHeap::current",
        "splheap.current.php",
        "イテレータが指す現在のノードを返す"
    ],
    "SplHeapextract": [
        "SplHeap::extract",
        "splheap.extract.php",
        "ヒープの先頭からノードを取り出す"
    ],
    "SplHeapinsert": [
        "SplHeap::insert",
        "splheap.insert.php",
        "ヒープに要素を挿入する"
    ],
    "SplHeapisCorrupted": [
        "SplHeap::isCorrupted",
        "splheap.iscorrupted.php",
        "ヒープが壊れているかを調べる"
    ],
    "SplHeapisEmpty": [
        "SplHeap::isEmpty",
        "splheap.isempty.php",
        "ヒープが空かどうかを調べる"
    ],
    "SplHeapkey": [
        "SplHeap::key",
        "splheap.key.php",
        "現在のノードのインデックスを返す"
    ],
    "SplHeapnext": [
        "SplHeap::next",
        "splheap.next.php",
        "次のノードに移動する"
    ],
    "SplHeaprecoverFromCorruption": [
        "SplHeap::recoverFromCorruption",
        "splheap.recoverfromcorruption.php",
        "破壊されたヒープを復旧し、それ以降の操作をできるようにする"
    ],
    "SplHeaprewind": [
        "SplHeap::rewind",
        "splheap.rewind.php",
        "イテレータを先頭に巻き戻す (何もしない)"
    ],
    "SplHeaptop": [
        "SplHeap::top",
        "splheap.top.php",
        "ヒープの先頭のノードを取り出す"
    ],
    "SplHeapvalid": [
        "SplHeap::valid",
        "splheap.valid.php",
        "ヒープにまだノードがあるかどうかを調べる"
    ],
    "SplHeapconstruct": [
        "SplHeap::__construct",
        "splheap.construct.php",
        "新しい空のヒープを作成する"
    ],
    "split": [
        "split",
        "function.split.php",
        "正規表現により文字列を分割し、配列に格納する"
    ],
    "spliti": [
        "spliti",
        "function.spliti.php",
        "大文字小文字を区別しない正規表現により文字列を分割し、配列に格納する"
    ],
    "SplMaxHeapcompare": [
        "SplMaxHeap::compare",
        "splmaxheap.compare.php",
        "要素を比較し、ヒープ内の適切な位置に置く"
    ],
    "SplMinHeapcompare": [
        "SplMinHeap::compare",
        "splminheap.compare.php",
        "要素を比較し、ヒープ内の適切な位置に置く"
    ],
    "SplObjectStorageaddAll": [
        "SplObjectStorage::addAll",
        "splobjectstorage.addall.php",
        "別のストレージからすべてのオブジェクトを追加する"
    ],
    "SplObjectStorageattach": [
        "SplObjectStorage::attach",
        "splobjectstorage.attach.php",
        "オブジェクトをストレージに追加する"
    ],
    "SplObjectStoragecontains": [
        "SplObjectStorage::contains",
        "splobjectstorage.contains.php",
        "ストレージに特定のオブジェクトが含まれるかどうかを調べる"
    ],
    "SplObjectStoragecount": [
        "SplObjectStorage::count",
        "splobjectstorage.count.php",
        "ストレージ内のオブジェクトの数を返す"
    ],
    "SplObjectStoragecurrent": [
        "SplObjectStorage::current",
        "splobjectstorage.current.php",
        "現在のストレージの要素を返す"
    ],
    "SplObjectStoragedetach": [
        "SplObjectStorage::detach",
        "splobjectstorage.detach.php",
        "オブジェクトをストレージから取り除く"
    ],
    "SplObjectStoragegetHash": [
        "SplObjectStorage::getHash",
        "splobjectstorage.gethash.php",
        "中に含むオブジェクトの一意な識別子を算出する"
    ],
    "SplObjectStoragegetInfo": [
        "SplObjectStorage::getInfo",
        "splobjectstorage.getinfo.php",
        "イテレータの現在のエントリに関連づけられたデータを返す"
    ],
    "SplObjectStoragekey": [
        "SplObjectStorage::key",
        "splobjectstorage.key.php",
        "イテレータの現在位置を返す"
    ],
    "SplObjectStoragenext": [
        "SplObjectStorage::next",
        "splobjectstorage.next.php",
        "次のエントリに移動する"
    ],
    "SplObjectStorageoffsetExists": [
        "SplObjectStorage::offsetExists",
        "splobjectstorage.offsetexists.php",
        "オブジェクトがストレージ内に存在するかどうかを調べる"
    ],
    "SplObjectStorageoffsetGet": [
        "SplObjectStorage::offsetGet",
        "splobjectstorage.offsetget.php",
        "オブジェクトに関連づけられたデータを返す"
    ],
    "SplObjectStorageoffsetSet": [
        "SplObjectStorage::offsetSet",
        "splobjectstorage.offsetset.php",
        "ストレージ内のオブジェクトにデータを関連づける"
    ],
    "SplObjectStorageoffsetUnset": [
        "SplObjectStorage::offsetUnset",
        "splobjectstorage.offsetunset.php",
        "ストレージからオブジェクトを取り除く"
    ],
    "SplObjectStorageremoveAll": [
        "SplObjectStorage::removeAll",
        "splobjectstorage.removeall.php",
        "別のストレージに含まれているオブジェクトを現在のストレージから取り除く"
    ],
    "SplObjectStorageremoveAllExcept": [
        "SplObjectStorage::removeAllExcept",
        "splobjectstorage.removeallexcept.php",
        "別のストレージに含まれているもの以外のすべてのオブジェクトを現在のストレージから取り除く"
    ],
    "SplObjectStoragerewind": [
        "SplObjectStorage::rewind",
        "splobjectstorage.rewind.php",
        "イテレータをストレージの最初の要素に巻き戻す"
    ],
    "SplObjectStorageserialize": [
        "SplObjectStorage::serialize",
        "splobjectstorage.serialize.php",
        "ストレージをシリアライズする"
    ],
    "SplObjectStoragesetInfo": [
        "SplObjectStorage::setInfo",
        "splobjectstorage.setinfo.php",
        "イテレータの現在のエントリに関連づけるデータを設定する"
    ],
    "SplObjectStorageunserialize": [
        "SplObjectStorage::unserialize",
        "splobjectstorage.unserialize.php",
        "ストレージの文字列表現をアンシリアライズする"
    ],
    "SplObjectStoragevalid": [
        "SplObjectStorage::valid",
        "splobjectstorage.valid.php",
        "イテレータの現在のエントリが有効かどうかを返す"
    ],
    "SplObserverupdate": [
        "SplObserver::update",
        "splobserver.update.php",
        "subject の更新を受信する"
    ],
    "SplPriorityQueuecompare": [
        "SplPriorityQueue::compare",
        "splpriorityqueue.compare.php",
        "要素の優先順位を比較し、ヒープ内の適切な位置に置く"
    ],
    "SplPriorityQueuecount": [
        "SplPriorityQueue::count",
        "splpriorityqueue.count.php",
        "キュー内の要素数を数える"
    ],
    "SplPriorityQueuecurrent": [
        "SplPriorityQueue::current",
        "splpriorityqueue.current.php",
        "イテレータが指す現在のノードを返す"
    ],
    "SplPriorityQueueextract": [
        "SplPriorityQueue::extract",
        "splpriorityqueue.extract.php",
        "ヒープの先頭からノードを取り出す"
    ],
    "SplPriorityQueuegetExtractFlags": [
        "SplPriorityQueue::getExtractFlags",
        "splpriorityqueue.getextractflags.php",
        "展開する時のフラグを取得する"
    ],
    "SplPriorityQueueinsert": [
        "SplPriorityQueue::insert",
        "splpriorityqueue.insert.php",
        "キューに要素を挿入する"
    ],
    "SplPriorityQueueisCorrupted": [
        "SplPriorityQueue::isCorrupted",
        "splpriorityqueue.iscorrupted.php",
        "優先度付きキューが壊れているかを調べる"
    ],
    "SplPriorityQueueisEmpty": [
        "SplPriorityQueue::isEmpty",
        "splpriorityqueue.isempty.php",
        "キューが空かどうかを調べる"
    ],
    "SplPriorityQueuekey": [
        "SplPriorityQueue::key",
        "splpriorityqueue.key.php",
        "現在のノードのインデックスを返す"
    ],
    "SplPriorityQueuenext": [
        "SplPriorityQueue::next",
        "splpriorityqueue.next.php",
        "次のノードに移動する"
    ],
    "SplPriorityQueuerecoverFromCorruption": [
        "SplPriorityQueue::recoverFromCorruption",
        "splpriorityqueue.recoverfromcorruption.php",
        "破壊されたキューを復旧し、それ以降の操作をできるようにする"
    ],
    "SplPriorityQueuerewind": [
        "SplPriorityQueue::rewind",
        "splpriorityqueue.rewind.php",
        "イテレータを先頭に巻き戻す (何もしない)"
    ],
    "SplPriorityQueuesetExtractFlags": [
        "SplPriorityQueue::setExtractFlags",
        "splpriorityqueue.setextractflags.php",
        "取り出しモードを設定する"
    ],
    "SplPriorityQueuetop": [
        "SplPriorityQueue::top",
        "splpriorityqueue.top.php",
        "キューの先頭のノードを取り出す"
    ],
    "SplPriorityQueuevalid": [
        "SplPriorityQueue::valid",
        "splpriorityqueue.valid.php",
        "キューにまだノードがあるかどうかを調べる"
    ],
    "SplPriorityQueueconstruct": [
        "SplPriorityQueue::__construct",
        "splpriorityqueue.construct.php",
        "新しい空のキューを作成する"
    ],
    "SplQueuedequeue": [
        "SplQueue::dequeue",
        "splqueue.dequeue.php",
        "キューからノードを取り出す"
    ],
    "SplQueueenqueue": [
        "SplQueue::enqueue",
        "splqueue.enqueue.php",
        "要素をキューに追加する"
    ],
    "SplQueuesetIteratorMode": [
        "SplQueue::setIteratorMode",
        "splqueue.setiteratormode.php",
        "反復処理のモードを設定する"
    ],
    "SplQueueconstruct": [
        "SplQueue::__construct",
        "splqueue.construct.php",
        "双方向リンクリストを使用して実装した新しい空のキューを作成する"
    ],
    "SplStacksetIteratorMode": [
        "SplStack::setIteratorMode",
        "splstack.setiteratormode.php",
        "反復処理のモードを設定する"
    ],
    "SplStackconstruct": [
        "SplStack::__construct",
        "splstack.construct.php",
        "双方向リンクリストを使用して実装した新しい空のスタックを作成する"
    ],
    "SplSubjectattach": [
        "SplSubject::attach",
        "splsubject.attach.php",
        "SplObserver をアタッチする"
    ],
    "SplSubjectdetach": [
        "SplSubject::detach",
        "splsubject.detach.php",
        "observer をデタッチする"
    ],
    "SplSubjectnotify": [
        "SplSubject::notify",
        "splsubject.notify.php",
        "observer に通知する"
    ],
    "SplTempFileObjectconstruct": [
        "SplTempFileObject::__construct",
        "spltempfileobject.construct.php",
        "新しい一時ファイルオブジェクトを作成する"
    ],
    "SplTypeconstruct": [
        "SplType::__construct",
        "spltype.construct.php",
        "何らかの型の新しい値を作成する"
    ],
    "splautoload": [
        "spl_autoload",
        "function.spl-autoload.php",
        "__autoload() のデフォルト実装"
    ],
    "splautoloadcall": [
        "spl_autoload_call",
        "function.spl-autoload-call.php",
        "要求されたクラスを読み込むために、すべての登録済みの __autoload() 関数を試す"
    ],
    "splautoloadextensions": [
        "spl_autoload_extensions",
        "function.spl-autoload-extensions.php",
        "spl_autoload 用のデフォルトの拡張子を登録し、それを返す"
    ],
    "splautoloadfunctions": [
        "spl_autoload_functions",
        "function.spl-autoload-functions.php",
        "すべての登録済み __autoload() 関数を返す"
    ],
    "splautoloadregister": [
        "spl_autoload_register",
        "function.spl-autoload-register.php",
        "指定した関数を __autoload() の実装として登録する"
    ],
    "splautoloadunregister": [
        "spl_autoload_unregister",
        "function.spl-autoload-unregister.php",
        "指定した関数の、__autoload() の実装としての登録を解除する"
    ],
    "splclasses": [
        "spl_classes",
        "function.spl-classes.php",
        "利用可能な SPL クラスを返す"
    ],
    "splobjecthash": [
        "spl_object_hash",
        "function.spl-object-hash.php",
        "指定したオブジェクトのハッシュ ID を返す"
    ],
    "splobjectid": [
        "spl_object_id",
        "function.spl-object-id.php",
        "与えられたオブジェクトを扱う数値オブジェクトを返す"
    ],
    "SpoofcheckerareConfusable": [
        "Spoofchecker::areConfusable",
        "spoofchecker.areconfusable.php",
        "Checks if given strings can be confused"
    ],
    "SpoofcheckerisSuspicious": [
        "Spoofchecker::isSuspicious",
        "spoofchecker.issuspicious.php",
        "Checks if a given text contains any suspicious characters"
    ],
    "SpoofcheckersetAllowedLocales": [
        "Spoofchecker::setAllowedLocales",
        "spoofchecker.setallowedlocales.php",
        "チェック時に使うロケールを設定する"
    ],
    "SpoofcheckersetChecks": [
        "Spoofchecker::setChecks",
        "spoofchecker.setchecks.php",
        "実行するチェックを設定する"
    ],
    "Spoofcheckerconstruct": [
        "Spoofchecker::__construct",
        "spoofchecker.construct.php",
        "Constructor"
    ],
    "sprintf": [
        "sprintf",
        "function.sprintf.php",
        "フォーマットされた文字列を返す"
    ],
    "SQLite3backup": [
        "SQLite3::backup",
        "sqlite3.backup.php",
        "あるデータベースを、別のデータベースにバックアップする"
    ],
    "SQLite3busyTimeout": [
        "SQLite3::busyTimeout",
        "sqlite3.busytimeout.php",
        "接続がビジー状態のときのハンドラを設定する"
    ],
    "SQLite3changes": [
        "SQLite3::changes",
        "sqlite3.changes.php",
        "直近の SQL 文で変更 (あるいは挿入、削除) された行の数を返す"
    ],
    "SQLite3close": [
        "SQLite3::close",
        "sqlite3.close.php",
        "データベースとの接続を閉じる"
    ],
    "SQLite3createAggregate": [
        "SQLite3::createAggregate",
        "sqlite3.createaggregate.php",
        "SQL の集約関数として使用する PHP 関数を登録する"
    ],
    "SQLite3createCollation": [
        "SQLite3::createCollation",
        "sqlite3.createcollation.php",
        "SQLのcollate関数として使うPHP関数を登録する"
    ],
    "SQLite3createFunction": [
        "SQLite3::createFunction",
        "sqlite3.createfunction.php",
        "SQL のスカラー関数として使用する PHP 関数を登録する"
    ],
    "SQLite3enableExceptions": [
        "SQLite3::enableExceptions",
        "sqlite3.enableexceptions.php",
        "例外のスローを有効にする"
    ],
    "SQLite3escapeString": [
        "SQLite3::escapeString",
        "sqlite3.escapestring.php",
        "適切にエスケープされた文字列を返す"
    ],
    "SQLite3exec": [
        "SQLite3::exec",
        "sqlite3.exec.php",
        "指定したデータベースに、結果を返さないクエリを実行する"
    ],
    "SQLite3lastErrorCode": [
        "SQLite3::lastErrorCode",
        "sqlite3.lasterrorcode.php",
        "直近で失敗した SQLite リクエストの結果コードを数値で返す"
    ],
    "SQLite3lastErrorMsg": [
        "SQLite3::lastErrorMsg",
        "sqlite3.lasterrormsg.php",
        "直近で失敗した SQLite リクエストについての英文テキストの説明を返す"
    ],
    "SQLite3lastInsertRowID": [
        "SQLite3::lastInsertRowID",
        "sqlite3.lastinsertrowid.php",
        "直近の INSERT 文でデータベースに追加された行の ID を返す"
    ],
    "SQLite3loadExtension": [
        "SQLite3::loadExtension",
        "sqlite3.loadextension.php",
        "SQLite 拡張ライブラリを読み込む"
    ],
    "SQLite3open": [
        "SQLite3::open",
        "sqlite3.open.php",
        "SQLite データベースをオープンする"
    ],
    "SQLite3openBlob": [
        "SQLite3::openBlob",
        "sqlite3.openblob.php",
        "BLOG を読み取るためのストリームリソースを開く"
    ],
    "SQLite3prepare": [
        "SQLite3::prepare",
        "sqlite3.prepare.php",
        "実行する SQL 文を準備する"
    ],
    "SQLite3query": [
        "SQLite3::query",
        "sqlite3.query.php",
        "SQL クエリを実行する"
    ],
    "SQLite3querySingle": [
        "SQLite3::querySingle",
        "sqlite3.querysingle.php",
        "クエリを実行し、単一の結果を返す"
    ],
    "SQLite3setAuthorizer": [
        "SQLite3::setAuthorizer",
        "sqlite3.setauthorizer.php",
        "SQL文が出来ることを限定するため、authorizer として使われるコールバックを設定する"
    ],
    "SQLite3version": [
        "SQLite3::version",
        "sqlite3.version.php",
        "SQLite3 ライブラリのバージョンを、文字列定数と数値で返す"
    ],
    "SQLite3construct": [
        "SQLite3::__construct",
        "sqlite3.construct.php",
        "SQLite3 オブジェクトを作成し、SQLite 3 データベースをオープンする"
    ],
    "SQLite3ResultcolumnName": [
        "SQLite3Result::columnName",
        "sqlite3result.columnname.php",
        "n 番目のカラムの名前を返す"
    ],
    "SQLite3ResultcolumnType": [
        "SQLite3Result::columnType",
        "sqlite3result.columntype.php",
        "n 番目のカラムの型を返す"
    ],
    "SQLite3ResultfetchArray": [
        "SQLite3Result::fetchArray",
        "sqlite3result.fetcharray.php",
        "結果の行を、連想配列あるいは数値添字配列あるいはその両方で取得する"
    ],
    "SQLite3Resultfinalize": [
        "SQLite3Result::finalize",
        "sqlite3result.finalize.php",
        "結果セットを閉じる"
    ],
    "SQLite3ResultnumColumns": [
        "SQLite3Result::numColumns",
        "sqlite3result.numcolumns.php",
        "結果セットのカラム数を返す"
    ],
    "SQLite3Resultreset": [
        "SQLite3Result::reset",
        "sqlite3result.reset.php",
        "結果セットを最初の行に戻す"
    ],
    "SQLite3StmtbindParam": [
        "SQLite3Stmt::bindParam",
        "sqlite3stmt.bindparam.php",
        "パラメータを変数にバインドする"
    ],
    "SQLite3StmtbindValue": [
        "SQLite3Stmt::bindValue",
        "sqlite3stmt.bindvalue.php",
        "パラメータの値を変数にバインドする"
    ],
    "SQLite3Stmtclear": [
        "SQLite3Stmt::clear",
        "sqlite3stmt.clear.php",
        "現在バインドされているすべてのパラメータをクリアする"
    ],
    "SQLite3Stmtclose": [
        "SQLite3Stmt::close",
        "sqlite3stmt.close.php",
        "プリペアドステートメントを閉じる"
    ],
    "SQLite3Stmtexecute": [
        "SQLite3Stmt::execute",
        "sqlite3stmt.execute.php",
        "プリペアドステートメントを実行し、結果セットオブジェクトを返す"
    ],
    "SQLite3StmtgetSQL": [
        "SQLite3Stmt::getSQL",
        "sqlite3stmt.getsql.php",
        "ステートメントのSQLを取得する"
    ],
    "SQLite3StmtparamCount": [
        "SQLite3Stmt::paramCount",
        "sqlite3stmt.paramcount.php",
        "プリペアドステートメント内のパラメータの数を返す"
    ],
    "SQLite3StmtreadOnly": [
        "SQLite3Stmt::readOnly",
        "sqlite3stmt.readonly.php",
        "ステートメントが読み取り専用かどうかを返す"
    ],
    "SQLite3Stmtreset": [
        "SQLite3Stmt::reset",
        "sqlite3stmt.reset.php",
        "プリペアドステートメントをリセットする"
    ],
    "sqlsrvbegintransaction": [
        "sqlsrv_begin_transaction",
        "function.sqlsrv-begin-transaction.php",
        "Begins a database transaction"
    ],
    "sqlsrvcancel": [
        "sqlsrv_cancel",
        "function.sqlsrv-cancel.php",
        "Cancels a statement"
    ],
    "sqlsrvclientinfo": [
        "sqlsrv_client_info",
        "function.sqlsrv-client-info.php",
        "Returns information about the client and specified connection"
    ],
    "sqlsrvclose": [
        "sqlsrv_close",
        "function.sqlsrv-close.php",
        "Closes an open connection and releases resourses associated with the connection"
    ],
    "sqlsrvcommit": [
        "sqlsrv_commit",
        "function.sqlsrv-commit.php",
        "Commits a transaction that was begun with sqlsrv_begin_transaction"
    ],
    "sqlsrvconfigure": [
        "sqlsrv_configure",
        "function.sqlsrv-configure.php",
        "Changes the driver error handling and logging configurations"
    ],
    "sqlsrvconnect": [
        "sqlsrv_connect",
        "function.sqlsrv-connect.php",
        "Opens a connection to a Microsoft SQL Server database"
    ],
    "sqlsrverrors": [
        "sqlsrv_errors",
        "function.sqlsrv-errors.php",
        "Returns error and warning information about the last SQLSRV operation performed"
    ],
    "sqlsrvexecute": [
        "sqlsrv_execute",
        "function.sqlsrv-execute.php",
        "Executes a statement prepared with sqlsrv_prepare"
    ],
    "sqlsrvfetch": [
        "sqlsrv_fetch",
        "function.sqlsrv-fetch.php",
        "Makes the next row in a result set available for reading"
    ],
    "sqlsrvfetcharray": [
        "sqlsrv_fetch_array",
        "function.sqlsrv-fetch-array.php",
        "行を配列として返す"
    ],
    "sqlsrvfetchobject": [
        "sqlsrv_fetch_object",
        "function.sqlsrv-fetch-object.php",
        "Retrieves the next row of data in a result set as an object"
    ],
    "sqlsrvfreestmt": [
        "sqlsrv_free_stmt",
        "function.sqlsrv-free-stmt.php",
        "Frees all resources for the specified statement"
    ],
    "sqlsrvgetconfig": [
        "sqlsrv_get_config",
        "function.sqlsrv-get-config.php",
        "Returns the value of the specified configuration setting"
    ],
    "sqlsrvgetfield": [
        "sqlsrv_get_field",
        "function.sqlsrv-get-field.php",
        "Gets field data from the currently selected row"
    ],
    "sqlsrvhasrows": [
        "sqlsrv_has_rows",
        "function.sqlsrv-has-rows.php",
        "Indicates whether the specified statement has rows"
    ],
    "sqlsrvnextresult": [
        "sqlsrv_next_result",
        "function.sqlsrv-next-result.php",
        "Makes the next result of the specified statement active"
    ],
    "sqlsrvnumfields": [
        "sqlsrv_num_fields",
        "function.sqlsrv-num-fields.php",
        "Retrieves the number of fields (columns) on a statement"
    ],
    "sqlsrvnumrows": [
        "sqlsrv_num_rows",
        "function.sqlsrv-num-rows.php",
        "Retrieves the number of rows in a result set"
    ],
    "sqlsrvprepare": [
        "sqlsrv_prepare",
        "function.sqlsrv-prepare.php",
        "Prepares a query for execution"
    ],
    "sqlsrvquery": [
        "sqlsrv_query",
        "function.sqlsrv-query.php",
        "Prepares and executes a query"
    ],
    "sqlsrvsendstreamdata": [
        "sqlsrv_send_stream_data",
        "function.sqlsrv-send-stream-data.php",
        "Sends data from parameter streams to the server"
    ],
    "sqlsrvserverinfo": [
        "sqlsrv_server_info",
        "function.sqlsrv-server-info.php",
        "Returns information about the server"
    ],
    "SqlStatementbind": [
        "SqlStatement::bind",
        "mysql-xdevapi-sqlstatement.bind.php",
        "ステートメントのパラメータをバインドする"
    ],
    "SqlStatementexecute": [
        "SqlStatement::execute",
        "mysql-xdevapi-sqlstatement.execute.php",
        "操作を実行する"
    ],
    "SqlStatementgetNextResult": [
        "SqlStatement::getNextResult",
        "mysql-xdevapi-sqlstatement.getnextresult.php",
        "次の結果を取得する"
    ],
    "SqlStatementgetResult": [
        "SqlStatement::getResult",
        "mysql-xdevapi-sqlstatement.getresult.php",
        "結果を取得する"
    ],
    "SqlStatementhasMoreResults": [
        "SqlStatement::hasMoreResults",
        "mysql-xdevapi-sqlstatement.hasmoreresults.php",
        "さらに結果があるかを調べる"
    ],
    "SqlStatementconstruct": [
        "SqlStatement::__construct",
        "mysql-xdevapi-sqlstatement.construct.php",
        "SqlStatement のコンストラクタ"
    ],
    "SqlStatementResultfetchAll": [
        "SqlStatementResult::fetchAll",
        "mysql-xdevapi-sqlstatementresult.fetchall.php",
        "結果セットから全行取得する"
    ],
    "SqlStatementResultfetchOne": [
        "SqlStatementResult::fetchOne",
        "mysql-xdevapi-sqlstatementresult.fetchone.php",
        "単一の行を取得する"
    ],
    "SqlStatementResultgetAffectedItemsCount": [
        "SqlStatementResult::getAffectedItemsCount",
        "mysql-xdevapi-sqlstatementresult.getaffecteditemscount.php",
        "影響を受けた行数を取得する"
    ],
    "SqlStatementResultgetColumnNames": [
        "SqlStatementResult::getColumnNames",
        "mysql-xdevapi-sqlstatementresult.getcolumnnames.php",
        "カラム名を取得する"
    ],
    "SqlStatementResultgetColumns": [
        "SqlStatementResult::getColumns",
        "mysql-xdevapi-sqlstatementresult.getcolumns.php",
        "カラムを取得する"
    ],
    "SqlStatementResultgetColumnsCount": [
        "SqlStatementResult::getColumnsCount",
        "mysql-xdevapi-sqlstatementresult.getcolumncount.php",
        "カラムの数を取得する"
    ],
    "SqlStatementResultgetGeneratedIds": [
        "SqlStatementResult::getGeneratedIds",
        "mysql-xdevapi-sqlstatementresult.getgeneratedids.php",
        "生成された id を取得する"
    ],
    "SqlStatementResultgetLastInsertId": [
        "SqlStatementResult::getLastInsertId",
        "mysql-xdevapi-sqlstatementresult.getlastinsertid.php",
        "最後に挿入されたidを取得する"
    ],
    "SqlStatementResultgetWarnings": [
        "SqlStatementResult::getWarnings",
        "mysql-xdevapi-sqlstatementresult.getwarnings.php",
        "直近の操作から発生した警告を取得する"
    ],
    "SqlStatementResultgetWarningsCount": [
        "SqlStatementResult::getWarningsCount",
        "mysql-xdevapi-sqlstatementresult.getwarningcount.php",
        "直近の操作で発生した警告の数を取得する"
    ],
    "SqlStatementResulthasData": [
        "SqlStatementResult::hasData",
        "mysql-xdevapi-sqlstatementresult.hasdata.php",
        "結果がデータを持っているかを調べる"
    ],
    "SqlStatementResultnextResult": [
        "SqlStatementResult::nextResult",
        "mysql-xdevapi-sqlstatementresult.nextresult.php",
        "次の結果を取得する"
    ],
    "SqlStatementResultconstruct": [
        "SqlStatementResult::__construct",
        "mysql-xdevapi-sqlstatementresult.construct.php",
        "SqlStatementResult のコンストラクタ"
    ],
    "sqlregcase": [
        "sql_regcase",
        "function.sql-regcase.php",
        "大文字小文字を区別しないマッチングのための正規表現を作成する"
    ],
    "sqrt": [
        "sqrt",
        "function.sqrt.php",
        "平方根"
    ],
    "srand": [
        "srand",
        "function.srand.php",
        "乱数生成器を初期化する"
    ],
    "sscanf": [
        "sscanf",
        "function.sscanf.php",
        "フォーマット文字列に基づき入力を処理する"
    ],
    "ssdeepfuzzycompare": [
        "ssdeep_fuzzy_compare",
        "function.ssdeep-fuzzy-compare.php",
        "Calculates the match score between two fuzzy hash signatures"
    ],
    "ssdeepfuzzyhash": [
        "ssdeep_fuzzy_hash",
        "function.ssdeep-fuzzy-hash.php",
        "Create a fuzzy hash from a string"
    ],
    "ssdeepfuzzyhashfilename": [
        "ssdeep_fuzzy_hash_filename",
        "function.ssdeep-fuzzy-hash-filename.php",
        "Create a fuzzy hash from a file"
    ],
    "ssh2": [
        "ssh2://",
        "wrappers.ssh2.php",
        "Secure Shell 2"
    ],
    "ssh2authagent": [
        "ssh2_auth_agent",
        "function.ssh2-auth-agent.php",
        "SSH の認証を、ssh agent を使って行う"
    ],
    "ssh2authhostbasedfile": [
        "ssh2_auth_hostbased_file",
        "function.ssh2-auth-hostbased-file.php",
        "ホスト公開鍵を使用して認証を行う"
    ],
    "ssh2authnone": [
        "ssh2_auth_none",
        "function.ssh2-auth-none.php",
        "&quot;none&quot; として認証する"
    ],
    "ssh2authpassword": [
        "ssh2_auth_password",
        "function.ssh2-auth-password.php",
        "SSH 上でプレーンなパスワードを使用した認証を行う"
    ],
    "ssh2authpubkeyfile": [
        "ssh2_auth_pubkey_file",
        "function.ssh2-auth-pubkey-file.php",
        "公開鍵を使用した認証を行う"
    ],
    "ssh2connect": [
        "ssh2_connect",
        "function.ssh2-connect.php",
        "SSH サーバーに接続する"
    ],
    "ssh2disconnect": [
        "ssh2_disconnect",
        "function.ssh2-disconnect.php",
        "Close a connection to a remote SSH server"
    ],
    "ssh2exec": [
        "ssh2_exec",
        "function.ssh2-exec.php",
        "リモートサーバー上でコマンドを実行する"
    ],
    "ssh2fetchstream": [
        "ssh2_fetch_stream",
        "function.ssh2-fetch-stream.php",
        "拡張データストリームを取得する"
    ],
    "ssh2fingerprint": [
        "ssh2_fingerprint",
        "function.ssh2-fingerprint.php",
        "リモートサーバーのフィンガープリントを処理する"
    ],
    "ssh2methodsnegotiated": [
        "ssh2_methods_negotiated",
        "function.ssh2-methods-negotiated.php",
        "ネゴシエートされたメソッドのリストを返す"
    ],
    "ssh2publickeyadd": [
        "ssh2_publickey_add",
        "function.ssh2-publickey-add.php",
        "認証済み公開鍵を追加する"
    ],
    "ssh2publickeyinit": [
        "ssh2_publickey_init",
        "function.ssh2-publickey-init.php",
        "公開鍵サブシステムを初期化する"
    ],
    "ssh2publickeylist": [
        "ssh2_publickey_list",
        "function.ssh2-publickey-list.php",
        "現在認証済みの公開鍵の一覧を表示する"
    ],
    "ssh2publickeyremove": [
        "ssh2_publickey_remove",
        "function.ssh2-publickey-remove.php",
        "認証済み公開鍵を取り除く"
    ],
    "ssh2scprecv": [
        "ssh2_scp_recv",
        "function.ssh2-scp-recv.php",
        "SCP 経由でファイルを要求する"
    ],
    "ssh2scpsend": [
        "ssh2_scp_send",
        "function.ssh2-scp-send.php",
        "SCP 経由でファイルを送信する"
    ],
    "ssh2sftp": [
        "ssh2_sftp",
        "function.ssh2-sftp.php",
        "SFTP サブシステムを初期化する"
    ],
    "ssh2sftpchmod": [
        "ssh2_sftp_chmod",
        "function.ssh2-sftp-chmod.php",
        "ファイルのモードを変更する"
    ],
    "ssh2sftplstat": [
        "ssh2_sftp_lstat",
        "function.ssh2-sftp-lstat.php",
        "シンボリックリンクの情報を取得する"
    ],
    "ssh2sftpmkdir": [
        "ssh2_sftp_mkdir",
        "function.ssh2-sftp-mkdir.php",
        "ディレクトリを作成する"
    ],
    "ssh2sftpreadlink": [
        "ssh2_sftp_readlink",
        "function.ssh2-sftp-readlink.php",
        "シンボリックリンクのターゲットを返す"
    ],
    "ssh2sftprealpath": [
        "ssh2_sftp_realpath",
        "function.ssh2-sftp-realpath.php",
        "指定されたパス文字列の実パスを解決する"
    ],
    "ssh2sftprename": [
        "ssh2_sftp_rename",
        "function.ssh2-sftp-rename.php",
        "リモートファイルを改名する"
    ],
    "ssh2sftprmdir": [
        "ssh2_sftp_rmdir",
        "function.ssh2-sftp-rmdir.php",
        "ディレクトリを削除する"
    ],
    "ssh2sftpstat": [
        "ssh2_sftp_stat",
        "function.ssh2-sftp-stat.php",
        "リモートファイルシステム上のファイルの情報を取得する"
    ],
    "ssh2sftpsymlink": [
        "ssh2_sftp_symlink",
        "function.ssh2-sftp-symlink.php",
        "シンボリックリンクを作成する"
    ],
    "ssh2sftpunlink": [
        "ssh2_sftp_unlink",
        "function.ssh2-sftp-unlink.php",
        "ファイルを削除する"
    ],
    "ssh2shell": [
        "ssh2_shell",
        "function.ssh2-shell.php",
        "対話式のシェルを要求する"
    ],
    "ssh2tunnel": [
        "ssh2_tunnel",
        "function.ssh2-tunnel.php",
        "リモートサーバーを経由するトンネルをオープンする"
    ],
    "SSL": [
        "SSL コンテキストオプション",
        "context.ssl.php",
        "SSL コンテキストオプションの一覧"
    ],
    "stat": [
        "stat",
        "function.stat.php",
        "ファイルに関する情報を取得する"
    ],
    "StatementgetNextResult": [
        "Statement::getNextResult",
        "mysql-xdevapi-statement.getnextresult.php",
        "次の結果を取得する"
    ],
    "StatementgetResult": [
        "Statement::getResult",
        "mysql-xdevapi-statement.getresult.php",
        "結果を取得する"
    ],
    "StatementhasMoreResults": [
        "Statement::hasMoreResults",
        "mysql-xdevapi-statement.hasmoreresults.php",
        "さらに結果があるかを調べる"
    ],
    "Statementconstruct": [
        "Statement::__construct",
        "mysql-xdevapi-statement.construct.php",
        "Statement のコンストラクタ"
    ],
    "Stompabort": [
        "Stomp::abort",
        "stomp.abort.php",
        "Rolls back a transaction in progress"
    ],
    "Stompack": [
        "Stomp::ack",
        "stomp.ack.php",
        "Acknowledges consumption of a message"
    ],
    "Stompbegin": [
        "Stomp::begin",
        "stomp.begin.php",
        "Starts a transaction"
    ],
    "Stompcommit": [
        "Stomp::commit",
        "stomp.commit.php",
        "Commits a transaction in progress"
    ],
    "Stomperror": [
        "Stomp::error",
        "stomp.error.php",
        "Gets the last stomp error"
    ],
    "StompgetReadTimeout": [
        "Stomp::getReadTimeout",
        "stomp.getreadtimeout.php",
        "Gets read timeout"
    ],
    "StompgetSessionId": [
        "Stomp::getSessionId",
        "stomp.getsessionid.php",
        "Gets the current stomp session ID"
    ],
    "StomphasFrame": [
        "Stomp::hasFrame",
        "stomp.hasframe.php",
        "Indicates whether or not there is a frame ready to read"
    ],
    "StompreadFrame": [
        "Stomp::readFrame",
        "stomp.readframe.php",
        "Reads the next frame"
    ],
    "Stompsend": [
        "Stomp::send",
        "stomp.send.php",
        "Sends a message"
    ],
    "StompsetReadTimeout": [
        "Stomp::setReadTimeout",
        "stomp.setreadtimeout.php",
        "Sets read timeout"
    ],
    "Stompsubscribe": [
        "Stomp::subscribe",
        "stomp.subscribe.php",
        "Registers to listen to a given destination"
    ],
    "Stompunsubscribe": [
        "Stomp::unsubscribe",
        "stomp.unsubscribe.php",
        "Removes an existing subscription"
    ],
    "Stompconstruct": [
        "Stomp::__construct",
        "stomp.construct.php",
        "Opens a connection"
    ],
    "Stompdestruct": [
        "Stomp::__destruct",
        "stomp.destruct.php",
        "Closes stomp connection"
    ],
    "StompExceptiongetDetails": [
        "StompException::getDetails",
        "stomp.getdetails.php",
        "Get exception details"
    ],
    "StompFrameconstruct": [
        "StompFrame::__construct",
        "stompframe.construct.php",
        "Constructor"
    ],
    "stompconnecterror": [
        "stomp_connect_error",
        "function.stomp-connect-error.php",
        "Returns a string description of the last connect error"
    ],
    "stompversion": [
        "stomp_version",
        "function.stomp-version.php",
        "Gets the current stomp extension version"
    ],
    "strcasecmp": [
        "strcasecmp",
        "function.strcasecmp.php",
        "大文字小文字を区別しないバイナリセーフな文字列比較を行う"
    ],
    "strchr": [
        "strchr",
        "function.strchr.php",
        "strstr のエイリアス"
    ],
    "strcmp": [
        "strcmp",
        "function.strcmp.php",
        "バイナリセーフな文字列比較"
    ],
    "strcoll": [
        "strcoll",
        "function.strcoll.php",
        "ロケールに基づく文字列比較"
    ],
    "strcspn": [
        "strcspn",
        "function.strcspn.php",
        "マスクにマッチしない最初のセグメントの長さを返す"
    ],
    "streamWrapperdirclosedir": [
        "streamWrapper::dir_closedir",
        "streamwrapper.dir-closedir.php",
        "ディレクトリハンドルを閉じる"
    ],
    "streamWrapperdiropendir": [
        "streamWrapper::dir_opendir",
        "streamwrapper.dir-opendir.php",
        "ディレクトリハンドルをオープンする"
    ],
    "streamWrapperdirreaddir": [
        "streamWrapper::dir_readdir",
        "streamwrapper.dir-readdir.php",
        "ディレクトリハンドルからエントリを読み込む"
    ],
    "streamWrapperdirrewinddir": [
        "streamWrapper::dir_rewinddir",
        "streamwrapper.dir-rewinddir.php",
        "ディレクトリハンドルを巻き戻す"
    ],
    "streamWrappermkdir": [
        "streamWrapper::mkdir",
        "streamwrapper.mkdir.php",
        "ディレクトリを作成する"
    ],
    "streamWrapperrename": [
        "streamWrapper::rename",
        "streamwrapper.rename.php",
        "ファイルあるいはディレクトリの名前を変える"
    ],
    "streamWrapperrmdir": [
        "streamWrapper::rmdir",
        "streamwrapper.rmdir.php",
        "ディレクトリを削除する"
    ],
    "streamWrapperstreamcast": [
        "streamWrapper::stream_cast",
        "streamwrapper.stream-cast.php",
        "元となるリソースを取得する"
    ],
    "streamWrapperstreamclose": [
        "streamWrapper::stream_close",
        "streamwrapper.stream-close.php",
        "リソースを閉じる"
    ],
    "streamWrapperstreameof": [
        "streamWrapper::stream_eof",
        "streamwrapper.stream-eof.php",
        "ファイルポインタが終端にあるかどうかを調べる"
    ],
    "streamWrapperstreamflush": [
        "streamWrapper::stream_flush",
        "streamwrapper.stream-flush.php",
        "出力をフラッシュする"
    ],
    "streamWrapperstreamlock": [
        "streamWrapper::stream_lock",
        "streamwrapper.stream-lock.php",
        "ファイルのアドバイザリ・ロック"
    ],
    "streamWrapperstreammetadata": [
        "streamWrapper::stream_metadata",
        "streamwrapper.stream-metadata.php",
        "ストリームメタデータを変更する"
    ],
    "streamWrapperstreamopen": [
        "streamWrapper::stream_open",
        "streamwrapper.stream-open.php",
        "ファイルあるいは URL をオープンする"
    ],
    "streamWrapperstreamread": [
        "streamWrapper::stream_read",
        "streamwrapper.stream-read.php",
        "ストリームから読み込む"
    ],
    "streamWrapperstreamseek": [
        "streamWrapper::stream_seek",
        "streamwrapper.stream-seek.php",
        "ストリーム内の特定の場所に移動する"
    ],
    "streamWrapperstreamsetoption": [
        "streamWrapper::stream_set_option",
        "streamwrapper.stream-set-option.php",
        "ストリームのオプションを変更する"
    ],
    "streamWrapperstreamstat": [
        "streamWrapper::stream_stat",
        "streamwrapper.stream-stat.php",
        "ファイルリソースについての情報を取得する"
    ],
    "streamWrapperstreamtell": [
        "streamWrapper::stream_tell",
        "streamwrapper.stream-tell.php",
        "ストリームの現在位置を取得する"
    ],
    "streamWrapperstreamtruncate": [
        "streamWrapper::stream_truncate",
        "streamwrapper.stream-truncate.php",
        "ストリームを丸める"
    ],
    "streamWrapperstreamwrite": [
        "streamWrapper::stream_write",
        "streamwrapper.stream-write.php",
        "ストリームに書き込む"
    ],
    "streamWrapperunlink": [
        "streamWrapper::unlink",
        "streamwrapper.unlink.php",
        "ファイルを削除する"
    ],
    "streamWrapperurlstat": [
        "streamWrapper::url_stat",
        "streamwrapper.url-stat.php",
        "ファイルについての情報を取得する"
    ],
    "streamWrapperconstruct": [
        "streamWrapper::__construct",
        "streamwrapper.construct.php",
        "新しいストリームラッパーを作成する"
    ],
    "streamWrapperdestruct": [
        "streamWrapper::__destruct",
        "streamwrapper.destruct.php",
        "既存のストリームラッパーを破棄する"
    ],
    "streambucketappend": [
        "stream_bucket_append",
        "function.stream-bucket-append.php",
        "bucket を brigade に追加する"
    ],
    "streambucketmakewriteable": [
        "stream_bucket_make_writeable",
        "function.stream-bucket-make-writeable.php",
        "操作する brigade から bucket オブジェクトを返す"
    ],
    "streambucketnew": [
        "stream_bucket_new",
        "function.stream-bucket-new.php",
        "現在のストリームで使用する新しい bucket を作成する"
    ],
    "streambucketprepend": [
        "stream_bucket_prepend",
        "function.stream-bucket-prepend.php",
        "bucket を brigade の先頭に追加する"
    ],
    "streamcontextcreate": [
        "stream_context_create",
        "function.stream-context-create.php",
        "ストリームコンテキストを作成する"
    ],
    "streamcontextgetdefault": [
        "stream_context_get_default",
        "function.stream-context-get-default.php",
        "デフォルトのストリームコンテキストを取得する"
    ],
    "streamcontextgetoptions": [
        "stream_context_get_options",
        "function.stream-context-get-options.php",
        "ストリーム / ラッパー / コンテキストに設定されているオプションを取得する"
    ],
    "streamcontextgetparams": [
        "stream_context_get_params",
        "function.stream-context-get-params.php",
        "コンテキストのパラメータを取得する"
    ],
    "streamcontextsetdefault": [
        "stream_context_set_default",
        "function.stream-context-set-default.php",
        "デフォルトのストリームコンテキストを設定する"
    ],
    "streamcontextsetoption": [
        "stream_context_set_option",
        "function.stream-context-set-option.php",
        "ストリーム / ラッパー / コンテキストのオプションを設定する"
    ],
    "streamcontextsetparams": [
        "stream_context_set_params",
        "function.stream-context-set-params.php",
        "ストリーム / ラッパー / コンテキストのパラメータを設定する"
    ],
    "streamcopytostream": [
        "stream_copy_to_stream",
        "function.stream-copy-to-stream.php",
        "データをあるストリームから別のストリームにコピーする"
    ],
    "streamfilterappend": [
        "stream_filter_append",
        "function.stream-filter-append.php",
        "ストリームにフィルタを付加する"
    ],
    "streamfilterprepend": [
        "stream_filter_prepend",
        "function.stream-filter-prepend.php",
        "フィルタをストリームに付加する"
    ],
    "streamfilterregister": [
        "stream_filter_register",
        "function.stream-filter-register.php",
        "ユーザー定義のストリームフィルタを登録する"
    ],
    "streamfilterremove": [
        "stream_filter_remove",
        "function.stream-filter-remove.php",
        "ストリームからフィルタを取り除く"
    ],
    "streamgetcontents": [
        "stream_get_contents",
        "function.stream-get-contents.php",
        "残りのストリームを文字列に読み込む"
    ],
    "streamgetfilters": [
        "stream_get_filters",
        "function.stream-get-filters.php",
        "登録されているフィルタのリストを取得する"
    ],
    "streamgetline": [
        "stream_get_line",
        "function.stream-get-line.php",
        "指定されたデリミタの位置までのデータを一行分としてストリームから読み込む"
    ],
    "streamgetmetadata": [
        "stream_get_meta_data",
        "function.stream-get-meta-data.php",
        "ヘッダーあるいはメタデータをストリームまたはファイルポインタから取得する"
    ],
    "streamgettransports": [
        "stream_get_transports",
        "function.stream-get-transports.php",
        "登録されたソケットのトランスポートの一覧を取得する"
    ],
    "streamgetwrappers": [
        "stream_get_wrappers",
        "function.stream-get-wrappers.php",
        "登録されているストリームのラッパーのリストを取得する"
    ],
    "streamisatty": [
        "stream_isatty",
        "function.stream-isatty.php",
        "Check if a stream is a TTY"
    ],
    "streamislocal": [
        "stream_is_local",
        "function.stream-is-local.php",
        "ローカルストリームかどうかを調べる"
    ],
    "streamnotificationcallback": [
        "stream_notification_callback",
        "function.stream-notification-callback.php",
        "notification コンテキストパラメータ用のコールバック関数"
    ],
    "streamregisterwrapper": [
        "stream_register_wrapper",
        "function.stream-register-wrapper.php",
        "stream_wrapper_register のエイリアス"
    ],
    "streamresolveincludepath": [
        "stream_resolve_include_path",
        "function.stream-resolve-include-path.php",
        "インクルードパスに対してファイル名を解決する"
    ],
    "streamsetblocking": [
        "stream_set_blocking",
        "function.stream-set-blocking.php",
        "ストリームのブロックモードを有効にする / 解除する"
    ],
    "streamsetchunksize": [
        "stream_set_chunk_size",
        "function.stream-set-chunk-size.php",
        "ストリームのチャンクサイズを設定する"
    ],
    "streamsetreadbuffer": [
        "stream_set_read_buffer",
        "function.stream-set-read-buffer.php",
        "指定したストリームのファイル読み込みバッファリングを有効にする"
    ],
    "streamsettimeout": [
        "stream_set_timeout",
        "function.stream-set-timeout.php",
        "ストリームにタイムアウトを設定する"
    ],
    "streamsetwritebuffer": [
        "stream_set_write_buffer",
        "function.stream-set-write-buffer.php",
        "指定されたストリームのファイル書き込みバッファリングを有効にする"
    ],
    "streamsocketaccept": [
        "stream_socket_accept",
        "function.stream-socket-accept.php",
        "stream_socket_server で作られたソケットの接続を受け入れる"
    ],
    "streamsocketclient": [
        "stream_socket_client",
        "function.stream-socket-client.php",
        "インターネットドメインまたは Unix ドメインのソケット接続を開く"
    ],
    "streamsocketenablecrypto": [
        "stream_socket_enable_crypto",
        "function.stream-socket-enable-crypto.php",
        "接続済みのソケットについて暗号化の on/off を切り替える"
    ],
    "streamsocketgetname": [
        "stream_socket_get_name",
        "function.stream-socket-get-name.php",
        "ローカルまたはリモートのソケットの名前を取得する"
    ],
    "streamsocketpair": [
        "stream_socket_pair",
        "function.stream-socket-pair.php",
        "接続された、区別できないソケットストリームの組を作成する"
    ],
    "streamsocketrecvfrom": [
        "stream_socket_recvfrom",
        "function.stream-socket-recvfrom.php",
        "接続されているかどうかにかかわらず、ソケットからのデータを受信する"
    ],
    "streamsocketsendto": [
        "stream_socket_sendto",
        "function.stream-socket-sendto.php",
        "接続されているかどうかにかかわらず、ソケットにデータを送信する"
    ],
    "streamsocketserver": [
        "stream_socket_server",
        "function.stream-socket-server.php",
        "インターネットドメインまたは Unix ドメインのサーバーソケットを作成する"
    ],
    "streamsocketshutdown": [
        "stream_socket_shutdown",
        "function.stream-socket-shutdown.php",
        "全二重接続を終了する"
    ],
    "streamsupportslock": [
        "stream_supports_lock",
        "function.stream-supports-lock.php",
        "ストリームがロックをサポートしているかどうかを調べる"
    ],
    "streamwrapperregister": [
        "stream_wrapper_register",
        "function.stream-wrapper-register.php",
        "PHP のクラスとして実装された URL ラッパーを登録する"
    ],
    "streamwrapperrestore": [
        "stream_wrapper_restore",
        "function.stream-wrapper-restore.php",
        "事前に登録を解除された組み込みラッパーを復元する"
    ],
    "streamwrapperunregister": [
        "stream_wrapper_unregister",
        "function.stream-wrapper-unregister.php",
        "URL ラッパーの登録を解除する"
    ],
    "strftime": [
        "strftime",
        "function.strftime.php",
        "ロケールの設定に基づいてローカルな日付・時間をフォーマットする"
    ],
    "stripcslashes": [
        "stripcslashes",
        "function.stripcslashes.php",
        "addcslashes でクォートされた文字列をアンクォートする"
    ],
    "stripos": [
        "stripos",
        "function.stripos.php",
        "大文字小文字を区別せずに文字列が最初に現れる位置を探す"
    ],
    "stripslashes": [
        "stripslashes",
        "function.stripslashes.php",
        "クォートされた文字列のクォート部分を取り除く"
    ],
    "striptags": [
        "strip_tags",
        "function.strip-tags.php",
        "文字列から HTML および PHP タグを取り除く"
    ],
    "stristr": [
        "stristr",
        "function.stristr.php",
        "大文字小文字を区別しない strstr"
    ],
    "strlen": [
        "strlen",
        "function.strlen.php",
        "文字列の長さを得る"
    ],
    "strnatcasecmp": [
        "strnatcasecmp",
        "function.strnatcasecmp.php",
        "&quot;自然順&quot;アルゴリズムにより大文字小文字を区別しない文字列比較を行う"
    ],
    "strnatcmp": [
        "strnatcmp",
        "function.strnatcmp.php",
        "&quot;自然順&quot;アルゴリズムにより文字列比較を行う"
    ],
    "strncasecmp": [
        "strncasecmp",
        "function.strncasecmp.php",
        "バイナリセーフで大文字小文字を区別しない文字列比較を、最初の n 文字について行う"
    ],
    "strncmp": [
        "strncmp",
        "function.strncmp.php",
        "最初の n 文字についてバイナリセーフな文字列比較を行う"
    ],
    "strpbrk": [
        "strpbrk",
        "function.strpbrk.php",
        "文字列の中から任意の文字を探す"
    ],
    "strpos": [
        "strpos",
        "function.strpos.php",
        "文字列内の部分文字列が最初に現れる場所を見つける"
    ],
    "strptime": [
        "strptime",
        "function.strptime.php",
        "strftime が生成した日付/時刻をパースする"
    ],
    "strrchr": [
        "strrchr",
        "function.strrchr.php",
        "文字列中に文字が最後に現れる場所を取得する"
    ],
    "strrev": [
        "strrev",
        "function.strrev.php",
        "文字列を逆順にする"
    ],
    "strripos": [
        "strripos",
        "function.strripos.php",
        "文字列中で、特定の(大文字小文字を区別しない)文字列が最後に現れた位置を探す"
    ],
    "strrpos": [
        "strrpos",
        "function.strrpos.php",
        "文字列中に、ある部分文字列が最後に現れる場所を探す"
    ],
    "strspn": [
        "strspn",
        "function.strspn.php",
        "指定したマスク内に含まれる文字からなる文字列の最初のセグメントの長さを探す"
    ],
    "strstr": [
        "strstr",
        "function.strstr.php",
        "文字列が最初に現れる位置を見つける"
    ],
    "strtok": [
        "strtok",
        "function.strtok.php",
        "文字列をトークンに分割する"
    ],
    "strtolower": [
        "strtolower",
        "function.strtolower.php",
        "文字列を小文字にする"
    ],
    "strtotime": [
        "strtotime",
        "function.strtotime.php",
        "英文形式の日付を Unix タイムスタンプに変換する"
    ],
    "strtoupper": [
        "strtoupper",
        "function.strtoupper.php",
        "文字列を大文字にする"
    ],
    "strtr": [
        "strtr",
        "function.strtr.php",
        "文字の変換あるいは部分文字列の置換を行う"
    ],
    "strval": [
        "strval",
        "function.strval.php",
        "変数の文字列としての値を取得する"
    ],
    "strcontains": [
        "str_contains",
        "function.str-contains.php",
        "指定された部分文字列が、文字列に含まれるかを調べる"
    ],
    "strendswith": [
        "str_ends_with",
        "function.str-ends-with.php",
        "文字列が、指定された文字列で終わるかを調べる。"
    ],
    "strgetcsv": [
        "str_getcsv",
        "function.str-getcsv.php",
        "CSV 文字列をパースして配列に格納する"
    ],
    "strireplace": [
        "str_ireplace",
        "function.str-ireplace.php",
        "大文字小文字を区別しない str_replace"
    ],
    "strpad": [
        "str_pad",
        "function.str-pad.php",
        "文字列を固定長の他の文字列で埋める"
    ],
    "strrepeat": [
        "str_repeat",
        "function.str-repeat.php",
        "文字列を反復する"
    ],
    "strreplace": [
        "str_replace",
        "function.str-replace.php",
        "検索文字列に一致したすべての文字列を置換する"
    ],
    "strrot13": [
        "str_rot13",
        "function.str-rot13.php",
        "文字列に rot13 変換を行う"
    ],
    "strshuffle": [
        "str_shuffle",
        "function.str-shuffle.php",
        "文字列をランダムにシャッフルする"
    ],
    "strsplit": [
        "str_split",
        "function.str-split.php",
        "文字列を配列に変換する"
    ],
    "strstartswith": [
        "str_starts_with",
        "function.str-starts-with.php",
        "文字列が指定された部分文字列で始まるかを調べる"
    ],
    "strwordcount": [
        "str_word_count",
        "function.str-word-count.php",
        "文字列に使用されている単語についての情報を返す"
    ],
    "substr": [
        "substr",
        "function.substr.php",
        "文字列の一部分を返す"
    ],
    "substrcompare": [
        "substr_compare",
        "function.substr-compare.php",
        "指定した位置から指定した長さの 2 つの文字列について、バイナリ対応で比較する"
    ],
    "substrcount": [
        "substr_count",
        "function.substr-count.php",
        "副文字列の出現回数を数える"
    ],
    "substrreplace": [
        "substr_replace",
        "function.substr-replace.php",
        "文字列の一部を置換する"
    ],
    "SVMcrossvalidate": [
        "SVM::crossvalidate",
        "svm.crossvalidate.php",
        "Test training params on subsets of the training data"
    ],
    "SVMgetOptions": [
        "SVM::getOptions",
        "svm.getoptions.php",
        "現在の訓練パラメータを返す"
    ],
    "SVMsetOptions": [
        "SVM::setOptions",
        "svm.setoptions.php",
        "訓練パラメータを設定"
    ],
    "SVMtrain": [
        "SVM::train",
        "svm.train.php",
        "Create a SVMModel based on training data"
    ],
    "SVMconstruct": [
        "SVM::__construct",
        "svm.construct.php",
        "SVM オブジェクトを新規構築"
    ],
    "SVMModelcheckProbabilityModel": [
        "SVMModel::checkProbabilityModel",
        "svmmodel.checkprobabilitymodel.php",
        "モデルが確率情報を持つ場合 TRUE を返す"
    ],
    "SVMModelgetLabels": [
        "SVMModel::getLabels",
        "svmmodel.getlabels.php",
        "モデルが訓練されたラベルを取得"
    ],
    "SVMModelgetNrClass": [
        "SVMModel::getNrClass",
        "svmmodel.getnrclass.php",
        "モデルが訓練されたクラスの個数を返す"
    ],
    "SVMModelgetSvmType": [
        "SVMModel::getSvmType",
        "svmmodel.getsvmtype.php",
        "モデルが訓練された SVM の種類を取得"
    ],
    "SVMModelgetSvrProbability": [
        "SVMModel::getSvrProbability",
        "svmmodel.getsvrprobability.php",
        "回帰モデルに対する&sigma;（シグマ）値を取得"
    ],
    "SVMModelload": [
        "SVMModel::load",
        "svmmodel.load.php",
        "保管された SVM モデルを読み込み"
    ],
    "SVMModelpredict": [
        "SVMModel::predict",
        "svmmodel.predict.php",
        "Predict a value for previously unseen data"
    ],
    "SVMModelpredictprobability": [
        "SVMModel::predict_probability",
        "svmmodel.predict-probability.php",
        "Return class probabilities for previous unseen data"
    ],
    "SVMModelsave": [
        "SVMModel::save",
        "svmmodel.save.php",
        "モデルをファイルに保管"
    ],
    "SVMModelconstruct": [
        "SVMModel::__construct",
        "svmmodel.construct.php",
        "SVMModel を新規構築"
    ],
    "svnadd": [
        "svn_add",
        "function.svn-add.php",
        "Schedules the addition of an item in a working directory"
    ],
    "svnauthgetparameter": [
        "svn_auth_get_parameter",
        "function.svn-auth-get-parameter.php",
        "認証パラメータを取得する"
    ],
    "svnauthsetparameter": [
        "svn_auth_set_parameter",
        "function.svn-auth-set-parameter.php",
        "認証パラメータを設定する"
    ],
    "svnblame": [
        "svn_blame",
        "function.svn-blame.php",
        "ファイルの SVN blame を取得する"
    ],
    "svncat": [
        "svn_cat",
        "function.svn-cat.php",
        "リポジトリ内のファイルの内容を返す"
    ],
    "svncheckout": [
        "svn_checkout",
        "function.svn-checkout.php",
        "リポジトリから作業コピーをチェックアウトする"
    ],
    "svncleanup": [
        "svn_cleanup",
        "function.svn-cleanup.php",
        "作業コピーディレクトリを再帰的にクリーンアップし、中途半端な操作を解消してロックを削除する"
    ],
    "svnclientversion": [
        "svn_client_version",
        "function.svn-client-version.php",
        "SVN クライアントライブラリのバージョンを返す"
    ],
    "svncommit": [
        "svn_commit",
        "function.svn-commit.php",
        "Sends changes from the local working copy to the repository"
    ],
    "svndelete": [
        "svn_delete",
        "function.svn-delete.php",
        "Delete items from a working copy or repository"
    ],
    "svndiff": [
        "svn_diff",
        "function.svn-diff.php",
        "ふたつのパスの差分を再帰的に取得する"
    ],
    "svnexport": [
        "svn_export",
        "function.svn-export.php",
        "Export the contents of a SVN directory"
    ],
    "svnfsaborttxn": [
        "svn_fs_abort_txn",
        "function.svn-fs-abort-txn.php",
        "トランザクションを中断し、成功したら true、失敗したら false を返す"
    ],
    "svnfsapplytext": [
        "svn_fs_apply_text",
        "function.svn-fs-apply-text.php",
        "置換に使用するストリームを作成して返す"
    ],
    "svnfsbegintxn2": [
        "svn_fs_begin_txn2",
        "function.svn-fs-begin-txn2.php",
        "新しいトランザクションを作成する"
    ],
    "svnfschangenodeprop": [
        "svn_fs_change_node_prop",
        "function.svn-fs-change-node-prop.php",
        "成功したら true、失敗したら false を返す"
    ],
    "svnfscheckpath": [
        "svn_fs_check_path",
        "function.svn-fs-check-path.php",
        "指定したリポジトリの fsroot パスにどんなアイテムが存在するかを調べる"
    ],
    "svnfscontentschanged": [
        "svn_fs_contents_changed",
        "function.svn-fs-contents-changed.php",
        "コンテンツが変更されている場合に true、されていない場合に false を返す"
    ],
    "svnfscopy": [
        "svn_fs_copy",
        "function.svn-fs-copy.php",
        "ファイルやディレクトリをコピーし、成功したら true、失敗したら false を返す"
    ],
    "svnfsdelete": [
        "svn_fs_delete",
        "function.svn-fs-delete.php",
        "ファイルやディレクトリを削除し、成功したら true、失敗したら false を返す"
    ],
    "svnfsdirentries": [
        "svn_fs_dir_entries",
        "function.svn-fs-dir-entries.php",
        "指定したパスのディレクトリを列挙し、ディレクトリ名とファイルタイプのハッシュを返す"
    ],
    "svnfsfilecontents": [
        "svn_fs_file_contents",
        "function.svn-fs-file-contents.php",
        "指定したバージョンの fs から、ファイルの中身を読み込むためのストリームを返す"
    ],
    "svnfsfilelength": [
        "svn_fs_file_length",
        "function.svn-fs-file-length.php",
        "指定したバージョンの fs から、ファイルの長さを返す"
    ],
    "svnfsisdir": [
        "svn_fs_is_dir",
        "function.svn-fs-is-dir.php",
        "ディレクトリを指すパスである場合に true、それ以外の場合に false を返す"
    ],
    "svnfsisfile": [
        "svn_fs_is_file",
        "function.svn-fs-is-file.php",
        "ファイルを指すパスである場合に true、それ以外の場合に false を返す"
    ],
    "svnfsmakedir": [
        "svn_fs_make_dir",
        "function.svn-fs-make-dir.php",
        "空のディレクトリを作成し、成功したら true、失敗したら false を返す"
    ],
    "svnfsmakefile": [
        "svn_fs_make_file",
        "function.svn-fs-make-file.php",
        "空のファイルを作成し、成功したら true、失敗したら false を返す"
    ],
    "svnfsnodecreatedrev": [
        "svn_fs_node_created_rev",
        "function.svn-fs-node-created-rev.php",
        "fsroot 配下のパスが作成されたリビジョンを返す"
    ],
    "svnfsnodeprop": [
        "svn_fs_node_prop",
        "function.svn-fs-node-prop.php",
        "ノードのプロパティの値を返す"
    ],
    "svnfspropschanged": [
        "svn_fs_props_changed",
        "function.svn-fs-props-changed.php",
        "プロパティが変更されている場合に true、それ以外の場合に false を返す"
    ],
    "svnfsrevisionprop": [
        "svn_fs_revision_prop",
        "function.svn-fs-revision-prop.php",
        "指定したプロパティの値を取得する"
    ],
    "svnfsrevisionroot": [
        "svn_fs_revision_root",
        "function.svn-fs-revision-root.php",
        "リポジトリのルートの指定したバージョンのハンドルを取得する"
    ],
    "svnfstxnroot": [
        "svn_fs_txn_root",
        "function.svn-fs-txn-root.php",
        "トランザクションのルートを作成して返す"
    ],
    "svnfsyoungestrev": [
        "svn_fs_youngest_rev",
        "function.svn-fs-youngest-rev.php",
        "ファイルシステム内で一番若いリビジョン番号を返す"
    ],
    "svnimport": [
        "svn_import",
        "function.svn-import.php",
        "バージョン管理されていないパスをリポジトリにインポートする"
    ],
    "svnlog": [
        "svn_log",
        "function.svn-log.php",
        "指定したリポジトリ URL のコミットログメッセージを返す"
    ],
    "svnls": [
        "svn_ls",
        "function.svn-ls.php",
        "Returns list of directory contents in repository URL, optionally at revision number"
    ],
    "svnmkdir": [
        "svn_mkdir",
        "function.svn-mkdir.php",
        "作業コピーあるいはリポジトリ内にディレクトリを作成する"
    ],
    "svnreposcreate": [
        "svn_repos_create",
        "function.svn-repos-create.php",
        "新しい subversion リポジトリを指定したパスに作成する"
    ],
    "svnreposfs": [
        "svn_repos_fs",
        "function.svn-repos-fs.php",
        "リポジトリ用に、ファイルシステム上のハンドルを取得する"
    ],
    "svnreposfsbegintxnforcommit": [
        "svn_repos_fs_begin_txn_for_commit",
        "function.svn-repos-fs-begin-txn-for-commit.php",
        "新しいトランザクションを作成する"
    ],
    "svnreposfscommittxn": [
        "svn_repos_fs_commit_txn",
        "function.svn-repos-fs-commit-txn.php",
        "トランザクションをコミットし、新しいリビジョンを返す"
    ],
    "svnreposhotcopy": [
        "svn_repos_hotcopy",
        "function.svn-repos-hotcopy.php",
        "repospath にあるリポジトリのホットコピーを作成し、destpath にコピーする"
    ],
    "svnreposopen": [
        "svn_repos_open",
        "function.svn-repos-open.php",
        "Open a shared lock on a repository"
    ],
    "svnreposrecover": [
        "svn_repos_recover",
        "function.svn-repos-recover.php",
        "Run recovery procedures on the repository located at path"
    ],
    "svnrevert": [
        "svn_revert",
        "function.svn-revert.php",
        "Revert changes to the working copy"
    ],
    "svnstatus": [
        "svn_status",
        "function.svn-status.php",
        "Returns the status of working copy files and directories"
    ],
    "svnupdate": [
        "svn_update",
        "function.svn-update.php",
        "Update working copy"
    ],
    "SwooleAsyncdnsLookup": [
        "Swoole\\Async::dnsLookup",
        "swoole-async.dnslookup.php",
        "Async and non-blocking hostname to IP lookup."
    ],
    "SwooleAsyncread": [
        "Swoole\\Async::read",
        "swoole-async.read.php",
        "Read file stream asynchronously."
    ],
    "SwooleAsyncreadFile": [
        "Swoole\\Async::readFile",
        "swoole-async.readfile.php",
        "Read a file asynchronously."
    ],
    "SwooleAsyncset": [
        "Swoole\\Async::set",
        "swoole-async.set.php",
        "Update the async I/O options."
    ],
    "SwooleAsyncwrite": [
        "Swoole\\Async::write",
        "swoole-async.write.php",
        "Write data to a file stream asynchronously."
    ],
    "SwooleAsyncwriteFile": [
        "Swoole\\Async::writeFile",
        "swoole-async.writefile.php",
        "Description"
    ],
    "SwooleAtomicadd": [
        "Swoole\\Atomic::add",
        "swoole-atomic.add.php",
        "Add a number to the value to the atomic object."
    ],
    "SwooleAtomiccmpset": [
        "Swoole\\Atomic::cmpset",
        "swoole-atomic.cmpset.php",
        "Compare and set the value of the atomic object."
    ],
    "SwooleAtomicget": [
        "Swoole\\Atomic::get",
        "swoole-atomic.get.php",
        "Get the current value of the atomic object."
    ],
    "SwooleAtomicset": [
        "Swoole\\Atomic::set",
        "swoole-atomic.set.php",
        "Set a new value to the atomic object."
    ],
    "SwooleAtomicsub": [
        "Swoole\\Atomic::sub",
        "swoole-atomic.sub.php",
        "Subtract a number to the value of the atomic object."
    ],
    "SwooleAtomicconstruct": [
        "Swoole\\Atomic::__construct",
        "swoole-atomic.construct.php",
        "Construct a swoole atomic object."
    ],
    "SwooleBufferappend": [
        "Swoole\\Buffer::append",
        "swoole-buffer.append.php",
        "Append the string or binary data at the end of the memory buffer and return the new size of memory allocated."
    ],
    "SwooleBufferclear": [
        "Swoole\\Buffer::clear",
        "swoole-buffer.clear.php",
        "Reset the memory buffer."
    ],
    "SwooleBufferexpand": [
        "Swoole\\Buffer::expand",
        "swoole-buffer.expand.php",
        "Expand the size of memory buffer."
    ],
    "SwooleBufferread": [
        "Swoole\\Buffer::read",
        "swoole-buffer.read.php",
        "Read data from the memory buffer based on offset and length."
    ],
    "SwooleBufferrecycle": [
        "Swoole\\Buffer::recycle",
        "swoole-buffer.recycle.php",
        "Release the memory to OS which is not used by the memory buffer."
    ],
    "SwooleBuffersubstr": [
        "Swoole\\Buffer::substr",
        "swoole-buffer.substr.php",
        "Read data from the memory buffer based on offset and length. Or remove data from the memory buffer."
    ],
    "SwooleBufferwrite": [
        "Swoole\\Buffer::write",
        "swoole-buffer.write.php",
        "Write data to the memory buffer. The memory allocated for the buffer will not be changed."
    ],
    "SwooleBufferconstruct": [
        "Swoole\\Buffer::__construct",
        "swoole-buffer.construct.php",
        "Fixed size memory blocks allocation."
    ],
    "SwooleBufferdestruct": [
        "Swoole\\Buffer::__destruct",
        "swoole-buffer.destruct.php",
        "Destruct the Swoole memory buffer."
    ],
    "SwooleBuffertoString": [
        "Swoole\\Buffer::__toString",
        "swoole-buffer.tostring.php",
        "Get the string value of the memory buffer."
    ],
    "SwooleChannelpop": [
        "Swoole\\Channel::pop",
        "swoole-channel.pop.php",
        "Read and pop data from swoole channel."
    ],
    "SwooleChannelpush": [
        "Swoole\\Channel::push",
        "swoole-channel.push.php",
        "Write and push data into Swoole channel."
    ],
    "SwooleChannelstats": [
        "Swoole\\Channel::stats",
        "swoole-channel.stats.php",
        "Get stats of swoole channel."
    ],
    "SwooleChannelconstruct": [
        "Swoole\\Channel::__construct",
        "swoole-channel.construct.php",
        "Construct a Swoole Channel"
    ],
    "SwooleChanneldestruct": [
        "Swoole\\Channel::__destruct",
        "swoole-channel.destruct.php",
        "Destruct a Swoole channel."
    ],
    "SwooleClientclose": [
        "Swoole\\Client::close",
        "swoole-client.close.php",
        "Close the connection established."
    ],
    "SwooleClientconnect": [
        "Swoole\\Client::connect",
        "swoole-client.connect.php",
        "Connect to the remote TCP or UDP port."
    ],
    "SwooleClientgetpeername": [
        "Swoole\\Client::getpeername",
        "swoole-client.getpeername.php",
        "Get the remote socket name of the connection."
    ],
    "SwooleClientgetsockname": [
        "Swoole\\Client::getsockname",
        "swoole-client.getsockname.php",
        "Get the local socket name of the connection."
    ],
    "SwooleClientisConnected": [
        "Swoole\\Client::isConnected",
        "swoole-client.isconnected.php",
        "Check if the connection is established."
    ],
    "SwooleClienton": [
        "Swoole\\Client::on",
        "swoole-client.on.php",
        "Add callback functions triggered by events."
    ],
    "SwooleClientpause": [
        "Swoole\\Client::pause",
        "swoole-client.pause.php",
        "Pause receiving data."
    ],
    "SwooleClientpipe": [
        "Swoole\\Client::pipe",
        "swoole-client.pipe.php",
        "Redirect the data to another file descriptor."
    ],
    "SwooleClientrecv": [
        "Swoole\\Client::recv",
        "swoole-client.recv.php",
        "Receive data from the remote socket."
    ],
    "SwooleClientresume": [
        "Swoole\\Client::resume",
        "swoole-client.resume.php",
        "Resume receiving data."
    ],
    "SwooleClientsend": [
        "Swoole\\Client::send",
        "swoole-client.send.php",
        "Send data to the remote TCP socket."
    ],
    "SwooleClientsendfile": [
        "Swoole\\Client::sendfile",
        "swoole-client.sendfile.php",
        "Send file to the remote TCP socket."
    ],
    "SwooleClientsendto": [
        "Swoole\\Client::sendto",
        "swoole-client.sendto.php",
        "Send data to the remote UDP address."
    ],
    "SwooleClientset": [
        "Swoole\\Client::set",
        "swoole-client.set.php",
        "Set the Swoole client parameters before the connection is established."
    ],
    "SwooleClientsleep": [
        "Swoole\\Client::sleep",
        "swoole-client.sleep.php",
        "Remove the TCP client from system event loop."
    ],
    "SwooleClientwakeup": [
        "Swoole\\Client::wakeup",
        "swoole-client.wakeup.php",
        "Add the TCP client back into the system event loop."
    ],
    "SwooleClientconstruct": [
        "Swoole\\Client::__construct",
        "swoole-client.construct.php",
        "Create Swoole sync or async TCP/UDP client, with or without SSL."
    ],
    "SwooleClientdestruct": [
        "Swoole\\Client::__destruct",
        "swoole-client.destruct.php",
        "Destruct the Swoole client."
    ],
    "SwooleConnectionIteratorcount": [
        "Swoole\\Connection\\Iterator::count",
        "swoole-connection-iterator.count.php",
        "Count connections."
    ],
    "SwooleConnectionIteratorcurrent": [
        "Swoole\\Connection\\Iterator::current",
        "swoole-connection-iterator.current.php",
        "Return current connection entry."
    ],
    "SwooleConnectionIteratorkey": [
        "Swoole\\Connection\\Iterator::key",
        "swoole-connection-iterator.key.php",
        "Return key of the current connection."
    ],
    "SwooleConnectionIteratornext": [
        "Swoole\\Connection\\Iterator::next",
        "swoole-connection-iterator.next.php",
        "Move to the next connection."
    ],
    "SwooleConnectionIteratoroffsetExists": [
        "Swoole\\Connection\\Iterator::offsetExists",
        "swoole-connection-iterator.offsetexists.php",
        "Check if offet exists."
    ],
    "SwooleConnectionIteratoroffsetGet": [
        "Swoole\\Connection\\Iterator::offsetGet",
        "swoole-connection-iterator.offsetget.php",
        "Offset to retrieve."
    ],
    "SwooleConnectionIteratoroffsetSet": [
        "Swoole\\Connection\\Iterator::offsetSet",
        "swoole-connection-iterator.offsetset.php",
        "Assign a Connection to the specified offset."
    ],
    "SwooleConnectionIteratoroffsetUnset": [
        "Swoole\\Connection\\Iterator::offsetUnset",
        "swoole-connection-iterator.offsetunset.php",
        "Unset an offset."
    ],
    "SwooleConnectionIteratorrewind": [
        "Swoole\\Connection\\Iterator::rewind",
        "swoole-connection-iterator.rewind.php",
        "Rewinds iterator"
    ],
    "SwooleConnectionIteratorvalid": [
        "Swoole\\Connection\\Iterator::valid",
        "swoole-connection-iterator.valid.php",
        "Check if current position is valid."
    ],
    "SwooleCoroutinecalluserfunc": [
        "Swoole\\Coroutine::call_user_func",
        "swoole-coroutine.call-user-func.php",
        "Call a callback given by the first parameter"
    ],
    "SwooleCoroutinecalluserfuncarray": [
        "Swoole\\Coroutine::call_user_func_array",
        "swoole-coroutine.call-user-func-array.php",
        "Call a callback with an array of parameters"
    ],
    "SwooleCoroutinecliwait": [
        "Swoole\\Coroutine::cli_wait",
        "swoole-coroutine.cli-wait.php",
        "Description"
    ],
    "SwooleCoroutinecreate": [
        "Swoole\\Coroutine::create",
        "swoole-coroutine.create.php",
        "Description"
    ],
    "SwooleCoroutinegetuid": [
        "Swoole\\Coroutine::getuid",
        "swoole-coroutine.getuid.php",
        "Description"
    ],
    "SwooleCoroutineresume": [
        "Swoole\\Coroutine::resume",
        "swoole-coroutine.resume.php",
        "Description"
    ],
    "SwooleCoroutinesuspend": [
        "Swoole\\Coroutine::suspend",
        "swoole-coroutine.suspend.php",
        "Description"
    ],
    "SwooleCoroutineClientclose": [
        "Swoole\\Coroutine\\Client::close",
        "swoole-coroutine-client.close.php",
        "Description"
    ],
    "SwooleCoroutineClientconnect": [
        "Swoole\\Coroutine\\Client::connect",
        "swoole-coroutine-client.connect.php",
        "Description"
    ],
    "SwooleCoroutineClientgetpeername": [
        "Swoole\\Coroutine\\Client::getpeername",
        "swoole-coroutine-client.getpeername.php",
        "Description"
    ],
    "SwooleCoroutineClientgetsockname": [
        "Swoole\\Coroutine\\Client::getsockname",
        "swoole-coroutine-client.getsockname.php",
        "Description"
    ],
    "SwooleCoroutineClientisConnected": [
        "Swoole\\Coroutine\\Client::isConnected",
        "swoole-coroutine-client.isconnected.php",
        "Description"
    ],
    "SwooleCoroutineClientrecv": [
        "Swoole\\Coroutine\\Client::recv",
        "swoole-coroutine-client.recv.php",
        "Description"
    ],
    "SwooleCoroutineClientsend": [
        "Swoole\\Coroutine\\Client::send",
        "swoole-coroutine-client.send.php",
        "Description"
    ],
    "SwooleCoroutineClientsendfile": [
        "Swoole\\Coroutine\\Client::sendfile",
        "swoole-coroutine-client.sendfile.php",
        "Description"
    ],
    "SwooleCoroutineClientsendto": [
        "Swoole\\Coroutine\\Client::sendto",
        "swoole-coroutine-client.sendto.php",
        "Description"
    ],
    "SwooleCoroutineClientset": [
        "Swoole\\Coroutine\\Client::set",
        "swoole-coroutine-client.set.php",
        "Description"
    ],
    "SwooleCoroutineClientconstruct": [
        "Swoole\\Coroutine\\Client::__construct",
        "swoole-coroutine-client.construct.php",
        "Description"
    ],
    "SwooleCoroutineClientdestruct": [
        "Swoole\\Coroutine\\Client::__destruct",
        "swoole-coroutine-client.destruct.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientaddFile": [
        "Swoole\\Coroutine\\Http\\Client::addFile",
        "swoole-coroutine-http-client.addfile.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientclose": [
        "Swoole\\Coroutine\\Http\\Client::close",
        "swoole-coroutine-http-client.close.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientexecute": [
        "Swoole\\Coroutine\\Http\\Client::execute",
        "swoole-coroutine-http-client.execute.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientget": [
        "Swoole\\Coroutine\\Http\\Client::get",
        "swoole-coroutine-http-client.get.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientgetDefer": [
        "Swoole\\Coroutine\\Http\\Client::getDefer",
        "swoole-coroutine-http-client.getdefer.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientisConnected": [
        "Swoole\\Coroutine\\Http\\Client::isConnected",
        "swoole-coroutine-http-client.isconnected.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientpost": [
        "Swoole\\Coroutine\\Http\\Client::post",
        "swoole-coroutine-http-client.post.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientrecv": [
        "Swoole\\Coroutine\\Http\\Client::recv",
        "swoole-coroutine-http-client.recv.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientset": [
        "Swoole\\Coroutine\\Http\\Client::set",
        "swoole-coroutine-http-client.set.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientsetCookies": [
        "Swoole\\Coroutine\\Http\\Client::setCookies",
        "swoole-coroutine-http-client.setcookies.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientsetData": [
        "Swoole\\Coroutine\\Http\\Client::setData",
        "swoole-coroutine-http-client.setdata.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientsetDefer": [
        "Swoole\\Coroutine\\Http\\Client::setDefer",
        "swoole-coroutine-http-client.setdefer.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientsetHeaders": [
        "Swoole\\Coroutine\\Http\\Client::setHeaders",
        "swoole-coroutine-http-client.setheaders.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientsetMethod": [
        "Swoole\\Coroutine\\Http\\Client::setMethod",
        "swoole-coroutine-http-client.setmethod.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientconstruct": [
        "Swoole\\Coroutine\\Http\\Client::__construct",
        "swoole-coroutine-http-client.construct.php",
        "Description"
    ],
    "SwooleCoroutineHttpClientdestruct": [
        "Swoole\\Coroutine\\Http\\Client::__destruct",
        "swoole-coroutine-http-client.destruct.php",
        "Description"
    ],
    "SwooleCoroutineMySQLclose": [
        "Swoole\\Coroutine\\MySQL::close",
        "swoole-coroutine-mysql.close.php",
        "Description"
    ],
    "SwooleCoroutineMySQLconnect": [
        "Swoole\\Coroutine\\MySQL::connect",
        "swoole-coroutine-mysql.connect.php",
        "Description"
    ],
    "SwooleCoroutineMySQLgetDefer": [
        "Swoole\\Coroutine\\MySQL::getDefer",
        "swoole-coroutine-mysql.getdefer.php",
        "Description"
    ],
    "SwooleCoroutineMySQLquery": [
        "Swoole\\Coroutine\\MySQL::query",
        "swoole-coroutine-mysql.query.php",
        "Description"
    ],
    "SwooleCoroutineMySQLrecv": [
        "Swoole\\Coroutine\\MySQL::recv",
        "swoole-coroutine-mysql.recv.php",
        "Description"
    ],
    "SwooleCoroutineMySQLsetDefer": [
        "Swoole\\Coroutine\\MySQL::setDefer",
        "swoole-coroutine-mysql.setdefer.php",
        "Description"
    ],
    "SwooleCoroutineMySQLconstruct": [
        "Swoole\\Coroutine\\MySQL::__construct",
        "swoole-coroutine-mysql.construct.php",
        "Description"
    ],
    "SwooleCoroutineMySQLdestruct": [
        "Swoole\\Coroutine\\MySQL::__destruct",
        "swoole-coroutine-mysql.destruct.php",
        "Description"
    ],
    "SwooleEventadd": [
        "Swoole\\Event::add",
        "swoole-event.add.php",
        "Add new callback functions of a socket into the EventLoop."
    ],
    "SwooleEventdefer": [
        "Swoole\\Event::defer",
        "swoole-event.defer.php",
        "Add a callback function to the next event loop."
    ],
    "SwooleEventdel": [
        "Swoole\\Event::del",
        "swoole-event.del.php",
        "Remove all event callback functions of a socket."
    ],
    "SwooleEventexit": [
        "Swoole\\Event::exit",
        "swoole-event.exit.php",
        "Exit the eventloop, only available at client side."
    ],
    "SwooleEventset": [
        "Swoole\\Event::set",
        "swoole-event.set.php",
        "Update the event callback functions of a socket."
    ],
    "SwooleEventwait": [
        "Swoole\\Event::wait",
        "swoole-event.wait.php",
        "Description"
    ],
    "SwooleEventwrite": [
        "Swoole\\Event::write",
        "swoole-event.write.php",
        "Write data to the socket."
    ],
    "SwooleHttpClientaddFile": [
        "Swoole\\Http\\Client::addFile",
        "swoole-http-client.addfile.php",
        "Add a file to the post form."
    ],
    "SwooleHttpClientclose": [
        "Swoole\\Http\\Client::close",
        "swoole-http-client.close.php",
        "Close the http connection."
    ],
    "SwooleHttpClientdownload": [
        "Swoole\\Http\\Client::download",
        "swoole-http-client.download.php",
        "Download a file from the remote server."
    ],
    "SwooleHttpClientexecute": [
        "Swoole\\Http\\Client::execute",
        "swoole-http-client.execute.php",
        "Send the HTTP request after setting the parameters."
    ],
    "SwooleHttpClientget": [
        "Swoole\\Http\\Client::get",
        "swoole-http-client.get.php",
        "Send GET http request to the remote server."
    ],
    "SwooleHttpClientisConnected": [
        "Swoole\\Http\\Client::isConnected",
        "swoole-http-client.isconnected.php",
        "Check if the HTTP connection is connected."
    ],
    "SwooleHttpClienton": [
        "Swoole\\Http\\Client::on",
        "swoole-http-client.on.php",
        "Register callback function by event name."
    ],
    "SwooleHttpClientpost": [
        "Swoole\\Http\\Client::post",
        "swoole-http-client.post.php",
        "Send POST http request to the remote server."
    ],
    "SwooleHttpClientpush": [
        "Swoole\\Http\\Client::push",
        "swoole-http-client.push.php",
        "Push data to websocket client."
    ],
    "SwooleHttpClientset": [
        "Swoole\\Http\\Client::set",
        "swoole-http-client.set.php",
        "Update the HTTP client paramters."
    ],
    "SwooleHttpClientsetCookies": [
        "Swoole\\Http\\Client::setCookies",
        "swoole-http-client.setcookies.php",
        "Set the http request cookies."
    ],
    "SwooleHttpClientsetData": [
        "Swoole\\Http\\Client::setData",
        "swoole-http-client.setdata.php",
        "Set the HTTP request body data."
    ],
    "SwooleHttpClientsetHeaders": [
        "Swoole\\Http\\Client::setHeaders",
        "swoole-http-client.setheaders.php",
        "Set the HTTP request headers."
    ],
    "SwooleHttpClientsetMethod": [
        "Swoole\\Http\\Client::setMethod",
        "swoole-http-client.setmethod.php",
        "Set the HTTP request method."
    ],
    "SwooleHttpClientupgrade": [
        "Swoole\\Http\\Client::upgrade",
        "swoole-http-client.upgrade.php",
        "Upgrade to websocket protocol."
    ],
    "SwooleHttpClientconstruct": [
        "Swoole\\Http\\Client::__construct",
        "swoole-http-client.construct.php",
        "Construct the async HTTP client."
    ],
    "SwooleHttpClientdestruct": [
        "Swoole\\Http\\Client::__destruct",
        "swoole-http-client.destruct.php",
        "Destruct the HTTP client."
    ],
    "SwooleHttpRequestrawcontent": [
        "Swoole\\Http\\Request::rawcontent",
        "swoole-http-request.rawcontent.php",
        "Get the raw HTTP POST body."
    ],
    "SwooleHttpRequestdestruct": [
        "Swoole\\Http\\Request::__destruct",
        "swoole-http-request.destruct.php",
        "Destruct the HTTP request."
    ],
    "SwooleHttpResponsecookie": [
        "Swoole\\Http\\Response::cookie",
        "swoole-http-response.cookie.php",
        "Set the cookies of the HTTP response."
    ],
    "SwooleHttpResponseend": [
        "Swoole\\Http\\Response::end",
        "swoole-http-response.end.php",
        "Send data for the HTTP request and finish the response."
    ],
    "SwooleHttpResponsegzip": [
        "Swoole\\Http\\Response::gzip",
        "swoole-http-response.gzip.php",
        "Enable the gzip of response content."
    ],
    "SwooleHttpResponseheader": [
        "Swoole\\Http\\Response::header",
        "swoole-http-response.header.php",
        "Set the HTTP response headers."
    ],
    "SwooleHttpResponseinitHeader": [
        "Swoole\\Http\\Response::initHeader",
        "swoole-http-response.initheader.php",
        "Init the HTTP response header."
    ],
    "SwooleHttpResponserawcookie": [
        "Swoole\\Http\\Response::rawcookie",
        "swoole-http-response.rawcookie.php",
        "Set the raw cookies to the HTTP response."
    ],
    "SwooleHttpResponsesendfile": [
        "Swoole\\Http\\Response::sendfile",
        "swoole-http-response.sendfile.php",
        "Send file through the HTTP response."
    ],
    "SwooleHttpResponsestatus": [
        "Swoole\\Http\\Response::status",
        "swoole-http-response.status.php",
        "Set the status code of the HTTP response."
    ],
    "SwooleHttpResponsewrite": [
        "Swoole\\Http\\Response::write",
        "swoole-http-response.write.php",
        "Append HTTP body content to the HTTP response."
    ],
    "SwooleHttpResponsedestruct": [
        "Swoole\\Http\\Response::__destruct",
        "swoole-http-response.destruct.php",
        "Destruct the HTTP response."
    ],
    "SwooleHttpServeron": [
        "Swoole\\Http\\Server::on",
        "swoole-http-server.on.php",
        "Bind callback function to HTTP server by event name."
    ],
    "SwooleHttpServerstart": [
        "Swoole\\Http\\Server::start",
        "swoole-http-server.start.php",
        "Start the swoole http server."
    ],
    "SwooleLocklock": [
        "Swoole\\Lock::lock",
        "swoole-lock.lock.php",
        "Try to acquire the lock. It will block if the lock is not available."
    ],
    "SwooleLocklockread": [
        "Swoole\\Lock::lock_read",
        "swoole-lock.lock-read.php",
        "Lock a read-write lock for reading."
    ],
    "SwooleLocktrylock": [
        "Swoole\\Lock::trylock",
        "swoole-lock.trylock.php",
        "Try to acquire the lock and return straight away even the lock is not available."
    ],
    "SwooleLocktrylockread": [
        "Swoole\\Lock::trylock_read",
        "swoole-lock.trylock-read.php",
        "Try to lock a read-write lock for reading and return straight away even the lock is not available."
    ],
    "SwooleLockunlock": [
        "Swoole\\Lock::unlock",
        "swoole-lock.unlock.php",
        "Release the lock."
    ],
    "SwooleLockconstruct": [
        "Swoole\\Lock::__construct",
        "swoole-lock.construct.php",
        "Construct a memory lock."
    ],
    "SwooleLockdestruct": [
        "Swoole\\Lock::__destruct",
        "swoole-lock.destruct.php",
        "Destory a Swoole memory lock."
    ],
    "SwooleMmapopen": [
        "Swoole\\Mmap::open",
        "swoole-mmap.open.php",
        "Map a file into memory and return the stream resource which can be used by PHP stream operations."
    ],
    "SwooleMySQLclose": [
        "Swoole\\MySQL::close",
        "swoole-mysql.close.php",
        "Close the async MySQL connection."
    ],
    "SwooleMySQLconnect": [
        "Swoole\\MySQL::connect",
        "swoole-mysql.connect.php",
        "Connect to the remote MySQL server."
    ],
    "SwooleMySQLgetBuffer": [
        "Swoole\\MySQL::getBuffer",
        "swoole-mysql.getbuffer.php",
        "Description"
    ],
    "SwooleMySQLon": [
        "Swoole\\MySQL::on",
        "swoole-mysql.on.php",
        "Register callback function based on event name."
    ],
    "SwooleMySQLquery": [
        "Swoole\\MySQL::query",
        "swoole-mysql.query.php",
        "Run the SQL query."
    ],
    "SwooleMySQLconstruct": [
        "Swoole\\MySQL::__construct",
        "swoole-mysql.construct.php",
        "Construct an async MySQL client."
    ],
    "SwooleMySQLdestruct": [
        "Swoole\\MySQL::__destruct",
        "swoole-mysql.destruct.php",
        "Destory the async MySQL client."
    ],
    "SwooleProcessalarm": [
        "Swoole\\Process::alarm",
        "swoole-process.alarm.php",
        "High precision timer which triggers signal with fixed interval."
    ],
    "SwooleProcessclose": [
        "Swoole\\Process::close",
        "swoole-process.close.php",
        "Close the pipe to the child process."
    ],
    "SwooleProcessdaemon": [
        "Swoole\\Process::daemon",
        "swoole-process.daemon.php",
        "Change the process to be a daemon process."
    ],
    "SwooleProcessexec": [
        "Swoole\\Process::exec",
        "swoole-process.exec.php",
        "Execute system commands."
    ],
    "SwooleProcessexit": [
        "Swoole\\Process::exit",
        "swoole-process.exit.php",
        "Stop the child processes."
    ],
    "SwooleProcessfreeQueue": [
        "Swoole\\Process::freeQueue",
        "swoole-process.freequeue.php",
        "Destroy the message queue created by swoole_process::useQueue."
    ],
    "SwooleProcesskill": [
        "Swoole\\Process::kill",
        "swoole-process.kill.php",
        "Send signal to the child process."
    ],
    "SwooleProcessname": [
        "Swoole\\Process::name",
        "swoole-process.name.php",
        "Set name of the process."
    ],
    "SwooleProcesspop": [
        "Swoole\\Process::pop",
        "swoole-process.pop.php",
        "Read and pop data from the message queue."
    ],
    "SwooleProcesspush": [
        "Swoole\\Process::push",
        "swoole-process.push.php",
        "Write and push data into the message queue."
    ],
    "SwooleProcessread": [
        "Swoole\\Process::read",
        "swoole-process.read.php",
        "Read data sending to the process."
    ],
    "SwooleProcesssignal": [
        "Swoole\\Process::signal",
        "swoole-process.signal.php",
        "Send signal to the child processes."
    ],
    "SwooleProcessstart": [
        "Swoole\\Process::start",
        "swoole-process.start.php",
        "Start the process."
    ],
    "SwooleProcessstatQueue": [
        "Swoole\\Process::statQueue",
        "swoole-process.statqueue.php",
        "Get the stats of the message queue used as the communication method between processes."
    ],
    "SwooleProcessuseQueue": [
        "Swoole\\Process::useQueue",
        "swoole-process.usequeue.php",
        "Create a message queue as the communication method between the parent process and child processes."
    ],
    "SwooleProcesswait": [
        "Swoole\\Process::wait",
        "swoole-process.wait.php",
        "Wait for the events of child processes."
    ],
    "SwooleProcesswrite": [
        "Swoole\\Process::write",
        "swoole-process.write.php",
        "Write data into the pipe and communicate with the parent process or child processes."
    ],
    "SwooleProcessconstruct": [
        "Swoole\\Process::__construct",
        "swoole-process.construct.php",
        "Construct a process."
    ],
    "SwooleProcessdestruct": [
        "Swoole\\Process::__destruct",
        "swoole-process.destruct.php",
        "Destory the process."
    ],
    "SwooleRedisServerformat": [
        "Swoole\\Redis\\Server::format",
        "swoole-redis-server.format.php",
        "Description"
    ],
    "SwooleRedisServersetHandler": [
        "Swoole\\Redis\\Server::setHandler",
        "swoole-redis-server.sethandler.php",
        "Description"
    ],
    "SwooleRedisServerstart": [
        "Swoole\\Redis\\Server::start",
        "swoole-redis-server.start.php",
        "Description"
    ],
    "SwooleSerializepack": [
        "Swoole\\Serialize::pack",
        "swoole-serialize.pack.php",
        "Serialize the data."
    ],
    "SwooleSerializeunpack": [
        "Swoole\\Serialize::unpack",
        "swoole-serialize.unpack.php",
        "Unserialize the data."
    ],
    "SwooleServeraddlistener": [
        "Swoole\\Server::addlistener",
        "swoole-server.addlistener.php",
        "Add a new listener to the server."
    ],
    "SwooleServeraddProcess": [
        "Swoole\\Server::addProcess",
        "swoole-server.addprocess.php",
        "Add a user defined swoole_process to the server."
    ],
    "SwooleServerafter": [
        "Swoole\\Server::after",
        "swoole-server.after.php",
        "Trigger a callback function after a period of time."
    ],
    "SwooleServerbind": [
        "Swoole\\Server::bind",
        "swoole-server.bind.php",
        "Bind the connection to a user defined user ID."
    ],
    "SwooleServerclearTimer": [
        "Swoole\\Server::clearTimer",
        "swoole-server.cleartimer.php",
        "Stop and destory a timer."
    ],
    "SwooleServerclose": [
        "Swoole\\Server::close",
        "swoole-server.close.php",
        "Close a connection to the client."
    ],
    "SwooleServerconfirm": [
        "Swoole\\Server::confirm",
        "swoole-server.confirm.php",
        "Check status of the connection."
    ],
    "SwooleServerconnectioninfo": [
        "Swoole\\Server::connection_info",
        "swoole-server.connection-info.php",
        "Get the connection info by file description."
    ],
    "SwooleServerconnectionlist": [
        "Swoole\\Server::connection_list",
        "swoole-server.connection-list.php",
        "Get all of the established connections."
    ],
    "SwooleServerdefer": [
        "Swoole\\Server::defer",
        "swoole-server.defer.php",
        "Delay execution of the callback function at the end of current EventLoop."
    ],
    "SwooleServerexist": [
        "Swoole\\Server::exist",
        "swoole-server.exist.php",
        "Check if the connection is existed."
    ],
    "SwooleServerfinish": [
        "Swoole\\Server::finish",
        "swoole-server.finish.php",
        "Used in task process for sending result to the worker process when the task is finished."
    ],
    "SwooleServergetClientInfo": [
        "Swoole\\Server::getClientInfo",
        "swoole-server.getclientinfo.php",
        "Get the connection info by file description."
    ],
    "SwooleServergetClientList": [
        "Swoole\\Server::getClientList",
        "swoole-server.getclientlist.php",
        "Get all of the established connections."
    ],
    "SwooleServergetLastError": [
        "Swoole\\Server::getLastError",
        "swoole-server.getlasterror.php",
        "Get the error code of the most recent error."
    ],
    "SwooleServerheartbeat": [
        "Swoole\\Server::heartbeat",
        "swoole-server.heartbeat.php",
        "Check all the connections on the server."
    ],
    "SwooleServerlisten": [
        "Swoole\\Server::listen",
        "swoole-server.listen.php",
        "Listen on the given IP and port, socket type."
    ],
    "SwooleServeron": [
        "Swoole\\Server::on",
        "swoole-server.on.php",
        "Register a callback function by event name."
    ],
    "SwooleServerpause": [
        "Swoole\\Server::pause",
        "swoole-server.pause.php",
        "Stop receiving data from the connection."
    ],
    "SwooleServerprotect": [
        "Swoole\\Server::protect",
        "swoole-server.protect.php",
        "Set the connection to be protected mode."
    ],
    "SwooleServerreload": [
        "Swoole\\Server::reload",
        "swoole-server.reload.php",
        "Restart all the worker process."
    ],
    "SwooleServerresume": [
        "Swoole\\Server::resume",
        "swoole-server.resume.php",
        "Start receving data from the connection."
    ],
    "SwooleServersend": [
        "Swoole\\Server::send",
        "swoole-server.send.php",
        "Send data to the client."
    ],
    "SwooleServersendfile": [
        "Swoole\\Server::sendfile",
        "swoole-server.sendfile.php",
        "Send file to the connection."
    ],
    "SwooleServersendMessage": [
        "Swoole\\Server::sendMessage",
        "swoole-server.sendmessage.php",
        "Send message to worker processes by ID."
    ],
    "SwooleServersendto": [
        "Swoole\\Server::sendto",
        "swoole-server.sendto.php",
        "Send data to the remote UDP address."
    ],
    "SwooleServersendwait": [
        "Swoole\\Server::sendwait",
        "swoole-server.sendwait.php",
        "Send data to the remote socket in the blocking way."
    ],
    "SwooleServerset": [
        "Swoole\\Server::set",
        "swoole-server.set.php",
        "Set the runtime settings of the swoole server."
    ],
    "SwooleServershutdown": [
        "Swoole\\Server::shutdown",
        "swoole-server.shutdown.php",
        "Shutdown the master server process, this function can be called in worker processes."
    ],
    "SwooleServerstart": [
        "Swoole\\Server::start",
        "swoole-server.start.php",
        "Start the Swoole server."
    ],
    "SwooleServerstats": [
        "Swoole\\Server::stats",
        "swoole-server.stats.php",
        "Get the stats of the Swoole server."
    ],
    "SwooleServerstop": [
        "Swoole\\Server::stop",
        "swoole-server.stop.php",
        "Stop the Swoole server."
    ],
    "SwooleServertask": [
        "Swoole\\Server::task",
        "swoole-server.task.php",
        "Send data to the task worker processes."
    ],
    "SwooleServertaskwait": [
        "Swoole\\Server::taskwait",
        "swoole-server.taskwait.php",
        "Send data to the task worker processes in blocking way."
    ],
    "SwooleServertaskWaitMulti": [
        "Swoole\\Server::taskWaitMulti",
        "swoole-server.taskwaitmulti.php",
        "Execute multiple tasks concurrently."
    ],
    "SwooleServertick": [
        "Swoole\\Server::tick",
        "swoole-server.tick.php",
        "Repeats a given function at every given time-interval."
    ],
    "SwooleServerconstruct": [
        "Swoole\\Server::__construct",
        "swoole-server.construct.php",
        "Construct a Swoole server."
    ],
    "SwooleServerPorton": [
        "Swoole\\Server\\Port::on",
        "swoole-server-port.on.php",
        "Register callback functions by event."
    ],
    "SwooleServerPortset": [
        "Swoole\\Server\\Port::set",
        "swoole-server-port.set.php",
        "Set protocol of the server port."
    ],
    "SwooleServerPortconstruct": [
        "Swoole\\Server\\Port::__construct",
        "swoole-server-port.construct.php",
        "Construct a server port"
    ],
    "SwooleServerPortdestruct": [
        "Swoole\\Server\\Port::__destruct",
        "swoole-server-port.destruct.php",
        "Destory server port"
    ],
    "SwooleTablecolumn": [
        "Swoole\\Table::column",
        "swoole-table.column.php",
        "Set the data type and size of the columns."
    ],
    "SwooleTablecount": [
        "Swoole\\Table::count",
        "swoole-table.count.php",
        "Count the rows in the table, or count all the elements in the table if $mode = 1."
    ],
    "SwooleTablecreate": [
        "Swoole\\Table::create",
        "swoole-table.create.php",
        "Create the swoole memory table."
    ],
    "SwooleTablecurrent": [
        "Swoole\\Table::current",
        "swoole-table.current.php",
        "Get the current row."
    ],
    "SwooleTabledecr": [
        "Swoole\\Table::decr",
        "swoole-table.decr.php",
        "Decrement the value in the Swoole table by $row_key and $column_key."
    ],
    "SwooleTabledel": [
        "Swoole\\Table::del",
        "swoole-table.del.php",
        "Delete a row in the Swoole table by $row_key."
    ],
    "SwooleTabledestroy": [
        "Swoole\\Table::destroy",
        "swoole-table.destroy.php",
        "Destroy the Swoole table."
    ],
    "SwooleTableexist": [
        "Swoole\\Table::exist",
        "swoole-table.exist.php",
        "Check if a row is existed by $row_key."
    ],
    "SwooleTableget": [
        "Swoole\\Table::get",
        "swoole-table.get.php",
        "Get the value in the Swoole table by $row_key and $column_key."
    ],
    "SwooleTableincr": [
        "Swoole\\Table::incr",
        "swoole-table.incr.php",
        "Increment the value by $row_key and $column_key."
    ],
    "SwooleTablekey": [
        "Swoole\\Table::key",
        "swoole-table.key.php",
        "Get the key of current row."
    ],
    "SwooleTablenext": [
        "Swoole\\Table::next",
        "swoole-table.next.php",
        "Iterator the next row."
    ],
    "SwooleTablerewind": [
        "Swoole\\Table::rewind",
        "swoole-table.rewind.php",
        "Rewind the iterator."
    ],
    "SwooleTableset": [
        "Swoole\\Table::set",
        "swoole-table.set.php",
        "Update a row of the table by $row_key."
    ],
    "SwooleTablevalid": [
        "Swoole\\Table::valid",
        "swoole-table.valid.php",
        "Check current if the current row is valid."
    ],
    "SwooleTableconstruct": [
        "Swoole\\Table::__construct",
        "swoole-table.construct.php",
        "Construct a Swoole memory table with fixed size."
    ],
    "SwooleTimerafter": [
        "Swoole\\Timer::after",
        "swoole-timer.after.php",
        "Trigger a callback function after a period of time."
    ],
    "SwooleTimerclear": [
        "Swoole\\Timer::clear",
        "swoole-timer.clear.php",
        "Delete a timer by timer ID."
    ],
    "SwooleTimerexists": [
        "Swoole\\Timer::exists",
        "swoole-timer.exists.php",
        "Check if a timer is existed."
    ],
    "SwooleTimertick": [
        "Swoole\\Timer::tick",
        "swoole-timer.tick.php",
        "Repeats a given function at every given time-interval."
    ],
    "SwooleWebSocketServerexist": [
        "Swoole\\WebSocket\\Server::exist",
        "swoole-websocket-server.exist.php",
        "Check if the file descriptor exists."
    ],
    "SwooleWebSocketServeron": [
        "Swoole\\WebSocket\\Server::on",
        "swoole-websocket-server.on.php",
        "Register event callback function"
    ],
    "SwooleWebSocketServerpack": [
        "Swoole\\WebSocket\\Server::pack",
        "swoole-websocket-server.pack.php",
        "Get a pack of binary data to send in a single frame."
    ],
    "SwooleWebSocketServerpush": [
        "Swoole\\WebSocket\\Server::push",
        "swoole-websocket-server.push.php",
        "Push data to the remote client."
    ],
    "SwooleWebSocketServerunpack": [
        "Swoole\\WebSocket\\Server::unpack",
        "swoole-websocket-server.unpack.php",
        "Unpack the binary data received from the client."
    ],
    "swooleasyncdnslookup": [
        "swoole_async_dns_lookup",
        "function.swoole-async-dns-lookup.php",
        "Async and non-blocking hostname to IP lookup"
    ],
    "swooleasyncread": [
        "swoole_async_read",
        "function.swoole-async-read.php",
        "Read file stream asynchronously"
    ],
    "swooleasyncreadfile": [
        "swoole_async_readfile",
        "function.swoole-async-readfile.php",
        "Read a file asynchronously"
    ],
    "swooleasyncset": [
        "swoole_async_set",
        "function.swoole-async-set.php",
        "Update the async I/O options"
    ],
    "swooleasyncwrite": [
        "swoole_async_write",
        "function.swoole-async-write.php",
        "Write data to a file stream asynchronously"
    ],
    "swooleasyncwritefile": [
        "swoole_async_writefile",
        "function.swoole-async-writefile.php",
        "Write data to a file asynchronously"
    ],
    "swooleclientselect": [
        "swoole_client_select",
        "function.swoole-client-select.php",
        "Get the file description which are ready to read/write or error"
    ],
    "swoolecpunum": [
        "swoole_cpu_num",
        "function.swoole-cpu-num.php",
        "Get the number of CPU"
    ],
    "swooleerrno": [
        "swoole_errno",
        "function.swoole-errno.php",
        "Get the error code of the latest system call"
    ],
    "swooleeventadd": [
        "swoole_event_add",
        "function.swoole-event-add.php",
        "Add new callback functions of a socket into the EventLoop"
    ],
    "swooleeventdefer": [
        "swoole_event_defer",
        "function.swoole-event-defer.php",
        "Add callback function to the next event loop"
    ],
    "swooleeventdel": [
        "swoole_event_del",
        "function.swoole-event-del.php",
        "Remove all event callback functions of a socket"
    ],
    "swooleeventexit": [
        "swoole_event_exit",
        "function.swoole-event-exit.php",
        "Exit the eventloop, only available at the client side"
    ],
    "swooleeventset": [
        "swoole_event_set",
        "function.swoole-event-set.php",
        "Update the event callback functions of a socket"
    ],
    "swooleeventwait": [
        "swoole_event_wait",
        "function.swoole-event-wait.php",
        "Start the event loop"
    ],
    "swooleeventwrite": [
        "swoole_event_write",
        "function.swoole-event-write.php",
        "Write data to a socket"
    ],
    "swoolegetlocalip": [
        "swoole_get_local_ip",
        "function.swoole-get-local-ip.php",
        "Get the IPv4 IP addresses of each NIC on the machine"
    ],
    "swoolelasterror": [
        "swoole_last_error",
        "function.swoole-last-error.php",
        "Get the lastest error message"
    ],
    "swooleloadmodule": [
        "swoole_load_module",
        "function.swoole-load-module.php",
        "Load a swoole extension"
    ],
    "swooleselect": [
        "swoole_select",
        "function.swoole-select.php",
        "Select the file descriptions which are ready to read/write or error in the eventloop"
    ],
    "swoolesetprocessname": [
        "swoole_set_process_name",
        "function.swoole-set-process-name.php",
        "Set the process name"
    ],
    "swoolestrerror": [
        "swoole_strerror",
        "function.swoole-strerror.php",
        "Convert the Errno into error messages"
    ],
    "swooletimerafter": [
        "swoole_timer_after",
        "function.swoole-timer-after.php",
        "Trigger a one time callback function in the future"
    ],
    "swooletimerexists": [
        "swoole_timer_exists",
        "function.swoole-timer-exists.php",
        "Check if a timer callback function is existed"
    ],
    "swooletimertick": [
        "swoole_timer_tick",
        "function.swoole-timer-tick.php",
        "Trigger a timer tick callback function by time interval"
    ],
    "swooleversion": [
        "swoole_version",
        "function.swoole-version.php",
        "Get the version of Swoole"
    ],
    "symlink": [
        "symlink",
        "function.symlink.php",
        "シンボリックリンクを作成する"
    ],
    "SyncEventfire": [
        "SyncEvent::fire",
        "syncevent.fire.php",
        "Fires/sets the event"
    ],
    "SyncEventreset": [
        "SyncEvent::reset",
        "syncevent.reset.php",
        "Resets a manual event"
    ],
    "SyncEventwait": [
        "SyncEvent::wait",
        "syncevent.wait.php",
        "Waits for the event to be fired/set"
    ],
    "SyncEventconstruct": [
        "SyncEvent::__construct",
        "syncevent.construct.php",
        "Constructs a new SyncEvent object"
    ],
    "SyncMutexlock": [
        "SyncMutex::lock",
        "syncmutex.lock.php",
        "Waits for an exclusive lock"
    ],
    "SyncMutexunlock": [
        "SyncMutex::unlock",
        "syncmutex.unlock.php",
        "Unlocks the mutex"
    ],
    "SyncMutexconstruct": [
        "SyncMutex::__construct",
        "syncmutex.construct.php",
        "Constructs a new SyncMutex object"
    ],
    "SyncReaderWriterreadlock": [
        "SyncReaderWriter::readlock",
        "syncreaderwriter.readlock.php",
        "Waits for a read lock"
    ],
    "SyncReaderWriterreadunlock": [
        "SyncReaderWriter::readunlock",
        "syncreaderwriter.readunlock.php",
        "Releases a read lock"
    ],
    "SyncReaderWriterwritelock": [
        "SyncReaderWriter::writelock",
        "syncreaderwriter.writelock.php",
        "Waits for an exclusive write lock"
    ],
    "SyncReaderWriterwriteunlock": [
        "SyncReaderWriter::writeunlock",
        "syncreaderwriter.writeunlock.php",
        "Releases a write lock"
    ],
    "SyncReaderWriterconstruct": [
        "SyncReaderWriter::__construct",
        "syncreaderwriter.construct.php",
        "Constructs a new SyncReaderWriter object"
    ],
    "SyncSemaphorelock": [
        "SyncSemaphore::lock",
        "syncsemaphore.lock.php",
        "Decreases the count of the semaphore or waits"
    ],
    "SyncSemaphoreunlock": [
        "SyncSemaphore::unlock",
        "syncsemaphore.unlock.php",
        "Increases the count of the semaphore"
    ],
    "SyncSemaphoreconstruct": [
        "SyncSemaphore::__construct",
        "syncsemaphore.construct.php",
        "Constructs a new SyncSemaphore object"
    ],
    "SyncSharedMemoryfirst": [
        "SyncSharedMemory::first",
        "syncsharedmemory.first.php",
        "Check to see if the object is the first instance system-wide of named shared memory"
    ],
    "SyncSharedMemoryread": [
        "SyncSharedMemory::read",
        "syncsharedmemory.read.php",
        "Copy data from named shared memory"
    ],
    "SyncSharedMemorysize": [
        "SyncSharedMemory::size",
        "syncsharedmemory.size.php",
        "Returns the size of the named shared memory"
    ],
    "SyncSharedMemorywrite": [
        "SyncSharedMemory::write",
        "syncsharedmemory.write.php",
        "Copy data to named shared memory"
    ],
    "SyncSharedMemoryconstruct": [
        "SyncSharedMemory::__construct",
        "syncsharedmemory.construct.php",
        "Constructs a new SyncSharedMemory object"
    ],
    "syslog": [
        "syslog",
        "function.syslog.php",
        "システムログのメッセージを生成する"
    ],
    "system": [
        "system",
        "function.system.php",
        "外部プログラムを実行し、出力を表示する"
    ],
    "sysgetloadavg": [
        "sys_getloadavg",
        "function.sys-getloadavg.php",
        "システムの平均負荷を取得する"
    ],
    "sysgettempdir": [
        "sys_get_temp_dir",
        "function.sys-get-temp-dir.php",
        "一時ファイル用に使用されるディレクトリのパスを返す"
    ],
    "Tablecount": [
        "Table::count",
        "mysql-xdevapi-table.count.php",
        "行の数を取得する"
    ],
    "Tabledelete": [
        "Table::delete",
        "mysql-xdevapi-table.delete.php",
        "テーブルから行を削除する"
    ],
    "TableexistsInDatabase": [
        "Table::existsInDatabase",
        "mysql-xdevapi-table.existsindatabase.php",
        "テーブルがデータベースに存在するかをチェックする"
    ],
    "TablegetName": [
        "Table::getName",
        "mysql-xdevapi-table.getname.php",
        "テーブル名を取得する"
    ],
    "TablegetSchema": [
        "Table::getSchema",
        "mysql-xdevapi-table.getschema.php",
        "テーブルスキーマを取得する"
    ],
    "TablegetSession": [
        "Table::getSession",
        "mysql-xdevapi-table.getsession.php",
        "テーブルを操作するためのセッションを取得する"
    ],
    "Tableinsert": [
        "Table::insert",
        "mysql-xdevapi-table.insert.php",
        "テーブルに行を挿入する"
    ],
    "TableisView": [
        "Table::isView",
        "mysql-xdevapi-table.isview.php",
        "テーブルがビューかどうかを調べる"
    ],
    "Tableselect": [
        "Table::select",
        "mysql-xdevapi-table.select.php",
        "テーブルから行を選択する"
    ],
    "Tableupdate": [
        "Table::update",
        "mysql-xdevapi-table.update.php",
        "テーブルの行を更新する"
    ],
    "Tableconstruct": [
        "Table::__construct",
        "mysql-xdevapi-table.construct.php",
        "Table のコンストラクタ"
    ],
    "TableDeletebind": [
        "TableDelete::bind",
        "mysql-xdevapi-tabledelete.bind.php",
        "delete のクエリパラメータをバインドする"
    ],
    "TableDeleteexecute": [
        "TableDelete::execute",
        "mysql-xdevapi-tabledelete.execute.php",
        "delete文を実行する"
    ],
    "TableDeletelimit": [
        "TableDelete::limit",
        "mysql-xdevapi-tabledelete.limit.php",
        "削除する行を限定する"
    ],
    "TableDeleteorderby": [
        "TableDelete::orderby",
        "mysql-xdevapi-tabledelete.orderby.php",
        "削除の際のソート条件を設定する"
    ],
    "TableDeletewhere": [
        "TableDelete::where",
        "mysql-xdevapi-tabledelete.where.php",
        "削除時の検索条件を設定する"
    ],
    "TableDeleteconstruct": [
        "TableDelete::__construct",
        "mysql-xdevapi-tabledelete.construct.php",
        "TableDelete のコンストラクタ"
    ],
    "TableInsertexecute": [
        "TableInsert::execute",
        "mysql-xdevapi-tableinsert.execute.php",
        "insert クエリを実行する"
    ],
    "TableInsertvalues": [
        "TableInsert::values",
        "mysql-xdevapi-tableinsert.values.php",
        "挿入する行の値を追加する"
    ],
    "TableInsertconstruct": [
        "TableInsert::__construct",
        "mysql-xdevapi-tableinsert.construct.php",
        "TableInsert クラスのコンストラクタ"
    ],
    "TableSelectbind": [
        "TableSelect::bind",
        "mysql-xdevapi-tableselect.bind.php",
        "select のクエリパラメータをバインドする"
    ],
    "TableSelectexecute": [
        "TableSelect::execute",
        "mysql-xdevapi-tableselect.execute.php",
        "select ステートメントを実行する"
    ],
    "TableSelectgroupBy": [
        "TableSelect::groupBy",
        "mysql-xdevapi-tableselect.groupby.php",
        "select 時のグループ化の条件を設定する"
    ],
    "TableSelecthaving": [
        "TableSelect::having",
        "mysql-xdevapi-tableselect.having.php",
        "select 句の having 条件を設定する"
    ],
    "TableSelectlimit": [
        "TableSelect::limit",
        "mysql-xdevapi-tableselect.limit.php",
        "選択される行の数を限定する"
    ],
    "TableSelectlockExclusive": [
        "TableSelect::lockExclusive",
        "mysql-xdevapi-tableselect.lockexclusive.php",
        "EXCLUSIVE LOCK を実行する"
    ],
    "TableSelectlockShared": [
        "TableSelect::lockShared",
        "mysql-xdevapi-tableselect.lockshared.php",
        "SHARED LOCK を実行する"
    ],
    "TableSelectoffset": [
        "TableSelect::offset",
        "mysql-xdevapi-tableselect.offset.php",
        "スキップするoffsetを設定する"
    ],
    "TableSelectorderby": [
        "TableSelect::orderby",
        "mysql-xdevapi-tableselect.orderby.php",
        "select 文のソート条件を設定する"
    ],
    "TableSelectwhere": [
        "TableSelect::where",
        "mysql-xdevapi-tableselect.where.php",
        "select 文の検索条件を設定する"
    ],
    "TableSelectconstruct": [
        "TableSelect::__construct",
        "mysql-xdevapi-tableselect.construct.php",
        "TableSelect のコンストラクタ"
    ],
    "TableUpdatebind": [
        "TableUpdate::bind",
        "mysql-xdevapi-tableupdate.bind.php",
        "update のクエリパラメータをバインドする"
    ],
    "TableUpdateexecute": [
        "TableUpdate::execute",
        "mysql-xdevapi-tableupdate.execute.php",
        "update クエリを実行する"
    ],
    "TableUpdatelimit": [
        "TableUpdate::limit",
        "mysql-xdevapi-tableupdate.limit.php",
        "更新する行の数を限定する"
    ],
    "TableUpdateorderby": [
        "TableUpdate::orderby",
        "mysql-xdevapi-tableupdate.orderby.php",
        "ソート条件を設定する"
    ],
    "TableUpdateset": [
        "TableUpdate::set",
        "mysql-xdevapi-tableupdate.set.php",
        "更新されるフィールドを追加する"
    ],
    "TableUpdatewhere": [
        "TableUpdate::where",
        "mysql-xdevapi-tableupdate.where.php",
        "検索フィルタを設定する"
    ],
    "TableUpdateconstruct": [
        "TableUpdate::__construct",
        "mysql-xdevapi-tableupdate.construct.php",
        "TableUpdate のコンストラクタ"
    ],
    "taint": [
        "taint",
        "function.taint.php",
        "文字列を汚染させる"
    ],
    "tan": [
        "tan",
        "function.tan.php",
        "正接（タンジェント）"
    ],
    "tanh": [
        "tanh",
        "function.tanh.php",
        "双曲線正接（ハイパボリックタンジェント）"
    ],
    "tcpwrapcheck": [
        "tcpwrap_check",
        "function.tcpwrap-check.php",
        "tcpwrap のチェックを実行する"
    ],
    "tempnam": [
        "tempnam",
        "function.tempnam.php",
        "一意なファイル名を生成する"
    ],
    "textdomain": [
        "textdomain",
        "function.textdomain.php",
        "デフォルトドメインを設定する"
    ],
    "Threaddetach": [
        "Thread::detach",
        "thread.detach.php",
        "Execution"
    ],
    "ThreadgetCreatorId": [
        "Thread::getCreatorId",
        "thread.getcreatorid.php",
        "識別"
    ],
    "ThreadgetCurrentThread": [
        "Thread::getCurrentThread",
        "thread.getcurrentthread.php",
        "Identification"
    ],
    "ThreadgetCurrentThreadId": [
        "Thread::getCurrentThreadId",
        "thread.getcurrentthreadid.php",
        "Identification"
    ],
    "ThreadgetThreadId": [
        "Thread::getThreadId",
        "thread.getthreadid.php",
        "識別"
    ],
    "Threadglobally": [
        "Thread::globally",
        "thread.globally.php",
        "Execution"
    ],
    "ThreadisJoined": [
        "Thread::isJoined",
        "thread.isjoined.php",
        "状態を検出する"
    ],
    "ThreadisStarted": [
        "Thread::isStarted",
        "thread.isstarted.php",
        "状態を検出する"
    ],
    "Threadjoin": [
        "Thread::join",
        "thread.join.php",
        "同期処理"
    ],
    "Threadkill": [
        "Thread::kill",
        "thread.kill.php",
        "Execution"
    ],
    "Threadstart": [
        "Thread::start",
        "thread.start.php",
        "実行する"
    ],
    "Threadedchunk": [
        "Threaded::chunk",
        "threaded.chunk.php",
        "Manipulation"
    ],
    "Threadedcount": [
        "Threaded::count",
        "threaded.count.php",
        "Manipulation"
    ],
    "Threadedextend": [
        "Threaded::extend",
        "threaded.extend.php",
        "Runtime Manipulation"
    ],
    "Threadedfrom": [
        "Threaded::from",
        "threaded.from.php",
        "Creation"
    ],
    "ThreadedgetTerminationInfo": [
        "Threaded::getTerminationInfo",
        "threaded.getterminationinfo.php",
        "Error Detection"
    ],
    "ThreadedisRunning": [
        "Threaded::isRunning",
        "thread.isrunning.php",
        "State Detection"
    ],
    "ThreadedisTerminated": [
        "Threaded::isTerminated",
        "threaded.isterminated.php",
        "State Detection"
    ],
    "ThreadedisWaiting": [
        "Threaded::isWaiting",
        "threaded.iswaiting.php",
        "State Detection"
    ],
    "Threadedlock": [
        "Threaded::lock",
        "threaded.lock.php",
        "Synchronization"
    ],
    "Threadedmerge": [
        "Threaded::merge",
        "threaded.merge.php",
        "Manipulation"
    ],
    "Threadednotify": [
        "Threaded::notify",
        "threaded.notify.php",
        "Synchronization"
    ],
    "ThreadednotifyOne": [
        "Threaded::notifyOne",
        "threaded.notifyone.php",
        "Synchronization"
    ],
    "Threadedpop": [
        "Threaded::pop",
        "threaded.pop.php",
        "Manipulation"
    ],
    "Threadedrun": [
        "Threaded::run",
        "threaded.run.php",
        "Execution"
    ],
    "Threadedshift": [
        "Threaded::shift",
        "threaded.shift.php",
        "Manipulation"
    ],
    "Threadedsynchronized": [
        "Threaded::synchronized",
        "threaded.synchronized.php",
        "Synchronization"
    ],
    "Threadedunlock": [
        "Threaded::unlock",
        "threaded.unlock.php",
        "Synchronization"
    ],
    "Threadedwait": [
        "Threaded::wait",
        "threaded.wait.php",
        "Synchronization"
    ],
    "ThrowablegetCode": [
        "Throwable::getCode",
        "throwable.getcode.php",
        "例外コードを取得する"
    ],
    "ThrowablegetFile": [
        "Throwable::getFile",
        "throwable.getfile.php",
        "オブジェクトが作られたファイル名を取得する"
    ],
    "ThrowablegetLine": [
        "Throwable::getLine",
        "throwable.getline.php",
        "オブジェクトのインスタンスが作られた行番号を取得する"
    ],
    "ThrowablegetMessage": [
        "Throwable::getMessage",
        "throwable.getmessage.php",
        "メッセージを取得する"
    ],
    "ThrowablegetPrevious": [
        "Throwable::getPrevious",
        "throwable.getprevious.php",
        "ひとつ前の Throwable を返す"
    ],
    "ThrowablegetTrace": [
        "Throwable::getTrace",
        "throwable.gettrace.php",
        "スタックトレースを取得する"
    ],
    "ThrowablegetTraceAsString": [
        "Throwable::getTraceAsString",
        "throwable.gettraceasstring.php",
        "スタックトレースを文字列として取得する"
    ],
    "ThrowabletoString": [
        "Throwable::__toString",
        "throwable.tostring.php",
        "スローされたオブジェクトの文字列表現を取得する"
    ],
    "tidyerrorBuffer": [
        "tidy::$errorBuffer",
        "tidy.props.errorbuffer.php",
        "指定したドキュメントのパースで発生した警告とエラーを返す"
    ],
    "tidybody": [
        "tidy::body",
        "tidy.body.php",
        "Tidy パースツリーの &lt;body&gt; タグから始まる tidyNode オブジェクトを返す"
    ],
    "tidycleanRepair": [
        "tidy::cleanRepair",
        "tidy.cleanrepair.php",
        "パースされたマークアップに設定に基く誤りの修正を行う"
    ],
    "tidydiagnose": [
        "tidy::diagnose",
        "tidy.diagnose.php",
        "パース、修正されたマークアップの診断を行う"
    ],
    "tidygetConfig": [
        "tidy::getConfig",
        "tidy.getconfig.php",
        "現在の Tidy の設定を取得する"
    ],
    "tidygetHtmlVer": [
        "tidy::getHtmlVer",
        "tidy.gethtmlver.php",
        "指定したドキュメントで検出された HTML バージョンを取得する"
    ],
    "tidygetOpt": [
        "tidy::getOpt",
        "tidy.getopt.php",
        "Tidy ドキュメントについて指定した設定オプションの値を返す"
    ],
    "tidygetOptDoc": [
        "tidy::getOptDoc",
        "tidy.getoptdoc.php",
        "与えられたオプション名に対するドキュメントを返す"
    ],
    "tidygetRelease": [
        "tidy::getRelease",
        "tidy.getrelease.php",
        "Tidy ライブラリのリリース日 (バージョン) を取得する"
    ],
    "tidygetStatus": [
        "tidy::getStatus",
        "tidy.getstatus.php",
        "指定したドキュメントのステータスを取得する"
    ],
    "tidyhead": [
        "tidy::head",
        "tidy.head.php",
        "Tidy パースツリーの &lt;head&gt; タグから始まる tidyNode オブジェクトを返す"
    ],
    "tidyhtml": [
        "tidy::html",
        "tidy.html.php",
        "Tidy パースツリーの &lt;html&gt; タグから始まる tidyNode オブジェクトを返す"
    ],
    "tidyisXhtml": [
        "tidy::isXhtml",
        "tidy.isxhtml.php",
        "ドキュメントが XHTML ドキュメントかどうかを示す"
    ],
    "tidyisXml": [
        "tidy::isXml",
        "tidy.isxml.php",
        "ドキュメントが一般的な XML ドキュメント (非 HTML/XHTML) かどうかを示す"
    ],
    "tidyparseFile": [
        "tidy::parseFile",
        "tidy.parsefile.php",
        "ファイルまたは URI にあるマークアップをパースする"
    ],
    "tidyparseString": [
        "tidy::parseString",
        "tidy.parsestring.php",
        "文字列にストアされたドキュメントをパースする"
    ],
    "tidyrepairFile": [
        "tidy::repairFile",
        "tidy.repairfile.php",
        "ファイルを修正し、それを文字列として返す"
    ],
    "tidyrepairString": [
        "tidy::repairString",
        "tidy.repairstring.php",
        "別途提供される設定ファイルを使用して文字列を修正する"
    ],
    "tidyroot": [
        "tidy::root",
        "tidy.root.php",
        "Tidy パースツリーのルートを表す tidyNode を返す"
    ],
    "tidyconstruct": [
        "tidy::__construct",
        "tidy.construct.php",
        "新しい tidy オブジェクトを作成する"
    ],
    "tidyNodegetParent": [
        "tidyNode::getParent",
        "tidynode.getparent.php",
        "カレントノードの親ノードを返す"
    ],
    "tidyNodehasChildren": [
        "tidyNode::hasChildren",
        "tidynode.haschildren.php",
        "ノードが子を持つかどうかを調べる"
    ],
    "tidyNodehasSiblings": [
        "tidyNode::hasSiblings",
        "tidynode.hassiblings.php",
        "このノードが兄弟ノードを持つかどうかを調べる"
    ],
    "tidyNodeisAsp": [
        "tidyNode::isAsp",
        "tidynode.isasp.php",
        "このノードが ASP かどうかを調べる"
    ],
    "tidyNodeisComment": [
        "tidyNode::isComment",
        "tidynode.iscomment.php",
        "このノードがコメントを表すものかどうかを調べる"
    ],
    "tidyNodeisHtml": [
        "tidyNode::isHtml",
        "tidynode.ishtml.php",
        "このノードが HTML要素 であるかどうかを調べる"
    ],
    "tidyNodeisJste": [
        "tidyNode::isJste",
        "tidynode.isjste.php",
        "このノードが JSTE であるかどうかを調べる"
    ],
    "tidyNodeisPhp": [
        "tidyNode::isPhp",
        "tidynode.isphp.php",
        "このノードが PHP であるかどうかを調べる"
    ],
    "tidyNodeisText": [
        "tidyNode::isText",
        "tidynode.istext.php",
        "このノードが (マークアップでない) テキストであるかどうかを調べる"
    ],
    "tidyNodeconstruct": [
        "tidyNode::__construct",
        "tidynode.construct.php",
        "Private constructor to disallow direct instantiation"
    ],
    "tidyaccesscount": [
        "tidy_access_count",
        "function.tidy-access-count.php",
        "指定したドキュメントについて発生したTidyアクセシビリティ警告の数を返す"
    ],
    "tidyconfigcount": [
        "tidy_config_count",
        "function.tidy-config-count.php",
        "指定したドキュメントについて発生した Tidy 設定エラーの数を返す"
    ],
    "tidyerrorcount": [
        "tidy_error_count",
        "function.tidy-error-count.php",
        "指定したドキュメントについて発生した Tidy エラーの数を返す"
    ],
    "tidygetoutput": [
        "tidy_get_output",
        "function.tidy-get-output.php",
        "パースされた Tidy マークアップを表す文字列を返す"
    ],
    "tidywarningcount": [
        "tidy_warning_count",
        "function.tidy-warning-count.php",
        "指定したドキュメントについて発生した Tidy 警告の数を返す"
    ],
    "time": [
        "time",
        "function.time.php",
        "現在の Unix タイムスタンプを返す"
    ],
    "timezoneabbreviationslist": [
        "timezone_abbreviations_list",
        "function.timezone-abbreviations-list.php",
        "DateTimeZone::listAbbreviations のエイリアス"
    ],
    "timezoneidentifierslist": [
        "timezone_identifiers_list",
        "function.timezone-identifiers-list.php",
        "DateTimeZone::listIdentifiers のエイリアス"
    ],
    "timezonelocationget": [
        "timezone_location_get",
        "function.timezone-location-get.php",
        "DateTimeZone::getLocation のエイリアス"
    ],
    "timezonenamefromabbr": [
        "timezone_name_from_abbr",
        "function.timezone-name-from-abbr.php",
        "略称からタイムゾーン名を返す"
    ],
    "timezonenameget": [
        "timezone_name_get",
        "function.timezone-name-get.php",
        "DateTimeZone::getName のエイリアス"
    ],
    "timezoneoffsetget": [
        "timezone_offset_get",
        "function.timezone-offset-get.php",
        "DateTimeZone::getOffset のエイリアス"
    ],
    "timezoneopen": [
        "timezone_open",
        "function.timezone-open.php",
        "DateTimeZone::__construct のエイリアス"
    ],
    "timezonetransitionsget": [
        "timezone_transitions_get",
        "function.timezone-transitions-get.php",
        "DateTimeZone::getTransitions のエイリアス"
    ],
    "timezoneversionget": [
        "timezone_version_get",
        "function.timezone-version-get.php",
        "timezonedb のバージョンを取得する"
    ],
    "timenanosleep": [
        "time_nanosleep",
        "function.time-nanosleep.php",
        "秒およびナノ秒単位で実行を遅延する"
    ],
    "timesleepuntil": [
        "time_sleep_until",
        "function.time-sleep-until.php",
        "指定した時刻まで実行を遅延する"
    ],
    "tmpfile": [
        "tmpfile",
        "function.tmpfile.php",
        "テンポラリファイルを作成する"
    ],
    "tokengetall": [
        "token_get_all",
        "function.token-get-all.php",
        "指定したソースを PHP トークンに分割する"
    ],
    "tokenname": [
        "token_name",
        "function.token-name.php",
        "指定した PHP トークンのシンボル名を取得する"
    ],
    "TokyoTyrantadd": [
        "TokyoTyrant::add",
        "tokyotyrant.add.php",
        "数値キーを加算する"
    ],
    "TokyoTyrantconnect": [
        "TokyoTyrant::connect",
        "tokyotyrant.connect.php",
        "データベースに接続する"
    ],
    "TokyoTyrantconnectUri": [
        "TokyoTyrant::connectUri",
        "tokyotyrant.connecturi.php",
        "データベースに接続する"
    ],
    "TokyoTyrantcopy": [
        "TokyoTyrant::copy",
        "tokyotyrant.copy.php",
        "データベースをコピーする"
    ],
    "TokyoTyrantext": [
        "TokyoTyrant::ext",
        "tokyotyrant.ext.php",
        "リモートスクリプトを実行する"
    ],
    "TokyoTyrantfwmKeys": [
        "TokyoTyrant::fwmKeys",
        "tokyotyrant.fwmkeys.php",
        "前方一致でマッチするキーを返す"
    ],
    "TokyoTyrantget": [
        "TokyoTyrant::get",
        "tokyotyrant.get.php",
        "値を取得する"
    ],
    "TokyoTyrantgetIterator": [
        "TokyoTyrant::getIterator",
        "tokyotyrant.getiterator.php",
        "イテレータを取得する"
    ],
    "TokyoTyrantnum": [
        "TokyoTyrant::num",
        "tokyotyrant.num.php",
        "データベース内のレコードの数を取得する"
    ],
    "TokyoTyrantout": [
        "TokyoTyrant::out",
        "tokyotyrant.out.php",
        "レコードを削除する"
    ],
    "TokyoTyrantput": [
        "TokyoTyrant::put",
        "tokyotyrant.put.php",
        "値を格納する"
    ],
    "TokyoTyrantputCat": [
        "TokyoTyrant::putCat",
        "tokyotyrant.putcat.php",
        "レコードを連結する"
    ],
    "TokyoTyrantputKeep": [
        "TokyoTyrant::putKeep",
        "tokyotyrant.putkeep.php",
        "レコードを書き込む"
    ],
    "TokyoTyrantputNr": [
        "TokyoTyrant::putNr",
        "tokyotyrant.putnr.php",
        "値を格納する"
    ],
    "TokyoTyrantputShl": [
        "TokyoTyrant::putShl",
        "tokyotyrant.putshl.php",
        "レコードを連結する"
    ],
    "TokyoTyrantrestore": [
        "TokyoTyrant::restore",
        "tokyotyrant.restore.php",
        "データベースをリストアする"
    ],
    "TokyoTyrantsetMaster": [
        "TokyoTyrant::setMaster",
        "tokyotyrant.setmaster.php",
        "レプリケーションのマスタを設定する"
    ],
    "TokyoTyrantsize": [
        "TokyoTyrant::size",
        "tokyotyrant.size.php",
        "値のサイズを返す"
    ],
    "TokyoTyrantstat": [
        "TokyoTyrant::stat",
        "tokyotyrant.stat.php",
        "統計情報を取得する"
    ],
    "TokyoTyrantsync": [
        "TokyoTyrant::sync",
        "tokyotyrant.sync.php",
        "データベースを同期させる"
    ],
    "TokyoTyranttune": [
        "TokyoTyrant::tune",
        "tokyotyrant.tune.php",
        "接続の値を調節する"
    ],
    "TokyoTyrantvanish": [
        "TokyoTyrant::vanish",
        "tokyotyrant.vanish.php",
        "データベースを空にする"
    ],
    "TokyoTyrantconstruct": [
        "TokyoTyrant::__construct",
        "tokyotyrant.construct.php",
        "新しい TokyoTyrant オブジェクトを作成する"
    ],
    "TokyoTyrantIteratorcurrent": [
        "TokyoTyrantIterator::current",
        "tokyotyrantiterator.current.php",
        "現在の値を取得する"
    ],
    "TokyoTyrantIteratorkey": [
        "TokyoTyrantIterator::key",
        "tokyotyrantiterator.key.php",
        "現在のキーを返す"
    ],
    "TokyoTyrantIteratornext": [
        "TokyoTyrantIterator::next",
        "tokyotyrantiterator.next.php",
        "次のキーに移動する"
    ],
    "TokyoTyrantIteratorrewind": [
        "TokyoTyrantIterator::rewind",
        "tokyotyrantiterator.rewind.php",
        "イテレータを巻き戻す"
    ],
    "TokyoTyrantIteratorvalid": [
        "TokyoTyrantIterator::valid",
        "tokyotyrantiterator.valid.php",
        "イテレータが有効かどうかを調べる"
    ],
    "TokyoTyrantIteratorconstruct": [
        "TokyoTyrantIterator::__construct",
        "tokyotyrantiterator.construct.php",
        "イテレータを作成する"
    ],
    "TokyoTyrantQueryaddCond": [
        "TokyoTyrantQuery::addCond",
        "tokyotyrantquery.addcond.php",
        "条件をクエリに追加する"
    ],
    "TokyoTyrantQuerycount": [
        "TokyoTyrantQuery::count",
        "tokyotyrantquery.count.php",
        "レコードを数える"
    ],
    "TokyoTyrantQuerycurrent": [
        "TokyoTyrantQuery::current",
        "tokyotyrantquery.current.php",
        "現在の要素を返す"
    ],
    "TokyoTyrantQueryhint": [
        "TokyoTyrantQuery::hint",
        "tokyotyrantquery.hint.php",
        "クエリのヒント文字列を取得する"
    ],
    "TokyoTyrantQuerykey": [
        "TokyoTyrantQuery::key",
        "tokyotyrantquery.key.php",
        "現在のキーを返す"
    ],
    "TokyoTyrantQuerymetaSearch": [
        "TokyoTyrantQuery::metaSearch",
        "tokyotyrantquery.metasearch.php",
        "複数のクエリからレコードを取得する"
    ],
    "TokyoTyrantQuerynext": [
        "TokyoTyrantQuery::next",
        "tokyotyrantquery.next.php",
        "イテレータを次のエントリに移動する"
    ],
    "TokyoTyrantQueryout": [
        "TokyoTyrantQuery::out",
        "tokyotyrantquery.out.php",
        "クエリに基づいてレコードを削除する"
    ],
    "TokyoTyrantQueryrewind": [
        "TokyoTyrantQuery::rewind",
        "tokyotyrantquery.rewind.php",
        "イテレータを巻き戻す"
    ],
    "TokyoTyrantQuerysearch": [
        "TokyoTyrantQuery::search",
        "tokyotyrantquery.search.php",
        "レコードを検索する"
    ],
    "TokyoTyrantQuerysetLimit": [
        "TokyoTyrantQuery::setLimit",
        "tokyotyrantquery.setlimit.php",
        "結果を制限する"
    ],
    "TokyoTyrantQuerysetOrder": [
        "TokyoTyrantQuery::setOrder",
        "tokyotyrantquery.setorder.php",
        "結果を並べ替える"
    ],
    "TokyoTyrantQueryvalid": [
        "TokyoTyrantQuery::valid",
        "tokyotyrantquery.valid.php",
        "現在のアイテムの有効性をチェックする"
    ],
    "TokyoTyrantQueryconstruct": [
        "TokyoTyrantQuery::__construct",
        "tokyotyrantquery.construct.php",
        "新しいクエリを作成する"
    ],
    "TokyoTyrantTableadd": [
        "TokyoTyrantTable::add",
        "tokyotyranttable.add.php",
        "レコードを追加する"
    ],
    "TokyoTyrantTablegenUid": [
        "TokyoTyrantTable::genUid",
        "tokyotyranttable.genuid.php",
        "一意な id を生成する"
    ],
    "TokyoTyrantTableget": [
        "TokyoTyrantTable::get",
        "tokyotyranttable.get.php",
        "行を取得する"
    ],
    "TokyoTyrantTablegetIterator": [
        "TokyoTyrantTable::getIterator",
        "tokyotyranttable.getiterator.php",
        "イテレータを取得する"
    ],
    "TokyoTyrantTablegetQuery": [
        "TokyoTyrantTable::getQuery",
        "tokyotyranttable.getquery.php",
        "クエリオブジェクトを取得する"
    ],
    "TokyoTyrantTableout": [
        "TokyoTyrantTable::out",
        "tokyotyranttable.out.php",
        "レコードを削除する"
    ],
    "TokyoTyrantTableput": [
        "TokyoTyrantTable::put",
        "tokyotyranttable.put.php",
        "行を格納する"
    ],
    "TokyoTyrantTableputCat": [
        "TokyoTyrantTable::putCat",
        "tokyotyranttable.putcat.php",
        "行を連結する"
    ],
    "TokyoTyrantTableputKeep": [
        "TokyoTyrantTable::putKeep",
        "tokyotyranttable.putkeep.php",
        "新しいレコードを書き込む"
    ],
    "TokyoTyrantTableputNr": [
        "TokyoTyrantTable::putNr",
        "tokyotyranttable.putnr.php",
        "値を格納する"
    ],
    "TokyoTyrantTableputShl": [
        "TokyoTyrantTable::putShl",
        "tokyotyranttable.putshl.php",
        "レコードを連結する"
    ],
    "TokyoTyrantTablesetIndex": [
        "TokyoTyrantTable::setIndex",
        "tokyotyranttable.setindex.php",
        "インデックスを設定する"
    ],
    "touch": [
        "touch",
        "function.touch.php",
        "ファイルの最終アクセス時刻および最終更新日をセットする"
    ],
    "traderacos": [
        "trader_acos",
        "function.trader-acos.php",
        "Vector Trigonometric ACos"
    ],
    "traderad": [
        "trader_ad",
        "function.trader-ad.php",
        "Chaikin A/D Line"
    ],
    "traderadd": [
        "trader_add",
        "function.trader-add.php",
        "Vector Arithmetic Add"
    ],
    "traderadosc": [
        "trader_adosc",
        "function.trader-adosc.php",
        "Chaikin A/D Oscillator"
    ],
    "traderadx": [
        "trader_adx",
        "function.trader-adx.php",
        "Average Directional Movement Index"
    ],
    "traderadxr": [
        "trader_adxr",
        "function.trader-adxr.php",
        "Average Directional Movement Index Rating"
    ],
    "traderapo": [
        "trader_apo",
        "function.trader-apo.php",
        "Absolute Price Oscillator"
    ],
    "traderaroon": [
        "trader_aroon",
        "function.trader-aroon.php",
        "Aroon"
    ],
    "traderaroonosc": [
        "trader_aroonosc",
        "function.trader-aroonosc.php",
        "Aroon Oscillator"
    ],
    "traderasin": [
        "trader_asin",
        "function.trader-asin.php",
        "Vector Trigonometric ASin"
    ],
    "traderatan": [
        "trader_atan",
        "function.trader-atan.php",
        "Vector Trigonometric ATan"
    ],
    "traderatr": [
        "trader_atr",
        "function.trader-atr.php",
        "Average True Range"
    ],
    "traderavgprice": [
        "trader_avgprice",
        "function.trader-avgprice.php",
        "Average Price"
    ],
    "traderbbands": [
        "trader_bbands",
        "function.trader-bbands.php",
        "Bollinger Bands"
    ],
    "traderbeta": [
        "trader_beta",
        "function.trader-beta.php",
        "Beta"
    ],
    "traderbop": [
        "trader_bop",
        "function.trader-bop.php",
        "Balance Of Power"
    ],
    "tradercci": [
        "trader_cci",
        "function.trader-cci.php",
        "Commodity Channel Index"
    ],
    "tradercdl2crows": [
        "trader_cdl2crows",
        "function.trader-cdl2crows.php",
        "Two Crows"
    ],
    "tradercdl3blackcrows": [
        "trader_cdl3blackcrows",
        "function.trader-cdl3blackcrows.php",
        "Three Black Crows"
    ],
    "tradercdl3inside": [
        "trader_cdl3inside",
        "function.trader-cdl3inside.php",
        "Three Inside Up/Down"
    ],
    "tradercdl3linestrike": [
        "trader_cdl3linestrike",
        "function.trader-cdl3linestrike.php",
        "Three-Line Strike"
    ],
    "tradercdl3outside": [
        "trader_cdl3outside",
        "function.trader-cdl3outside.php",
        "Three Outside Up/Down"
    ],
    "tradercdl3starsinsouth": [
        "trader_cdl3starsinsouth",
        "function.trader-cdl3starsinsouth.php",
        "Three Stars In The South"
    ],
    "tradercdl3whitesoldiers": [
        "trader_cdl3whitesoldiers",
        "function.trader-cdl3whitesoldiers.php",
        "Three Advancing White Soldiers"
    ],
    "tradercdlabandonedbaby": [
        "trader_cdlabandonedbaby",
        "function.trader-cdlabandonedbaby.php",
        "Abandoned Baby"
    ],
    "tradercdladvanceblock": [
        "trader_cdladvanceblock",
        "function.trader-cdladvanceblock.php",
        "Advance Block"
    ],
    "tradercdlbelthold": [
        "trader_cdlbelthold",
        "function.trader-cdlbelthold.php",
        "Belt-hold"
    ],
    "tradercdlbreakaway": [
        "trader_cdlbreakaway",
        "function.trader-cdlbreakaway.php",
        "Breakaway"
    ],
    "tradercdlclosingmarubozu": [
        "trader_cdlclosingmarubozu",
        "function.trader-cdlclosingmarubozu.php",
        "Closing Marubozu"
    ],
    "tradercdlconcealbabyswall": [
        "trader_cdlconcealbabyswall",
        "function.trader-cdlconcealbabyswall.php",
        "Concealing Baby Swallow"
    ],
    "tradercdlcounterattack": [
        "trader_cdlcounterattack",
        "function.trader-cdlcounterattack.php",
        "Counterattack"
    ],
    "tradercdldarkcloudcover": [
        "trader_cdldarkcloudcover",
        "function.trader-cdldarkcloudcover.php",
        "Dark Cloud Cover"
    ],
    "tradercdldoji": [
        "trader_cdldoji",
        "function.trader-cdldoji.php",
        "Doji"
    ],
    "tradercdldojistar": [
        "trader_cdldojistar",
        "function.trader-cdldojistar.php",
        "Doji Star"
    ],
    "tradercdldragonflydoji": [
        "trader_cdldragonflydoji",
        "function.trader-cdldragonflydoji.php",
        "Dragonfly Doji"
    ],
    "tradercdlengulfing": [
        "trader_cdlengulfing",
        "function.trader-cdlengulfing.php",
        "Engulfing Pattern"
    ],
    "tradercdleveningdojistar": [
        "trader_cdleveningdojistar",
        "function.trader-cdleveningdojistar.php",
        "Evening Doji Star"
    ],
    "tradercdleveningstar": [
        "trader_cdleveningstar",
        "function.trader-cdleveningstar.php",
        "Evening Star"
    ],
    "tradercdlgapsidesidewhite": [
        "trader_cdlgapsidesidewhite",
        "function.trader-cdlgapsidesidewhite.php",
        "Up/Down-gap side-by-side white lines"
    ],
    "tradercdlgravestonedoji": [
        "trader_cdlgravestonedoji",
        "function.trader-cdlgravestonedoji.php",
        "Gravestone Doji"
    ],
    "tradercdlhammer": [
        "trader_cdlhammer",
        "function.trader-cdlhammer.php",
        "Hammer"
    ],
    "tradercdlhangingman": [
        "trader_cdlhangingman",
        "function.trader-cdlhangingman.php",
        "Hanging Man"
    ],
    "tradercdlharami": [
        "trader_cdlharami",
        "function.trader-cdlharami.php",
        "Harami Pattern"
    ],
    "tradercdlharamicross": [
        "trader_cdlharamicross",
        "function.trader-cdlharamicross.php",
        "Harami Cross Pattern"
    ],
    "tradercdlhighwave": [
        "trader_cdlhighwave",
        "function.trader-cdlhighwave.php",
        "High-Wave Candle"
    ],
    "tradercdlhikkake": [
        "trader_cdlhikkake",
        "function.trader-cdlhikkake.php",
        "Hikkake Pattern"
    ],
    "tradercdlhikkakemod": [
        "trader_cdlhikkakemod",
        "function.trader-cdlhikkakemod.php",
        "Modified Hikkake Pattern"
    ],
    "tradercdlhomingpigeon": [
        "trader_cdlhomingpigeon",
        "function.trader-cdlhomingpigeon.php",
        "Homing Pigeon"
    ],
    "tradercdlidentical3crows": [
        "trader_cdlidentical3crows",
        "function.trader-cdlidentical3crows.php",
        "Identical Three Crows"
    ],
    "tradercdlinneck": [
        "trader_cdlinneck",
        "function.trader-cdlinneck.php",
        "In-Neck Pattern"
    ],
    "tradercdlinvertedhammer": [
        "trader_cdlinvertedhammer",
        "function.trader-cdlinvertedhammer.php",
        "Inverted Hammer"
    ],
    "tradercdlkicking": [
        "trader_cdlkicking",
        "function.trader-cdlkicking.php",
        "Kicking"
    ],
    "tradercdlkickingbylength": [
        "trader_cdlkickingbylength",
        "function.trader-cdlkickingbylength.php",
        "Kicking - bull/bear determined by the longer marubozu"
    ],
    "tradercdlladderbottom": [
        "trader_cdlladderbottom",
        "function.trader-cdlladderbottom.php",
        "Ladder Bottom"
    ],
    "tradercdllongleggeddoji": [
        "trader_cdllongleggeddoji",
        "function.trader-cdllongleggeddoji.php",
        "Long Legged Doji"
    ],
    "tradercdllongline": [
        "trader_cdllongline",
        "function.trader-cdllongline.php",
        "Long Line Candle"
    ],
    "tradercdlmarubozu": [
        "trader_cdlmarubozu",
        "function.trader-cdlmarubozu.php",
        "Marubozu"
    ],
    "tradercdlmatchinglow": [
        "trader_cdlmatchinglow",
        "function.trader-cdlmatchinglow.php",
        "Matching Low"
    ],
    "tradercdlmathold": [
        "trader_cdlmathold",
        "function.trader-cdlmathold.php",
        "Mat Hold"
    ],
    "tradercdlmorningdojistar": [
        "trader_cdlmorningdojistar",
        "function.trader-cdlmorningdojistar.php",
        "Morning Doji Star"
    ],
    "tradercdlmorningstar": [
        "trader_cdlmorningstar",
        "function.trader-cdlmorningstar.php",
        "Morning Star"
    ],
    "tradercdlonneck": [
        "trader_cdlonneck",
        "function.trader-cdlonneck.php",
        "On-Neck Pattern"
    ],
    "tradercdlpiercing": [
        "trader_cdlpiercing",
        "function.trader-cdlpiercing.php",
        "Piercing Pattern"
    ],
    "tradercdlrickshawman": [
        "trader_cdlrickshawman",
        "function.trader-cdlrickshawman.php",
        "Rickshaw Man"
    ],
    "tradercdlrisefall3methods": [
        "trader_cdlrisefall3methods",
        "function.trader-cdlrisefall3methods.php",
        "Rising/Falling Three Methods"
    ],
    "tradercdlseparatinglines": [
        "trader_cdlseparatinglines",
        "function.trader-cdlseparatinglines.php",
        "Separating Lines"
    ],
    "tradercdlshootingstar": [
        "trader_cdlshootingstar",
        "function.trader-cdlshootingstar.php",
        "Shooting Star"
    ],
    "tradercdlshortline": [
        "trader_cdlshortline",
        "function.trader-cdlshortline.php",
        "Short Line Candle"
    ],
    "tradercdlspinningtop": [
        "trader_cdlspinningtop",
        "function.trader-cdlspinningtop.php",
        "Spinning Top"
    ],
    "tradercdlstalledpattern": [
        "trader_cdlstalledpattern",
        "function.trader-cdlstalledpattern.php",
        "Stalled Pattern"
    ],
    "tradercdlsticksandwich": [
        "trader_cdlsticksandwich",
        "function.trader-cdlsticksandwich.php",
        "Stick Sandwich"
    ],
    "tradercdltakuri": [
        "trader_cdltakuri",
        "function.trader-cdltakuri.php",
        "Takuri (Dragonfly Doji with very long lower shadow)"
    ],
    "tradercdltasukigap": [
        "trader_cdltasukigap",
        "function.trader-cdltasukigap.php",
        "Tasuki Gap"
    ],
    "tradercdlthrusting": [
        "trader_cdlthrusting",
        "function.trader-cdlthrusting.php",
        "Thrusting Pattern"
    ],
    "tradercdltristar": [
        "trader_cdltristar",
        "function.trader-cdltristar.php",
        "Tristar Pattern"
    ],
    "tradercdlunique3river": [
        "trader_cdlunique3river",
        "function.trader-cdlunique3river.php",
        "Unique 3 River"
    ],
    "tradercdlupsidegap2crows": [
        "trader_cdlupsidegap2crows",
        "function.trader-cdlupsidegap2crows.php",
        "Upside Gap Two Crows"
    ],
    "tradercdlxsidegap3methods": [
        "trader_cdlxsidegap3methods",
        "function.trader-cdlxsidegap3methods.php",
        "Upside/Downside Gap Three Methods"
    ],
    "traderceil": [
        "trader_ceil",
        "function.trader-ceil.php",
        "Vector Ceil"
    ],
    "tradercmo": [
        "trader_cmo",
        "function.trader-cmo.php",
        "Chande Momentum Oscillator"
    ],
    "tradercorrel": [
        "trader_correl",
        "function.trader-correl.php",
        "Pearson's Correlation Coefficient (r)"
    ],
    "tradercos": [
        "trader_cos",
        "function.trader-cos.php",
        "Vector Trigonometric Cos"
    ],
    "tradercosh": [
        "trader_cosh",
        "function.trader-cosh.php",
        "Vector Trigonometric Cosh"
    ],
    "traderdema": [
        "trader_dema",
        "function.trader-dema.php",
        "Double Exponential Moving Average"
    ],
    "traderdiv": [
        "trader_div",
        "function.trader-div.php",
        "Vector Arithmetic Div"
    ],
    "traderdx": [
        "trader_dx",
        "function.trader-dx.php",
        "Directional Movement Index"
    ],
    "traderema": [
        "trader_ema",
        "function.trader-ema.php",
        "Exponential Moving Average"
    ],
    "tradererrno": [
        "trader_errno",
        "function.trader-errno.php",
        "Get error code"
    ],
    "traderexp": [
        "trader_exp",
        "function.trader-exp.php",
        "Vector Arithmetic Exp"
    ],
    "traderfloor": [
        "trader_floor",
        "function.trader-floor.php",
        "Vector Floor"
    ],
    "tradergetcompat": [
        "trader_get_compat",
        "function.trader-get-compat.php",
        "Get compatibility mode"
    ],
    "tradergetunstableperiod": [
        "trader_get_unstable_period",
        "function.trader-get-unstable-period.php",
        "Get unstable period"
    ],
    "traderhtdcperiod": [
        "trader_ht_dcperiod",
        "function.trader-ht-dcperiod.php",
        "Hilbert Transform - Dominant Cycle Period"
    ],
    "traderhtdcphase": [
        "trader_ht_dcphase",
        "function.trader-ht-dcphase.php",
        "Hilbert Transform - Dominant Cycle Phase"
    ],
    "traderhtphasor": [
        "trader_ht_phasor",
        "function.trader-ht-phasor.php",
        "Hilbert Transform - Phasor Components"
    ],
    "traderhtsine": [
        "trader_ht_sine",
        "function.trader-ht-sine.php",
        "Hilbert Transform - SineWave"
    ],
    "traderhttrendline": [
        "trader_ht_trendline",
        "function.trader-ht-trendline.php",
        "Hilbert Transform - Instantaneous Trendline"
    ],
    "traderhttrendmode": [
        "trader_ht_trendmode",
        "function.trader-ht-trendmode.php",
        "Hilbert Transform - Trend vs Cycle Mode"
    ],
    "traderkama": [
        "trader_kama",
        "function.trader-kama.php",
        "Kaufman Adaptive Moving Average"
    ],
    "traderlinearreg": [
        "trader_linearreg",
        "function.trader-linearreg.php",
        "Linear Regression"
    ],
    "traderlinearregangle": [
        "trader_linearreg_angle",
        "function.trader-linearreg-angle.php",
        "Linear Regression Angle"
    ],
    "traderlinearregintercept": [
        "trader_linearreg_intercept",
        "function.trader-linearreg-intercept.php",
        "Linear Regression Intercept"
    ],
    "traderlinearregslope": [
        "trader_linearreg_slope",
        "function.trader-linearreg-slope.php",
        "Linear Regression Slope"
    ],
    "traderln": [
        "trader_ln",
        "function.trader-ln.php",
        "Vector Log Natural"
    ],
    "traderlog10": [
        "trader_log10",
        "function.trader-log10.php",
        "Vector Log10"
    ],
    "traderma": [
        "trader_ma",
        "function.trader-ma.php",
        "Moving average"
    ],
    "tradermacd": [
        "trader_macd",
        "function.trader-macd.php",
        "Moving Average Convergence/Divergence"
    ],
    "tradermacdext": [
        "trader_macdext",
        "function.trader-macdext.php",
        "MACD with controllable MA type"
    ],
    "tradermacdfix": [
        "trader_macdfix",
        "function.trader-macdfix.php",
        "Moving Average Convergence/Divergence Fix 12/26"
    ],
    "tradermama": [
        "trader_mama",
        "function.trader-mama.php",
        "MESA Adaptive Moving Average"
    ],
    "tradermavp": [
        "trader_mavp",
        "function.trader-mavp.php",
        "Moving average with variable period"
    ],
    "tradermax": [
        "trader_max",
        "function.trader-max.php",
        "Highest value over a specified period"
    ],
    "tradermaxindex": [
        "trader_maxindex",
        "function.trader-maxindex.php",
        "Index of highest value over a specified period"
    ],
    "tradermedprice": [
        "trader_medprice",
        "function.trader-medprice.php",
        "Median Price"
    ],
    "tradermfi": [
        "trader_mfi",
        "function.trader-mfi.php",
        "Money Flow Index"
    ],
    "tradermidpoint": [
        "trader_midpoint",
        "function.trader-midpoint.php",
        "MidPoint over period"
    ],
    "tradermidprice": [
        "trader_midprice",
        "function.trader-midprice.php",
        "Midpoint Price over period"
    ],
    "tradermin": [
        "trader_min",
        "function.trader-min.php",
        "Lowest value over a specified period"
    ],
    "traderminindex": [
        "trader_minindex",
        "function.trader-minindex.php",
        "Index of lowest value over a specified period"
    ],
    "traderminmax": [
        "trader_minmax",
        "function.trader-minmax.php",
        "Lowest and highest values over a specified period"
    ],
    "traderminmaxindex": [
        "trader_minmaxindex",
        "function.trader-minmaxindex.php",
        "Indexes of lowest and highest values over a specified period"
    ],
    "traderminusdi": [
        "trader_minus_di",
        "function.trader-minus-di.php",
        "Minus Directional Indicator"
    ],
    "traderminusdm": [
        "trader_minus_dm",
        "function.trader-minus-dm.php",
        "Minus Directional Movement"
    ],
    "tradermom": [
        "trader_mom",
        "function.trader-mom.php",
        "Momentum"
    ],
    "tradermult": [
        "trader_mult",
        "function.trader-mult.php",
        "Vector Arithmetic Mult"
    ],
    "tradernatr": [
        "trader_natr",
        "function.trader-natr.php",
        "Normalized Average True Range"
    ],
    "traderobv": [
        "trader_obv",
        "function.trader-obv.php",
        "On Balance Volume"
    ],
    "traderplusdi": [
        "trader_plus_di",
        "function.trader-plus-di.php",
        "Plus Directional Indicator"
    ],
    "traderplusdm": [
        "trader_plus_dm",
        "function.trader-plus-dm.php",
        "Plus Directional Movement"
    ],
    "traderppo": [
        "trader_ppo",
        "function.trader-ppo.php",
        "Percentage Price Oscillator"
    ],
    "traderroc": [
        "trader_roc",
        "function.trader-roc.php",
        "Rate of change : ((price/prevPrice)-1)*100"
    ],
    "traderrocp": [
        "trader_rocp",
        "function.trader-rocp.php",
        "Rate of change Percentage: (price-prevPrice)/prevPrice"
    ],
    "traderrocr": [
        "trader_rocr",
        "function.trader-rocr.php",
        "Rate of change ratio: (price/prevPrice)"
    ],
    "traderrocr100": [
        "trader_rocr100",
        "function.trader-rocr100.php",
        "Rate of change ratio 100 scale: (price/prevPrice)*100"
    ],
    "traderrsi": [
        "trader_rsi",
        "function.trader-rsi.php",
        "Relative Strength Index"
    ],
    "tradersar": [
        "trader_sar",
        "function.trader-sar.php",
        "Parabolic SAR"
    ],
    "tradersarext": [
        "trader_sarext",
        "function.trader-sarext.php",
        "Parabolic SAR - Extended"
    ],
    "tradersetcompat": [
        "trader_set_compat",
        "function.trader-set-compat.php",
        "Set compatibility mode"
    ],
    "tradersetunstableperiod": [
        "trader_set_unstable_period",
        "function.trader-set-unstable-period.php",
        "Set unstable period"
    ],
    "tradersin": [
        "trader_sin",
        "function.trader-sin.php",
        "Vector Trigonometric Sin"
    ],
    "tradersinh": [
        "trader_sinh",
        "function.trader-sinh.php",
        "Vector Trigonometric Sinh"
    ],
    "tradersma": [
        "trader_sma",
        "function.trader-sma.php",
        "Simple Moving Average"
    ],
    "tradersqrt": [
        "trader_sqrt",
        "function.trader-sqrt.php",
        "Vector Square Root"
    ],
    "traderstddev": [
        "trader_stddev",
        "function.trader-stddev.php",
        "Standard Deviation"
    ],
    "traderstoch": [
        "trader_stoch",
        "function.trader-stoch.php",
        "Stochastic"
    ],
    "traderstochf": [
        "trader_stochf",
        "function.trader-stochf.php",
        "Stochastic Fast"
    ],
    "traderstochrsi": [
        "trader_stochrsi",
        "function.trader-stochrsi.php",
        "Stochastic Relative Strength Index"
    ],
    "tradersub": [
        "trader_sub",
        "function.trader-sub.php",
        "Vector Arithmetic Subtraction"
    ],
    "tradersum": [
        "trader_sum",
        "function.trader-sum.php",
        "Summation"
    ],
    "tradert3": [
        "trader_t3",
        "function.trader-t3.php",
        "Triple Exponential Moving Average (T3)"
    ],
    "tradertan": [
        "trader_tan",
        "function.trader-tan.php",
        "Vector Trigonometric Tan"
    ],
    "tradertanh": [
        "trader_tanh",
        "function.trader-tanh.php",
        "Vector Trigonometric Tanh"
    ],
    "tradertema": [
        "trader_tema",
        "function.trader-tema.php",
        "Triple Exponential Moving Average"
    ],
    "tradertrange": [
        "trader_trange",
        "function.trader-trange.php",
        "True Range"
    ],
    "tradertrima": [
        "trader_trima",
        "function.trader-trima.php",
        "Triangular Moving Average"
    ],
    "tradertrix": [
        "trader_trix",
        "function.trader-trix.php",
        "1-day Rate-Of-Change (ROC) of a Triple Smooth EMA"
    ],
    "tradertsf": [
        "trader_tsf",
        "function.trader-tsf.php",
        "Time Series Forecast"
    ],
    "tradertypprice": [
        "trader_typprice",
        "function.trader-typprice.php",
        "Typical Price"
    ],
    "traderultosc": [
        "trader_ultosc",
        "function.trader-ultosc.php",
        "Ultimate Oscillator"
    ],
    "tradervar": [
        "trader_var",
        "function.trader-var.php",
        "Variance"
    ],
    "traderwclprice": [
        "trader_wclprice",
        "function.trader-wclprice.php",
        "Weighted Close Price"
    ],
    "traderwillr": [
        "trader_willr",
        "function.trader-willr.php",
        "Williams' %R"
    ],
    "traderwma": [
        "trader_wma",
        "function.trader-wma.php",
        "Weighted Moving Average"
    ],
    "traitexists": [
        "trait_exists",
        "function.trait-exists.php",
        "トレイトが存在するかどうかを調べる"
    ],
    "Transliteratorcreate": [
        "Transliterator::create",
        "transliterator.create.php",
        "Transliterator を作成する"
    ],
    "TransliteratorcreateFromRules": [
        "Transliterator::createFromRules",
        "transliterator.createfromrules.php",
        "規則に基づいた Transliterator を作成する"
    ],
    "TransliteratorcreateInverse": [
        "Transliterator::createInverse",
        "transliterator.createinverse.php",
        "逆方向の Transliterator を作成する"
    ],
    "TransliteratorgetErrorCode": [
        "Transliterator::getErrorCode",
        "transliterator.geterrorcode.php",
        "直近のエラーコードを取得する"
    ],
    "TransliteratorgetErrorMessage": [
        "Transliterator::getErrorMessage",
        "transliterator.geterrormessage.php",
        "直近のエラーメッセージを取得する"
    ],
    "TransliteratorlistIDs": [
        "Transliterator::listIDs",
        "transliterator.listids.php",
        "Transliterator の ID を取得する"
    ],
    "Transliteratortransliterate": [
        "Transliterator::transliterate",
        "transliterator.transliterate.php",
        "文字列を音訳する"
    ],
    "Transliteratorconstruct": [
        "Transliterator::__construct",
        "transliterator.construct.php",
        "インスタンス化を拒否するために private にしたコンストラクタ"
    ],
    "triggererror": [
        "trigger_error",
        "function.trigger-error.php",
        "ユーザーレベルのエラー/警告/通知メッセージを生成する"
    ],
    "trim": [
        "trim",
        "function.trim.php",
        "文字列の先頭および末尾にあるホワイトスペースを取り除く"
    ],
    "uasort": [
        "uasort",
        "function.uasort.php",
        "ユーザー定義の比較関数で配列をソートし、連想インデックスを保持する"
    ],
    "ucfirst": [
        "ucfirst",
        "function.ucfirst.php",
        "文字列の最初の文字を大文字にする"
    ],
    "UConverterconvert": [
        "UConverter::convert",
        "uconverter.convert.php",
        "ある文字セットから別の文字セットに文字列を変換する"
    ],
    "UConverterfromUCallback": [
        "UConverter::fromUCallback",
        "uconverter.fromucallback.php",
        "デフォルトの &quot;from&quot; コールバック関数"
    ],
    "UConvertergetAliases": [
        "UConverter::getAliases",
        "uconverter.getaliases.php",
        "指定した名前のエイリアスを取得する"
    ],
    "UConvertergetAvailable": [
        "UConverter::getAvailable",
        "uconverter.getavailable.php",
        "利用可能なコンバーター名を取得する"
    ],
    "UConvertergetDestinationEncoding": [
        "UConverter::getDestinationEncoding",
        "uconverter.getdestinationencoding.php",
        "変換先エンコーディングを取得する"
    ],
    "UConvertergetDestinationType": [
        "UConverter::getDestinationType",
        "uconverter.getdestinationtype.php",
        "変換先のコンバーターの型を取得する"
    ],
    "UConvertergetErrorCode": [
        "UConverter::getErrorCode",
        "uconverter.geterrorcode.php",
        "直近のエラーコードを取得する"
    ],
    "UConvertergetErrorMessage": [
        "UConverter::getErrorMessage",
        "uconverter.geterrormessage.php",
        "直近のエラーメッセージを取得する"
    ],
    "UConvertergetSourceEncoding": [
        "UConverter::getSourceEncoding",
        "uconverter.getsourceencoding.php",
        "変換元エンコーディングを取得する"
    ],
    "UConvertergetSourceType": [
        "UConverter::getSourceType",
        "uconverter.getsourcetype.php",
        "変換元のコンバーターの型を取得する"
    ],
    "UConvertergetStandards": [
        "UConverter::getStandards",
        "uconverter.getstandards.php",
        "コンバーター名に対応する標準を取得する"
    ],
    "UConvertergetSubstChars": [
        "UConverter::getSubstChars",
        "uconverter.getsubstchars.php",
        "置換文字を取得する"
    ],
    "UConverterreasonText": [
        "UConverter::reasonText",
        "uconverter.reasontext.php",
        "コールバックの理由を表す文字列を取得する"
    ],
    "UConvertersetDestinationEncoding": [
        "UConverter::setDestinationEncoding",
        "uconverter.setdestinationencoding.php",
        "変換先エンコーディングを設定する"
    ],
    "UConvertersetSourceEncoding": [
        "UConverter::setSourceEncoding",
        "uconverter.setsourceencoding.php",
        "変換元エンコーディングを設定する"
    ],
    "UConvertersetSubstChars": [
        "UConverter::setSubstChars",
        "uconverter.setsubstchars.php",
        "置換文字を設定する"
    ],
    "UConvertertoUCallback": [
        "UConverter::toUCallback",
        "uconverter.toucallback.php",
        "デフォルトの &quot;to&quot; コールバック関数"
    ],
    "UConvertertranscode": [
        "UConverter::transcode",
        "uconverter.transcode.php",
        "ある文字セットから別の文字セットに文字列を変換する"
    ],
    "UConverterconstruct": [
        "UConverter::__construct",
        "uconverter.construct.php",
        "UConverter オブジェクトを作る"
    ],
    "ucwords": [
        "ucwords",
        "function.ucwords.php",
        "文字列の各単語の最初の文字を大文字にする"
    ],
    "UIAreaonDraw": [
        "UI\\Area::onDraw",
        "ui-area.ondraw.php",
        "Draw Callback"
    ],
    "UIAreaonKey": [
        "UI\\Area::onKey",
        "ui-area.onkey.php",
        "Key Callback"
    ],
    "UIAreaonMouse": [
        "UI\\Area::onMouse",
        "ui-area.onmouse.php",
        "Mouse Callback"
    ],
    "UIArearedraw": [
        "UI\\Area::redraw",
        "ui-area.redraw.php",
        "Redraw Area"
    ],
    "UIAreascrollTo": [
        "UI\\Area::scrollTo",
        "ui-area.scrollto.php",
        "Area Scroll"
    ],
    "UIAreasetSize": [
        "UI\\Area::setSize",
        "ui-area.setsize.php",
        "Set Size"
    ],
    "UIControldestroy": [
        "UI\\Control::destroy",
        "ui-control.destroy.php",
        "Destroy Control"
    ],
    "UIControldisable": [
        "UI\\Control::disable",
        "ui-control.disable.php",
        "Disable Control"
    ],
    "UIControlenable": [
        "UI\\Control::enable",
        "ui-control.enable.php",
        "Enable Control"
    ],
    "UIControlgetParent": [
        "UI\\Control::getParent",
        "ui-control.getparent.php",
        "Get Parent Control"
    ],
    "UIControlgetTopLevel": [
        "UI\\Control::getTopLevel",
        "ui-control.gettoplevel.php",
        "Get Top Level"
    ],
    "UIControlhide": [
        "UI\\Control::hide",
        "ui-control.hide.php",
        "Hide Control"
    ],
    "UIControlisEnabled": [
        "UI\\Control::isEnabled",
        "ui-control.isenabled.php",
        "Determine if Control is enabled"
    ],
    "UIControlisVisible": [
        "UI\\Control::isVisible",
        "ui-control.isvisible.php",
        "Determine if Control is visible"
    ],
    "UIControlsetParent": [
        "UI\\Control::setParent",
        "ui-control.setparent.php",
        "Set Parent Control"
    ],
    "UIControlshow": [
        "UI\\Control::show",
        "ui-control.show.php",
        "Control Show"
    ],
    "UIControlsBoxappend": [
        "UI\\Controls\\Box::append",
        "ui-controls-box.append.php",
        "Append Control"
    ],
    "UIControlsBoxdelete": [
        "UI\\Controls\\Box::delete",
        "ui-controls-box.delete.php",
        "Delete Control"
    ],
    "UIControlsBoxgetOrientation": [
        "UI\\Controls\\Box::getOrientation",
        "ui-controls-box.getorientation.php",
        "Get Orientation"
    ],
    "UIControlsBoxisPadded": [
        "UI\\Controls\\Box::isPadded",
        "ui-controls-box.ispadded.php",
        "Padding Detection"
    ],
    "UIControlsBoxsetPadded": [
        "UI\\Controls\\Box::setPadded",
        "ui-controls-box.setpadded.php",
        "Set Padding"
    ],
    "UIControlsBoxconstruct": [
        "UI\\Controls\\Box::__construct",
        "ui-controls-box.construct.php",
        "Construct a new Box"
    ],
    "UIControlsButtongetText": [
        "UI\\Controls\\Button::getText",
        "ui-controls-button.gettext.php",
        "Get Text"
    ],
    "UIControlsButtononClick": [
        "UI\\Controls\\Button::onClick",
        "ui-controls-button.onclick.php",
        "Click Handler"
    ],
    "UIControlsButtonsetText": [
        "UI\\Controls\\Button::setText",
        "ui-controls-button.settext.php",
        "Set Text"
    ],
    "UIControlsButtonconstruct": [
        "UI\\Controls\\Button::__construct",
        "ui-controls-button.construct.php",
        "Construct a new Button"
    ],
    "UIControlsCheckgetText": [
        "UI\\Controls\\Check::getText",
        "ui-controls-check.gettext.php",
        "Get Text"
    ],
    "UIControlsCheckisChecked": [
        "UI\\Controls\\Check::isChecked",
        "ui-controls-check.ischecked.php",
        "Checked Detection"
    ],
    "UIControlsCheckonToggle": [
        "UI\\Controls\\Check::onToggle",
        "ui-controls-check.ontoggle.php",
        "Toggle Callback"
    ],
    "UIControlsChecksetChecked": [
        "UI\\Controls\\Check::setChecked",
        "ui-controls-check.setchecked.php",
        "Set Checked"
    ],
    "UIControlsChecksetText": [
        "UI\\Controls\\Check::setText",
        "ui-controls-check.settext.php",
        "Set Text"
    ],
    "UIControlsCheckconstruct": [
        "UI\\Controls\\Check::__construct",
        "ui-controls-check.construct.php",
        "Construct a new Check"
    ],
    "UIControlsColorButtongetColor": [
        "UI\\Controls\\ColorButton::getColor",
        "ui-controls-colorbutton.getcolor.php",
        "Get Color"
    ],
    "UIControlsColorButtononChange": [
        "UI\\Controls\\ColorButton::onChange",
        "ui-controls-colorbutton.onchange.php",
        "Change Handler"
    ],
    "UIControlsColorButtonsetColor": [
        "UI\\Controls\\ColorButton::setColor",
        "ui-controls-colorbutton.setcolor.php",
        "Set Color"
    ],
    "UIControlsComboappend": [
        "UI\\Controls\\Combo::append",
        "ui-controls-combo.append.php",
        "Append Option"
    ],
    "UIControlsCombogetSelected": [
        "UI\\Controls\\Combo::getSelected",
        "ui-controls-combo.getselected.php",
        "Get Selected Option"
    ],
    "UIControlsComboonSelected": [
        "UI\\Controls\\Combo::onSelected",
        "ui-controls-combo.onselected.php",
        "Selected Handler"
    ],
    "UIControlsCombosetSelected": [
        "UI\\Controls\\Combo::setSelected",
        "ui-controls-combo.setselected.php",
        "Set Selected Option"
    ],
    "UIControlsEditableComboappend": [
        "UI\\Controls\\EditableCombo::append",
        "ui-controls-editablecombo.append.php",
        "Append Option"
    ],
    "UIControlsEditableCombogetText": [
        "UI\\Controls\\EditableCombo::getText",
        "ui-controls-editablecombo.gettext.php",
        "Get Text"
    ],
    "UIControlsEditableComboonChange": [
        "UI\\Controls\\EditableCombo::onChange",
        "ui-controls-editablecombo.onchange.php",
        "Change Handler"
    ],
    "UIControlsEditableCombosetText": [
        "UI\\Controls\\EditableCombo::setText",
        "ui-controls-editablecombo.settext.php",
        "Set Text"
    ],
    "UIControlsEntrygetText": [
        "UI\\Controls\\Entry::getText",
        "ui-controls-entry.gettext.php",
        "Get Text"
    ],
    "UIControlsEntryisReadOnly": [
        "UI\\Controls\\Entry::isReadOnly",
        "ui-controls-entry.isreadonly.php",
        "Detect Read Only"
    ],
    "UIControlsEntryonChange": [
        "UI\\Controls\\Entry::onChange",
        "ui-controls-entry.onchange.php",
        "Change Handler"
    ],
    "UIControlsEntrysetReadOnly": [
        "UI\\Controls\\Entry::setReadOnly",
        "ui-controls-entry.setreadonly.php",
        "Set Read Only"
    ],
    "UIControlsEntrysetText": [
        "UI\\Controls\\Entry::setText",
        "ui-controls-entry.settext.php",
        "Set Text"
    ],
    "UIControlsEntryconstruct": [
        "UI\\Controls\\Entry::__construct",
        "ui-controls-entry.construct.php",
        "Construct a new Entry"
    ],
    "UIControlsFormappend": [
        "UI\\Controls\\Form::append",
        "ui-controls-form.append.php",
        "Append Control"
    ],
    "UIControlsFormdelete": [
        "UI\\Controls\\Form::delete",
        "ui-controls-form.delete.php",
        "Delete Control"
    ],
    "UIControlsFormisPadded": [
        "UI\\Controls\\Form::isPadded",
        "ui-controls-form.ispadded.php",
        "Padding Detection"
    ],
    "UIControlsFormsetPadded": [
        "UI\\Controls\\Form::setPadded",
        "ui-controls-form.setpadded.php",
        "Set Padding"
    ],
    "UIControlsGridappend": [
        "UI\\Controls\\Grid::append",
        "ui-controls-grid.append.php",
        "Append Control"
    ],
    "UIControlsGridisPadded": [
        "UI\\Controls\\Grid::isPadded",
        "ui-controls-grid.ispadded.php",
        "Padding Detection"
    ],
    "UIControlsGridsetPadded": [
        "UI\\Controls\\Grid::setPadded",
        "ui-controls-grid.setpadded.php",
        "Set Padding"
    ],
    "UIControlsGroupappend": [
        "UI\\Controls\\Group::append",
        "ui-controls-group.append.php",
        "Append Control"
    ],
    "UIControlsGroupgetTitle": [
        "UI\\Controls\\Group::getTitle",
        "ui-controls-group.gettitle.php",
        "Get Title"
    ],
    "UIControlsGrouphasMargin": [
        "UI\\Controls\\Group::hasMargin",
        "ui-controls-group.hasmargin.php",
        "Margin Detection"
    ],
    "UIControlsGroupsetMargin": [
        "UI\\Controls\\Group::setMargin",
        "ui-controls-group.setmargin.php",
        "Set Margin"
    ],
    "UIControlsGroupsetTitle": [
        "UI\\Controls\\Group::setTitle",
        "ui-controls-group.settitle.php",
        "Set Title"
    ],
    "UIControlsGroupconstruct": [
        "UI\\Controls\\Group::__construct",
        "ui-controls-group.construct.php",
        "Construct a new Group"
    ],
    "UIControlsLabelgetText": [
        "UI\\Controls\\Label::getText",
        "ui-controls-label.gettext.php",
        "Get Text"
    ],
    "UIControlsLabelsetText": [
        "UI\\Controls\\Label::setText",
        "ui-controls-label.settext.php",
        "Set Text"
    ],
    "UIControlsLabelconstruct": [
        "UI\\Controls\\Label::__construct",
        "ui-controls-label.construct.php",
        "Construct a new Label"
    ],
    "UIControlsMultilineEntryappend": [
        "UI\\Controls\\MultilineEntry::append",
        "ui-controls-multilineentry.append.php",
        "Append Text"
    ],
    "UIControlsMultilineEntrygetText": [
        "UI\\Controls\\MultilineEntry::getText",
        "ui-controls-multilineentry.gettext.php",
        "Get Text"
    ],
    "UIControlsMultilineEntryisReadOnly": [
        "UI\\Controls\\MultilineEntry::isReadOnly",
        "ui-controls-multilineentry.isreadonly.php",
        "Read Only Detection"
    ],
    "UIControlsMultilineEntryonChange": [
        "UI\\Controls\\MultilineEntry::onChange",
        "ui-controls-multilineentry.onchange.php",
        "Change Handler"
    ],
    "UIControlsMultilineEntrysetReadOnly": [
        "UI\\Controls\\MultilineEntry::setReadOnly",
        "ui-controls-multilineentry.setreadonly.php",
        "Set Read Only"
    ],
    "UIControlsMultilineEntrysetText": [
        "UI\\Controls\\MultilineEntry::setText",
        "ui-controls-multilineentry.settext.php",
        "Set Text"
    ],
    "UIControlsMultilineEntryconstruct": [
        "UI\\Controls\\MultilineEntry::__construct",
        "ui-controls-multilineentry.construct.php",
        "Construct a new Multiline Entry"
    ],
    "UIControlsPickerconstruct": [
        "UI\\Controls\\Picker::__construct",
        "ui-controls-picker.construct.php",
        "Construct a new Picker"
    ],
    "UIControlsProgressgetValue": [
        "UI\\Controls\\Progress::getValue",
        "ui-controls-progress.getvalue.php",
        "Get Value"
    ],
    "UIControlsProgresssetValue": [
        "UI\\Controls\\Progress::setValue",
        "ui-controls-progress.setvalue.php",
        "Set Value"
    ],
    "UIControlsRadioappend": [
        "UI\\Controls\\Radio::append",
        "ui-controls-radio.append.php",
        "Append Option"
    ],
    "UIControlsRadiogetSelected": [
        "UI\\Controls\\Radio::getSelected",
        "ui-controls-radio.getselected.php",
        "Get Selected Option"
    ],
    "UIControlsRadioonSelected": [
        "UI\\Controls\\Radio::onSelected",
        "ui-controls-radio.onselected.php",
        "Selected Handler"
    ],
    "UIControlsRadiosetSelected": [
        "UI\\Controls\\Radio::setSelected",
        "ui-controls-radio.setselected.php",
        "Set Selected Option"
    ],
    "UIControlsSeparatorconstruct": [
        "UI\\Controls\\Separator::__construct",
        "ui-controls-separator.construct.php",
        "Construct a new Separator"
    ],
    "UIControlsSlidergetValue": [
        "UI\\Controls\\Slider::getValue",
        "ui-controls-slider.getvalue.php",
        "Get Value"
    ],
    "UIControlsSlideronChange": [
        "UI\\Controls\\Slider::onChange",
        "ui-controls-slider.onchange.php",
        "Change Handler"
    ],
    "UIControlsSlidersetValue": [
        "UI\\Controls\\Slider::setValue",
        "ui-controls-slider.setvalue.php",
        "Set Value"
    ],
    "UIControlsSliderconstruct": [
        "UI\\Controls\\Slider::__construct",
        "ui-controls-slider.construct.php",
        "Construct a new Slider"
    ],
    "UIControlsSpingetValue": [
        "UI\\Controls\\Spin::getValue",
        "ui-controls-spin.getvalue.php",
        "Get Value"
    ],
    "UIControlsSpinonChange": [
        "UI\\Controls\\Spin::onChange",
        "ui-controls-spin.onchange.php",
        "Change Handler"
    ],
    "UIControlsSpinsetValue": [
        "UI\\Controls\\Spin::setValue",
        "ui-controls-spin.setvalue.php",
        "Set Value"
    ],
    "UIControlsSpinconstruct": [
        "UI\\Controls\\Spin::__construct",
        "ui-controls-spin.construct.php",
        "Construct a new Spin"
    ],
    "UIControlsTabappend": [
        "UI\\Controls\\Tab::append",
        "ui-controls-tab.append.php",
        "Append Page"
    ],
    "UIControlsTabdelete": [
        "UI\\Controls\\Tab::delete",
        "ui-controls-tab.delete.php",
        "Delete Page"
    ],
    "UIControlsTabhasMargin": [
        "UI\\Controls\\Tab::hasMargin",
        "ui-controls-tab.hasmargin.php",
        "Margin Detection"
    ],
    "UIControlsTabinsertAt": [
        "UI\\Controls\\Tab::insertAt",
        "ui-controls-tab.insertat.php",
        "Insert Page"
    ],
    "UIControlsTabpages": [
        "UI\\Controls\\Tab::pages",
        "ui-controls-tab.pages.php",
        "Page Count"
    ],
    "UIControlsTabsetMargin": [
        "UI\\Controls\\Tab::setMargin",
        "ui-controls-tab.setmargin.php",
        "Set Margin"
    ],
    "UIDrawBrushgetColor": [
        "UI\\Draw\\Brush::getColor",
        "ui-draw-brush.getcolor.php",
        "Get Color"
    ],
    "UIDrawBrushsetColor": [
        "UI\\Draw\\Brush::setColor",
        "ui-draw-brush.setcolor.php",
        "Set Color"
    ],
    "UIDrawBrushconstruct": [
        "UI\\Draw\\Brush::__construct",
        "ui-draw-brush.construct.php",
        "Construct a new Brush"
    ],
    "UIDrawBrushGradientaddStop": [
        "UI\\Draw\\Brush\\Gradient::addStop",
        "ui-draw-brush-gradient.addstop.php",
        "Stop Manipulation"
    ],
    "UIDrawBrushGradientdelStop": [
        "UI\\Draw\\Brush\\Gradient::delStop",
        "ui-draw-brush-gradient.delstop.php",
        "Stop Manipulation"
    ],
    "UIDrawBrushGradientsetStop": [
        "UI\\Draw\\Brush\\Gradient::setStop",
        "ui-draw-brush-gradient.setstop.php",
        "Stop Manipulation"
    ],
    "UIDrawBrushLinearGradientconstruct": [
        "UI\\Draw\\Brush\\LinearGradient::__construct",
        "ui-draw-brush-lineargradient.construct.php",
        "Construct a Linear Gradient"
    ],
    "UIDrawBrushRadialGradientconstruct": [
        "UI\\Draw\\Brush\\RadialGradient::__construct",
        "ui-draw-brush-radialgradient.construct.php",
        "Construct a new Radial Gradient"
    ],
    "UIDrawColorgetChannel": [
        "UI\\Draw\\Color::getChannel",
        "ui-draw-color.getchannel.php",
        "Color Manipulation"
    ],
    "UIDrawColorsetChannel": [
        "UI\\Draw\\Color::setChannel",
        "ui-draw-color.setchannel.php",
        "Color Manipulation"
    ],
    "UIDrawColorconstruct": [
        "UI\\Draw\\Color::__construct",
        "ui-draw-color.construct.php",
        "Construct new Color"
    ],
    "UIDrawMatrixinvert": [
        "UI\\Draw\\Matrix::invert",
        "ui-draw-matrix.invert.php",
        "Invert Matrix"
    ],
    "UIDrawMatrixisInvertible": [
        "UI\\Draw\\Matrix::isInvertible",
        "ui-draw-matrix.isinvertible.php",
        "Invertible Detection"
    ],
    "UIDrawMatrixmultiply": [
        "UI\\Draw\\Matrix::multiply",
        "ui-draw-matrix.multiply.php",
        "Multiply Matrix"
    ],
    "UIDrawMatrixrotate": [
        "UI\\Draw\\Matrix::rotate",
        "ui-draw-matrix.rotate.php",
        "Rotate Matrix"
    ],
    "UIDrawMatrixscale": [
        "UI\\Draw\\Matrix::scale",
        "ui-draw-matrix.scale.php",
        "Scale Matrix"
    ],
    "UIDrawMatrixskew": [
        "UI\\Draw\\Matrix::skew",
        "ui-draw-matrix.skew.php",
        "Skew Matrix"
    ],
    "UIDrawMatrixtranslate": [
        "UI\\Draw\\Matrix::translate",
        "ui-draw-matrix.translate.php",
        "Translate Matrix"
    ],
    "UIDrawPathaddRectangle": [
        "UI\\Draw\\Path::addRectangle",
        "ui-draw-path.addrectangle.php",
        "Draw a Rectangle"
    ],
    "UIDrawPatharcTo": [
        "UI\\Draw\\Path::arcTo",
        "ui-draw-path.arcto.php",
        "Draw an Arc"
    ],
    "UIDrawPathbezierTo": [
        "UI\\Draw\\Path::bezierTo",
        "ui-draw-path.bezierto.php",
        "Draw Bezier Curve"
    ],
    "UIDrawPathcloseFigure": [
        "UI\\Draw\\Path::closeFigure",
        "ui-draw-path.closefigure.php",
        "Close Figure"
    ],
    "UIDrawPathend": [
        "UI\\Draw\\Path::end",
        "ui-draw-path.end.php",
        "Finalize Path"
    ],
    "UIDrawPathlineTo": [
        "UI\\Draw\\Path::lineTo",
        "ui-draw-path.lineto.php",
        "Draw a Line"
    ],
    "UIDrawPathnewFigure": [
        "UI\\Draw\\Path::newFigure",
        "ui-draw-path.newfigure.php",
        "Draw Figure"
    ],
    "UIDrawPathnewFigureWithArc": [
        "UI\\Draw\\Path::newFigureWithArc",
        "ui-draw-path.newfigurewitharc.php",
        "Draw Figure with Arc"
    ],
    "UIDrawPathconstruct": [
        "UI\\Draw\\Path::__construct",
        "ui-draw-path.construct.php",
        "Construct a new Path"
    ],
    "UIDrawPenclip": [
        "UI\\Draw\\Pen::clip",
        "ui-draw-pen.clip.php",
        "Clip a Path"
    ],
    "UIDrawPenfill": [
        "UI\\Draw\\Pen::fill",
        "ui-draw-pen.fill.php",
        "Fill a Path"
    ],
    "UIDrawPenrestore": [
        "UI\\Draw\\Pen::restore",
        "ui-draw-pen.restore.php",
        "Restore"
    ],
    "UIDrawPensave": [
        "UI\\Draw\\Pen::save",
        "ui-draw-pen.save.php",
        "Save"
    ],
    "UIDrawPenstroke": [
        "UI\\Draw\\Pen::stroke",
        "ui-draw-pen.stroke.php",
        "Stroke a Path"
    ],
    "UIDrawPentransform": [
        "UI\\Draw\\Pen::transform",
        "ui-draw-pen.transform.php",
        "Matrix Transform"
    ],
    "UIDrawPenwrite": [
        "UI\\Draw\\Pen::write",
        "ui-draw-pen.write.php",
        "Draw Text at Point"
    ],
    "UIDrawStrokegetCap": [
        "UI\\Draw\\Stroke::getCap",
        "ui-draw-stroke.getcap.php",
        "Get Line Cap"
    ],
    "UIDrawStrokegetJoin": [
        "UI\\Draw\\Stroke::getJoin",
        "ui-draw-stroke.getjoin.php",
        "Get Line Join"
    ],
    "UIDrawStrokegetMiterLimit": [
        "UI\\Draw\\Stroke::getMiterLimit",
        "ui-draw-stroke.getmiterlimit.php",
        "Get Miter Limit"
    ],
    "UIDrawStrokegetThickness": [
        "UI\\Draw\\Stroke::getThickness",
        "ui-draw-stroke.getthickness.php",
        "Get Thickness"
    ],
    "UIDrawStrokesetCap": [
        "UI\\Draw\\Stroke::setCap",
        "ui-draw-stroke.setcap.php",
        "Set Line Cap"
    ],
    "UIDrawStrokesetJoin": [
        "UI\\Draw\\Stroke::setJoin",
        "ui-draw-stroke.setjoin.php",
        "Set Line Join"
    ],
    "UIDrawStrokesetMiterLimit": [
        "UI\\Draw\\Stroke::setMiterLimit",
        "ui-draw-stroke.setmiterlimit.php",
        "Set Miter Limit"
    ],
    "UIDrawStrokesetThickness": [
        "UI\\Draw\\Stroke::setThickness",
        "ui-draw-stroke.setthickness.php",
        "Set Thickness"
    ],
    "UIDrawStrokeconstruct": [
        "UI\\Draw\\Stroke::__construct",
        "ui-draw-stroke.construct.php",
        "Construct a new Stroke"
    ],
    "UIDrawTextFontgetAscent": [
        "UI\\Draw\\Text\\Font::getAscent",
        "ui-draw-text-font.getascent.php",
        "Font Metrics"
    ],
    "UIDrawTextFontgetDescent": [
        "UI\\Draw\\Text\\Font::getDescent",
        "ui-draw-text-font.getdescent.php",
        "Font Metrics"
    ],
    "UIDrawTextFontgetLeading": [
        "UI\\Draw\\Text\\Font::getLeading",
        "ui-draw-text-font.getleading.php",
        "Font Metrics"
    ],
    "UIDrawTextFontgetUnderlinePosition": [
        "UI\\Draw\\Text\\Font::getUnderlinePosition",
        "ui-draw-text-font.getunderlineposition.php",
        "Font Metrics"
    ],
    "UIDrawTextFontgetUnderlineThickness": [
        "UI\\Draw\\Text\\Font::getUnderlineThickness",
        "ui-draw-text-font.getunderlinethickness.php",
        "Font Metrics"
    ],
    "UIDrawTextFontconstruct": [
        "UI\\Draw\\Text\\Font::__construct",
        "ui-draw-text-font.construct.php",
        "Construct a new Font"
    ],
    "UIDrawTextFontDescriptorgetFamily": [
        "UI\\Draw\\Text\\Font\\Descriptor::getFamily",
        "ui-draw-text-font-descriptor.getfamily.php",
        "Get Font Family"
    ],
    "UIDrawTextFontDescriptorgetItalic": [
        "UI\\Draw\\Text\\Font\\Descriptor::getItalic",
        "ui-draw-text-font-descriptor.getitalic.php",
        "Style Detection"
    ],
    "UIDrawTextFontDescriptorgetSize": [
        "UI\\Draw\\Text\\Font\\Descriptor::getSize",
        "ui-draw-text-font-descriptor.getsize.php",
        "Size Detection"
    ],
    "UIDrawTextFontDescriptorgetStretch": [
        "UI\\Draw\\Text\\Font\\Descriptor::getStretch",
        "ui-draw-text-font-descriptor.getstretch.php",
        "Style Detection"
    ],
    "UIDrawTextFontDescriptorgetWeight": [
        "UI\\Draw\\Text\\Font\\Descriptor::getWeight",
        "ui-draw-text-font-descriptor.getweight.php",
        "Weight Detection"
    ],
    "UIDrawTextFontDescriptorconstruct": [
        "UI\\Draw\\Text\\Font\\Descriptor::__construct",
        "ui-draw-text-font-descriptor.construct.php",
        "Construct a new Font Descriptor"
    ],
    "UIDrawTextFontfontFamilies": [
        "UI\\Draw\\Text\\Font\\fontFamilies",
        "function.ui-draw-text-font-fontfamilies.php",
        "Retrieve Font Families"
    ],
    "UIDrawTextLayoutsetColor": [
        "UI\\Draw\\Text\\Layout::setColor",
        "ui-draw-text-layout.setcolor.php",
        "Set Color"
    ],
    "UIDrawTextLayoutsetWidth": [
        "UI\\Draw\\Text\\Layout::setWidth",
        "ui-draw-text-layout.setwidth.php",
        "Set Width"
    ],
    "UIDrawTextLayoutconstruct": [
        "UI\\Draw\\Text\\Layout::__construct",
        "ui-draw-text-layout.construct.php",
        "Construct a new Text Layout"
    ],
    "UIExecutorkill": [
        "UI\\Executor::kill",
        "ui-executor.kill.php",
        "Stop Executor"
    ],
    "UIExecutoronExecute": [
        "UI\\Executor::onExecute",
        "ui-executor.onexecute.php",
        "Execution Callback"
    ],
    "UIExecutorsetInterval": [
        "UI\\Executor::setInterval",
        "ui-executor.setinterval.php",
        "Interval Manipulation"
    ],
    "UIExecutorconstruct": [
        "UI\\Executor::__construct",
        "ui-executor.construct.php",
        "Construct a new Executor"
    ],
    "UIMenuappend": [
        "UI\\Menu::append",
        "ui-menu.append.php",
        "Append Menu Item"
    ],
    "UIMenuappendAbout": [
        "UI\\Menu::appendAbout",
        "ui-menu.appendabout.php",
        "Append About Menu Item"
    ],
    "UIMenuappendCheck": [
        "UI\\Menu::appendCheck",
        "ui-menu.appendcheck.php",
        "Append Checkable Menu Item"
    ],
    "UIMenuappendPreferences": [
        "UI\\Menu::appendPreferences",
        "ui-menu.appendpreferences.php",
        "Append Preferences Menu Item"
    ],
    "UIMenuappendQuit": [
        "UI\\Menu::appendQuit",
        "ui-menu.appendquit.php",
        "Append Quit Menu Item"
    ],
    "UIMenuappendSeparator": [
        "UI\\Menu::appendSeparator",
        "ui-menu.appendseparator.php",
        "Append Menu Item Separator"
    ],
    "UIMenuconstruct": [
        "UI\\Menu::__construct",
        "ui-menu.construct.php",
        "Construct a new Menu"
    ],
    "UIMenuItemdisable": [
        "UI\\MenuItem::disable",
        "ui-menuitem.disable.php",
        "Disable Menu Item"
    ],
    "UIMenuItemenable": [
        "UI\\MenuItem::enable",
        "ui-menuitem.enable.php",
        "Enable Menu Item"
    ],
    "UIMenuItemisChecked": [
        "UI\\MenuItem::isChecked",
        "ui-menuitem.ischecked.php",
        "Detect Checked"
    ],
    "UIMenuItemonClick": [
        "UI\\MenuItem::onClick",
        "ui-menuitem.onclick.php",
        "On Click Callback"
    ],
    "UIMenuItemsetChecked": [
        "UI\\MenuItem::setChecked",
        "ui-menuitem.setchecked.php",
        "Set Checked"
    ],
    "UIPointat": [
        "UI\\Point::at",
        "ui-point.at.php",
        "Size Coercion"
    ],
    "UIPointgetX": [
        "UI\\Point::getX",
        "ui-point.getx.php",
        "Retrieves X"
    ],
    "UIPointgetY": [
        "UI\\Point::getY",
        "ui-point.gety.php",
        "Retrieves Y"
    ],
    "UIPointsetX": [
        "UI\\Point::setX",
        "ui-point.setx.php",
        "Set X"
    ],
    "UIPointsetY": [
        "UI\\Point::setY",
        "ui-point.sety.php",
        "Set Y"
    ],
    "UIPointconstruct": [
        "UI\\Point::__construct",
        "ui-point.construct.php",
        "Construct a new Point"
    ],
    "UIquit": [
        "UI\\quit",
        "function.ui-quit.php",
        "Quit UI Loop"
    ],
    "UIrun": [
        "UI\\run",
        "function.ui-run.php",
        "Enter UI Loop"
    ],
    "UISizegetHeight": [
        "UI\\Size::getHeight",
        "ui-size.getheight.php",
        "Retrieves Height"
    ],
    "UISizegetWidth": [
        "UI\\Size::getWidth",
        "ui-size.getwidth.php",
        "Retrives Width"
    ],
    "UISizeof": [
        "UI\\Size::of",
        "ui-size.of.php",
        "Point Coercion"
    ],
    "UISizesetHeight": [
        "UI\\Size::setHeight",
        "ui-size.setheight.php",
        "Set Height"
    ],
    "UISizesetWidth": [
        "UI\\Size::setWidth",
        "ui-size.setwidth.php",
        "Set Width"
    ],
    "UISizeconstruct": [
        "UI\\Size::__construct",
        "ui-size.construct.php",
        "Construct a new Size"
    ],
    "UIWindowadd": [
        "UI\\Window::add",
        "ui-window.add.php",
        "Add a Control"
    ],
    "UIWindowerror": [
        "UI\\Window::error",
        "ui-window.error.php",
        "Show Error Box"
    ],
    "UIWindowgetSize": [
        "UI\\Window::getSize",
        "ui-window.getsize.php",
        "Get Window Size"
    ],
    "UIWindowgetTitle": [
        "UI\\Window::getTitle",
        "ui-window.gettitle.php",
        "Get Title"
    ],
    "UIWindowhasBorders": [
        "UI\\Window::hasBorders",
        "ui-window.hasborders.php",
        "Border Detection"
    ],
    "UIWindowhasMargin": [
        "UI\\Window::hasMargin",
        "ui-window.hasmargin.php",
        "Margin Detection"
    ],
    "UIWindowisFullScreen": [
        "UI\\Window::isFullScreen",
        "ui-window.isfullscreen.php",
        "Full Screen Detection"
    ],
    "UIWindowmsg": [
        "UI\\Window::msg",
        "ui-window.msg.php",
        "Show Message Box"
    ],
    "UIWindowonClosing": [
        "UI\\Window::onClosing",
        "ui-window.onclosing.php",
        "Closing Callback"
    ],
    "UIWindowopen": [
        "UI\\Window::open",
        "ui-window.open.php",
        "Open Dialog"
    ],
    "UIWindowsave": [
        "UI\\Window::save",
        "ui-window.save.php",
        "Save Dialog"
    ],
    "UIWindowsetBorders": [
        "UI\\Window::setBorders",
        "ui-window.setborders.php",
        "Border Use"
    ],
    "UIWindowsetFullScreen": [
        "UI\\Window::setFullScreen",
        "ui-window.setfullscreen.php",
        "Full Screen Use"
    ],
    "UIWindowsetMargin": [
        "UI\\Window::setMargin",
        "ui-window.setmargin.php",
        "Margin Use"
    ],
    "UIWindowsetSize": [
        "UI\\Window::setSize",
        "ui-window.setsize.php",
        "Set Size"
    ],
    "UIWindowsetTitle": [
        "UI\\Window::setTitle",
        "ui-window.settitle.php",
        "Window Title"
    ],
    "UIWindowconstruct": [
        "UI\\Window::__construct",
        "ui-window.construct.php",
        "Construct a new Window"
    ],
    "uksort": [
        "uksort",
        "function.uksort.php",
        "ユーザー定義の比較関数を用いて、キーで配列をソートする"
    ],
    "umask": [
        "umask",
        "function.umask.php",
        "現在の umask を変更する"
    ],
    "uniqid": [
        "uniqid",
        "function.uniqid.php",
        "一意な ID を生成する"
    ],
    "unixtojd": [
        "unixtojd",
        "function.unixtojd.php",
        "Unix タイムスタンプをユリウス歴に変換する"
    ],
    "unlink": [
        "unlink",
        "function.unlink.php",
        "ファイルを削除する"
    ],
    "unpack": [
        "unpack",
        "function.unpack.php",
        "バイナリ文字列からデータを切り出す"
    ],
    "unregistertickfunction": [
        "unregister_tick_function",
        "function.unregister-tick-function.php",
        "各 tick の実行用の関数の登録を解除する"
    ],
    "unserialize": [
        "unserialize",
        "function.unserialize.php",
        "保存用表現から PHP の値を生成する"
    ],
    "unset": [
        "unset",
        "function.unset.php",
        "指定した変数の割当を解除する"
    ],
    "untaint": [
        "untaint",
        "function.untaint.php",
        "文字列の汚染を除去する"
    ],
    "uopzaddfunction": [
        "uopz_add_function",
        "function.uopz-add-function.php",
        "Adds non-existent function or method"
    ],
    "uopzallowexit": [
        "uopz_allow_exit",
        "function.uopz-allow-exit.php",
        "Allows control over disabled exit opcode"
    ],
    "uopzbackup": [
        "uopz_backup",
        "function.uopz-backup.php",
        "Backup a function"
    ],
    "uopzcompose": [
        "uopz_compose",
        "function.uopz-compose.php",
        "Compose a class"
    ],
    "uopzcopy": [
        "uopz_copy",
        "function.uopz-copy.php",
        "Copy a function"
    ],
    "uopzdelete": [
        "uopz_delete",
        "function.uopz-delete.php",
        "Delete a function"
    ],
    "uopzdelfunction": [
        "uopz_del_function",
        "function.uopz-del-function.php",
        "Deletes previously added function or method"
    ],
    "uopzextend": [
        "uopz_extend",
        "function.uopz-extend.php",
        "実行時にクラスを継承させる"
    ],
    "uopzflags": [
        "uopz_flags",
        "function.uopz-flags.php",
        "関数またはクラスのフラグを 取得/設定 する"
    ],
    "uopzfunction": [
        "uopz_function",
        "function.uopz-function.php",
        "Creates a function at runtime"
    ],
    "uopzgetexitstatus": [
        "uopz_get_exit_status",
        "function.uopz-get-exit-status.php",
        "Retrieve the last set exit status"
    ],
    "uopzgethook": [
        "uopz_get_hook",
        "function.uopz-get-hook.php",
        "Gets previously set hook on function or method"
    ],
    "uopzgetmock": [
        "uopz_get_mock",
        "function.uopz-get-mock.php",
        "Get the current mock for a class"
    ],
    "uopzgetproperty": [
        "uopz_get_property",
        "function.uopz-get-property.php",
        "Gets value of class or instance property"
    ],
    "uopzgetreturn": [
        "uopz_get_return",
        "function.uopz-get-return.php",
        "Gets a previous set return value for a function"
    ],
    "uopzgetstatic": [
        "uopz_get_static",
        "function.uopz-get-static.php",
        "Gets the static variables from function or method scope"
    ],
    "uopzimplement": [
        "uopz_implement",
        "function.uopz-implement.php",
        "実行時にインターフェイスを実装させる"
    ],
    "uopzoverload": [
        "uopz_overload",
        "function.uopz-overload.php",
        "Overload a VM opcode"
    ],
    "uopzredefine": [
        "uopz_redefine",
        "function.uopz-redefine.php",
        "定数を再定義"
    ],
    "uopzrename": [
        "uopz_rename",
        "function.uopz-rename.php",
        "Rename a function at runtime"
    ],
    "uopzrestore": [
        "uopz_restore",
        "function.uopz-restore.php",
        "Restore a previously backed up function"
    ],
    "uopzsethook": [
        "uopz_set_hook",
        "function.uopz-set-hook.php",
        "Sets hook to execute when entering a function or method"
    ],
    "uopzsetmock": [
        "uopz_set_mock",
        "function.uopz-set-mock.php",
        "Use mock instead of class for new objects"
    ],
    "uopzsetproperty": [
        "uopz_set_property",
        "function.uopz-set-property.php",
        "Sets value of existing class or instance property"
    ],
    "uopzsetreturn": [
        "uopz_set_return",
        "function.uopz-set-return.php",
        "Provide a return value for an existing function"
    ],
    "uopzsetstatic": [
        "uopz_set_static",
        "function.uopz-set-static.php",
        "Sets the static variables in function or method scope"
    ],
    "uopzundefine": [
        "uopz_undefine",
        "function.uopz-undefine.php",
        "定数を未定義化"
    ],
    "uopzunsethook": [
        "uopz_unset_hook",
        "function.uopz-unset-hook.php",
        "Removes previously set hook on function or method"
    ],
    "uopzunsetmock": [
        "uopz_unset_mock",
        "function.uopz-unset-mock.php",
        "Unset previously set mock"
    ],
    "uopzunsetreturn": [
        "uopz_unset_return",
        "function.uopz-unset-return.php",
        "Unsets a previously set return value for a function"
    ],
    "urldecode": [
        "urldecode",
        "function.urldecode.php",
        "URL エンコードされた文字列をデコードする"
    ],
    "urlencode": [
        "urlencode",
        "function.urlencode.php",
        "文字列を URL エンコードする"
    ],
    "usererror": [
        "user_error",
        "function.user-error.php",
        "trigger_error のエイリアス"
    ],
    "usesoaperrorhandler": [
        "use_soap_error_handler",
        "function.use-soap-error-handler.php",
        "SOAP エラーハンドラを使用するかどうかを設定する"
    ],
    "usleep": [
        "usleep",
        "function.usleep.php",
        "マイクロ秒単位で実行を遅延する"
    ],
    "usort": [
        "usort",
        "function.usort.php",
        "ユーザー定義の比較関数を使用して、配列を値でソートする"
    ],
    "utf8decode": [
        "utf8_decode",
        "function.utf8-decode.php",
        "UTF-8 エンコードされた ISO-8859-1 文字列をシングルバイトの ISO-8859-1 に変換する"
    ],
    "utf8encode": [
        "utf8_encode",
        "function.utf8-encode.php",
        "ISO-8859-1 文字列を UTF-8 にエンコードする"
    ],
    "V8JsexecuteString": [
        "V8Js::executeString",
        "v8js.executestring.php",
        "文字列を Javascript のコードとして実行する"
    ],
    "V8JsgetExtensions": [
        "V8Js::getExtensions",
        "v8js.getextensions.php",
        "登録された拡張の配列を返す"
    ],
    "V8JsgetPendingException": [
        "V8Js::getPendingException",
        "v8js.getpendingexception.php",
        "キャッチされなかった Javascript 例外の中で未処理のものを返す"
    ],
    "V8JsregisterExtension": [
        "V8Js::registerExtension",
        "v8js.registerextension.php",
        "V8Js で使う Javascript の拡張を登録する"
    ],
    "V8Jsconstruct": [
        "V8Js::__construct",
        "v8js.construct.php",
        "新しい V8Js オブジェクトを作成する"
    ],
    "V8JsExceptiongetJsFileName": [
        "V8JsException::getJsFileName",
        "v8jsexception.getjsfilename.php",
        "getJsFileName"
    ],
    "V8JsExceptiongetJsLineNumber": [
        "V8JsException::getJsLineNumber",
        "v8jsexception.getjslinenumber.php",
        "getJsLineNumber"
    ],
    "V8JsExceptiongetJsSourceLine": [
        "V8JsException::getJsSourceLine",
        "v8jsexception.getjssourceline.php",
        "getJsSourceLine"
    ],
    "V8JsExceptiongetJsTrace": [
        "V8JsException::getJsTrace",
        "v8jsexception.getjstrace.php",
        "getJsTrace"
    ],
    "variantconstruct": [
        "variant::__construct",
        "variant.construct.php",
        "variant クラスのコンストラクタ"
    ],
    "variantabs": [
        "variant_abs",
        "function.variant-abs.php",
        "variant の絶対値を返す"
    ],
    "variantadd": [
        "variant_add",
        "function.variant-add.php",
        "2 つの variant 値を「加算」し、結果を返す"
    ],
    "variantand": [
        "variant_and",
        "function.variant-and.php",
        "2 つの variant の論理積を計算し、結果を返す"
    ],
    "variantcast": [
        "variant_cast",
        "function.variant-cast.php",
        "variant を、別の型の新しい variant に変換する"
    ],
    "variantcat": [
        "variant_cat",
        "function.variant-cat.php",
        "2 つの variant 値を連結し、その結果を返す"
    ],
    "variantcmp": [
        "variant_cmp",
        "function.variant-cmp.php",
        "2 つの variant を比較する"
    ],
    "variantdatefromtimestamp": [
        "variant_date_from_timestamp",
        "function.variant-date-from-timestamp.php",
        "Unix タイムスタンプを、日付形式の variant で返す"
    ],
    "variantdatetotimestamp": [
        "variant_date_to_timestamp",
        "function.variant-date-to-timestamp.php",
        "日付/時刻の variant 値を Unix タイムスタンプに変換する"
    ],
    "variantdiv": [
        "variant_div",
        "function.variant-div.php",
        "2 つの variant の除算結果を返す"
    ],
    "varianteqv": [
        "variant_eqv",
        "function.variant-eqv.php",
        "2 つの variant のビット値が等しいかどうかを調べる"
    ],
    "variantfix": [
        "variant_fix",
        "function.variant-fix.php",
        "variant の整数部を返す"
    ],
    "variantgettype": [
        "variant_get_type",
        "function.variant-get-type.php",
        "variant オブジェクトの型を返す"
    ],
    "variantidiv": [
        "variant_idiv",
        "function.variant-idiv.php",
        "variants を整数に変換し、除算の結果を返す"
    ],
    "variantimp": [
        "variant_imp",
        "function.variant-imp.php",
        "2 つの variant のビット implication を行う"
    ],
    "variantint": [
        "variant_int",
        "function.variant-int.php",
        "variant の整数部を返す"
    ],
    "variantmod": [
        "variant_mod",
        "function.variant-mod.php",
        "2 つの variant の除算を行い、剰余を返す"
    ],
    "variantmul": [
        "variant_mul",
        "function.variant-mul.php",
        "2 つの variant の乗算を行い、その結果を返す"
    ],
    "variantneg": [
        "variant_neg",
        "function.variant-neg.php",
        "variant の論理否定演算を行う"
    ],
    "variantnot": [
        "variant_not",
        "function.variant-not.php",
        "variant のビット否定演算を行う"
    ],
    "variantor": [
        "variant_or",
        "function.variant-or.php",
        "2 つの variant の論理和を計算する"
    ],
    "variantpow": [
        "variant_pow",
        "function.variant-pow.php",
        "2 つの variant の累乗計算を行い、その結果を返す"
    ],
    "variantround": [
        "variant_round",
        "function.variant-round.php",
        "指定した桁で variant を丸める"
    ],
    "variantset": [
        "variant_set",
        "function.variant-set.php",
        "variant オブジェクトに新しい値を代入する"
    ],
    "variantsettype": [
        "variant_set_type",
        "function.variant-set-type.php",
        "variant を「その場で」別の型に変換する"
    ],
    "variantsub": [
        "variant_sub",
        "function.variant-sub.php",
        "左の variant から右の variant を引き、その結果を返す"
    ],
    "variantxor": [
        "variant_xor",
        "function.variant-xor.php",
        "2 つの variant の排他的論理和を計算する"
    ],
    "VarnishAdminauth": [
        "VarnishAdmin::auth",
        "varnishadmin.auth.php",
        "varnish インスタンス上で認証する"
    ],
    "VarnishAdminban": [
        "VarnishAdmin::ban",
        "varnishadmin.ban.php",
        "VCL の式を使って URL を禁止する"
    ],
    "VarnishAdminbanUrl": [
        "VarnishAdmin::banUrl",
        "varnishadmin.banurl.php",
        "VCL の式を使って URL を禁止する"
    ],
    "VarnishAdminclearPanic": [
        "VarnishAdmin::clearPanic",
        "varnishadmin.clearpanic.php",
        "varnish インスタンスのパニックメッセージをクリアする"
    ],
    "VarnishAdminconnect": [
        "VarnishAdmin::connect",
        "varnishadmin.connect.php",
        "varnish インスタンスの管理インターフェイスに接続する"
    ],
    "VarnishAdmindisconnect": [
        "VarnishAdmin::disconnect",
        "varnishadmin.disconnect.php",
        "varnish インスタンスの管理インターフェイスとの接続を切断する"
    ],
    "VarnishAdmingetPanic": [
        "VarnishAdmin::getPanic",
        "varnishadmin.getpanic.php",
        "varnish インスタンスの直近のパニックメッセージを取得する"
    ],
    "VarnishAdmingetParams": [
        "VarnishAdmin::getParams",
        "varnishadmin.getparams.php",
        "現在の varnish インスタンスの設定パラメータを取得する"
    ],
    "VarnishAdminisRunning": [
        "VarnishAdmin::isRunning",
        "varnishadmin.isrunning.php",
        "varnish のスレーブプロセスが現在実行中かどうかを調べる"
    ],
    "VarnishAdminsetCompat": [
        "VarnishAdmin::setCompat",
        "varnishadmin.setcompat.php",
        "クラスのオプション compat を設定する"
    ],
    "VarnishAdminsetHost": [
        "VarnishAdmin::setHost",
        "varnishadmin.sethost.php",
        "クラスのオプション host を設定する"
    ],
    "VarnishAdminsetIdent": [
        "VarnishAdmin::setIdent",
        "varnishadmin.setident.php",
        "クラスのオプション ident を設定する"
    ],
    "VarnishAdminsetParam": [
        "VarnishAdmin::setParam",
        "varnishadmin.setparam.php",
        "現在の varnish インスタンスの構成パラメータを設定する"
    ],
    "VarnishAdminsetPort": [
        "VarnishAdmin::setPort",
        "varnishadmin.setport.php",
        "クラスのオプション port を設定する"
    ],
    "VarnishAdminsetSecret": [
        "VarnishAdmin::setSecret",
        "varnishadmin.setsecret.php",
        "クラスのオプション secret を設定する"
    ],
    "VarnishAdminsetTimeout": [
        "VarnishAdmin::setTimeout",
        "varnishadmin.settimeout.php",
        "クラスのオプション timeout を設定する"
    ],
    "VarnishAdminstart": [
        "VarnishAdmin::start",
        "varnishadmin.start.php",
        "varnish ワーカープロセスを開始する"
    ],
    "VarnishAdminstop": [
        "VarnishAdmin::stop",
        "varnishadmin.stop.php",
        "varnish ワーカープロセスを停止する"
    ],
    "VarnishAdminconstruct": [
        "VarnishAdmin::__construct",
        "varnishadmin.construct.php",
        "VarnishAdmin のコンストラクタ"
    ],
    "VarnishLoggetLine": [
        "VarnishLog::getLine",
        "varnishlog.getline.php",
        "ログの次の行を取得する"
    ],
    "VarnishLoggetTagName": [
        "VarnishLog::getTagName",
        "varnishlog.gettagname.php",
        "ログのタグ文字列を、インデックスから取得する"
    ],
    "VarnishLogconstruct": [
        "VarnishLog::__construct",
        "varnishlog.construct.php",
        "Varnishlog のコンストラクタ"
    ],
    "VarnishStatgetSnapshot": [
        "VarnishStat::getSnapshot",
        "varnishstat.getsnapshot.php",
        "現在の varnish インスタンスの統計スナップショットを取得する"
    ],
    "VarnishStatconstruct": [
        "VarnishStat::__construct",
        "varnishstat.construct.php",
        "VarnishStat のコンストラクタ"
    ],
    "vardump": [
        "var_dump",
        "function.var-dump.php",
        "変数に関する情報をダンプする"
    ],
    "varexport": [
        "var_export",
        "function.var-export.php",
        "変数の文字列表現を出力または返す"
    ],
    "versioncompare": [
        "version_compare",
        "function.version-compare.php",
        "ふたつの &quot;PHP 標準&quot; バージョン番号文字列を比較する"
    ],
    "vfprintf": [
        "vfprintf",
        "function.vfprintf.php",
        "フォーマットされた文字列をストリームに書き込む"
    ],
    "virtual": [
        "virtual",
        "function.virtual.php",
        "Apache サブリクエストを実行する"
    ],
    "vprintf": [
        "vprintf",
        "function.vprintf.php",
        "フォーマットされた文字列を出力する"
    ],
    "vsprintf": [
        "vsprintf",
        "function.vsprintf.php",
        "フォーマットされた文字列を返す"
    ],
    "VtifulKernelExceladdSheet": [
        "Vtiful\\Kernel\\Excel::addSheet",
        "vtiful-kernel-excel.addSheet.php",
        "Vtiful\\Kernel\\Excel addSheet"
    ],
    "VtifulKernelExcelautoFilter": [
        "Vtiful\\Kernel\\Excel::autoFilter",
        "vtiful-kernel-excel.autoFilter.php",
        "Vtiful\\Kernel\\Excel autoFilter"
    ],
    "VtifulKernelExcelconstMemory": [
        "Vtiful\\Kernel\\Excel::constMemory",
        "vtiful-kernel-excel.constMemory.php",
        "Vtiful\\Kernel\\Excel constMemory"
    ],
    "VtifulKernelExceldata": [
        "Vtiful\\Kernel\\Excel::data",
        "vtiful-kernel-excel.data.php",
        "Vtiful\\Kernel\\Excel data"
    ],
    "VtifulKernelExcelfileName": [
        "Vtiful\\Kernel\\Excel::fileName",
        "vtiful-kernel-excel.filename.php",
        "Vtiful\\Kernel\\Excel fileName"
    ],
    "VtifulKernelExcelgetHandle": [
        "Vtiful\\Kernel\\Excel::getHandle",
        "vtiful-kernel-excel.getHandle.php",
        "Vtiful\\Kernel\\Excel getHandle"
    ],
    "VtifulKernelExcelheader": [
        "Vtiful\\Kernel\\Excel::header",
        "vtiful-kernel-excel.header.php",
        "Vtiful\\Kernel\\Excel header"
    ],
    "VtifulKernelExcelinsertFormula": [
        "Vtiful\\Kernel\\Excel::insertFormula",
        "vtiful-kernel-excel.insertFormula.php",
        "Vtiful\\Kernel\\Excel insertFormula"
    ],
    "VtifulKernelExcelinsertImage": [
        "Vtiful\\Kernel\\Excel::insertImage",
        "vtiful-kernel-excel.insertImage.php",
        "Vtiful\\Kernel\\Excel insertImage"
    ],
    "VtifulKernelExcelinsertText": [
        "Vtiful\\Kernel\\Excel::insertText",
        "vtiful-kernel-excel.insertText.php",
        "Vtiful\\Kernel\\Excel insertText"
    ],
    "VtifulKernelExcelmergeCells": [
        "Vtiful\\Kernel\\Excel::mergeCells",
        "vtiful-kernel-excel.mergeCells.php",
        "Vtiful\\Kernel\\Excel mergeCells"
    ],
    "VtifulKernelExceloutput": [
        "Vtiful\\Kernel\\Excel::output",
        "vtiful-kernel-excel.output.php",
        "Vtiful\\Kernel\\Excel output"
    ],
    "VtifulKernelExcelsetColumn": [
        "Vtiful\\Kernel\\Excel::setColumn",
        "vtiful-kernel-excel.setColumn.php",
        "Vtiful\\Kernel\\Excel setColumn"
    ],
    "VtifulKernelExcelsetRow": [
        "Vtiful\\Kernel\\Excel::setRow",
        "vtiful-kernel-excel.setRow.php",
        "Vtiful\\Kernel\\Excel setRow"
    ],
    "VtifulKernelExcelconstruct": [
        "Vtiful\\Kernel\\Excel::__construct",
        "vtiful-kernel-excel.construct.php",
        "Vtiful\\Kernel\\Excel constructor"
    ],
    "VtifulKernelFormatalign": [
        "Vtiful\\Kernel\\Format::align",
        "vtiful-kernel-format.align.php",
        "Vtiful\\Kernel\\Format align"
    ],
    "VtifulKernelFormatbold": [
        "Vtiful\\Kernel\\Format::bold",
        "vtiful-kernel-format.bold.php",
        "Vtiful\\Kernel\\Format bold"
    ],
    "VtifulKernelFormatitalic": [
        "Vtiful\\Kernel\\Format::italic",
        "vtiful-kernel-format.italic.php",
        "Vtiful\\Kernel\\Format italic"
    ],
    "VtifulKernelFormatunderline": [
        "Vtiful\\Kernel\\Format::underline",
        "vtiful-kernel-format.underline.php",
        "Vtiful\\Kernel\\Format underline"
    ],
    "Warningconstruct": [
        "Warning::__construct",
        "mysql-xdevapi-warning.construct.php",
        "Warning のコンストラクタ"
    ],
    "wddxaddvars": [
        "wddx_add_vars",
        "function.wddx-add-vars.php",
        "指定した ID の WDDX パケットに変数を追加する"
    ],
    "wddxdeserialize": [
        "wddx_deserialize",
        "function.wddx-deserialize.php",
        "WDDX パケットをデシリアライズする"
    ],
    "wddxpacketend": [
        "wddx_packet_end",
        "function.wddx-packet-end.php",
        "指定した ID の WDDX パケットを終了する"
    ],
    "wddxpacketstart": [
        "wddx_packet_start",
        "function.wddx-packet-start.php",
        "新規の WDDX パケットを内部の構造体を用いて開始する"
    ],
    "wddxserializevalue": [
        "wddx_serialize_value",
        "function.wddx-serialize-value.php",
        "単一の値を WDDX パケットにシリアライズする"
    ],
    "wddxserializevars": [
        "wddx_serialize_vars",
        "function.wddx-serialize-vars.php",
        "変数を WDDX パケットにシリアライズする"
    ],
    "WeakMapcount": [
        "WeakMap::count",
        "weakmap.count.php",
        "マップ内の生きたエントリを数える"
    ],
    "WeakMapcurrent": [
        "WeakMap::current",
        "weakmap.current.php",
        "反復処理中の現在の値を返す"
    ],
    "WeakMapkey": [
        "WeakMap::key",
        "weakmap.key.php",
        "反復処理中の現在のキーを返す"
    ],
    "WeakMapnext": [
        "WeakMap::next",
        "weakmap.next.php",
        "マップの次の要素に進む"
    ],
    "WeakMapoffsetExists": [
        "WeakMap::offsetExists",
        "weakmap.offsetexists.php",
        "オブジェクトがマップ内にあるかどうかを調べる"
    ],
    "WeakMapoffsetGet": [
        "WeakMap::offsetGet",
        "weakmap.offsetget.php",
        "オブジェクトを指定して、それが指す値を返す"
    ],
    "WeakMapoffsetSet": [
        "WeakMap::offsetSet",
        "weakmap.offsetset.php",
        "新しいキー/値のペアでマップを更新する"
    ],
    "WeakMapoffsetUnset": [
        "WeakMap::offsetUnset",
        "weakmap.offsetunset.php",
        "エントリをマップから削除する"
    ],
    "WeakMaprewind": [
        "WeakMap::rewind",
        "weakmap.rewind.php",
        "イテレータをマップの先頭まで巻き戻す"
    ],
    "WeakMapvalid": [
        "WeakMap::valid",
        "weakmap.valid.php",
        "イテレータが有効なマップ要素を指しているかどうかを返す"
    ],
    "WeakMapconstruct": [
        "WeakMap::__construct",
        "weakmap.construct.php",
        "新しいマップを作る"
    ],
    "Weakrefacquire": [
        "Weakref::acquire",
        "weakref.acquire.php",
        "オブジェクトへの強い参照を確保する"
    ],
    "Weakrefget": [
        "Weakref::get",
        "weakref.get.php",
        "弱い参照が指す先にオブジェクトを返す"
    ],
    "Weakrefrelease": [
        "Weakref::release",
        "weakref.release.php",
        "確保した参照を解放する"
    ],
    "Weakrefvalid": [
        "Weakref::valid",
        "weakref.valid.php",
        "参照先のオブジェクトがまだ存在するかどうかを調べる"
    ],
    "Weakrefconstruct": [
        "Weakref::__construct",
        "weakref.construct.php",
        "弱い参照を新しく作る"
    ],
    "WeakReferencecreate": [
        "WeakReference::create",
        "weakreference.create.php",
        "弱い参照を生成する"
    ],
    "WeakReferenceget": [
        "WeakReference::get",
        "weakreference.get.php",
        "弱く参照されたオブジェクトを取得する"
    ],
    "WeakReferenceconstruct": [
        "WeakReference::__construct",
        "weakreference.construct.php",
        "コンストラクタを使ってインスタンス化はできません"
    ],
    "win32continueservice": [
        "win32_continue_service",
        "function.win32-continue-service.php",
        "中断したサービスを再開する"
    ],
    "win32createservice": [
        "win32_create_service",
        "function.win32-create-service.php",
        "SCM データベースに新しいサービスのエントリを作成する"
    ],
    "win32deleteservice": [
        "win32_delete_service",
        "function.win32-delete-service.php",
        "SCM データベースからサービスのエントリを削除する"
    ],
    "win32getlastcontrolmessage": [
        "win32_get_last_control_message",
        "function.win32-get-last-control-message.php",
        "サービスに送信された直近の制御メッセージを返す"
    ],
    "win32pauseservice": [
        "win32_pause_service",
        "function.win32-pause-service.php",
        "サービスを中断する"
    ],
    "win32queryservicestatus": [
        "win32_query_service_status",
        "function.win32-query-service-status.php",
        "サービスの状態を問い合わせる"
    ],
    "win32sendcustomcontrol": [
        "win32_send_custom_control",
        "function.win32-send-custom-control.php",
        "Send a custom control to the service"
    ],
    "win32setserviceexitcode": [
        "win32_set_service_exit_code",
        "function.win32-set-service-exit-code.php",
        "Define or return the exit code for the current running service"
    ],
    "win32setserviceexitmode": [
        "win32_set_service_exit_mode",
        "function.win32-set-service-exit-mode.php",
        "Define or return the exit mode for the current running service"
    ],
    "win32setservicestatus": [
        "win32_set_service_status",
        "function.win32-set-service-status.php",
        "サービスの状態を更新する"
    ],
    "win32startservice": [
        "win32_start_service",
        "function.win32-start-service.php",
        "サービスを開始する"
    ],
    "win32stopservice": [
        "win32_stop_service",
        "function.win32-stop-service.php",
        "サービスを停止する"
    ],
    "wincachefcachefileinfo": [
        "wincache_fcache_fileinfo",
        "function.wincache-fcache-fileinfo.php",
        "ファイルキャッシュにキャッシュされたファイルについての情報を取得する"
    ],
    "wincachefcachememinfo": [
        "wincache_fcache_meminfo",
        "function.wincache-fcache-meminfo.php",
        "ファイルキャッシュのメモリ使用状況についての情報を取得する"
    ],
    "wincachelock": [
        "wincache_lock",
        "function.wincache-lock.php",
        "指定したキーで排他ロックを確保する"
    ],
    "wincacheocachefileinfo": [
        "wincache_ocache_fileinfo",
        "function.wincache-ocache-fileinfo.php",
        "opcode キャッシュにキャッシュされたファイルについての情報を取得する"
    ],
    "wincacheocachememinfo": [
        "wincache_ocache_meminfo",
        "function.wincache-ocache-meminfo.php",
        "opcode キャッシュのメモリ使用状況についての情報を取得する"
    ],
    "wincacherefreshifchanged": [
        "wincache_refresh_if_changed",
        "function.wincache-refresh-if-changed.php",
        "キャッシュされたファイルのキャッシュエントリをリフレッシュする"
    ],
    "wincacherplistfileinfo": [
        "wincache_rplist_fileinfo",
        "function.wincache-rplist-fileinfo.php",
        "ファイルパス解決キャッシュについての情報を取得する"
    ],
    "wincacherplistmeminfo": [
        "wincache_rplist_meminfo",
        "function.wincache-rplist-meminfo.php",
        "ファイルパス解決キャッシュのメモリ使用状況についての情報を取得する"
    ],
    "wincachescacheinfo": [
        "wincache_scache_info",
        "function.wincache-scache-info.php",
        "セッションキャッシュにキャッシュされたファイルについての情報を取得する"
    ],
    "wincachescachememinfo": [
        "wincache_scache_meminfo",
        "function.wincache-scache-meminfo.php",
        "セッションキャッシュのメモリ使用状況についての情報を取得する"
    ],
    "wincacheucacheadd": [
        "wincache_ucache_add",
        "function.wincache-ucache-add.php",
        "変数が既にキャッシュに存在しない場合にのみ変数をユーザーキャッシュに追加する"
    ],
    "wincacheucachecas": [
        "wincache_ucache_cas",
        "function.wincache-ucache-cas.php",
        "変数を古い値と比較して新しい値を代入する"
    ],
    "wincacheucacheclear": [
        "wincache_ucache_clear",
        "function.wincache-ucache-clear.php",
        "ユーザーキャッシュの中身全体を削除する"
    ],
    "wincacheucachedec": [
        "wincache_ucache_dec",
        "function.wincache-ucache-dec.php",
        "キーに関連づけられた値を減少させる"
    ],
    "wincacheucachedelete": [
        "wincache_ucache_delete",
        "function.wincache-ucache-delete.php",
        "変数をユーザーキャッシュから削除する"
    ],
    "wincacheucacheexists": [
        "wincache_ucache_exists",
        "function.wincache-ucache-exists.php",
        "変数がユーザーキャッシュに存在するかどうかを調べる"
    ],
    "wincacheucacheget": [
        "wincache_ucache_get",
        "function.wincache-ucache-get.php",
        "ユーザーキャッシュに格納された変数を取得する"
    ],
    "wincacheucacheinc": [
        "wincache_ucache_inc",
        "function.wincache-ucache-inc.php",
        "キーに関連づけられた値を増加させる"
    ],
    "wincacheucacheinfo": [
        "wincache_ucache_info",
        "function.wincache-ucache-info.php",
        "ユーザーキャッシュにキャッシュされたファイルについての情報を取得する"
    ],
    "wincacheucachememinfo": [
        "wincache_ucache_meminfo",
        "function.wincache-ucache-meminfo.php",
        "ユーザーキャッシュのメモリ使用状況についての情報を取得する"
    ],
    "wincacheucacheset": [
        "wincache_ucache_set",
        "function.wincache-ucache-set.php",
        "変数をユーザーキャッシュに追加し、変数が既にキャッシュに存在する場合はそれを上書きする"
    ],
    "wincacheunlock": [
        "wincache_unlock",
        "function.wincache-unlock.php",
        "指定したキーの排他ロックを解放する"
    ],
    "wkhtmltoxImageConverterconvert": [
        "wkhtmltox\\Image\\Converter::convert",
        "wkhtmltox-image-converter.convert.php",
        "Perform Image conversion"
    ],
    "wkhtmltoxImageConvertergetVersion": [
        "wkhtmltox\\Image\\Converter::getVersion",
        "wkhtmltox-image-converter.getversion.php",
        "Determine version of Converter"
    ],
    "wkhtmltoxImageConverterconstruct": [
        "wkhtmltox\\Image\\Converter::__construct",
        "wkhtmltox-image-converter.construct.php",
        "Create a new Image converter"
    ],
    "wkhtmltoxPDFConverteradd": [
        "wkhtmltox\\PDF\\Converter::add",
        "wkhtmltox-pdf-converter.add.php",
        "Add an object for conversion"
    ],
    "wkhtmltoxPDFConverterconvert": [
        "wkhtmltox\\PDF\\Converter::convert",
        "wkhtmltox-pdf-converter.convert.php",
        "Perform PDF conversion"
    ],
    "wkhtmltoxPDFConvertergetVersion": [
        "wkhtmltox\\PDF\\Converter::getVersion",
        "wkhtmltox-pdf-converter.getversion.php",
        "Determine version of Converter"
    ],
    "wkhtmltoxPDFConverterconstruct": [
        "wkhtmltox\\PDF\\Converter::__construct",
        "wkhtmltox-pdf-converter.construct.php",
        "Create a new PDF converter"
    ],
    "wkhtmltoxPDFObjectconstruct": [
        "wkhtmltox\\PDF\\Object::__construct",
        "wkhtmltox-pdf-object.construct.php",
        "Create a new PDF Object"
    ],
    "wordwrap": [
        "wordwrap",
        "function.wordwrap.php",
        "指定した文字数で文字列を分割する"
    ],
    "Workercollect": [
        "Worker::collect",
        "worker.collect.php",
        "Collect references to completed tasks"
    ],
    "WorkergetStacked": [
        "Worker::getStacked",
        "worker.getstacked.php",
        "Gets the remaining stack size"
    ],
    "WorkerisShutdown": [
        "Worker::isShutdown",
        "worker.isshutdown.php",
        "State Detection"
    ],
    "WorkerisWorking": [
        "Worker::isWorking",
        "worker.isworking.php",
        "状態を検出する"
    ],
    "Workershutdown": [
        "Worker::shutdown",
        "worker.shutdown.php",
        "Shutdown the worker"
    ],
    "Workerstack": [
        "Worker::stack",
        "worker.stack.php",
        "Stacking work"
    ],
    "Workerunstack": [
        "Worker::unstack",
        "worker.unstack.php",
        "Unstacking work"
    ],
    "xattrget": [
        "xattr_get",
        "function.xattr-get.php",
        "拡張属性を取得する"
    ],
    "xattrlist": [
        "xattr_list",
        "function.xattr-list.php",
        "拡張属性の一覧を取得する"
    ],
    "xattrremove": [
        "xattr_remove",
        "function.xattr-remove.php",
        "拡張属性を削除する"
    ],
    "xattrset": [
        "xattr_set",
        "function.xattr-set.php",
        "拡張属性を設定する"
    ],
    "xattrsupported": [
        "xattr_supported",
        "function.xattr-supported.php",
        "ファイルシステムが拡張属性をサポートしているかどうかを調べる"
    ],
    "xdifffilebdiff": [
        "xdiff_file_bdiff",
        "function.xdiff-file-bdiff.php",
        "2 つのファイルのバイナリ diff を作成する"
    ],
    "xdifffilebdiffsize": [
        "xdiff_file_bdiff_size",
        "function.xdiff-file-bdiff-size.php",
        "バイナリ diff を適用して作成するファイルのサイズを読み込む"
    ],
    "xdifffilebpatch": [
        "xdiff_file_bpatch",
        "function.xdiff-file-bpatch.php",
        "ファイルにバイナリ diff 形式のパッチを適用する"
    ],
    "xdifffilediff": [
        "xdiff_file_diff",
        "function.xdiff-file-diff.php",
        "2 つのファイルの unified diff を作成する"
    ],
    "xdifffilediffbinary": [
        "xdiff_file_diff_binary",
        "function.xdiff-file-diff-binary.php",
        "xiff_file_bdiff のエイリアス"
    ],
    "xdifffilemerge3": [
        "xdiff_file_merge3",
        "function.xdiff-file-merge3.php",
        "3 つのファイルをひとつに統合する"
    ],
    "xdifffilepatch": [
        "xdiff_file_patch",
        "function.xdiff-file-patch.php",
        "ファイルに unified diff 形式のパッチを適用する"
    ],
    "xdifffilepatchbinary": [
        "xdiff_file_patch_binary",
        "function.xdiff-file-patch-binary.php",
        "xdiff_file_bpatch のエイリアス"
    ],
    "xdifffilerabdiff": [
        "xdiff_file_rabdiff",
        "function.xdiff-file-rabdiff.php",
        "2 つのファイルのバイナリ diff を、Rabin の polynomial fingerprinting アルゴリズムで作成する"
    ],
    "xdiffstringbdiff": [
        "xdiff_string_bdiff",
        "function.xdiff-string-bdiff.php",
        "2 つの文字列のバイナリ diff を作成する"
    ],
    "xdiffstringbdiffsize": [
        "xdiff_string_bdiff_size",
        "function.xdiff-string-bdiff-size.php",
        "バイナリ diff を適用して作成するファイルのサイズを読み込む"
    ],
    "xdiffstringbpatch": [
        "xdiff_string_bpatch",
        "function.xdiff-string-bpatch.php",
        "文字列にバイナリ diff 形式のパッチを適用する"
    ],
    "xdiffstringdiff": [
        "xdiff_string_diff",
        "function.xdiff-string-diff.php",
        "2 つの文字列の unified diff を作成する"
    ],
    "xdiffstringdiffbinary": [
        "xdiff_string_diff_binary",
        "function.xdiff-string-diff-binary.php",
        "xdiff_string_bdiff のエイリアス"
    ],
    "xdiffstringmerge3": [
        "xdiff_string_merge3",
        "function.xdiff-string-merge3.php",
        "3 つの文字列をひとつに統合する"
    ],
    "xdiffstringpatch": [
        "xdiff_string_patch",
        "function.xdiff-string-patch.php",
        "文字列に unified diff 形式のパッチを適用する"
    ],
    "xdiffstringpatchbinary": [
        "xdiff_string_patch_binary",
        "function.xdiff-string-patch-binary.php",
        "xdiff_string_bpatch のエイリアス"
    ],
    "xdiffstringrabdiff": [
        "xdiff_string_rabdiff",
        "function.xdiff-string-rabdiff.php",
        "2 つの文字列のバイナリ diff を、Rabin の polynomial fingerprinting アルゴリズムで作成する"
    ],
    "xhprofdisable": [
        "xhprof_disable",
        "function.xhprof-disable.php",
        "xhprof プロファイラを終了する"
    ],
    "xhprofenable": [
        "xhprof_enable",
        "function.xhprof-enable.php",
        "xhprof プロファイラを開始する"
    ],
    "xhprofsampledisable": [
        "xhprof_sample_disable",
        "function.xhprof-sample-disable.php",
        "xhprof サンプルプロファイラを終了する"
    ],
    "xhprofsampleenable": [
        "xhprof_sample_enable",
        "function.xhprof-sample-enable.php",
        "サンプリングモードでの XHProf プロファイリングを開始する"
    ],
    "XMLDiffBasediff": [
        "XMLDiff\\Base::diff",
        "xmldiff-base.diff.php",
        "Produce diff of two XML documents"
    ],
    "XMLDiffBasemerge": [
        "XMLDiff\\Base::merge",
        "xmldiff-base.merge.php",
        "Produce new XML document based on diff"
    ],
    "XMLDiffBaseconstruct": [
        "XMLDiff\\Base::__construct",
        "xmldiff-base.construct.php",
        "Constructor"
    ],
    "XMLDiffDOMdiff": [
        "XMLDiff\\DOM::diff",
        "xmldiff-dom.diff.php",
        "Diff two DOMDocument objects"
    ],
    "XMLDiffDOMmerge": [
        "XMLDiff\\DOM::merge",
        "xmldiff-dom.merge.php",
        "Produce merged DOMDocument"
    ],
    "XMLDiffFilediff": [
        "XMLDiff\\File::diff",
        "xmldiff-file.diff.php",
        "Diff two XML files"
    ],
    "XMLDiffFilemerge": [
        "XMLDiff\\File::merge",
        "xmldiff-file.merge.php",
        "Produce merged XML document"
    ],
    "XMLDiffMemorydiff": [
        "XMLDiff\\Memory::diff",
        "xmldiff-memory.diff.php",
        "Diff two XML documents"
    ],
    "XMLDiffMemorymerge": [
        "XMLDiff\\Memory::merge",
        "xmldiff-memory.merge.php",
        "Produce merged XML document"
    ],
    "XMLReaderclose": [
        "XMLReader::close",
        "xmlreader.close.php",
        "XMLReader の入力を閉じる"
    ],
    "XMLReaderexpand": [
        "XMLReader::expand",
        "xmlreader.expand.php",
        "現在のノードのコピーを DOM オブジェクトとして返す"
    ],
    "XMLReadergetAttribute": [
        "XMLReader::getAttribute",
        "xmlreader.getattribute.php",
        "名前をもとに、属性の値を取得する"
    ],
    "XMLReadergetAttributeNo": [
        "XMLReader::getAttributeNo",
        "xmlreader.getattributeno.php",
        "インデックスをもとに、属性の値を取得する"
    ],
    "XMLReadergetAttributeNs": [
        "XMLReader::getAttributeNs",
        "xmlreader.getattributens.php",
        "名前および URI をもとに、属性の値を取得する"
    ],
    "XMLReadergetParserProperty": [
        "XMLReader::getParserProperty",
        "xmlreader.getparserproperty.php",
        "指定したプロパティが設定されているかどうかを示す"
    ],
    "XMLReaderisValid": [
        "XMLReader::isValid",
        "xmlreader.isvalid.php",
        "パースしているドキュメントの妥当性を示す"
    ],
    "XMLReaderlookupNamespace": [
        "XMLReader::lookupNamespace",
        "xmlreader.lookupnamespace.php",
        "プレフィックスから、名前空間を検索する"
    ],
    "XMLReadermoveToAttribute": [
        "XMLReader::moveToAttribute",
        "xmlreader.movetoattribute.php",
        "指定した名前の属性にカーソルを移動する"
    ],
    "XMLReadermoveToAttributeNo": [
        "XMLReader::moveToAttributeNo",
        "xmlreader.movetoattributeno.php",
        "指定したインデックスの属性にカーソルを移動する"
    ],
    "XMLReadermoveToAttributeNs": [
        "XMLReader::moveToAttributeNs",
        "xmlreader.movetoattributens.php",
        "指定した名前の属性にカーソルを移動する"
    ],
    "XMLReadermoveToElement": [
        "XMLReader::moveToElement",
        "xmlreader.movetoelement.php",
        "現在の属性の親要素にカーソルを移動する"
    ],
    "XMLReadermoveToFirstAttribute": [
        "XMLReader::moveToFirstAttribute",
        "xmlreader.movetofirstattribute.php",
        "最初の属性にカーソルを移動する"
    ],
    "XMLReadermoveToNextAttribute": [
        "XMLReader::moveToNextAttribute",
        "xmlreader.movetonextattribute.php",
        "次の属性にカーソルを移動する"
    ],
    "XMLReadernext": [
        "XMLReader::next",
        "xmlreader.next.php",
        "すべてのサブツリーを飛ばして、次のノードにカーソルを移動する"
    ],
    "XMLReaderopen": [
        "XMLReader::open",
        "xmlreader.open.php",
        "パースする XML を含む URI を設定する"
    ],
    "XMLReaderread": [
        "XMLReader::read",
        "xmlreader.read.php",
        "ドキュメント内の次のノードに移動する"
    ],
    "XMLReaderreadInnerXml": [
        "XMLReader::readInnerXml",
        "xmlreader.readinnerxml.php",
        "現在のノードから XML を取得する"
    ],
    "XMLReaderreadOuterXml": [
        "XMLReader::readOuterXml",
        "xmlreader.readouterxml.php",
        "現在のノードから自分自身も含めた XML を取得する"
    ],
    "XMLReaderreadString": [
        "XMLReader::readString",
        "xmlreader.readstring.php",
        "現在のノードの内容を文字列で読み込む"
    ],
    "XMLReadersetParserProperty": [
        "XMLReader::setParserProperty",
        "xmlreader.setparserproperty.php",
        "パーサのオプションを設定する"
    ],
    "XMLReadersetRelaxNGSchema": [
        "XMLReader::setRelaxNGSchema",
        "xmlreader.setrelaxngschema.php",
        "RelaxNG スキーマのファイル名あるいは URI を設定する"
    ],
    "XMLReadersetRelaxNGSchemaSource": [
        "XMLReader::setRelaxNGSchemaSource",
        "xmlreader.setrelaxngschemasource.php",
        "RelaxNG スキーマを含むデータを設定する"
    ],
    "XMLReadersetSchema": [
        "XMLReader::setSchema",
        "xmlreader.setschema.php",
        "ドキュメントを XSD で検証する"
    ],
    "XMLReaderXML": [
        "XMLReader::XML",
        "xmlreader.xml.php",
        "パースする XML を含むデータを設定する"
    ],
    "xmlrpcdecode": [
        "xmlrpc_decode",
        "function.xmlrpc-decode.php",
        "XML をネイティブな PHP 型にデコードする"
    ],
    "xmlrpcdecoderequest": [
        "xmlrpc_decode_request",
        "function.xmlrpc-decode-request.php",
        "XML をネイティブなPHP 型にデコードする"
    ],
    "xmlrpcencode": [
        "xmlrpc_encode",
        "function.xmlrpc-encode.php",
        "PHP の値に関する XML を生成する"
    ],
    "xmlrpcencoderequest": [
        "xmlrpc_encode_request",
        "function.xmlrpc-encode-request.php",
        "メソッドリクエスト用の XML を生成する"
    ],
    "xmlrpcgettype": [
        "xmlrpc_get_type",
        "function.xmlrpc-get-type.php",
        "PHP の値に関する xmlrpc 型を取得する"
    ],
    "xmlrpcisfault": [
        "xmlrpc_is_fault",
        "function.xmlrpc-is-fault.php",
        "配列の値が XMLRPC の失敗であるかどうかを調べる"
    ],
    "xmlrpcparsemethoddescriptions": [
        "xmlrpc_parse_method_descriptions",
        "function.xmlrpc-parse-method-descriptions.php",
        "XML を、メソッド説明のリストにデコードする"
    ],
    "xmlrpcserveraddintrospectiondata": [
        "xmlrpc_server_add_introspection_data",
        "function.xmlrpc-server-add-introspection-data.php",
        "introspection ドキュメントを追加する"
    ],
    "xmlrpcservercallmethod": [
        "xmlrpc_server_call_method",
        "function.xmlrpc-server-call-method.php",
        "XML リクエストをパースし、メソッドをコールする"
    ],
    "xmlrpcservercreate": [
        "xmlrpc_server_create",
        "function.xmlrpc-server-create.php",
        "xmlrpc サーバーを作成する"
    ],
    "xmlrpcserverdestroy": [
        "xmlrpc_server_destroy",
        "function.xmlrpc-server-destroy.php",
        "サーバーリソースを破棄する"
    ],
    "xmlrpcserverregisterintrospectioncallback": [
        "xmlrpc_server_register_introspection_callback",
        "function.xmlrpc-server-register-introspection-callback.php",
        "ドキュメントを生成する PHP 関数を登録する"
    ],
    "xmlrpcserverregistermethod": [
        "xmlrpc_server_register_method",
        "function.xmlrpc-server-register-method.php",
        "メソッド名が一致するメソッドリソースに PHP 関数を登録する"
    ],
    "xmlrpcsettype": [
        "xmlrpc_set_type",
        "function.xmlrpc-set-type.php",
        "PHP 文字列型用に xmlrpc 型、base64 または datetime を設定する"
    ],
    "XMLWriterendAttribute": [
        "XMLWriter::endAttribute",
        "function.xmlwriter-end-attribute.php",
        "属性を終了する"
    ],
    "XMLWriterendCdata": [
        "XMLWriter::endCdata",
        "function.xmlwriter-end-cdata.php",
        "現在の CDATA を終了する"
    ],
    "XMLWriterendComment": [
        "XMLWriter::endComment",
        "function.xmlwriter-end-comment.php",
        "コメントの終了部を作成する"
    ],
    "XMLWriterendDocument": [
        "XMLWriter::endDocument",
        "function.xmlwriter-end-document.php",
        "現在のドキュメントを終了する"
    ],
    "XMLWriterendDtd": [
        "XMLWriter::endDtd",
        "function.xmlwriter-end-dtd.php",
        "現在の DTD を終了する"
    ],
    "XMLWriterendDtdAttlist": [
        "XMLWriter::endDtdAttlist",
        "function.xmlwriter-end-dtd-attlist.php",
        "現在の DTD 属性リストを終了する"
    ],
    "XMLWriterendDtdElement": [
        "XMLWriter::endDtdElement",
        "function.xmlwriter-end-dtd-element.php",
        "現在の DTD 要素を終了する"
    ],
    "XMLWriterendDtdEntity": [
        "XMLWriter::endDtdEntity",
        "function.xmlwriter-end-dtd-entity.php",
        "現在の DTD エンティティを終了する"
    ],
    "XMLWriterendElement": [
        "XMLWriter::endElement",
        "function.xmlwriter-end-element.php",
        "現在の要素を終了する"
    ],
    "XMLWriterendPi": [
        "XMLWriter::endPi",
        "function.xmlwriter-end-pi.php",
        "現在の PI (処理命令) を終了する"
    ],
    "XMLWriterflush": [
        "XMLWriter::flush",
        "function.xmlwriter-flush.php",
        "現在のバッファをフラッシュする"
    ],
    "XMLWriterfullEndElement": [
        "XMLWriter::fullEndElement",
        "function.xmlwriter-full-end-element.php",
        "現在の要素を終了する"
    ],
    "XMLWriteropenMemory": [
        "XMLWriter::openMemory",
        "function.xmlwriter-open-memory.php",
        "文字列の出力にメモリを使用する新しい xmlwriter を作成する"
    ],
    "XMLWriteropenUri": [
        "XMLWriter::openUri",
        "function.xmlwriter-open-uri.php",
        "ソース URI を指定して新しい xmlwriter を作成する"
    ],
    "XMLWriteroutputMemory": [
        "XMLWriter::outputMemory",
        "function.xmlwriter-output-memory.php",
        "現在のバッファを返す"
    ],
    "XMLWritersetIndent": [
        "XMLWriter::setIndent",
        "function.xmlwriter-set-indent.php",
        "字下げの on/off を切り替える"
    ],
    "XMLWritersetIndentString": [
        "XMLWriter::setIndentString",
        "function.xmlwriter-set-indent-string.php",
        "字下げに使用する文字列を設定する"
    ],
    "XMLWriterstartAttribute": [
        "XMLWriter::startAttribute",
        "function.xmlwriter-start-attribute.php",
        "属性を開始する"
    ],
    "XMLWriterstartAttributeNs": [
        "XMLWriter::startAttributeNs",
        "function.xmlwriter-start-attribute-ns.php",
        "名前空間つきの属性を開始する"
    ],
    "XMLWriterstartCdata": [
        "XMLWriter::startCdata",
        "function.xmlwriter-start-cdata.php",
        "CDATA の開始タグを作成する"
    ],
    "XMLWriterstartComment": [
        "XMLWriter::startComment",
        "function.xmlwriter-start-comment.php",
        "コメントを開始する"
    ],
    "XMLWriterstartDocument": [
        "XMLWriter::startDocument",
        "function.xmlwriter-start-document.php",
        "ドキュメントタグを作成する"
    ],
    "XMLWriterstartDtd": [
        "XMLWriter::startDtd",
        "function.xmlwriter-start-dtd.php",
        "DTD の開始タグを作成する"
    ],
    "XMLWriterstartDtdAttlist": [
        "XMLWriter::startDtdAttlist",
        "function.xmlwriter-start-dtd-attlist.php",
        "DTD 属性リストを開始する"
    ],
    "XMLWriterstartDtdElement": [
        "XMLWriter::startDtdElement",
        "function.xmlwriter-start-dtd-element.php",
        "DTD 要素を開始する"
    ],
    "XMLWriterstartDtdEntity": [
        "XMLWriter::startDtdEntity",
        "function.xmlwriter-start-dtd-entity.php",
        "DTD エンティティを開始する"
    ],
    "XMLWriterstartElement": [
        "XMLWriter::startElement",
        "function.xmlwriter-start-element.php",
        "要素の開始タグを作成する"
    ],
    "XMLWriterstartElementNs": [
        "XMLWriter::startElementNs",
        "function.xmlwriter-start-element-ns.php",
        "名前空間つき要素の開始タグを作成する"
    ],
    "XMLWriterstartPi": [
        "XMLWriter::startPi",
        "function.xmlwriter-start-pi.php",
        "PI (処理命令) の開始タグを作成する"
    ],
    "XMLWritertext": [
        "XMLWriter::text",
        "function.xmlwriter-text.php",
        "テキストを書き込む"
    ],
    "XMLWriterwriteAttribute": [
        "XMLWriter::writeAttribute",
        "function.xmlwriter-write-attribute.php",
        "属性全体を書き込む"
    ],
    "XMLWriterwriteAttributeNs": [
        "XMLWriter::writeAttributeNs",
        "function.xmlwriter-write-attribute-ns.php",
        "名前空間つき属性全体を書き込む"
    ],
    "XMLWriterwriteCdata": [
        "XMLWriter::writeCdata",
        "function.xmlwriter-write-cdata.php",
        "CDATA タグ全体を書き込む"
    ],
    "XMLWriterwriteComment": [
        "XMLWriter::writeComment",
        "function.xmlwriter-write-comment.php",
        "コメントタグ全体を書き込む"
    ],
    "XMLWriterwriteDtd": [
        "XMLWriter::writeDtd",
        "function.xmlwriter-write-dtd.php",
        "DTD タグ全体を書き込む"
    ],
    "XMLWriterwriteDtdAttlist": [
        "XMLWriter::writeDtdAttlist",
        "function.xmlwriter-write-dtd-attlist.php",
        "DTD 属性リストタグ全体を書き込む"
    ],
    "XMLWriterwriteDtdElement": [
        "XMLWriter::writeDtdElement",
        "function.xmlwriter-write-dtd-element.php",
        "DTD 要素タグ全体を書き込む"
    ],
    "XMLWriterwriteDtdEntity": [
        "XMLWriter::writeDtdEntity",
        "function.xmlwriter-write-dtd-entity.php",
        "DTD エンティティタグ全体を書き込む"
    ],
    "XMLWriterwriteElement": [
        "XMLWriter::writeElement",
        "function.xmlwriter-write-element.php",
        "要素タグ全体を書き込む"
    ],
    "XMLWriterwriteElementNs": [
        "XMLWriter::writeElementNs",
        "function.xmlwriter-write-element-ns.php",
        "名前空間つき要素タグ全体を書き込む"
    ],
    "XMLWriterwritePi": [
        "XMLWriter::writePi",
        "function.xmlwriter-write-pi.php",
        "PI (処理命令) 書き込む"
    ],
    "XMLWriterwriteRaw": [
        "XMLWriter::writeRaw",
        "function.xmlwriter-write-raw.php",
        "生の XML テキストを書き込む"
    ],
    "xmlerrorstring": [
        "xml_error_string",
        "function.xml-error-string.php",
        "XML パーサのエラー文字列を得る"
    ],
    "xmlgetcurrentbyteindex": [
        "xml_get_current_byte_index",
        "function.xml-get-current-byte-index.php",
        "XML パーサのカレントのバイトインデックスを得る"
    ],
    "xmlgetcurrentcolumnnumber": [
        "xml_get_current_column_number",
        "function.xml-get-current-column-number.php",
        "XML パーサのカレントのカラム番号を取得する"
    ],
    "xmlgetcurrentlinenumber": [
        "xml_get_current_line_number",
        "function.xml-get-current-line-number.php",
        "XML パーサのカレントの行番号を得る"
    ],
    "xmlgeterrorcode": [
        "xml_get_error_code",
        "function.xml-get-error-code.php",
        "XML パーサのエラーコードを得る"
    ],
    "xmlparse": [
        "xml_parse",
        "function.xml-parse.php",
        "XML ドキュメントの処理を開始する"
    ],
    "xmlparsercreate": [
        "xml_parser_create",
        "function.xml-parser-create.php",
        "XML パーサを作成する"
    ],
    "xmlparsercreatens": [
        "xml_parser_create_ns",
        "function.xml-parser-create-ns.php",
        "名前空間をサポートした XML パーサを生成する"
    ],
    "xmlparserfree": [
        "xml_parser_free",
        "function.xml-parser-free.php",
        "XML パーサを解放する"
    ],
    "xmlparsergetoption": [
        "xml_parser_get_option",
        "function.xml-parser-get-option.php",
        "XML パーサからオプションを得る"
    ],
    "xmlparsersetoption": [
        "xml_parser_set_option",
        "function.xml-parser-set-option.php",
        "XML パーサのオプションを設定する"
    ],
    "xmlparseintostruct": [
        "xml_parse_into_struct",
        "function.xml-parse-into-struct.php",
        "配列構造体に XML データを処理する"
    ],
    "xmlsetcharacterdatahandler": [
        "xml_set_character_data_handler",
        "function.xml-set-character-data-handler.php",
        "文字データハンドラを設定する"
    ],
    "xmlsetdefaulthandler": [
        "xml_set_default_handler",
        "function.xml-set-default-handler.php",
        "デフォルトのハンドラを設定する"
    ],
    "xmlsetelementhandler": [
        "xml_set_element_handler",
        "function.xml-set-element-handler.php",
        "開始要素および終了要素のハンドラを設定する"
    ],
    "xmlsetendnamespacedeclhandler": [
        "xml_set_end_namespace_decl_handler",
        "function.xml-set-end-namespace-decl-handler.php",
        "名前空間終了ハンドラを設定する"
    ],
    "xmlsetexternalentityrefhandler": [
        "xml_set_external_entity_ref_handler",
        "function.xml-set-external-entity-ref-handler.php",
        "外部エンティティリファレンスハンドラを設定する"
    ],
    "xmlsetnotationdeclhandler": [
        "xml_set_notation_decl_handler",
        "function.xml-set-notation-decl-handler.php",
        "表記法宣言ハンドラを設定する"
    ],
    "xmlsetobject": [
        "xml_set_object",
        "function.xml-set-object.php",
        "オブジェクト内部で XML パーサを使用する"
    ],
    "xmlsetprocessinginstructionhandler": [
        "xml_set_processing_instruction_handler",
        "function.xml-set-processing-instruction-handler.php",
        "処理命令 (PI) 用ハンドラを設定する"
    ],
    "xmlsetstartnamespacedeclhandler": [
        "xml_set_start_namespace_decl_handler",
        "function.xml-set-start-namespace-decl-handler.php",
        "名前空間開始ハンドラを設定する"
    ],
    "xmlsetunparsedentitydeclhandler": [
        "xml_set_unparsed_entity_decl_handler",
        "function.xml-set-unparsed-entity-decl-handler.php",
        "処理されないエンティティ宣言用ハンドラを設定する"
    ],
    "XSLTProcessorgetParameter": [
        "XSLTProcessor::getParameter",
        "xsltprocessor.getparameter.php",
        "パラメータの値を取得する"
    ],
    "XSLTProcessorgetSecurityPrefs": [
        "XSLTProcessor::getSecurityPrefs",
        "xsltprocessor.getsecurityprefs.php",
        "セキュリティ設定を取得する"
    ],
    "XSLTProcessorhasExsltSupport": [
        "XSLTProcessor::hasExsltSupport",
        "xsltprocessor.hasexsltsupport.php",
        "PHP が EXSLT をサポートしているかどうかを判定する"
    ],
    "XSLTProcessorimportStylesheet": [
        "XSLTProcessor::importStylesheet",
        "xsltprocessor.importstylesheet.php",
        "スタイルシートを取り込む"
    ],
    "XSLTProcessorregisterPHPFunctions": [
        "XSLTProcessor::registerPHPFunctions",
        "xsltprocessor.registerphpfunctions.php",
        "PHP 関数を XSLT 関数として利用できるようにする"
    ],
    "XSLTProcessorremoveParameter": [
        "XSLTProcessor::removeParameter",
        "xsltprocessor.removeparameter.php",
        "パラメータを削除する"
    ],
    "XSLTProcessorsetParameter": [
        "XSLTProcessor::setParameter",
        "xsltprocessor.setparameter.php",
        "パラメータの値を設定する"
    ],
    "XSLTProcessorsetProfiling": [
        "XSLTProcessor::setProfiling",
        "xsltprocessor.setprofiling.php",
        "プロファイル情報の出力ファイルを設定する"
    ],
    "XSLTProcessorsetSecurityPrefs": [
        "XSLTProcessor::setSecurityPrefs",
        "xsltprocessor.setsecurityprefs.php",
        "セキュリティ設定を指定する"
    ],
    "XSLTProcessortransformToDoc": [
        "XSLTProcessor::transformToDoc",
        "xsltprocessor.transformtodoc.php",
        "DOMDocument に変換する"
    ],
    "XSLTProcessortransformToUri": [
        "XSLTProcessor::transformToUri",
        "xsltprocessor.transformtouri.php",
        "URI に変換する"
    ],
    "XSLTProcessortransformToXml": [
        "XSLTProcessor::transformToXml",
        "xsltprocessor.transformtoxml.php",
        "XML に変換する"
    ],
    "XSLTProcessorconstruct": [
        "XSLTProcessor::__construct",
        "xsltprocessor.construct.php",
        "新規 XSLTProcessor オブジェクトを生成する"
    ],
    "Yacadd": [
        "Yac::add",
        "yac.add.php",
        "Store into cache"
    ],
    "Yacdelete": [
        "Yac::delete",
        "yac.delete.php",
        "Remove items from cache"
    ],
    "Yacdump": [
        "Yac::dump",
        "yac.dump.php",
        "Dump cache"
    ],
    "Yacflush": [
        "Yac::flush",
        "yac.flush.php",
        "Flush the cache"
    ],
    "Yacget": [
        "Yac::__get",
        "yac.getter.php",
        "Getter"
    ],
    "Yacinfo": [
        "Yac::info",
        "yac.info.php",
        "Status of cache"
    ],
    "Yacset": [
        "Yac::__set",
        "yac.setter.php",
        "Setter"
    ],
    "Yacconstruct": [
        "Yac::__construct",
        "yac.construct.php",
        "Constructor"
    ],
    "Yaconfget": [
        "Yaconf::get",
        "yaconf.get.php",
        "Retrieve a item"
    ],
    "Yaconfhas": [
        "Yaconf::has",
        "yaconf.has.php",
        "Determine if a item exists"
    ],
    "YafActionAbstractexecute": [
        "Yaf_Action_Abstract::execute",
        "yaf-action-abstract.execute.php",
        "アクションのエントリポイント"
    ],
    "YafActionAbstractgetController": [
        "Yaf_Action_Abstract::getController",
        "yaf-action-abstract.getcontroller.php",
        "コントローラオブジェクトを取得する"
    ],
    "YafActionAbstractgetControllerName": [
        "Yaf_Action_Abstract::getControllerName",
        "yaf-controller-abstract.getcontrollername.php",
        "Get controller name"
    ],
    "YafApplicationapp": [
        "Yaf_Application::app",
        "yaf-application.app.php",
        "アプリケーションのインスタンスを取得する"
    ],
    "YafApplicationbootstrap": [
        "Yaf_Application::bootstrap",
        "yaf-application.bootstrap.php",
        "ブートストラップをコールする"
    ],
    "YafApplicationclearLastError": [
        "Yaf_Application::clearLastError",
        "yaf-application.clearlasterror.php",
        "直近のエラー情報を消す"
    ],
    "YafApplicationenviron": [
        "Yaf_Application::environ",
        "yaf-application.environ.php",
        "環境を取得する"
    ],
    "YafApplicationexecute": [
        "Yaf_Application::execute",
        "yaf-application.execute.php",
        "コールバックを実行する"
    ],
    "YafApplicationgetAppDirectory": [
        "Yaf_Application::getAppDirectory",
        "yaf-application.getappdirectory.php",
        "アプリケーションディレクトリを取得する"
    ],
    "YafApplicationgetConfig": [
        "Yaf_Application::getConfig",
        "yaf-application.getconfig.php",
        "設定情報を取得する"
    ],
    "YafApplicationgetDispatcher": [
        "Yaf_Application::getDispatcher",
        "yaf-application.getdispatcher.php",
        "Yaf_Dispatcher のインスタンスを取得する"
    ],
    "YafApplicationgetLastErrorMsg": [
        "Yaf_Application::getLastErrorMsg",
        "yaf-application.getlasterrormsg.php",
        "直近で発生したエラーのメッセージを取得する"
    ],
    "YafApplicationgetLastErrorNo": [
        "Yaf_Application::getLastErrorNo",
        "yaf-application.getlasterrorno.php",
        "直近で発生したエラーのコードを取得する"
    ],
    "YafApplicationgetModules": [
        "Yaf_Application::getModules",
        "yaf-application.getmodules.php",
        "定義済みのモジュール名を取得する"
    ],
    "YafApplicationrun": [
        "Yaf_Application::run",
        "yaf-application.run.php",
        "Yaf_Application を開始する"
    ],
    "YafApplicationsetAppDirectory": [
        "Yaf_Application::setAppDirectory",
        "yaf-application.setappdirectory.php",
        "アプリケーションディレクトリを変更する"
    ],
    "YafApplicationconstruct": [
        "Yaf_Application::__construct",
        "yaf-application.construct.php",
        "Yaf_Application のコンストラクタ"
    ],
    "YafApplicationdestruct": [
        "Yaf_Application::__destruct",
        "yaf-application.destruct.php",
        "デストラクタ"
    ],
    "YafConfigAbstractget": [
        "Yaf_Config_Abstract::get",
        "yaf-config-abstract.get.php",
        "ゲッター"
    ],
    "YafConfigAbstractreadonly": [
        "Yaf_Config_Abstract::readonly",
        "yaf-config-abstract.readonly.php",
        "設定項目が読み込み専用かどうかを調べる"
    ],
    "YafConfigAbstractset": [
        "Yaf_Config_Abstract::set",
        "yaf-config-abstract.set.php",
        "セッター"
    ],
    "YafConfigAbstracttoArray": [
        "Yaf_Config_Abstract::toArray",
        "yaf-config-abstract.toarray.php",
        "配列に変換する"
    ],
    "YafConfigInicount": [
        "Yaf_Config_Ini::count",
        "yaf-config-ini.count.php",
        "Yaf_Config.ini の全ての要素を数える"
    ],
    "YafConfigInicurrent": [
        "Yaf_Config_Ini::current",
        "yaf-config-ini.current.php",
        "現在の値を取得する"
    ],
    "YafConfigInikey": [
        "Yaf_Config_Ini::key",
        "yaf-config-ini.key.php",
        "現在の要素のキーを取得する"
    ],
    "YafConfigIninext": [
        "Yaf_Config_Ini::next",
        "yaf-config-ini.next.php",
        "内部ポインタを進める"
    ],
    "YafConfigInioffsetExists": [
        "Yaf_Config_Ini::offsetExists",
        "yaf-config-ini.offsetexists.php",
        "The offsetExists purpose"
    ],
    "YafConfigInioffsetGet": [
        "Yaf_Config_Ini::offsetGet",
        "yaf-config-ini.offsetget.php",
        "The offsetGet purpose"
    ],
    "YafConfigInioffsetSet": [
        "Yaf_Config_Ini::offsetSet",
        "yaf-config-ini.offsetset.php",
        "The offsetSet purpose"
    ],
    "YafConfigInioffsetUnset": [
        "Yaf_Config_Ini::offsetUnset",
        "yaf-config-ini.offsetunset.php",
        "The offsetUnset purpose"
    ],
    "YafConfigInireadonly": [
        "Yaf_Config_Ini::readonly",
        "yaf-config-ini.readonly.php",
        "The readonly purpose"
    ],
    "YafConfigInirewind": [
        "Yaf_Config_Ini::rewind",
        "yaf-config-ini.rewind.php",
        "The rewind purpose"
    ],
    "YafConfigInitoArray": [
        "Yaf_Config_Ini::toArray",
        "yaf-config-ini.toarray.php",
        "PHP の配列として構成を返す"
    ],
    "YafConfigInivalid": [
        "Yaf_Config_Ini::valid",
        "yaf-config-ini.valid.php",
        "The valid purpose"
    ],
    "YafConfigIniconstruct": [
        "Yaf_Config_Ini::__construct",
        "yaf-config-ini.construct.php",
        "Yaf_Config_Ini のコンストラクタ"
    ],
    "YafConfigIniget": [
        "Yaf_Config_Ini::__get",
        "yaf-config-ini.get.php",
        "要素を取得する"
    ],
    "YafConfigIniisset": [
        "Yaf_Config_Ini::__isset",
        "yaf-config-ini.isset.php",
        "キーが存在するかを判定する"
    ],
    "YafConfigIniset": [
        "Yaf_Config_Ini::__set",
        "yaf-config-ini.set.php",
        "The __set purpose"
    ],
    "YafConfigSimplecount": [
        "Yaf_Config_Simple::count",
        "yaf-config-simple.count.php",
        "The count purpose"
    ],
    "YafConfigSimplecurrent": [
        "Yaf_Config_Simple::current",
        "yaf-config-simple.current.php",
        "The current purpose"
    ],
    "YafConfigSimplekey": [
        "Yaf_Config_Simple::key",
        "yaf-config-simple.key.php",
        "The key purpose"
    ],
    "YafConfigSimplenext": [
        "Yaf_Config_Simple::next",
        "yaf-config-simple.next.php",
        "The next purpose"
    ],
    "YafConfigSimpleoffsetExists": [
        "Yaf_Config_Simple::offsetExists",
        "yaf-config-simple.offsetexists.php",
        "The offsetExists purpose"
    ],
    "YafConfigSimpleoffsetGet": [
        "Yaf_Config_Simple::offsetGet",
        "yaf-config-simple.offsetget.php",
        "The offsetGet purpose"
    ],
    "YafConfigSimpleoffsetSet": [
        "Yaf_Config_Simple::offsetSet",
        "yaf-config-simple.offsetset.php",
        "The offsetSet purpose"
    ],
    "YafConfigSimpleoffsetUnset": [
        "Yaf_Config_Simple::offsetUnset",
        "yaf-config-simple.offsetunset.php",
        "The offsetUnset purpose"
    ],
    "YafConfigSimplereadonly": [
        "Yaf_Config_Simple::readonly",
        "yaf-config-simple.readonly.php",
        "The readonly purpose"
    ],
    "YafConfigSimplerewind": [
        "Yaf_Config_Simple::rewind",
        "yaf-config-simple.rewind.php",
        "The rewind purpose"
    ],
    "YafConfigSimpletoArray": [
        "Yaf_Config_Simple::toArray",
        "yaf-config-simple.toarray.php",
        "PHP の配列を返す"
    ],
    "YafConfigSimplevalid": [
        "Yaf_Config_Simple::valid",
        "yaf-config-simple.valid.php",
        "The valid purpose"
    ],
    "YafConfigSimpleconstruct": [
        "Yaf_Config_Simple::__construct",
        "yaf-config-simple.construct.php",
        "コンストラクタ"
    ],
    "YafConfigSimpleget": [
        "Yaf_Config_Simple::__get",
        "yaf-config-simple.get.php",
        "The __get purpose"
    ],
    "YafConfigSimpleisset": [
        "Yaf_Config_Simple::__isset",
        "yaf-config-simple.isset.php",
        "The __isset purpose"
    ],
    "YafConfigSimpleset": [
        "Yaf_Config_Simple::__set",
        "yaf-config-simple.set.php",
        "The __set purpose"
    ],
    "YafControllerAbstractdisplay": [
        "Yaf_Controller_Abstract::display",
        "yaf-controller-abstract.display.php",
        "The display purpose"
    ],
    "YafControllerAbstractforward": [
        "Yaf_Controller_Abstract::forward",
        "yaf-controller-abstract.forward.php",
        "別のアクションに転送する"
    ],
    "YafControllerAbstractgetInvokeArg": [
        "Yaf_Controller_Abstract::getInvokeArg",
        "yaf-controller-abstract.getinvokearg.php",
        "The getInvokeArg purpose"
    ],
    "YafControllerAbstractgetInvokeArgs": [
        "Yaf_Controller_Abstract::getInvokeArgs",
        "yaf-controller-abstract.getinvokeargs.php",
        "The getInvokeArgs purpose"
    ],
    "YafControllerAbstractgetModuleName": [
        "Yaf_Controller_Abstract::getModuleName",
        "yaf-controller-abstract.getmodulename.php",
        "モジュール名を取得する"
    ],
    "YafControllerAbstractgetName": [
        "Yaf_Controller_Abstract::getName",
        "yaf-controller-abstract.getname.php",
        "Get self name"
    ],
    "YafControllerAbstractgetRequest": [
        "Yaf_Controller_Abstract::getRequest",
        "yaf-controller-abstract.getrequest.php",
        "現在のリクエストオブジェクトを取得する"
    ],
    "YafControllerAbstractgetResponse": [
        "Yaf_Controller_Abstract::getResponse",
        "yaf-controller-abstract.getresponse.php",
        "現在のレスポンスオブジェクトを取得する"
    ],
    "YafControllerAbstractgetView": [
        "Yaf_Controller_Abstract::getView",
        "yaf-controller-abstract.getview.php",
        "ビューエンジンを取得する"
    ],
    "YafControllerAbstractgetViewpath": [
        "Yaf_Controller_Abstract::getViewpath",
        "yaf-controller-abstract.getviewpath.php",
        "getViewpath の目的を書く"
    ],
    "YafControllerAbstractinit": [
        "Yaf_Controller_Abstract::init",
        "yaf-controller-abstract.init.php",
        "コントローラを初期化する"
    ],
    "YafControllerAbstractinitView": [
        "Yaf_Controller_Abstract::initView",
        "yaf-controller-abstract.initview.php",
        "The initView purpose"
    ],
    "YafControllerAbstractredirect": [
        "Yaf_Controller_Abstract::redirect",
        "yaf-controller-abstract.redirect.php",
        "URL にリダイレクトする"
    ],
    "YafControllerAbstractrender": [
        "Yaf_Controller_Abstract::render",
        "yaf-controller-abstract.render.php",
        "ビューテンプレートをレンダリングする"
    ],
    "YafControllerAbstractsetViewpath": [
        "Yaf_Controller_Abstract::setViewpath",
        "yaf-controller-abstract.setviewpath.php",
        "The setViewpath purpose"
    ],
    "YafControllerAbstractconstruct": [
        "Yaf_Controller_Abstract::__construct",
        "yaf-controller-abstract.construct.php",
        "Yaf_Controller_Abstract のコンストラクタ"
    ],
    "YafDispatcherautoRender": [
        "Yaf_Dispatcher::autoRender",
        "yaf-dispatcher.autorender.php",
        "自動レンダリングのオン/オフを切り替える"
    ],
    "YafDispatchercatchException": [
        "Yaf_Dispatcher::catchException",
        "yaf-dispatcher.catchexception.php",
        "例外のキャッチのオン/オフを切り替える"
    ],
    "YafDispatcherdisableView": [
        "Yaf_Dispatcher::disableView",
        "yaf-dispatcher.disableview.php",
        "ビューのレンダリングを無効にする"
    ],
    "YafDispatcherdispatch": [
        "Yaf_Dispatcher::dispatch",
        "yaf-dispatcher.dispatch.php",
        "リクエストをディスパッチする"
    ],
    "YafDispatcherenableView": [
        "Yaf_Dispatcher::enableView",
        "yaf-dispatcher.enableview.php",
        "ビューのレンダリングを有効にする"
    ],
    "YafDispatcherflushInstantly": [
        "Yaf_Dispatcher::flushInstantly",
        "yaf-dispatcher.flushinstantly.php",
        "その場でのフラッシュのオン/オフを切り替える"
    ],
    "YafDispatchergetApplication": [
        "Yaf_Dispatcher::getApplication",
        "yaf-dispatcher.getapplication.php",
        "アプリケーションを取得する"
    ],
    "YafDispatchergetDefaultAction": [
        "Yaf_Dispatcher::getDefaultAction",
        "yaf-dispatcher.getdefaultaction.php",
        "Retrive the default action name"
    ],
    "YafDispatchergetDefaultController": [
        "Yaf_Dispatcher::getDefaultController",
        "yaf-dispatcher.getdefaultcontroller.php",
        "Retrive the default controller name"
    ],
    "YafDispatchergetDefaultModule": [
        "Yaf_Dispatcher::getDefaultModule",
        "yaf-dispatcher.getdefaultmodule.php",
        "Retrive the default module name"
    ],
    "YafDispatchergetInstance": [
        "Yaf_Dispatcher::getInstance",
        "yaf-dispatcher.getinstance.php",
        "ディスパッチャのインスタンスを取得する"
    ],
    "YafDispatchergetRequest": [
        "Yaf_Dispatcher::getRequest",
        "yaf-dispatcher.getrequest.php",
        "リクエストのインスタンスを取得する"
    ],
    "YafDispatchergetRouter": [
        "Yaf_Dispatcher::getRouter",
        "yaf-dispatcher.getrouter.php",
        "ルーターのインスタンスを取得する"
    ],
    "YafDispatcherinitView": [
        "Yaf_Dispatcher::initView",
        "yaf-dispatcher.initview.php",
        "ビューを初期化して返す"
    ],
    "YafDispatcherregisterPlugin": [
        "Yaf_Dispatcher::registerPlugin",
        "yaf-dispatcher.registerplugin.php",
        "プラグインを登録する"
    ],
    "YafDispatcherreturnResponse": [
        "Yaf_Dispatcher::returnResponse",
        "yaf-dispatcher.returnresponse.php",
        "The returnResponse purpose"
    ],
    "YafDispatchersetDefaultAction": [
        "Yaf_Dispatcher::setDefaultAction",
        "yaf-dispatcher.setdefaultaction.php",
        "デフォルトのアクション名を変更する"
    ],
    "YafDispatchersetDefaultController": [
        "Yaf_Dispatcher::setDefaultController",
        "yaf-dispatcher.setdefaultcontroller.php",
        "デフォルトのコントローラ名を変更する"
    ],
    "YafDispatchersetDefaultModule": [
        "Yaf_Dispatcher::setDefaultModule",
        "yaf-dispatcher.setdefaultmodule.php",
        "デフォルトのモジュール名を変更する"
    ],
    "YafDispatchersetErrorHandler": [
        "Yaf_Dispatcher::setErrorHandler",
        "yaf-dispatcher.seterrorhandler.php",
        "エラーハンドラを設定する"
    ],
    "YafDispatchersetRequest": [
        "Yaf_Dispatcher::setRequest",
        "yaf-dispatcher.setrequest.php",
        "The setRequest purpose"
    ],
    "YafDispatchersetView": [
        "Yaf_Dispatcher::setView",
        "yaf-dispatcher.setview.php",
        "カスタムビューエンジンを設定する"
    ],
    "YafDispatcherthrowException": [
        "Yaf_Dispatcher::throwException",
        "yaf-dispatcher.throwexception.php",
        "例外のスローのオン/オフを切り替える"
    ],
    "YafDispatcherconstruct": [
        "Yaf_Dispatcher::__construct",
        "yaf-dispatcher.construct.php",
        "Yaf_Dispatcher のコンストラクタ"
    ],
    "YafExceptiongetPrevious": [
        "Yaf_Exception::getPrevious",
        "yaf-exception.getprevious.php",
        "The getPrevious purpose"
    ],
    "YafExceptionconstruct": [
        "Yaf_Exception::__construct",
        "yaf-exception.construct.php",
        "コンストラクタ"
    ],
    "YafLoaderautoload": [
        "Yaf_Loader::autoload",
        "yaf-loader.autoload.php",
        "The autoload purpose"
    ],
    "YafLoaderclearLocalNamespace": [
        "Yaf_Loader::clearLocalNamespace",
        "yaf-loader.clearlocalnamespace.php",
        "The clearLocalNamespace purpose"
    ],
    "YafLoadergetInstance": [
        "Yaf_Loader::getInstance",
        "yaf-loader.getinstance.php",
        "The getInstance purpose"
    ],
    "YafLoadergetLibraryPath": [
        "Yaf_Loader::getLibraryPath",
        "yaf-loader.getlibrarypath.php",
        "ライブラリパスを取得する"
    ],
    "YafLoadergetLocalNamespace": [
        "Yaf_Loader::getLocalNamespace",
        "yaf-loader.getnamespaces.php",
        "Retrive all register namespaces info"
    ],
    "YafLoadergetNamespacePath": [
        "Yaf_Loader::getNamespacePath",
        "yaf-loader.getnamespacepath.php",
        "Retieve path of a registered namespace"
    ],
    "YafLoaderimport": [
        "Yaf_Loader::import",
        "yaf-loader.import.php",
        "The import purpose"
    ],
    "YafLoaderisLocalName": [
        "Yaf_Loader::isLocalName",
        "yaf-loader.islocalname.php",
        "The isLocalName purpose"
    ],
    "YafLoaderregisterLocalNamespace": [
        "Yaf_Loader::registerLocalNamespace",
        "yaf-loader.registerlocalnamespace.php",
        "ローカルクラスプレフィックスを登録する"
    ],
    "YafLoaderregisterNamespace": [
        "Yaf_Loader::registerNamespace",
        "yaf-loader.registernamespace.php",
        "Register namespace with searching path"
    ],
    "YafLoadersetLibraryPath": [
        "Yaf_Loader::setLibraryPath",
        "yaf-loader.setlibrarypath.php",
        "ライブラリパスを変更する"
    ],
    "YafLoaderconstruct": [
        "Yaf_Loader::__construct",
        "yaf-loader.construct.php",
        "The __construct purpose"
    ],
    "YafPluginAbstractdispatchLoopShutdown": [
        "Yaf_Plugin_Abstract::dispatchLoopShutdown",
        "yaf-plugin-abstract.dispatchloopshutdown.php",
        "The dispatchLoopShutdown purpose"
    ],
    "YafPluginAbstractdispatchLoopStartup": [
        "Yaf_Plugin_Abstract::dispatchLoopStartup",
        "yaf-plugin-abstract.dispatchloopstartup.php",
        "ディスパッチループの前にフックする"
    ],
    "YafPluginAbstractpostDispatch": [
        "Yaf_Plugin_Abstract::postDispatch",
        "yaf-plugin-abstract.postdispatch.php",
        "The postDispatch purpose"
    ],
    "YafPluginAbstractpreDispatch": [
        "Yaf_Plugin_Abstract::preDispatch",
        "yaf-plugin-abstract.predispatch.php",
        "The preDispatch purpose"
    ],
    "YafPluginAbstractpreResponse": [
        "Yaf_Plugin_Abstract::preResponse",
        "yaf-plugin-abstract.preresponse.php",
        "The preResponse purpose"
    ],
    "YafPluginAbstractrouterShutdown": [
        "Yaf_Plugin_Abstract::routerShutdown",
        "yaf-plugin-abstract.routershutdown.php",
        "The routerShutdown purpose"
    ],
    "YafPluginAbstractrouterStartup": [
        "Yaf_Plugin_Abstract::routerStartup",
        "yaf-plugin-abstract.routerstartup.php",
        "RouterStartup フック"
    ],
    "YafRegistrydel": [
        "Yaf_Registry::del",
        "yaf-registry.del.php",
        "アイテムをレジストリから削除する"
    ],
    "YafRegistryget": [
        "Yaf_Registry::get",
        "yaf-registry.get.php",
        "アイテムをレジストリから取得する"
    ],
    "YafRegistryhas": [
        "Yaf_Registry::has",
        "yaf-registry.has.php",
        "アイテムが存在するかどうかを調べる"
    ],
    "YafRegistryset": [
        "Yaf_Registry::set",
        "yaf-registry.set.php",
        "アイテムをレジストリに追加する"
    ],
    "YafRegistryconstruct": [
        "Yaf_Registry::__construct",
        "yaf-registry.construct.php",
        "Yaf_Registry はシングルトンを実装する"
    ],
    "YafRequestAbstractclearParams": [
        "Yaf_Request_Abstract::clearParams",
        "yaf-request-abstract.clearparams.php",
        "Remove all params"
    ],
    "YafRequestAbstractgetActionName": [
        "Yaf_Request_Abstract::getActionName",
        "yaf-request-abstract.getactionname.php",
        "The getActionName purpose"
    ],
    "YafRequestAbstractgetBaseUri": [
        "Yaf_Request_Abstract::getBaseUri",
        "yaf-request-abstract.getbaseuri.php",
        "The getBaseUri purpose"
    ],
    "YafRequestAbstractgetControllerName": [
        "Yaf_Request_Abstract::getControllerName",
        "yaf-request-abstract.getcontrollername.php",
        "The getControllerName purpose"
    ],
    "YafRequestAbstractgetEnv": [
        "Yaf_Request_Abstract::getEnv",
        "yaf-request-abstract.getenv.php",
        "ENV 変数を取得する"
    ],
    "YafRequestAbstractgetException": [
        "Yaf_Request_Abstract::getException",
        "yaf-request-abstract.getexception.php",
        "The getException purpose"
    ],
    "YafRequestAbstractgetLanguage": [
        "Yaf_Request_Abstract::getLanguage",
        "yaf-request-abstract.getlanguage.php",
        "クライアントの好きな言語を取得する"
    ],
    "YafRequestAbstractgetMethod": [
        "Yaf_Request_Abstract::getMethod",
        "yaf-request-abstract.getmethod.php",
        "リクエストメソッドを取得する"
    ],
    "YafRequestAbstractgetModuleName": [
        "Yaf_Request_Abstract::getModuleName",
        "yaf-request-abstract.getmodulename.php",
        "The getModuleName purpose"
    ],
    "YafRequestAbstractgetParam": [
        "Yaf_Request_Abstract::getParam",
        "yaf-request-abstract.getparam.php",
        "呼び出しパラメータを取得する"
    ],
    "YafRequestAbstractgetParams": [
        "Yaf_Request_Abstract::getParams",
        "yaf-request-abstract.getparams.php",
        "全ての呼び出しパラメータを取得する"
    ],
    "YafRequestAbstractgetRequestUri": [
        "Yaf_Request_Abstract::getRequestUri",
        "yaf-request-abstract.getrequesturi.php",
        "The getRequestUri purpose"
    ],
    "YafRequestAbstractgetServer": [
        "Yaf_Request_Abstract::getServer",
        "yaf-request-abstract.getserver.php",
        "SERVER 変数を取得する"
    ],
    "YafRequestAbstractisCli": [
        "Yaf_Request_Abstract::isCli",
        "yaf-request-abstract.iscli.php",
        "CLIリクエストかを判定する"
    ],
    "YafRequestAbstractisDispatched": [
        "Yaf_Request_Abstract::isDispatched",
        "yaf-request-abstract.isdispatched.php",
        "リクエストがディスパッチ済みかを判定する"
    ],
    "YafRequestAbstractisGet": [
        "Yaf_Request_Abstract::isGet",
        "yaf-request-abstract.isget.php",
        "GETリクエストかどうかを判定する"
    ],
    "YafRequestAbstractisHead": [
        "Yaf_Request_Abstract::isHead",
        "yaf-request-abstract.ishead.php",
        "HEADリクエストかどうかを判定する"
    ],
    "YafRequestAbstractisOptions": [
        "Yaf_Request_Abstract::isOptions",
        "yaf-request-abstract.isoptions.php",
        "OPTIONS リクエストかどうかを判定する"
    ],
    "YafRequestAbstractisPost": [
        "Yaf_Request_Abstract::isPost",
        "yaf-request-abstract.ispost.php",
        "POST リクエストかどうかを判定する"
    ],
    "YafRequestAbstractisPut": [
        "Yaf_Request_Abstract::isPut",
        "yaf-request-abstract.isput.php",
        "PUTリクエストかどうかを判定する"
    ],
    "YafRequestAbstractisRouted": [
        "Yaf_Request_Abstract::isRouted",
        "yaf-request-abstract.isrouted.php",
        "リクエストがルーティング済みかを判定する"
    ],
    "YafRequestAbstractisXmlHttpRequest": [
        "Yaf_Request_Abstract::isXmlHttpRequest",
        "yaf-request-abstract.isxmlhttprequest.php",
        "AJAXリクエストかどうかを判定する"
    ],
    "YafRequestAbstractsetActionName": [
        "Yaf_Request_Abstract::setActionName",
        "yaf-request-abstract.setactionname.php",
        "アクション名を設定する"
    ],
    "YafRequestAbstractsetBaseUri": [
        "Yaf_Request_Abstract::setBaseUri",
        "yaf-request-abstract.setbaseuri.php",
        "ベース URI を設定する"
    ],
    "YafRequestAbstractsetControllerName": [
        "Yaf_Request_Abstract::setControllerName",
        "yaf-request-abstract.setcontrollername.php",
        "コントローラー名を設定する"
    ],
    "YafRequestAbstractsetDispatched": [
        "Yaf_Request_Abstract::setDispatched",
        "yaf-request-abstract.setdispatched.php",
        "The setDispatched purpose"
    ],
    "YafRequestAbstractsetModuleName": [
        "Yaf_Request_Abstract::setModuleName",
        "yaf-request-abstract.setmodulename.php",
        "モジュール名を設定する"
    ],
    "YafRequestAbstractsetParam": [
        "Yaf_Request_Abstract::setParam",
        "yaf-request-abstract.setparam.php",
        "呼び出しパラメータをリクエストに設定する"
    ],
    "YafRequestAbstractsetRequestUri": [
        "Yaf_Request_Abstract::setRequestUri",
        "yaf-request-abstract.setrequesturi.php",
        "The setRequestUri purpose"
    ],
    "YafRequestAbstractsetRouted": [
        "Yaf_Request_Abstract::setRouted",
        "yaf-request-abstract.setrouted.php",
        "The setRouted purpose"
    ],
    "YafRequestHttpget": [
        "Yaf_Request_Http::get",
        "yaf-request-http.get.php",
        "クライアントからの変数を取得する"
    ],
    "YafRequestHttpgetCookie": [
        "Yaf_Request_Http::getCookie",
        "yaf-request-http.getcookie.php",
        "Cookie 変数を取得する"
    ],
    "YafRequestHttpgetFiles": [
        "Yaf_Request_Http::getFiles",
        "yaf-request-http.getfiles.php",
        "The getFiles purpose"
    ],
    "YafRequestHttpgetPost": [
        "Yaf_Request_Http::getPost",
        "yaf-request-http.getpost.php",
        "POST 変数を取得する"
    ],
    "YafRequestHttpgetQuery": [
        "Yaf_Request_Http::getQuery",
        "yaf-request-http.getquery.php",
        "クエリパラメータを取得する"
    ],
    "YafRequestHttpgetRaw": [
        "Yaf_Request_Http::getRaw",
        "yaf-request-http.getraw.php",
        "生のリクエストボディを取得する"
    ],
    "YafRequestHttpgetRequest": [
        "Yaf_Request_Http::getRequest",
        "yaf-request-http.getrequest.php",
        "The getRequest purpose"
    ],
    "YafRequestHttpisXmlHttpRequest": [
        "Yaf_Request_Http::isXmlHttpRequest",
        "yaf-request-http.isxmlhttprequest.php",
        "リクエストが Ajax リクエストかどうかを判断する"
    ],
    "YafRequestHttpconstruct": [
        "Yaf_Request_Http::__construct",
        "yaf-request-http.construct.php",
        "Yaf_Request_Http のコンストラクタ"
    ],
    "YafRequestSimpleget": [
        "Yaf_Request_Simple::get",
        "yaf-request-simple.get.php",
        "The get purpose"
    ],
    "YafRequestSimplegetCookie": [
        "Yaf_Request_Simple::getCookie",
        "yaf-request-simple.getcookie.php",
        "The getCookie purpose"
    ],
    "YafRequestSimplegetFiles": [
        "Yaf_Request_Simple::getFiles",
        "yaf-request-simple.getfiles.php",
        "The getFiles purpose"
    ],
    "YafRequestSimplegetPost": [
        "Yaf_Request_Simple::getPost",
        "yaf-request-simple.getpost.php",
        "The getPost purpose"
    ],
    "YafRequestSimplegetQuery": [
        "Yaf_Request_Simple::getQuery",
        "yaf-request-simple.getquery.php",
        "The getQuery purpose"
    ],
    "YafRequestSimplegetRequest": [
        "Yaf_Request_Simple::getRequest",
        "yaf-request-simple.getrequest.php",
        "The getRequest purpose"
    ],
    "YafRequestSimpleisXmlHttpRequest": [
        "Yaf_Request_Simple::isXmlHttpRequest",
        "yaf-request-simple.isxmlhttprequest.php",
        "リクエストが AJAX 経由のリクエストかどうかを判定する"
    ],
    "YafRequestSimpleconstruct": [
        "Yaf_Request_Simple::__construct",
        "yaf-request-simple.construct.php",
        "Yaf_Request_Simple のコンストラクタ"
    ],
    "YafResponseAbstractappendBody": [
        "Yaf_Response_Abstract::appendBody",
        "yaf-response-abstract.appendbody.php",
        "レスポンス本文に追記する"
    ],
    "YafResponseAbstractclearBody": [
        "Yaf_Response_Abstract::clearBody",
        "yaf-response-abstract.clearbody.php",
        "既存のすべてのレスポンス本文を破棄します"
    ],
    "YafResponseAbstractclearHeaders": [
        "Yaf_Response_Abstract::clearHeaders",
        "yaf-response-abstract.clearheaders.php",
        "すべてのヘッダをクリアする"
    ],
    "YafResponseAbstractgetBody": [
        "Yaf_Response_Abstract::getBody",
        "yaf-response-abstract.getbody.php",
        "コンテンツを取得する"
    ],
    "YafResponseAbstractgetHeader": [
        "Yaf_Response_Abstract::getHeader",
        "yaf-response-abstract.getheader.php",
        "getHeader の目的"
    ],
    "YafResponseAbstractprependBody": [
        "Yaf_Response_Abstract::prependBody",
        "yaf-response-abstract.prependbody.php",
        "The prependBody purpose"
    ],
    "YafResponseAbstractresponse": [
        "Yaf_Response_Abstract::response",
        "yaf-response-abstract.response.php",
        "レスポンスを送信する"
    ],
    "YafResponseAbstractsetAllHeaders": [
        "Yaf_Response_Abstract::setAllHeaders",
        "yaf-response-abstract.setallheaders.php",
        "The setAllHeaders purpose"
    ],
    "YafResponseAbstractsetBody": [
        "Yaf_Response_Abstract::setBody",
        "yaf-response-abstract.setbody.php",
        "コンテンツをレスポンスに設定する"
    ],
    "YafResponseAbstractsetHeader": [
        "Yaf_Response_Abstract::setHeader",
        "yaf-response-abstract.setheader.php",
        "レスポンスヘッダを設定する"
    ],
    "YafResponseAbstractsetRedirect": [
        "Yaf_Response_Abstract::setRedirect",
        "yaf-response-abstract.setredirect.php",
        "The setRedirect purpose"
    ],
    "YafResponseAbstractconstruct": [
        "Yaf_Response_Abstract::__construct",
        "yaf-response-abstract.construct.php",
        "The __construct purpose"
    ],
    "YafResponseAbstractdestruct": [
        "Yaf_Response_Abstract::__destruct",
        "yaf-response-abstract.destruct.php",
        "The __destruct purpose"
    ],
    "YafResponseAbstracttoString": [
        "Yaf_Response_Abstract::__toString",
        "yaf-response-abstract.tostring.php",
        "すべてのレスポンスボディを文字列として取得する"
    ],
    "YafRouteraddConfig": [
        "Yaf_Router::addConfig",
        "yaf-router.addconfig.php",
        "設定で定義したルートをルーターに追加する"
    ],
    "YafRouteraddRoute": [
        "Yaf_Router::addRoute",
        "yaf-router.addroute.php",
        "新しいルートをルーターに追加する"
    ],
    "YafRoutergetCurrentRoute": [
        "Yaf_Router::getCurrentRoute",
        "yaf-router.getcurrentroute.php",
        "使われているルート名を取得する"
    ],
    "YafRoutergetRoute": [
        "Yaf_Router::getRoute",
        "yaf-router.getroute.php",
        "名前を指定してルートを取得する"
    ],
    "YafRoutergetRoutes": [
        "Yaf_Router::getRoutes",
        "yaf-router.getroutes.php",
        "登録済みのルートを取得する"
    ],
    "YafRouterroute": [
        "Yaf_Router::route",
        "yaf-router.route.php",
        "The route purpose"
    ],
    "YafRouterconstruct": [
        "Yaf_Router::__construct",
        "yaf-router.construct.php",
        "Yaf_Router のコンストラクタ"
    ],
    "YafRouteInterfaceassemble": [
        "Yaf_Route_Interface::assemble",
        "yaf-route-interface.assemble.php",
        "リクエストを組み立てる"
    ],
    "YafRouteInterfaceroute": [
        "Yaf_Route_Interface::route",
        "yaf-route-interface.route.php",
        "リクエストをルーティングする"
    ],
    "YafRouteMapassemble": [
        "Yaf_Route_Map::assemble",
        "yaf-route-map.assemble.php",
        "URLを組み立てる"
    ],
    "YafRouteMaproute": [
        "Yaf_Route_Map::route",
        "yaf-route-map.route.php",
        "route の目的"
    ],
    "YafRouteMapconstruct": [
        "Yaf_Route_Map::__construct",
        "yaf-route-map.construct.php",
        "The __construct purpose"
    ],
    "YafRouteRegexassemble": [
        "Yaf_Route_Regex::assemble",
        "yaf-route-regex.assemble.php",
        "URL を組み立てる"
    ],
    "YafRouteRegexroute": [
        "Yaf_Route_Regex::route",
        "yaf-route-regex.route.php",
        "The route purpose"
    ],
    "YafRouteRegexconstruct": [
        "Yaf_Route_Regex::__construct",
        "yaf-route-regex.construct.php",
        "Yaf_Route_Regex のコンストラクタ"
    ],
    "YafRouteRewriteassemble": [
        "Yaf_Route_Rewrite::assemble",
        "yaf-route-rewrite.assemble.php",
        "URLを組み立てる"
    ],
    "YafRouteRewriteroute": [
        "Yaf_Route_Rewrite::route",
        "yaf-route-rewrite.route.php",
        "The route purpose"
    ],
    "YafRouteRewriteconstruct": [
        "Yaf_Route_Rewrite::__construct",
        "yaf-route-rewrite.construct.php",
        "Yaf_Route_Rewrite のコンストラクタ"
    ],
    "YafRouteSimpleassemble": [
        "Yaf_Route_Simple::assemble",
        "yaf-route-simple.assemble.php",
        "URLを組み立てる"
    ],
    "YafRouteSimpleroute": [
        "Yaf_Route_Simple::route",
        "yaf-route-simple.route.php",
        "リクエストをルーティングする"
    ],
    "YafRouteSimpleconstruct": [
        "Yaf_Route_Simple::__construct",
        "yaf-route-simple.construct.php",
        "Yaf_Route_Simple のコンストラクタ"
    ],
    "YafRouteStaticassemble": [
        "Yaf_Route_Static::assemble",
        "yaf-route-static.assemble.php",
        "URL を組み立てる"
    ],
    "YafRouteStaticmatch": [
        "Yaf_Route_Static::match",
        "yaf-route-static.match.php",
        "The match purpose"
    ],
    "YafRouteStaticroute": [
        "Yaf_Route_Static::route",
        "yaf-route-static.route.php",
        "リクエストをルーティングする"
    ],
    "YafRouteSupervarassemble": [
        "Yaf_Route_Supervar::assemble",
        "yaf-route-supervar.assemble.php",
        "URL を組み立てる"
    ],
    "YafRouteSupervarroute": [
        "Yaf_Route_Supervar::route",
        "yaf-route-supervar.route.php",
        "The route purpose"
    ],
    "YafRouteSupervarconstruct": [
        "Yaf_Route_Supervar::__construct",
        "yaf-route-supervar.construct.php",
        "The __construct purpose"
    ],
    "YafSessioncount": [
        "Yaf_Session::count",
        "yaf-session.count.php",
        "The count purpose"
    ],
    "YafSessioncurrent": [
        "Yaf_Session::current",
        "yaf-session.current.php",
        "The current purpose"
    ],
    "YafSessiondel": [
        "Yaf_Session::del",
        "yaf-session.del.php",
        "The del purpose"
    ],
    "YafSessiongetInstance": [
        "Yaf_Session::getInstance",
        "yaf-session.getinstance.php",
        "The getInstance purpose"
    ],
    "YafSessionhas": [
        "Yaf_Session::has",
        "yaf-session.has.php",
        "The has purpose"
    ],
    "YafSessionkey": [
        "Yaf_Session::key",
        "yaf-session.key.php",
        "The key purpose"
    ],
    "YafSessionnext": [
        "Yaf_Session::next",
        "yaf-session.next.php",
        "The next purpose"
    ],
    "YafSessionoffsetExists": [
        "Yaf_Session::offsetExists",
        "yaf-session.offsetexists.php",
        "The offsetExists purpose"
    ],
    "YafSessionoffsetGet": [
        "Yaf_Session::offsetGet",
        "yaf-session.offsetget.php",
        "The offsetGet purpose"
    ],
    "YafSessionoffsetSet": [
        "Yaf_Session::offsetSet",
        "yaf-session.offsetset.php",
        "The offsetSet purpose"
    ],
    "YafSessionoffsetUnset": [
        "Yaf_Session::offsetUnset",
        "yaf-session.offsetunset.php",
        "The offsetUnset purpose"
    ],
    "YafSessionrewind": [
        "Yaf_Session::rewind",
        "yaf-session.rewind.php",
        "The rewind purpose"
    ],
    "YafSessionstart": [
        "Yaf_Session::start",
        "yaf-session.start.php",
        "The start purpose"
    ],
    "YafSessionvalid": [
        "Yaf_Session::valid",
        "yaf-session.valid.php",
        "The valid purpose"
    ],
    "YafSessionconstruct": [
        "Yaf_Session::__construct",
        "yaf-session.construct.php",
        "Yaf_Session のコンストラクタ"
    ],
    "YafSessionget": [
        "Yaf_Session::__get",
        "yaf-session.get.php",
        "The __get purpose"
    ],
    "YafSessionisset": [
        "Yaf_Session::__isset",
        "yaf-session.isset.php",
        "The __isset purpose"
    ],
    "YafSessionset": [
        "Yaf_Session::__set",
        "yaf-session.set.php",
        "The __set purpose"
    ],
    "YafSessionunset": [
        "Yaf_Session::__unset",
        "yaf-session.unset.php",
        "The __unset purpose"
    ],
    "YafViewInterfaceassign": [
        "Yaf_View_Interface::assign",
        "yaf-view-interface.assign.php",
        "値をビューエンジンに代入する"
    ],
    "YafViewInterfacedisplay": [
        "Yaf_View_Interface::display",
        "yaf-view-interface.display.php",
        "テンプレートをレンダリングして出力する"
    ],
    "YafViewInterfacegetScriptPath": [
        "Yaf_View_Interface::getScriptPath",
        "yaf-view-interface.getscriptpath.php",
        "The getScriptPath purpose"
    ],
    "YafViewInterfacerender": [
        "Yaf_View_Interface::render",
        "yaf-view-interface.render.php",
        "テンプレートをレンダリングする"
    ],
    "YafViewInterfacesetScriptPath": [
        "Yaf_View_Interface::setScriptPath",
        "yaf-view-interface.setscriptpath.php",
        "The setScriptPath purpose"
    ],
    "YafViewSimpleassign": [
        "Yaf_View_Simple::assign",
        "yaf-view-simple.assign.php",
        "値を代入する"
    ],
    "YafViewSimpleassignRef": [
        "Yaf_View_Simple::assignRef",
        "yaf-view-simple.assignref.php",
        "The assignRef purpose"
    ],
    "YafViewSimpleclear": [
        "Yaf_View_Simple::clear",
        "yaf-view-simple.clear.php",
        "代入した値をクリアする"
    ],
    "YafViewSimpledisplay": [
        "Yaf_View_Simple::display",
        "yaf-view-simple.display.php",
        "レンダリングして表示する"
    ],
    "YafViewSimpleeval": [
        "Yaf_View_Simple::eval",
        "yaf-view-simple.eval.php",
        "テンプレートをレンダリングする"
    ],
    "YafViewSimplegetScriptPath": [
        "Yaf_View_Simple::getScriptPath",
        "yaf-view-simple.getscriptpath.php",
        "テンプレートのディレクトリを取得する"
    ],
    "YafViewSimplerender": [
        "Yaf_View_Simple::render",
        "yaf-view-simple.render.php",
        "テンプレートをレンダリングする"
    ],
    "YafViewSimplesetScriptPath": [
        "Yaf_View_Simple::setScriptPath",
        "yaf-view-simple.setscriptpath.php",
        "テンプレートのディレクトリを設定する"
    ],
    "YafViewSimpleconstruct": [
        "Yaf_View_Simple::__construct",
        "yaf-view-simple.construct.php",
        "Yaf_View_Simple のコンストラクタ"
    ],
    "YafViewSimpleget": [
        "Yaf_View_Simple::__get",
        "yaf-view-simple.get.php",
        "Retrieve assigned variable"
    ],
    "YafViewSimpleisset": [
        "Yaf_View_Simple::__isset",
        "yaf-view-simple.isset.php",
        "The __isset purpose"
    ],
    "YafViewSimpleset": [
        "Yaf_View_Simple::__set",
        "yaf-view-simple.set.php",
        "値をエンジンに設定する"
    ],
    "yamlemit": [
        "yaml_emit",
        "function.yaml-emit.php",
        "YAML 形式にした値を返す"
    ],
    "yamlemitfile": [
        "yaml_emit_file",
        "function.yaml-emit-file.php",
        "YAML 形式にした値をファイルに送る"
    ],
    "yamlparse": [
        "yaml_parse",
        "function.yaml-parse.php",
        "YAML ストリームをパースする"
    ],
    "yamlparsefile": [
        "yaml_parse_file",
        "function.yaml-parse-file.php",
        "ファイルからの YAML ストリームをパースする"
    ],
    "yamlparseurl": [
        "yaml_parse_url",
        "function.yaml-parse-url.php",
        "URL からの YAML ストリームをパースする"
    ],
    "YarClientsetOpt": [
        "Yar_Client::setOpt",
        "yar-client.setopt.php",
        "Set calling contexts"
    ],
    "YarClientcall": [
        "Yar_Client::__call",
        "yar-client.call.php",
        "Call service"
    ],
    "YarClientconstruct": [
        "Yar_Client::__construct",
        "yar-client.construct.php",
        "Create a client"
    ],
    "YarClientExceptiongetType": [
        "Yar_Client_Exception::getType",
        "yar-client-exception.gettype.php",
        "Retrieve exception's type"
    ],
    "YarConcurrentClientcall": [
        "Yar_Concurrent_Client::call",
        "yar-concurrent-client.call.php",
        "Register a concurrent call"
    ],
    "YarConcurrentClientloop": [
        "Yar_Concurrent_Client::loop",
        "yar-concurrent-client.loop.php",
        "Send all calls"
    ],
    "YarConcurrentClientreset": [
        "Yar_Concurrent_Client::reset",
        "yar-concurrent-client.reset.php",
        "Clean all registered calls"
    ],
    "YarServerhandle": [
        "Yar_Server::handle",
        "yar-server.handle.php",
        "Start RPC Server"
    ],
    "YarServerconstruct": [
        "Yar_Server::__construct",
        "yar-server.construct.php",
        "Register a server"
    ],
    "YarServerExceptiongetType": [
        "Yar_Server_Exception::getType",
        "yar-server-exception.gettype.php",
        "Retrieve exception's type"
    ],
    "yazaddinfo": [
        "yaz_addinfo",
        "function.yaz-addinfo.php",
        "詳細なエラー情報を返す"
    ],
    "yazcclconf": [
        "yaz_ccl_conf",
        "function.yaz-ccl-conf.php",
        "CCL パーサを設定する"
    ],
    "yazcclparse": [
        "yaz_ccl_parse",
        "function.yaz-ccl-parse.php",
        "CCL パーサを起動する"
    ],
    "yazclose": [
        "yaz_close",
        "function.yaz-close.php",
        "YAZ 接続をクローズする"
    ],
    "yazconnect": [
        "yaz_connect",
        "function.yaz-connect.php",
        "Z39.50 サーバーへの接続を準備する"
    ],
    "yazdatabase": [
        "yaz_database",
        "function.yaz-database.php",
        "セッション内のデータベースを指定する"
    ],
    "yazelement": [
        "yaz_element",
        "function.yaz-element.php",
        "取得時の要素集合の名前を指定する"
    ],
    "yazerrno": [
        "yaz_errno",
        "function.yaz-errno.php",
        "エラー番号を返す"
    ],
    "yazerror": [
        "yaz_error",
        "function.yaz-error.php",
        "エラーの内容を返す"
    ],
    "yazes": [
        "yaz_es",
        "function.yaz-es.php",
        "拡張サービスのリクエストを準備する"
    ],
    "yazesresult": [
        "yaz_es_result",
        "function.yaz-es-result.php",
        "拡張サービスの結果を調査する"
    ],
    "yazgetoption": [
        "yaz_get_option",
        "function.yaz-get-option.php",
        "接続に関するオプションの値を返す"
    ],
    "yazhits": [
        "yaz_hits",
        "function.yaz-hits.php",
        "直近の検索に関するヒット数を返す"
    ],
    "yazitemorder": [
        "yaz_itemorder",
        "function.yaz-itemorder.php",
        "ILL リクエストパッケージを関して Z39.50 Item Order を準備する"
    ],
    "yazpresent": [
        "yaz_present",
        "function.yaz-present.php",
        "(Z39.50による)取得の準備を行う"
    ],
    "yazrange": [
        "yaz_range",
        "function.yaz-range.php",
        "取得するレコードの範囲を指定する"
    ],
    "yazrecord": [
        "yaz_record",
        "function.yaz-record.php",
        "レコードを返す"
    ],
    "yazscan": [
        "yaz_scan",
        "function.yaz-scan.php",
        "スキャンの準備をする"
    ],
    "yazscanresult": [
        "yaz_scan_result",
        "function.yaz-scan-result.php",
        "スキャンリクエストの結果を返す"
    ],
    "yazschema": [
        "yaz_schema",
        "function.yaz-schema.php",
        "取得するスキーマを指定する"
    ],
    "yazsearch": [
        "yaz_search",
        "function.yaz-search.php",
        "検索を準備する"
    ],
    "yazsetoption": [
        "yaz_set_option",
        "function.yaz-set-option.php",
        "接続に関するひとつあるいは複数のオプションを設定する"
    ],
    "yazsort": [
        "yaz_sort",
        "function.yaz-sort.php",
        "ソート条件を設定する"
    ],
    "yazsyntax": [
        "yaz_syntax",
        "function.yaz-syntax.php",
        "取得用に適当なレコード構文を指定する"
    ],
    "yazwait": [
        "yaz_wait",
        "function.yaz-wait.php",
        "Z39.50 リクエストが完了するまで待つ"
    ],
    "zendthreadid": [
        "zend_thread_id",
        "function.zend-thread-id.php",
        "現在のスレッドの一意な ID を返す"
    ],
    "zendversion": [
        "zend_version",
        "function.zend-version.php",
        "現在の Zend Engine のバージョンを取得する"
    ],
    "ZipArchiveaddEmptyDir": [
        "ZipArchive::addEmptyDir",
        "ziparchive.addemptydir.php",
        "新しいディレクトリを追加する"
    ],
    "ZipArchiveaddFile": [
        "ZipArchive::addFile",
        "ziparchive.addfile.php",
        "指定したパスからファイルを ZIP アーカイブに追加する"
    ],
    "ZipArchiveaddFromString": [
        "ZipArchive::addFromString",
        "ziparchive.addfromstring.php",
        "内容を指定して、ファイルを ZIP アーカイブに追加する"
    ],
    "ZipArchiveaddGlob": [
        "ZipArchive::addGlob",
        "ziparchive.addglob.php",
        "ディレクトリから、glob パターンを使ってファイルを追加する"
    ],
    "ZipArchiveaddPattern": [
        "ZipArchive::addPattern",
        "ziparchive.addpattern.php",
        "ディレクトリから、PCRE パターンを使ってファイルを追加する"
    ],
    "ZipArchiveclose": [
        "ZipArchive::close",
        "ziparchive.close.php",
        "アクティブな (オープンされた、あるいは新しく作成された) アーカイブを閉じる"
    ],
    "ZipArchivecount": [
        "ZipArchive::count",
        "ziparchive.count.php",
        "アーカイブにあるファイルの数を数える"
    ],
    "ZipArchivedeleteIndex": [
        "ZipArchive::deleteIndex",
        "ziparchive.deleteindex.php",
        "インデックスを使用して、アーカイブ内のエントリを削除する"
    ],
    "ZipArchivedeleteName": [
        "ZipArchive::deleteName",
        "ziparchive.deletename.php",
        "名前を使用して、アーカイブからエントリを削除する"
    ],
    "ZipArchiveextractTo": [
        "ZipArchive::extractTo",
        "ziparchive.extractto.php",
        "アーカイブの内容を展開する"
    ],
    "ZipArchivegetArchiveComment": [
        "ZipArchive::getArchiveComment",
        "ziparchive.getarchivecomment.php",
        "ZIP アーカイブのコメントを返す"
    ],
    "ZipArchivegetCommentIndex": [
        "ZipArchive::getCommentIndex",
        "ziparchive.getcommentindex.php",
        "エントリのインデックスを使用して、エントリのコメントを返す"
    ],
    "ZipArchivegetCommentName": [
        "ZipArchive::getCommentName",
        "ziparchive.getcommentname.php",
        "エントリ名を使用して、エントリのコメントを返す"
    ],
    "ZipArchivegetExternalAttributesIndex": [
        "ZipArchive::getExternalAttributesIndex",
        "ziparchive.getexternalattributesindex.php",
        "インデックスで定義されたエントリの外部属性を取得する"
    ],
    "ZipArchivegetExternalAttributesName": [
        "ZipArchive::getExternalAttributesName",
        "ziparchive.getexternalattributesname.php",
        "名前で定義されたエントリの外部属性を取得する"
    ],
    "ZipArchivegetFromIndex": [
        "ZipArchive::getFromIndex",
        "ziparchive.getfromindex.php",
        "インデックスを使用して、エントリの内容を返す"
    ],
    "ZipArchivegetFromName": [
        "ZipArchive::getFromName",
        "ziparchive.getfromname.php",
        "名前を使用して、エントリの内容を返す"
    ],
    "ZipArchivegetNameIndex": [
        "ZipArchive::getNameIndex",
        "ziparchive.getnameindex.php",
        "インデックスを使用して、エントリの名前を返す"
    ],
    "ZipArchivegetStatusString": [
        "ZipArchive::getStatusString",
        "ziparchive.getstatusstring.php",
        "システムエラー、または ZIP メッセージに関するエラー情報を返す"
    ],
    "ZipArchivegetStream": [
        "ZipArchive::getStream",
        "ziparchive.getstream.php",
        "名前を使用して、エントリのファイルハンドラ (読み込み専用) を取得する"
    ],
    "ZipArchiveisCompressionMethodSupported": [
        "ZipArchive::isCompressionMethodSupported",
        "ziparchive.iscompressionmethoddupported.php",
        "圧縮方式を libzip がサポートしているかをチェックする"
    ],
    "ZipArchiveisEncryptionMethodSupported": [
        "ZipArchive::isEncryptionMethodSupported",
        "ziparchive.isencryptionmethoddupported.php",
        "暗号化方式を libzip がサポートしているかどうかをチェックする"
    ],
    "ZipArchivelocateName": [
        "ZipArchive::locateName",
        "ziparchive.locatename.php",
        "アーカイブ内のエントリのインデックスを返す"
    ],
    "ZipArchiveopen": [
        "ZipArchive::open",
        "ziparchive.open.php",
        "ZIP ファイルアーカイブをオープンする"
    ],
    "ZipArchiveregisterCancelCallback": [
        "ZipArchive::registerCancelCallback",
        "ziparchive.registercancelcallback.php",
        "アーカイブを閉じている間にキャンセルできるようにコールバックを登録する"
    ],
    "ZipArchiveregisterProgressCallback": [
        "ZipArchive::registerProgressCallback",
        "ziparchive.registerprogresscallback.php",
        "アーカイブを閉じている間に更新できるようにコールバックを登録する"
    ],
    "ZipArchiverenameIndex": [
        "ZipArchive::renameIndex",
        "ziparchive.renameindex.php",
        "インデックスを使用してエントリ名を変更する"
    ],
    "ZipArchiverenameName": [
        "ZipArchive::renameName",
        "ziparchive.renamename.php",
        "名前を使用してエントリ名を変更する"
    ],
    "ZipArchivereplaceFile": [
        "ZipArchive::replaceFile",
        "ziparchive.replacefile.php",
        "指定されたパスのファイルにアーカイブの一部を置き換える"
    ],
    "ZipArchivesetArchiveComment": [
        "ZipArchive::setArchiveComment",
        "ziparchive.setarchivecomment.php",
        "ZIP アーカイブのコメントを設定する"
    ],
    "ZipArchivesetCommentIndex": [
        "ZipArchive::setCommentIndex",
        "ziparchive.setcommentindex.php",
        "インデックスを使用してエントリのコメントを設定する"
    ],
    "ZipArchivesetCommentName": [
        "ZipArchive::setCommentName",
        "ziparchive.setcommentname.php",
        "名前を使用してエントリのコメントを設定する"
    ],
    "ZipArchivesetCompressionIndex": [
        "ZipArchive::setCompressionIndex",
        "ziparchive.setcompressionindex.php",
        "インデックスで定義されたエントリの圧縮方法を設定する"
    ],
    "ZipArchivesetCompressionName": [
        "ZipArchive::setCompressionName",
        "ziparchive.setcompressionname.php",
        "名前で定義されたエントリの圧縮メソッドを設定する"
    ],
    "ZipArchivesetEncryptionIndex": [
        "ZipArchive::setEncryptionIndex",
        "ziparchive.setencryptionindex.php",
        "index で定義されたエントリの暗号化方法を指定する"
    ],
    "ZipArchivesetEncryptionName": [
        "ZipArchive::setEncryptionName",
        "ziparchive.setencryptionname.php",
        "名前で定義されたエントリの暗号化方式を設定する"
    ],
    "ZipArchivesetExternalAttributesIndex": [
        "ZipArchive::setExternalAttributesIndex",
        "ziparchive.setexternalattributesindex.php",
        "インデックスで定義されたエントリの外部属性を設定する"
    ],
    "ZipArchivesetExternalAttributesName": [
        "ZipArchive::setExternalAttributesName",
        "ziparchive.setexternalattributesname.php",
        "名前で定義されたエントリの外部属性を設定する"
    ],
    "ZipArchivesetMtimeIndex": [
        "ZipArchive::setMtimeIndex",
        "ziparchive.setmtimeindex.php",
        "インデックスを使用してエントリの変更時間を設定する"
    ],
    "ZipArchivesetMtimeName": [
        "ZipArchive::setMtimeName",
        "ziparchive.setmtimename.php",
        "名前を使ってエントリの変更時間を設定する"
    ],
    "ZipArchivesetPassword": [
        "ZipArchive::setPassword",
        "ziparchive.setpassword.php",
        "アクティブなアーカイブにパスワードを設定する"
    ],
    "ZipArchivestatIndex": [
        "ZipArchive::statIndex",
        "ziparchive.statindex.php",
        "インデックスを使用してエントリの詳細を取得する"
    ],
    "ZipArchivestatName": [
        "ZipArchive::statName",
        "ziparchive.statname.php",
        "名前を使用してエントリの詳細を取得する"
    ],
    "ZipArchiveunchangeAll": [
        "ZipArchive::unchangeAll",
        "ziparchive.unchangeall.php",
        "アーカイブに対するすべての変更を取り消す"
    ],
    "ZipArchiveunchangeArchive": [
        "ZipArchive::unchangeArchive",
        "ziparchive.unchangearchive.php",
        "アーカイブ全体に対して行われたすべての変更を取り消す"
    ],
    "ZipArchiveunchangeIndex": [
        "ZipArchive::unchangeIndex",
        "ziparchive.unchangeindex.php",
        "指定したインデックスのエントリに対するすべての変更を取り消す"
    ],
    "ZipArchiveunchangeName": [
        "ZipArchive::unchangeName",
        "ziparchive.unchangename.php",
        "指定した名前のエントリに対するすべての変更を取り消す"
    ],
    "zipclose": [
        "zip_close",
        "function.zip-close.php",
        "ZIP ファイルアーカイブを閉じる"
    ],
    "zipentryclose": [
        "zip_entry_close",
        "function.zip-entry-close.php",
        "ディレクトリエントリを閉じる"
    ],
    "zipentrycompressedsize": [
        "zip_entry_compressedsize",
        "function.zip-entry-compressedsize.php",
        "ディレクトリエントリの圧縮時のサイズを取得する"
    ],
    "zipentrycompressionmethod": [
        "zip_entry_compressionmethod",
        "function.zip-entry-compressionmethod.php",
        "ディレクトリエントリの圧縮方法を取得する"
    ],
    "zipentryfilesize": [
        "zip_entry_filesize",
        "function.zip-entry-filesize.php",
        "ディレクトリエントリの実際のファイルサイズを取得する"
    ],
    "zipentryname": [
        "zip_entry_name",
        "function.zip-entry-name.php",
        "ディレクトリエントリの名前を取得する"
    ],
    "zipentryopen": [
        "zip_entry_open",
        "function.zip-entry-open.php",
        "読込み用にディレクトリエントリをオープンする"
    ],
    "zipentryread": [
        "zip_entry_read",
        "function.zip-entry-read.php",
        "オープンされたディレクトリエントリから読み込む"
    ],
    "zipopen": [
        "zip_open",
        "function.zip-open.php",
        "Zip ファイルアーカイブをオープンする"
    ],
    "zipread": [
        "zip_read",
        "function.zip-read.php",
        "Zip ファイルアーカイブの中の次のエントリを読み込む"
    ],
    "Zip": [
        "Zip コンテキストオプション",
        "context.zip.php",
        "Zip コンテキストオプション一覧"
    ],
    "zlib": [
        "zlib://",
        "wrappers.compression.php",
        "圧縮ストリーム"
    ],
    "zlibdecode": [
        "zlib_decode",
        "function.zlib-decode.php",
        "raw/gzip/zlib で符号化されたデータを復元する"
    ],
    "zlibencode": [
        "zlib_encode",
        "function.zlib-encode.php",
        "指定した符号化方式でデータを圧縮する"
    ],
    "zlibgetcodingtype": [
        "zlib_get_coding_type",
        "function.zlib-get-coding-type.php",
        "出力圧縮に使用されたコーディングの種類を返す"
    ],
    "ZMQconstruct": [
        "ZMQ::__construct",
        "zmq.construct.php",
        "ZMQ constructor"
    ],
    "ZMQContextgetOpt": [
        "ZMQContext::getOpt",
        "zmqcontext.getopt.php",
        "Get context option"
    ],
    "ZMQContextgetSocket": [
        "ZMQContext::getSocket",
        "zmqcontext.getsocket.php",
        "Create a new socket"
    ],
    "ZMQContextisPersistent": [
        "ZMQContext::isPersistent",
        "zmqcontext.ispersistent.php",
        "Whether the context is persistent"
    ],
    "ZMQContextsetOpt": [
        "ZMQContext::setOpt",
        "zmqcontext.setopt.php",
        "Set a socket option"
    ],
    "ZMQContextconstruct": [
        "ZMQContext::__construct",
        "zmqcontext.construct.php",
        "Construct a new ZMQContext object"
    ],
    "ZMQDevicegetIdleTimeout": [
        "ZMQDevice::getIdleTimeout",
        "zmqdevice.getidletimeout.php",
        "Get the idle timeout"
    ],
    "ZMQDevicegetTimerTimeout": [
        "ZMQDevice::getTimerTimeout",
        "zmqdevice.gettimertimeout.php",
        "Get the timer timeout"
    ],
    "ZMQDevicerun": [
        "ZMQDevice::run",
        "zmqdevice.run.php",
        "Run the new device"
    ],
    "ZMQDevicesetIdleCallback": [
        "ZMQDevice::setIdleCallback",
        "zmqdevice.setidlecallback.php",
        "Set the idle callback function"
    ],
    "ZMQDevicesetIdleTimeout": [
        "ZMQDevice::setIdleTimeout",
        "zmqdevice.setidletimeout.php",
        "Set the idle timeout"
    ],
    "ZMQDevicesetTimerCallback": [
        "ZMQDevice::setTimerCallback",
        "zmqdevice.settimercallback.php",
        "Set the timer callback function"
    ],
    "ZMQDevicesetTimerTimeout": [
        "ZMQDevice::setTimerTimeout",
        "zmqdevice.settimertimeout.php",
        "Set the timer timeout"
    ],
    "ZMQDeviceconstruct": [
        "ZMQDevice::__construct",
        "zmqdevice.construct.php",
        "Construct a new device"
    ],
    "ZMQPolladd": [
        "ZMQPoll::add",
        "zmqpoll.add.php",
        "Add item to the poll set"
    ],
    "ZMQPollclear": [
        "ZMQPoll::clear",
        "zmqpoll.clear.php",
        "Clear the poll set"
    ],
    "ZMQPollcount": [
        "ZMQPoll::count",
        "zmqpoll.count.php",
        "Count items in the poll set"
    ],
    "ZMQPollgetLastErrors": [
        "ZMQPoll::getLastErrors",
        "zmqpoll.getlasterrors.php",
        "Get poll errors"
    ],
    "ZMQPollpoll": [
        "ZMQPoll::poll",
        "zmqpoll.poll.php",
        "Poll the items"
    ],
    "ZMQPollremove": [
        "ZMQPoll::remove",
        "zmqpoll.remove.php",
        "Remove item from poll set"
    ],
    "ZMQSocketbind": [
        "ZMQSocket::bind",
        "zmqsocket.bind.php",
        "Bind the socket"
    ],
    "ZMQSocketconnect": [
        "ZMQSocket::connect",
        "zmqsocket.connect.php",
        "Connect the socket"
    ],
    "ZMQSocketdisconnect": [
        "ZMQSocket::disconnect",
        "zmqsocket.disconnect.php",
        "Disconnect a socket"
    ],
    "ZMQSocketgetEndpoints": [
        "ZMQSocket::getEndpoints",
        "zmqsocket.getendpoints.php",
        "Get list of endpoints"
    ],
    "ZMQSocketgetPersistentId": [
        "ZMQSocket::getPersistentId",
        "zmqsocket.getpersistentid.php",
        "Get the persistent id"
    ],
    "ZMQSocketgetSocketType": [
        "ZMQSocket::getSocketType",
        "zmqsocket.getsockettype.php",
        "Get the socket type"
    ],
    "ZMQSocketgetSockOpt": [
        "ZMQSocket::getSockOpt",
        "zmqsocket.getsockopt.php",
        "Get socket option"
    ],
    "ZMQSocketisPersistent": [
        "ZMQSocket::isPersistent",
        "zmqsocket.ispersistent.php",
        "Whether the socket is persistent"
    ],
    "ZMQSocketrecv": [
        "ZMQSocket::recv",
        "zmqsocket.recv.php",
        "Receives a message"
    ],
    "ZMQSocketrecvMulti": [
        "ZMQSocket::recvMulti",
        "zmqsocket.recvmulti.php",
        "Receives a multipart message"
    ],
    "ZMQSocketsend": [
        "ZMQSocket::send",
        "zmqsocket.send.php",
        "Sends a message"
    ],
    "ZMQSocketsendmulti": [
        "ZMQSocket::sendmulti",
        "zmqsocket.sendmulti.php",
        "マルチパートメッセージを送る"
    ],
    "ZMQSocketsetSockOpt": [
        "ZMQSocket::setSockOpt",
        "zmqsocket.setsockopt.php",
        "Set a socket option"
    ],
    "ZMQSocketunbind": [
        "ZMQSocket::unbind",
        "zmqsocket.unbind.php",
        "Unbind the socket"
    ],
    "ZMQSocketconstruct": [
        "ZMQSocket::__construct",
        "zmqsocket.construct.php",
        "Construct a new ZMQSocket"
    ],
    "ZookeeperaddAuth": [
        "Zookeeper::addAuth",
        "zookeeper.addauth.php",
        "Specify application credentials"
    ],
    "Zookeeperclose": [
        "Zookeeper::close",
        "zookeeper.close.php",
        "Close the zookeeper handle and free up any resources"
    ],
    "Zookeeperconnect": [
        "Zookeeper::connect",
        "zookeeper.connect.php",
        "Create a handle to used communicate with zookeeper"
    ],
    "Zookeepercreate": [
        "Zookeeper::create",
        "zookeeper.create.php",
        "Create a node synchronously"
    ],
    "Zookeeperdelete": [
        "Zookeeper::delete",
        "zookeeper.delete.php",
        "Delete a node in zookeeper synchronously"
    ],
    "Zookeeperexists": [
        "Zookeeper::exists",
        "zookeeper.exists.php",
        "Checks the existence of a node in zookeeper synchronously"
    ],
    "Zookeeperget": [
        "Zookeeper::get",
        "zookeeper.get.php",
        "Gets the data associated with a node synchronously"
    ],
    "ZookeepergetAcl": [
        "Zookeeper::getAcl",
        "zookeeper.getacl.php",
        "Gets the acl associated with a node synchronously"
    ],
    "ZookeepergetChildren": [
        "Zookeeper::getChildren",
        "zookeeper.getchildren.php",
        "Lists the children of a node synchronously"
    ],
    "ZookeepergetClientId": [
        "Zookeeper::getClientId",
        "zookeeper.getclientid.php",
        "Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)"
    ],
    "ZookeepergetConfig": [
        "Zookeeper::getConfig",
        "zookeeper.getconfig.php",
        "Get instance of ZookeeperConfig"
    ],
    "ZookeepergetRecvTimeout": [
        "Zookeeper::getRecvTimeout",
        "zookeeper.getrecvtimeout.php",
        "Return the timeout for this session, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE). This value may change after a server re-connect"
    ],
    "ZookeepergetState": [
        "Zookeeper::getState",
        "zookeeper.getstate.php",
        "Get the state of the zookeeper connection"
    ],
    "ZookeeperisRecoverable": [
        "Zookeeper::isRecoverable",
        "zookeeper.isrecoverable.php",
        "Checks if the current zookeeper connection state can be recovered"
    ],
    "Zookeeperset": [
        "Zookeeper::set",
        "zookeeper.set.php",
        "Sets the data associated with a node"
    ],
    "ZookeepersetAcl": [
        "Zookeeper::setAcl",
        "zookeeper.setacl.php",
        "Sets the acl associated with a node synchronously"
    ],
    "ZookeepersetDebugLevel": [
        "Zookeeper::setDebugLevel",
        "zookeeper.setdebuglevel.php",
        "Sets the debugging level for the library"
    ],
    "ZookeepersetDeterministicConnOrder": [
        "Zookeeper::setDeterministicConnOrder",
        "zookeeper.setdeterministicconnorder.php",
        "Enable/disable quorum endpoint order randomization"
    ],
    "ZookeepersetLogStream": [
        "Zookeeper::setLogStream",
        "zookeeper.setlogstream.php",
        "Sets the stream to be used by the library for logging"
    ],
    "ZookeepersetWatcher": [
        "Zookeeper::setWatcher",
        "zookeeper.setwatcher.php",
        "Set a watcher function"
    ],
    "Zookeeperconstruct": [
        "Zookeeper::__construct",
        "zookeeper.construct.php",
        "Create a handle to used communicate with zookeeper"
    ],
    "ZookeeperConfigadd": [
        "ZookeeperConfig::add",
        "zookeeperconfig.add.php",
        "Add servers to the ensemble"
    ],
    "ZookeeperConfigget": [
        "ZookeeperConfig::get",
        "zookeeperconfig.get.php",
        "Gets the last committed configuration of the ZooKeeper cluster as it is known to the server to which the client is connected, synchronously"
    ],
    "ZookeeperConfigremove": [
        "ZookeeperConfig::remove",
        "zookeeperconfig.remove.php",
        "Remove servers from the ensemble"
    ],
    "ZookeeperConfigset": [
        "ZookeeperConfig::set",
        "zookeeperconfig.set.php",
        "Change ZK cluster ensemble membership and roles of ensemble peers"
    ],
    "zookeeperdispatch": [
        "zookeeper_dispatch",
        "function.zookeeper-dispatch.php",
        "Calls callbacks for pending operations"
    ],
    "autoload": [
        "__autoload",
        "function.autoload.php",
        "未定義のクラスのロードを試みる"
    ],
    "haltcompiler": [
        "__halt_compiler",
        "function.halt-compiler.php",
        "コンパイラの実行を中止する"
    ]
}